var pages = [{"name":"def /(x: Short): Double","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["/"]},{"name":"package dotty.tools.tasty","description":"dotty.tools.tasty","location":"api/dotty/tools/tasty.html","searchKeys":["dotty.tools.tasty"]},{"name":"given given_FromString_Int: FromString[Int]","description":"scala.util.CommandLineParser$$FromString$$given_FromString_Int$","location":"api/scala/util/CommandLineParser$$FromString$$given_FromString_Int$.html","searchKeys":["given_FromString_Int"]},{"name":"val Long: LongManifest","description":"scala.reflect.ManifestFactory$","location":"api/scala/reflect/ManifestFactory$.html","searchKeys":["Long"]},{"name":"def filter(p: T => Boolean): Try[T]","description":"scala.util.Try","location":"api/scala/util/Try.html","searchKeys":["filter"]},{"name":"given SuperTypeMethods","description":"scala.quoted.Quotes$reflectModule$SuperTypeMethods","location":"api/scala/quoted/Quotes$reflectModule$SuperTypeMethods.html","searchKeys":["SuperTypeMethods"]},{"name":"Implicit Conversions - More Details","description":"","location":"docs/reference/changed-features/implicit-conversions-spec.html","searchKeys":["Implicit Conversions - More Details"]},{"name":"trait NoStackTrace extends Throwable","description":"scala.util.control.NoStackTrace","location":"api/scala/util/control/NoStackTrace.html","searchKeys":["NoStackTrace"]},{"name":"def apply(i: Int): A","description":"scala.collection.IndexedSeqView$$Slice","location":"api/scala/collection/IndexedSeqView$$Slice.html","searchKeys":["apply"]},{"name":"def scan[T](z: U)(op: (U, U) => U)(evidence$8: ClassTag[U]): IArray[U]","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["scan"]},{"name":"def apply(x: Constant): ConstantType","description":"scala.quoted.Quotes$reflectModule$ConstantTypeModule","location":"api/scala/quoted/Quotes$reflectModule$ConstantTypeModule.html","searchKeys":["apply"]},{"name":"val RECtype: 100","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["RECtype"]},{"name":"def curried: T1 => T2 => T3 => T4 => T5 => T6 => T7 => T8 => T9 => T10 => T11 => R","description":"scala.Function11","location":"api/scala/Function11.html","searchKeys":["curried"]},{"name":"val firstSimpleTreeTag: 2","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["firstSimpleTreeTag"]},{"name":"given CharConstantTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["CharConstantTypeTest"]},{"name":"def apply(file: File): FileProcessLogger","description":"scala.sys.process.ProcessLogger$","location":"api/scala/sys/process/ProcessLogger$.html","searchKeys":["apply"]},{"name":"trait Builder[-A, +To] extends Growable[A]","description":"scala.collection.mutable.Builder","location":"api/scala/collection/mutable/Builder.html","searchKeys":["Builder"]},{"name":"def cond[A, B](test: Boolean, right: => B, left: => A): Either[A, B]","description":"scala.util.Either$","location":"api/scala/util/Either$.html","searchKeys":["cond"]},{"name":"class RichFunction1AsIntConsumer(underlying: Int => Unit) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichFunction1AsIntConsumer","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsIntConsumer.html","searchKeys":["RichFunction1AsIntConsumer"]},{"name":"object Array","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["Array"]},{"name":"given WildcardTypeTreeTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["WildcardTypeTreeTypeTest"]},{"name":"def nonReadOnly: Boolean","description":"scala.collection.concurrent.TrieMap","location":"api/scala/collection/concurrent/TrieMap.html","searchKeys":["nonReadOnly"]},{"name":"given SuperTypeTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["SuperTypeTypeTest"]},{"name":"given ExportTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ExportTypeTest"]},{"name":"def tailcall[A](rest: => TailRec[A]): TailRec[A]","description":"scala.util.control.TailCalls$","location":"api/scala/util/control/TailCalls$.html","searchKeys":["tailcall"]},{"name":"def empty[A](evidence$1: Ordering[A]): TreeSet[A]","description":"scala.collection.immutable.TreeSet$","location":"api/scala/collection/immutable/TreeSet$.html","searchKeys":["empty"]},{"name":"def from[A](source: IterableOnce[A])(evidence$2: ClassTag[A]): UnrolledBuffer[A]","description":"scala.collection.mutable.UnrolledBuffer$","location":"api/scala/collection/mutable/UnrolledBuffer$.html","searchKeys":["from"]},{"name":"def mapResult[NewTo](f: To => NewTo): Builder[A, NewTo]","description":"scala.collection.mutable.Builder","location":"api/scala/collection/mutable/Builder.html","searchKeys":["mapResult"]},{"name":"def protectedWithin: Option[TypeRepr]","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["protectedWithin"]},{"name":"val TermRef: TermRefModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TermRef"]},{"name":"def unapply(x: Inferred): true","description":"scala.quoted.Quotes$reflectModule$InferredModule","location":"api/scala/quoted/Quotes$reflectModule$InferredModule.html","searchKeys":["unapply"]},{"name":"def apply[T](elems: (Int, T)*): IntMap[T]","description":"scala.collection.immutable.IntMap$","location":"api/scala/collection/immutable/IntMap$.html","searchKeys":["apply"]},{"name":"given Tuple2FromExpr[T1, T2](using val x$1: Type[T1], val x$2: Type[T2], val x$3: FromExpr[T1], val x$4: FromExpr[T2]): FromExpr[(T1, T2)]","description":"scala.quoted.FromExpr$$Tuple2FromExpr","location":"api/scala/quoted/FromExpr$.html","searchKeys":["Tuple2FromExpr"]},{"name":"def asJavaIntConsumer(sf: Integer => BoxedUnit): IntConsumer","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asJavaIntConsumer"]},{"name":"def -(x: Byte): Double","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["-"]},{"name":"val UNNECESSARY: Value","description":"scala.math.BigDecimal$$RoundingMode$","location":"api/scala/math/BigDecimal$$RoundingMode$.html","searchKeys":["UNNECESSARY"]},{"name":"def enrichAsScalaFromObjDoubleConsumer[T](jf: ObjDoubleConsumer[T]): RichObjDoubleConsumerAsFunction2[T]","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsScalaFromObjDoubleConsumer"]},{"name":"def asJava: ConcurrentMap[K, V]","description":"scala.collection.convert.AsJavaExtensions$ConcurrentMapHasAsJava","location":"api/scala/collection/convert/AsJavaExtensions$ConcurrentMapHasAsJava.html","searchKeys":["asJava"]},{"name":"def collectFirst[B](f: PartialFunction[A, B]): Option[B]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["collectFirst"]},{"name":"def qualifier: Term","description":"scala.quoted.Quotes$reflectModule$TypeSelectMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeSelectMethods.html","searchKeys":["qualifier"]},{"name":"val SPLITCLAUSE: 45","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["SPLITCLAUSE"]},{"name":"def joinLeft[A1 >: A, B1 >: B, C](ev: A1 <:< Either[C, B1]): Either[C, B1]","description":"scala.util.Either","location":"api/scala/util/Either.html","searchKeys":["joinLeft"]},{"name":"def enrichAsJavaToIntFunction[T](sf: T => Int): RichFunction1AsToIntFunction[T]","description":"scala.jdk.Priority1FunctionExtensions","location":"api/scala/jdk/Priority1FunctionExtensions.html","searchKeys":["enrichAsJavaToIntFunction"]},{"name":"def props: SystemProperties","description":"scala.sys","location":"api/scala/sys.html","searchKeys":["props"]},{"name":"def asScalaFromIntSupplier(jf: IntSupplier): () => Integer","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asScalaFromIntSupplier"]},{"name":"val Any: Manifest[Any]","description":"scala.reflect.Manifest$","location":"api/scala/reflect/Manifest$.html","searchKeys":["Any"]},{"name":"def throwError(msg: String, pos: Position): Nothing","description":"scala.quoted.Quotes$reflectModule$reportModule","location":"api/scala/quoted/Quotes$reflectModule$reportModule.html","searchKeys":["throwError"]},{"name":"def _5: T5","description":"scala.Product19","location":"api/scala/Product19.html","searchKeys":["_5"]},{"name":"val x$18: FromExpr[T5]","description":"scala.quoted.FromExpr$$Tuple13FromExpr","location":"api/scala/quoted/FromExpr$$Tuple13FromExpr.html","searchKeys":["x$18"]},{"name":"def isIdentifierIgnorable: Boolean","description":"scala.runtime.RichChar","location":"api/scala/runtime/RichChar.html","searchKeys":["isIdentifierIgnorable"]},{"name":"def >(x: Int): Boolean","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":[">"]},{"name":"def ^(x: Int): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["^"]},{"name":"def asJavaParStream: Stream[A]","description":"scala.collection.convert.StreamExtensions$AnyArrayHasSeqParStream","location":"api/scala/collection/convert/StreamExtensions$AnyArrayHasSeqParStream.html","searchKeys":["asJavaParStream"]},{"name":"def empty[A]: Queue[A]","description":"scala.collection.immutable.Queue$","location":"api/scala/collection/immutable/Queue$.html","searchKeys":["empty"]},{"name":"def unapply(x: Typed): (Term, TypeTree)","description":"scala.quoted.Quotes$reflectModule$TypedModule","location":"api/scala/quoted/Quotes$reflectModule$TypedModule.html","searchKeys":["unapply"]},{"name":"def |(x: Int): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["|"]},{"name":"def nextBytes(bytes: Array[Byte]): Unit","description":"scala.util.Random","location":"api/scala/util/Random.html","searchKeys":["nextBytes"]},{"name":"var ccol: Int","description":"scala.io.Source$Positioner","location":"api/scala/io/Source$Positioner.html","searchKeys":["ccol"]},{"name":"def %(x: Long): Long","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["%"]},{"name":"def unsafeArray: Array[]","description":"scala.collection.immutable.ArraySeq","location":"api/scala/collection/immutable/ArraySeq.html","searchKeys":["unsafeArray"]},{"name":"def buildFromView[A, B]: BuildFrom[View[A], B, View[B]]","description":"scala.collection.BuildFrom$","location":"api/scala/collection/BuildFrom$.html","searchKeys":["buildFromView"]},{"name":"def apply(v1: T1, v2: T2, v3: T3): R","description":"scala.Function3","location":"api/scala/Function3.html","searchKeys":["apply"]},{"name":"def trySplit(): LongStepper","description":"scala.collection.LongStepper","location":"api/scala/collection/LongStepper.html","searchKeys":["trySplit"]},{"name":"def summonInline[T]: T","description":"scala.compiletime","location":"api/scala/compiletime.html","searchKeys":["summonInline"]},{"name":"given EmptyTupleFromExpr: FromExpr[EmptyTuple]","description":"scala.quoted.FromExpr$$EmptyTupleFromExpr$","location":"api/scala/quoted/FromExpr$$EmptyTupleFromExpr$.html","searchKeys":["EmptyTupleFromExpr"]},{"name":"def apply(low: TypeRepr, hi: TypeRepr): TypeBounds","description":"scala.quoted.Quotes$reflectModule$TypeBoundsModule","location":"api/scala/quoted/Quotes$reflectModule$TypeBoundsModule.html","searchKeys":["apply"]},{"name":"object Duration","description":"scala.concurrent.duration.Duration$","location":"api/scala/concurrent/duration/Duration$.html","searchKeys":["Duration"]},{"name":"object DoubleStepper","description":"scala.collection.DoubleStepper$","location":"api/scala/collection/DoubleStepper$.html","searchKeys":["DoubleStepper"]},{"name":"def padTo[B >: A](len: Int, elem: B): CC[B]","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["padTo"]},{"name":"def removeAllReverse(): Seq[A]","description":"scala.collection.mutable.ArrayDeque","location":"api/scala/collection/mutable/ArrayDeque.html","searchKeys":["removeAllReverse"]},{"name":"def toMicros: Long","description":"scala.concurrent.duration.FiniteDuration","location":"api/scala/concurrent/duration/FiniteDuration.html","searchKeys":["toMicros"]},{"name":"trait JFunction1$mcZJ$sp extends Any => Any with Serializable","description":"scala.runtime.java8.JFunction1$mcZJ$sp","location":"api/scala/runtime/java8/JFunction1$mcZJ$sp.html","searchKeys":["JFunction1$mcZJ$sp"]},{"name":"def apply(x: T)(using Quotes): Expr[T]","description":"scala.quoted.ToExpr$$StringToExpr","location":"api/scala/quoted/ToExpr$$StringToExpr.html","searchKeys":["apply"]},{"name":"val OBJECT: 19","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["OBJECT"]},{"name":"val x$14: Type[T14]","description":"scala.quoted.FromExpr$$Tuple16FromExpr","location":"api/scala/quoted/FromExpr$$Tuple16FromExpr.html","searchKeys":["x$14"]},{"name":"given Tuple18FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18](using val x$1: Type[T1], val x$2: Type[T2], val x$3: Type[T3], val x$4: Type[T4], val x$5: Type[T5], val x$6: Type[T6], val x$7: Type[T7], val x$8: Type[T8], val x$9: Type[T9], val x$10: Type[T10], val x$11: Type[T11], val x$12: Type[T12], val x$13: Type[T13], val x$14: Type[T14], val x$15: Type[T15], val x$16: Type[T16], val x$17: Type[T17], val x$18: Type[T18], val x$19: FromExpr[T1], val x$20: FromExpr[T2], val x$21: FromExpr[T3], val x$22: FromExpr[T4], val x$23: FromExpr[T5], val x$24: FromExpr[T6], val x$25: FromExpr[T7], val x$26: FromExpr[T8], val x$27: FromExpr[T9], val x$28: FromExpr[T10], val x$29: FromExpr[T11], val x$30: FromExpr[T12], val x$31: FromExpr[T13], val x$32: FromExpr[T14], val x$33: FromExpr[T15], val x$34: FromExpr[T16], val x$35: FromExpr[T17], val x$36: FromExpr[T18]): FromExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18)]","description":"scala.quoted.FromExpr$$Tuple18FromExpr","location":"api/scala/quoted/FromExpr$$Tuple18FromExpr.html","searchKeys":["Tuple18FromExpr"]},{"name":"def sinh(x: Double): Double","description":"scala.math","location":"api/scala/math.html","searchKeys":["sinh"]},{"name":"def max(x: Double, y: Double): Double","description":"scala.math","location":"api/scala/math.html","searchKeys":["max"]},{"name":"val x$2: Type[T2]","description":"scala.quoted.FromExpr$$Tuple4FromExpr","location":"api/scala/quoted/FromExpr$$Tuple4FromExpr.html","searchKeys":["x$2"]},{"name":"def minByOption[B](f: A => B)(cmp: Ordering[B]): Option[A]","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["minByOption"]},{"name":"def <(x: Long): Boolean","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["<"]},{"name":"def Long2long(x: Long): Long","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["Long2long"]},{"name":"def start(i: Int): Int","description":"scala.util.matching.Regex$$MatchIterator","location":"api/scala/util/matching/Regex$$MatchIterator.html","searchKeys":["start"]},{"name":"def asScala[A, B](m: Map[A, B]): Map[A, B]","description":"scala.collection.convert.AsScalaConverters","location":"api/scala/collection/convert/AsScalaConverters.html","searchKeys":["asScala"]},{"name":"val x$40: FromExpr[T19]","description":"scala.quoted.FromExpr$$Tuple21FromExpr","location":"api/scala/quoted/FromExpr$$Tuple21FromExpr.html","searchKeys":["x$40"]},{"name":"val x$12: FromExpr[T2]","description":"scala.quoted.FromExpr$$Tuple10FromExpr","location":"api/scala/quoted/FromExpr$$Tuple10FromExpr.html","searchKeys":["x$12"]},{"name":"def !=(x: Char): Boolean","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["!="]},{"name":"type PartialOrdering[T] = PartialOrdering[T]","description":"scala","location":"api/scala.html","searchKeys":["PartialOrdering"]},{"name":"val FINE: 500","description":"scala.annotation.elidable$","location":"api/scala/annotation/elidable$.html","searchKeys":["FINE"]},{"name":"val x$13: Type[T13]","description":"scala.quoted.FromExpr$$Tuple19FromExpr","location":"api/scala/quoted/FromExpr$$Tuple19FromExpr.html","searchKeys":["x$13"]},{"name":"def testBit(n: Int): Boolean","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["testBit"]},{"name":"def adder: ObjIntConsumer[IntAccumulator]","description":"scala.jdk.IntAccumulator$","location":"api/scala/jdk/IntAccumulator$.html","searchKeys":["adder"]},{"name":"def _2: T2","description":"scala.Product18","location":"api/scala/Product18.html","searchKeys":["_2"]},{"name":"def maxBefore(key: A): Option[A]","description":"scala.collection.SortedSetOps","location":"api/scala/collection/SortedSetOps.html","searchKeys":["maxBefore"]},{"name":"def name: String","description":"scala.quoted.Quotes$reflectModule$SelectMethods","location":"api/scala/quoted/Quotes$reflectModule$SelectMethods.html","searchKeys":["name"]},{"name":"val x$37: FromExpr[T17]","description":"scala.quoted.FromExpr$$Tuple20FromExpr","location":"api/scala/quoted/FromExpr$$Tuple20FromExpr.html","searchKeys":["x$37"]},{"name":"def sorted[B >: A](ord: Ordering[B]): Array[A]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["sorted"]},{"name":"class FromJavaSupplier[T](jf: Supplier[T]) extends () => T","description":"scala.jdk.FunctionWrappers$$FromJavaSupplier","location":"api/scala/jdk/FunctionWrappers$$FromJavaSupplier.html","searchKeys":["FromJavaSupplier"]},{"name":"def nextBoolean(): Boolean","description":"scala.util.Random","location":"api/scala/util/Random.html","searchKeys":["nextBoolean"]},{"name":"def show[T]: String","description":"scala.quoted.Quotes","location":"api/scala/quoted/Quotes.html","searchKeys":["show"]},{"name":"def ==(x: Char): Boolean","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["=="]},{"name":"def isLeft: Boolean","description":"scala.util.Either","location":"api/scala/util/Either.html","searchKeys":["isLeft"]},{"name":"def apply(paramNames: List[String])(paramInfosExp: MethodType => List[TypeRepr], resultTypeExp: MethodType => TypeRepr): MethodType","description":"scala.quoted.Quotes$reflectModule$MethodTypeModule","location":"api/scala/quoted/Quotes$reflectModule$MethodTypeModule.html","searchKeys":["apply"]},{"name":"def transform[U](s: T => Try[U], f: Throwable => Try[U]): Try[U]","description":"scala.util.Try","location":"api/scala/util/Try.html","searchKeys":["transform"]},{"name":"def copyToArray(xs: Array[Char], start: Int): Int","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["copyToArray"]},{"name":"def /(x: Float): Float","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["/"]},{"name":"def floatValue: Float","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["floatValue"]},{"name":"type MethodOrPoly <: LambdaType","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["MethodOrPoly"]},{"name":"def scanLeft[B](z: B)(op: (B, A) => B): Iterator[B]","description":"scala.collection.Iterator","location":"api/scala/collection/Iterator.html","searchKeys":["scanLeft"]},{"name":"given FloatToExpr[T <: Float]: ToExpr[T]","description":"scala.quoted.ToExpr$$FloatToExpr","location":"api/scala/quoted/ToExpr$.html","searchKeys":["FloatToExpr"]},{"name":"def *(x: Double): Double","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["*"]},{"name":"def unbox(x: Object): Unit","description":"scala.Unit$","location":"api/scala/Unit$.html","searchKeys":["unbox"]},{"name":"def contains(elem: A): Boolean","description":"scala.collection.mutable.LinkedHashSet","location":"api/scala/collection/mutable/LinkedHashSet.html","searchKeys":["contains"]},{"name":"val x$27: FromExpr[T7]","description":"scala.quoted.FromExpr$$Tuple20FromExpr","location":"api/scala/quoted/FromExpr$$Tuple20FromExpr.html","searchKeys":["x$27"]},{"name":"class RichFunction2AsIntBinaryOperator(underlying: (Int, Int) => Int) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichFunction2AsIntBinaryOperator","location":"api/scala/jdk/FunctionWrappers$$RichFunction2AsIntBinaryOperator.html","searchKeys":["RichFunction2AsIntBinaryOperator"]},{"name":"val Pi: 3.141592653589793","description":"scala.math","location":"api/scala/math.html","searchKeys":["Pi"]},{"name":"def assert(assertion: Boolean): Unit","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["assert"]},{"name":"def span(p: A => Boolean): (C, C)","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["span"]},{"name":"def cases: List[TypeCaseDef]","description":"scala.quoted.Quotes$reflectModule$MatchTypeTreeMethods","location":"api/scala/quoted/Quotes$reflectModule$MatchTypeTreeMethods.html","searchKeys":["cases"]},{"name":"val x$9: Type[T9]","description":"scala.quoted.FromExpr$$Tuple15FromExpr","location":"api/scala/quoted/FromExpr$$Tuple15FromExpr.html","searchKeys":["x$9"]},{"name":"given Tuple21ToExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21]: ToExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21)]","description":"scala.quoted.ToExpr$$Tuple21ToExpr","location":"api/scala/quoted/ToExpr$.html","searchKeys":["Tuple21ToExpr"]},{"name":"def -(that: BigDecimal): BigDecimal","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["-"]},{"name":"class ofUnit(val array: Array[Unit]) extends ArraySeq[Unit]","description":"scala.collection.mutable.ArraySeq$$ofUnit","location":"api/scala/collection/mutable/ArraySeq$$ofUnit.html","searchKeys":["ofUnit"]},{"name":"def _7: T7","description":"scala.Product20","location":"api/scala/Product20.html","searchKeys":["_7"]},{"name":"object :+","description":"scala.collection.package$$:+$","location":"api/scala/collection/package$$:+$.html","searchKeys":[":+"]},{"name":"class ofShort(val array: Array[Short]) extends ArraySeq[Short]","description":"scala.collection.mutable.ArraySeq$$ofShort","location":"api/scala/collection/mutable/ArraySeq$$ofShort.html","searchKeys":["ofShort"]},{"name":"def fromFile(uri: URI)(codec: Codec): BufferedSource","description":"scala.io.Source$","location":"api/scala/io/Source$.html","searchKeys":["fromFile"]},{"name":"def empty[V]: LongMap[V]","description":"scala.collection.mutable.LongMap$","location":"api/scala/collection/mutable/LongMap$.html","searchKeys":["empty"]},{"name":"trait JFunction2$mcVJJ$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcVJJ$sp","location":"api/scala/runtime/java8/JFunction2$mcVJJ$sp.html","searchKeys":["JFunction2$mcVJJ$sp"]},{"name":"def getDirectionality: Byte","description":"scala.runtime.RichChar","location":"api/scala/runtime/RichChar.html","searchKeys":["getDirectionality"]},{"name":"type New <: Term","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["New"]},{"name":"def apply(v1: T1, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, v7: T7, v8: T8, v9: T9, v10: T10, v11: T11, v12: T12, v13: T13, v14: T14, v15: T15, v16: T16, v17: T17, v18: T18, v19: T19): R","description":"scala.Function19","location":"api/scala/Function19.html","searchKeys":["apply"]},{"name":"def +(x: Float): Float","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["+"]},{"name":"def apply(x: Float, xs: Float*): Array[Float]","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["apply"]},{"name":"def *(x: Float): Float","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["*"]},{"name":"def !=(x: Char): Boolean","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["!="]},{"name":"class throws[T <: Throwable](cause: String) extends StaticAnnotation","description":"scala.throws","location":"api/scala/throws.html","searchKeys":["throws"]},{"name":"given AppliedTypeMethods","description":"scala.quoted.Quotes$reflectModule$AppliedTypeMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["AppliedTypeMethods"]},{"name":"object HashMap extends MapFactory[[K, V] =>> HashMap[K, V]]","description":"scala.collection.immutable.HashMap$","location":"api/scala/collection/immutable/HashMap$.html","searchKeys":["HashMap"]},{"name":"def asJavaParStream[A](cc: IterableOnce[A]): Stream[A]","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaParStream"]},{"name":"def ==(x: Int): Boolean","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["=="]},{"name":"def moduleClass: Symbol","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["moduleClass"]},{"name":"val x$5: Type[T5]","description":"scala.quoted.FromExpr$$Tuple15FromExpr","location":"api/scala/quoted/FromExpr$$Tuple15FromExpr.html","searchKeys":["x$5"]},{"name":"def copy(original: Tree)(name: String): TypeIdent","description":"scala.quoted.Quotes$reflectModule$TypeIdentModule","location":"api/scala/quoted/Quotes$reflectModule$TypeIdentModule.html","searchKeys":["copy"]},{"name":"trait AsJavaConverters","description":"scala.collection.convert.AsJavaConverters","location":"api/scala/collection/convert/AsJavaConverters.html","searchKeys":["AsJavaConverters"]},{"name":"def -(x: Byte): Int","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["-"]},{"name":"def apply(x1: Double): R","description":"scala.jdk.FunctionWrappers$$FromJavaDoubleFunction","location":"api/scala/jdk/FunctionWrappers$$FromJavaDoubleFunction.html","searchKeys":["apply"]},{"name":"def >=(x: Int): Boolean","description":"scala.Char","location":"api/scala/Char.html","searchKeys":[">="]},{"name":"def flatMap[U](f: T => Try[U]): Try[U]","description":"scala.util.Try","location":"api/scala/util/Try.html","searchKeys":["flatMap"]},{"name":"class RichIntToDoubleFunctionAsFunction1(underlying: IntToDoubleFunction) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichIntToDoubleFunctionAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichIntToDoubleFunctionAsFunction1.html","searchKeys":["RichIntToDoubleFunctionAsFunction1"]},{"name":"def apply(): UnitConstant","description":"scala.quoted.Quotes$reflectModule$UnitConstantModule","location":"api/scala/quoted/Quotes$reflectModule$UnitConstantModule.html","searchKeys":["apply"]},{"name":"def body: List[Statement]","description":"scala.quoted.Quotes$reflectModule$ClassDefMethods","location":"api/scala/quoted/Quotes$reflectModule$ClassDefMethods.html","searchKeys":["body"]},{"name":"def foreachNode[U](f: RBNode[K, V] => U): Unit","description":"scala.collection.mutable.CollisionProofHashMap$$RBNode","location":"api/scala/collection/mutable/CollisionProofHashMap$$RBNode.html","searchKeys":["foreachNode"]},{"name":"def init: C","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["init"]},{"name":"def unapply(constant: ByteConstant): Some[Byte]","description":"scala.quoted.Quotes$reflectModule$ByteConstantModule","location":"api/scala/quoted/Quotes$reflectModule$ByteConstantModule.html","searchKeys":["unapply"]},{"name":"def tanh(x: Double): Double","description":"scala.math","location":"api/scala/math.html","searchKeys":["tanh"]},{"name":"class AbstractFunction19[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, -T14, -T15, -T16, -T17, -T18, -T19, +R] extends (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) => R","description":"scala.runtime.AbstractFunction19","location":"api/scala/runtime/AbstractFunction19.html","searchKeys":["AbstractFunction19"]},{"name":"class DropRight[A](underlying: SomeIndexedSeqOps[A], n: Int) extends DropRight[A] with IndexedSeqView[A]","description":"scala.collection.IndexedSeqView$$DropRight","location":"api/scala/collection/IndexedSeqView$$DropRight.html","searchKeys":["DropRight"]},{"name":"type Export <: Statement","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Export"]},{"name":"given ListToExpr[T]: ToExpr[List[T]]","description":"scala.quoted.ToExpr$$ListToExpr","location":"api/scala/quoted/ToExpr$.html","searchKeys":["ListToExpr"]},{"name":"def nano: FiniteDuration","description":"scala.concurrent.duration.DurationConversions","location":"api/scala/concurrent/duration/DurationConversions.html","searchKeys":["nano"]},{"name":"def sequence[A, CC <: ([X] =>> IterableOnce[X]), To](in: CC[Future[A]])(bf: BuildFrom[CC[Future[A]], A, To], executor: ExecutionContext): Future[To]","description":"scala.concurrent.Future$","location":"api/scala/concurrent/Future$.html","searchKeys":["sequence"]},{"name":"val Char: CharManifest","description":"scala.reflect.ClassManifestFactory$","location":"api/scala/reflect/ClassManifestFactory$.html","searchKeys":["Char"]},{"name":"object FromString","description":"scala.util.CommandLineParser$$FromString$","location":"api/scala/util/CommandLineParser$$FromString$.html","searchKeys":["FromString"]},{"name":"def intersect[B >: A](that: Seq[B]): Array[A]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["intersect"]},{"name":"def newBuilder[K, V]: Builder[(K, V), C[K, V]]","description":"scala.collection.MapFactory$$Delegate","location":"api/scala/collection/MapFactory$$Delegate.html","searchKeys":["newBuilder"]},{"name":"def asJava: Set[A]","description":"scala.collection.convert.AsJavaExtensions$SetHasAsJava","location":"api/scala/collection/convert/AsJavaExtensions$SetHasAsJava.html","searchKeys":["asJava"]},{"name":"def anyAccumulatorFactoryShape[A]: AccumulatorFactoryShape[A, AnyAccumulator[A]]","description":"scala.jdk.Accumulator$$LowPriorityAccumulatorFactoryShape","location":"api/scala/jdk/Accumulator$$LowPriorityAccumulatorFactoryShape.html","searchKeys":["anyAccumulatorFactoryShape"]},{"name":"def asJavaParStream: IntStream","description":"scala.collection.convert.StreamExtensions$IntArrayHasSeqParStream","location":"api/scala/collection/convert/StreamExtensions$IntArrayHasSeqParStream.html","searchKeys":["asJavaParStream"]},{"name":"def %(x: Byte): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["%"]},{"name":"def rangeImpl(from: Option[K], until: Option[K]): TreeMap[K, V]","description":"scala.collection.mutable.TreeMap","location":"api/scala/collection/mutable/TreeMap.html","searchKeys":["rangeImpl"]},{"name":"def apply(paramNames: List[String])(paramBoundsExp: PolyType => List[TypeBounds], resultTypeExp: PolyType => TypeRepr): PolyType","description":"scala.quoted.Quotes$reflectModule$PolyTypeModule","location":"api/scala/quoted/Quotes$reflectModule$PolyTypeModule.html","searchKeys":["apply"]},{"name":"def _9: T9","description":"scala.Product14","location":"api/scala/Product14.html","searchKeys":["_9"]},{"name":"class AsJavaDoubleBinaryOperator(sf: (Double, Double) => Double) extends DoubleBinaryOperator","description":"scala.jdk.FunctionWrappers$$AsJavaDoubleBinaryOperator","location":"api/scala/jdk/FunctionWrappers$$AsJavaDoubleBinaryOperator.html","searchKeys":["AsJavaDoubleBinaryOperator"]},{"name":"def toMinutes: Long","description":"scala.concurrent.duration.FiniteDuration","location":"api/scala/concurrent/duration/FiniteDuration.html","searchKeys":["toMinutes"]},{"name":"val AnyRef: ClassTag[AnyRef]","description":"scala.reflect.ClassTag$","location":"api/scala/reflect/ClassTag$.html","searchKeys":["AnyRef"]},{"name":"def mkCatcher[Ex <: Throwable, T](isDef: Ex => Boolean, f: Ex => T)(evidence$1: ClassTag[Ex]): PartialFunction[Throwable, T]","description":"scala.util.control.Exception$","location":"api/scala/util/control/Exception$.html","searchKeys":["mkCatcher"]},{"name":"def onCodingException(handler: Handler): Codec","description":"scala.io.Codec","location":"api/scala/io/Codec.html","searchKeys":["onCodingException"]},{"name":"def apply(x: T)(using Quotes): Expr[T]","description":"scala.quoted.ToExpr$$IntToExpr","location":"api/scala/quoted/ToExpr$$IntToExpr.html","searchKeys":["apply"]},{"name":"def show(using Printer[Tree]): String","description":"scala.quoted.Quotes$reflectModule$TreeMethods","location":"api/scala/quoted/Quotes$reflectModule$TreeMethods.html","searchKeys":["show"]},{"name":"class MapHasSeqKeyValueStream[K, V, CC <: ([X, Y] =>> MapOps[X, Y, [K, V] =>> Map[K, V], ])](cc: CC[K, V])","description":"scala.collection.convert.StreamExtensions$MapHasSeqKeyValueStream","location":"api/scala/collection/convert/StreamExtensions$MapHasSeqKeyValueStream.html","searchKeys":["MapHasSeqKeyValueStream"]},{"name":"def apply(unscaledVal: Long, scale: Int, mc: MathContext): BigDecimal","description":"scala.math.BigDecimal$","location":"api/scala/math/BigDecimal$.html","searchKeys":["apply"]},{"name":"def unapply(constant: LongConstant): Some[Long]","description":"scala.quoted.Quotes$reflectModule$LongConstantModule","location":"api/scala/quoted/Quotes$reflectModule$LongConstantModule.html","searchKeys":["unapply"]},{"name":"def unbox(x: Object): Char","description":"scala.Char$","location":"api/scala/Char$.html","searchKeys":["unbox"]},{"name":"def left: TypeRepr","description":"scala.quoted.Quotes$reflectModule$AndOrTypeMethods","location":"api/scala/quoted/Quotes$reflectModule$AndOrTypeMethods.html","searchKeys":["left"]},{"name":"def name: String","description":"scala.quoted.Quotes$reflectModule$OmitSelectorMethods","location":"api/scala/quoted/Quotes$reflectModule$OmitSelectorMethods.html","searchKeys":["name"]},{"name":"val Literal: LiteralModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Literal"]},{"name":"def enrichAsJavaDoubleUnaryOperator[A0](sf: A0 => Double)(evA0: A0 =:= Double): RichFunction1AsDoubleUnaryOperator","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsJavaDoubleUnaryOperator"]},{"name":"def isAlive(): Boolean","description":"scala.sys.process.Process","location":"api/scala/sys/process/Process.html","searchKeys":["isAlive"]},{"name":"def apply(i: Int): Float","description":"scala.collection.immutable.ArraySeq$$ofFloat","location":"api/scala/collection/immutable/ArraySeq$$ofFloat.html","searchKeys":["apply"]},{"name":"val x$16: FromExpr[T4]","description":"scala.quoted.FromExpr$$Tuple12FromExpr","location":"api/scala/quoted/FromExpr$$Tuple12FromExpr.html","searchKeys":["x$16"]},{"name":"def _10: T10","description":"scala.Product15","location":"api/scala/Product15.html","searchKeys":["_10"]},{"name":"def failing[T](exceptions: Class[]*): Catch[Option[T]]","description":"scala.util.control.Exception$","location":"api/scala/util/control/Exception$.html","searchKeys":["failing"]},{"name":"def enrichAsScalaFromBiConsumer[T, U](jf: BiConsumer[T, U]): RichBiConsumerAsFunction2[T, U]","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsScalaFromBiConsumer"]},{"name":"Macros Spec","description":"","location":"docs/reference/metaprogramming/macros-spec.html","searchKeys":["Macros Spec"]},{"name":"def _11: T11","description":"scala.Product18","location":"api/scala/Product18.html","searchKeys":["_11"]},{"name":"def acquire[R](resource: R)(evidence$12: Releasable[R]): Unit","description":"scala.util.Using$$Manager","location":"api/scala/util/Using$$Manager.html","searchKeys":["acquire"]},{"name":"given ImplicitSearchSuccessTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ImplicitSearchSuccessTypeTest"]},{"name":"def tail[T]: IArray[T]","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["tail"]},{"name":"class AbstractSeq[+A] extends AbstractSeq[A] with Seq[A]","description":"scala.collection.immutable.AbstractSeq","location":"api/scala/collection/immutable/AbstractSeq.html","searchKeys":["AbstractSeq"]},{"name":"val intAccumulatorFactoryInfo: AccumulatorFactoryInfo[Int, IntAccumulator]","description":"scala.collection.convert.StreamExtensions$$AccumulatorFactoryInfo$","location":"api/scala/collection/convert/StreamExtensions$$AccumulatorFactoryInfo$.html","searchKeys":["intAccumulatorFactoryInfo"]},{"name":"class RichFunction1AsToLongFunction[T](underlying: T => Long) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichFunction1AsToLongFunction","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsToLongFunction.html","searchKeys":["RichFunction1AsToLongFunction"]},{"name":"class RichFunction0AsBooleanSupplier(underlying: () => Boolean) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichFunction0AsBooleanSupplier","location":"api/scala/jdk/FunctionWrappers$$RichFunction0AsBooleanSupplier.html","searchKeys":["RichFunction0AsBooleanSupplier"]},{"name":"def foreach[U](f: (El1, El2, El3, El4) => U): Unit","description":"scala.collection.LazyZip4","location":"api/scala/collection/LazyZip4.html","searchKeys":["foreach"]},{"name":"val ALTERNATIVE: 151","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["ALTERNATIVE"]},{"name":"given LongToExpr[T <: Long]: ToExpr[T]","description":"scala.quoted.ToExpr$$LongToExpr","location":"api/scala/quoted/ToExpr$$LongToExpr.html","searchKeys":["LongToExpr"]},{"name":"def diff(that: Set[A]): C","description":"scala.collection.mutable.SetOps","location":"api/scala/collection/mutable/SetOps.html","searchKeys":["diff"]},{"name":"val canEqualNumber: CanEqual[Number, Number]","description":"scala.CanEqual$","location":"api/scala/CanEqual$.html","searchKeys":["canEqualNumber"]},{"name":"class SerializationProxy[A](acc: LongAccumulator) extends Serializable","description":"scala.jdk.LongAccumulator$$SerializationProxy","location":"api/scala/jdk/LongAccumulator$$SerializationProxy.html","searchKeys":["SerializationProxy"]},{"name":"def mutableMapAsJavaMap[K, V](m: Map[K, V]): Map[K, V]","description":"scala.collection.JavaConverters$","location":"api/scala/collection/JavaConverters$.html","searchKeys":["mutableMapAsJavaMap"]},{"name":"def typeArguments: List[OptManifest[]]","description":"scala.reflect.ClassManifestDeprecatedApis","location":"api/scala/reflect/ClassManifestDeprecatedApis.html","searchKeys":["typeArguments"]},{"name":"def foreach[U](f: A => U): Unit","description":"scala.Option","location":"api/scala/Option.html","searchKeys":["foreach"]},{"name":"def asJava: LongFunction[R]","description":"scala.jdk.FunctionWrappers$$RichFunction1AsLongFunction","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsLongFunction.html","searchKeys":["asJava"]},{"name":"val ANNOTATEDtpt: 154","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["ANNOTATEDtpt"]},{"name":"def abs(x: Int): Int","description":"scala.math","location":"api/scala/math.html","searchKeys":["abs"]},{"name":"object TypeTest","description":"scala.reflect.TypeTest$","location":"api/scala/reflect/TypeTest$.html","searchKeys":["TypeTest"]},{"name":"def |(x: Short): Int","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["|"]},{"name":"def microseconds: FiniteDuration","description":"scala.concurrent.duration.DurationConversions","location":"api/scala/concurrent/duration/DurationConversions.html","searchKeys":["microseconds"]},{"name":"trait IndexedSeq[T] extends Seq[T] with IndexedSeq[T] with IndexedSeqOps[T, [T] =>> IndexedSeq[T], IndexedSeq[T]] with IterableFactoryDefaults[T, [T] =>> IndexedSeq[T]]","description":"scala.collection.mutable.IndexedSeq","location":"api/scala/collection/mutable/IndexedSeq.html","searchKeys":["IndexedSeq"]},{"name":"val Double: DoubleManifest","description":"scala.reflect.Manifest$","location":"api/scala/reflect/Manifest$.html","searchKeys":["Double"]},{"name":"class LazyZip4[+El1, +El2, +El3, +El4, C1]","description":"scala.collection.LazyZip4","location":"api/scala/collection/LazyZip4.html","searchKeys":["LazyZip4"]},{"name":"def init: Array[A]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["init"]},{"name":"def get: B","description":"scala.util.Either$$RightProjection","location":"api/scala/util/Either$$RightProjection.html","searchKeys":["get"]},{"name":"Type Lambdas - More Details","description":"","location":"docs/reference/new-types/type-lambdas-spec.html","searchKeys":["Type Lambdas - More Details"]},{"name":"def flatMap[B](f: A => IterableOnce[B]): CC[B]","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["flatMap"]},{"name":"def insert(index: Int, x: Double): StringBuilder","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["insert"]},{"name":"val ISO8859: Codec","description":"scala.io.Codec$","location":"api/scala/io/Codec$.html","searchKeys":["ISO8859"]},{"name":"def toFactory[V](dummy: LongMap): Factory[(Long, V), LongMap[V]]","description":"scala.collection.immutable.LongMap$","location":"api/scala/collection/immutable/LongMap$.html","searchKeys":["toFactory"]},{"name":"def rangeFrom(from: A): C","description":"scala.collection.SortedOps","location":"api/scala/collection/SortedOps.html","searchKeys":["rangeFrom"]},{"name":"val x$3: Type[T3]","description":"scala.quoted.FromExpr$$Tuple16FromExpr","location":"api/scala/quoted/FromExpr$$Tuple16FromExpr.html","searchKeys":["x$3"]},{"name":"def boxedAdder: BiConsumer[IntAccumulator, Int]","description":"scala.jdk.IntAccumulator$","location":"api/scala/jdk/IntAccumulator$.html","searchKeys":["boxedAdder"]},{"name":"def get(key: K): Option[V]","description":"scala.collection.immutable.Map$$Map2","location":"api/scala/collection/immutable/Map$$Map2.html","searchKeys":["get"]},{"name":"def reduceRightOption(f: (A, A) => A): Option[A]","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["reduceRightOption"]},{"name":"def *(x: Float): Double","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["*"]},{"name":"def RepeatedParamClass: Symbol","description":"scala.quoted.Quotes$reflectModule$defnModule","location":"api/scala/quoted/Quotes$reflectModule$defnModule.html","searchKeys":["RepeatedParamClass"]},{"name":"def transform(f: A => A): SeqOps[A, CC, C]","description":"scala.collection.mutable.SeqOps","location":"api/scala/collection/mutable/SeqOps.html","searchKeys":["transform"]},{"name":"val Singleton: SingletonModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Singleton"]},{"name":"trait TreeAccumulator[X]","description":"scala.quoted.Quotes$reflectModule$TreeAccumulator","location":"api/scala/quoted/Quotes$reflectModule$TreeAccumulator.html","searchKeys":["TreeAccumulator"]},{"name":"def asJava: ObjIntConsumer[T]","description":"scala.jdk.FunctionWrappers$$RichFunction2AsObjIntConsumer","location":"api/scala/jdk/FunctionWrappers$$RichFunction2AsObjIntConsumer.html","searchKeys":["asJava"]},{"name":"def apply(v1: T1, v2: T2, v3: T3, v4: T4): R","description":"scala.Function4","location":"api/scala/Function4.html","searchKeys":["apply"]},{"name":"def sortedSetEquiv[CC <: ([X] =>> SortedSet[X]), T](eqv: Equiv[T]): Equiv[CC[T]]","description":"scala.math.Equiv$$ExtraImplicits","location":"api/scala/math/Equiv$$ExtraImplicits.html","searchKeys":["sortedSetEquiv"]},{"name":"object BigDecimalAsIfIntegral extends BigDecimalAsIfIntegral with BigDecimalOrdering","description":"scala.math.Numeric$$BigDecimalAsIfIntegral$","location":"api/scala/math/Numeric$$BigDecimalAsIfIntegral$.html","searchKeys":["BigDecimalAsIfIntegral"]},{"name":"class Prepended[+A](elem: A, underlying: SomeIndexedSeqOps[A]) extends Prepended[A] with IndexedSeqView[A]","description":"scala.collection.IndexedSeqView$$Prepended","location":"api/scala/collection/IndexedSeqView$$Prepended.html","searchKeys":["Prepended"]},{"name":"object namedTypeArguments","description":"scala.language$$experimental$$namedTypeArguments$","location":"api/scala/language$$experimental$$namedTypeArguments$.html","searchKeys":["namedTypeArguments"]},{"name":"def newBuilder[A]: Builder[A, AnyAccumulator[A]]","description":"scala.jdk.AnyAccumulator$","location":"api/scala/jdk/AnyAccumulator$.html","searchKeys":["newBuilder"]},{"name":"def breakable(op: => Unit): Unit","description":"scala.util.control.Breaks","location":"api/scala/util/control/Breaks.html","searchKeys":["breakable"]},{"name":"def _4: T4","description":"scala.Product9","location":"api/scala/Product9.html","searchKeys":["_4"]},{"name":"def intersectionType[T](parents: Manifest[]*): Manifest[T]","description":"scala.reflect.Manifest$","location":"api/scala/reflect/Manifest$.html","searchKeys":["intersectionType"]},{"name":"val LONGconst: 71","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["LONGconst"]},{"name":"def apply(): Boolean","description":"scala.jdk.FunctionWrappers$$FromJavaBooleanSupplier","location":"api/scala/jdk/FunctionWrappers$$FromJavaBooleanSupplier.html","searchKeys":["apply"]},{"name":"def +[V1 >: V](kv: (K, V1)): CC[K, V1]","description":"scala.collection.MapOps","location":"api/scala/collection/MapOps.html","searchKeys":["+"]},{"name":"given ApplyMethods","description":"scala.quoted.Quotes$reflectModule$ApplyMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ApplyMethods"]},{"name":"def put(x: A): Unit","description":"scala.concurrent.SyncVar","location":"api/scala/concurrent/SyncVar.html","searchKeys":["put"]},{"name":"def transformTypeCaseDef(tree: TypeCaseDef)(owner: Symbol): TypeCaseDef","description":"scala.quoted.Quotes$reflectModule$TreeMap","location":"api/scala/quoted/Quotes$reflectModule$TreeMap.html","searchKeys":["transformTypeCaseDef"]},{"name":"def isUnicodeIdentifierStart: Boolean","description":"scala.runtime.RichChar","location":"api/scala/runtime/RichChar.html","searchKeys":["isUnicodeIdentifierStart"]},{"name":"given Tuple3ToExpr[T1, T2, T3]: ToExpr[(T1, T2, T3)]","description":"scala.quoted.ToExpr$$Tuple3ToExpr","location":"api/scala/quoted/ToExpr$$Tuple3ToExpr.html","searchKeys":["Tuple3ToExpr"]},{"name":"def -(x: Float): Float","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["-"]},{"name":"def length: Int","description":"scala.collection.mutable.ArraySeq$$ofFloat","location":"api/scala/collection/mutable/ArraySeq$$ofFloat.html","searchKeys":["length"]},{"name":"val x$14: FromExpr[T3]","description":"scala.quoted.FromExpr$$Tuple11FromExpr","location":"api/scala/quoted/FromExpr$$Tuple11FromExpr.html","searchKeys":["x$14"]},{"name":"def zero: T","description":"scala.math.Numeric","location":"api/scala/math/Numeric.html","searchKeys":["zero"]},{"name":"class SerializationProxy[A](acc: DoubleAccumulator) extends Serializable","description":"scala.jdk.DoubleAccumulator$$SerializationProxy","location":"api/scala/jdk/DoubleAccumulator$$SerializationProxy.html","searchKeys":["SerializationProxy"]},{"name":"def apply(n: Int): A","description":"scala.collection.mutable.ArrayBuffer","location":"api/scala/collection/mutable/ArrayBuffer.html","searchKeys":["apply"]},{"name":"class ImmutableKeySortedSet extends AbstractSet[K] with SortedSet[K] with GenKeySet with GenKeySortedSet","description":"scala.collection.immutable.SortedMapOps$ImmutableKeySortedSet","location":"api/scala/collection/immutable/SortedMapOps$ImmutableKeySortedSet.html","searchKeys":["ImmutableKeySortedSet"]},{"name":"given ReturnTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ReturnTypeTest"]},{"name":"object PriorityQueue extends SortedIterableFactory[[A] =>> PriorityQueue[A]]","description":"scala.collection.mutable.PriorityQueue$","location":"api/scala/collection/mutable/PriorityQueue$.html","searchKeys":["PriorityQueue"]},{"name":"class LinkedHashSet[A] extends AbstractSet[A] with SetOps[A, [A] =>> LinkedHashSet[A], LinkedHashSet[A]] with StrictOptimizedIterableOps[A, [A] =>> LinkedHashSet[A], LinkedHashSet[A]] with IterableFactoryDefaults[A, [A] =>> LinkedHashSet[A]] with DefaultSerializable","description":"scala.collection.mutable.LinkedHashSet","location":"api/scala/collection/mutable/LinkedHashSet.html","searchKeys":["LinkedHashSet"]},{"name":"def asJavaParValueIntStreamFromChar[K](m: Map[K, Character]): IntStream","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaParValueIntStreamFromChar"]},{"name":"object Type","description":"scala.quoted.Type$","location":"api/scala/quoted/Type$.html","searchKeys":["Type"]},{"name":"def copy(original: Tree)(selector: Term, cases: List[CaseDef]): Match","description":"scala.quoted.Quotes$reflectModule$MatchModule","location":"api/scala/quoted/Quotes$reflectModule$MatchModule.html","searchKeys":["copy"]},{"name":"def apply(tup: (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14))(using Quotes): Expr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)]","description":"scala.quoted.ToExpr$$Tuple14ToExpr","location":"api/scala/quoted/ToExpr$$Tuple14ToExpr.html","searchKeys":["apply"]},{"name":"type MirroredType = AnyRef","description":"scala.deriving.Mirror$$SingletonProxy","location":"api/scala/deriving/Mirror$$SingletonProxy.html","searchKeys":["MirroredType"]},{"name":"def _3: T3","description":"scala.Product8","location":"api/scala/Product8.html","searchKeys":["_3"]},{"name":"object ExecutionContext","description":"scala.concurrent.ExecutionContext$","location":"api/scala/concurrent/ExecutionContext$.html","searchKeys":["ExecutionContext"]},{"name":"class AnyStepperSpliterator[A](s: AnyStepper[A]) extends Spliterator[A]","description":"scala.collection.AnyStepper$$AnyStepperSpliterator","location":"api/scala/collection/AnyStepper$$AnyStepperSpliterator.html","searchKeys":["AnyStepperSpliterator"]},{"name":"val name: String","description":"scala.util.control.Exception$$Described","location":"api/scala/util/control/Exception$$Described.html","searchKeys":["name"]},{"name":"def fromFile(file: File)(codec: Codec): BufferedSource","description":"scala.io.Source$","location":"api/scala/io/Source$.html","searchKeys":["fromFile"]},{"name":"def days: FiniteDuration","description":"scala.concurrent.duration.DurationConversions","location":"api/scala/concurrent/duration/DurationConversions.html","searchKeys":["days"]},{"name":"val x$29: FromExpr[T8]","description":"scala.quoted.FromExpr$$Tuple21FromExpr","location":"api/scala/quoted/FromExpr$$Tuple21FromExpr.html","searchKeys":["x$29"]},{"name":"def find(p: Char => Boolean): Option[Char]","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["find"]},{"name":"def _13: T13","description":"scala.Product20","location":"api/scala/Product20.html","searchKeys":["_13"]},{"name":"val CONTRAVARIANT: 29","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["CONTRAVARIANT"]},{"name":"def fromSpecific(from: From)(it: IterableOnce[A]): C","description":"scala.collection.BuildFrom","location":"api/scala/collection/BuildFrom.html","searchKeys":["fromSpecific"]},{"name":"trait ExtraImplicits","description":"scala.math.Numeric$$ExtraImplicits","location":"api/scala/math/Numeric$$ExtraImplicits.html","searchKeys":["ExtraImplicits"]},{"name":"val x$6: Type[T6]","description":"scala.quoted.FromExpr$$Tuple8FromExpr","location":"api/scala/quoted/FromExpr$$Tuple8FromExpr.html","searchKeys":["x$6"]},{"name":"trait Seq[+A] extends Iterable[A] with PartialFunction[Int, A] with SeqOps[A, [A] =>> Seq[A], Seq[A]] with IterableFactoryDefaults[A, [A] =>> Seq[A]] with Equals","description":"scala.collection.Seq","location":"api/scala/collection/Seq.html","searchKeys":["Seq"]},{"name":"def dropWhile(p: A => Boolean): C","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["dropWhile"]},{"name":"def patch[B >: A](from: Int, patchElems: Iterator[B], replaced: Int): Iterator[B]","description":"scala.collection.Iterator","location":"api/scala/collection/Iterator.html","searchKeys":["patch"]},{"name":"class Val(i: Int, name: String) extends Value with Serializable","description":"scala.Enumeration$Val","location":"api/scala/Enumeration$Val.html","searchKeys":["Val"]},{"name":"object Product7","description":"scala.Product7$","location":"api/scala/Product7$.html","searchKeys":["Product7"]},{"name":"def indexOf[B >: A](elem: B): Int","description":"scala.collection.Iterator","location":"api/scala/collection/Iterator.html","searchKeys":["indexOf"]},{"name":"def pow(x: Double, y: Double): Double","description":"scala.math","location":"api/scala/math.html","searchKeys":["pow"]},{"name":"given DoubleToExpr[T <: Double]: ToExpr[T]","description":"scala.quoted.ToExpr$$DoubleToExpr","location":"api/scala/quoted/ToExpr$$DoubleToExpr.html","searchKeys":["DoubleToExpr"]},{"name":"def Final: Flags","description":"scala.quoted.Quotes$reflectModule$FlagsModule","location":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html","searchKeys":["Final"]},{"name":"object Iterable extends Delegate[[A] =>> Iterable[A]]","description":"scala.collection.Iterable$","location":"api/scala/collection/Iterable$.html","searchKeys":["Iterable"]},{"name":"def unwrapping[T](exceptions: Class[]*): Catch[T]","description":"scala.util.control.Exception$","location":"api/scala/util/control/Exception$.html","searchKeys":["unwrapping"]},{"name":"trait ToJavaImplicits","description":"scala.collection.convert.ToJavaImplicits","location":"api/scala/collection/convert/ToJavaImplicits.html","searchKeys":["ToJavaImplicits"]},{"name":"def enrichAsScalaFromDoubleFunction[R](jf: DoubleFunction[R]): RichDoubleFunctionAsFunction1[R]","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsScalaFromDoubleFunction"]},{"name":"class compileTimeOnly(message: String) extends StaticAnnotation","description":"scala.annotation.compileTimeOnly","location":"api/scala/annotation/compileTimeOnly.html","searchKeys":["compileTimeOnly"]},{"name":"def isWhole: Boolean","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["isWhole"]},{"name":"def unapply(pattern: Bind): (String, Tree)","description":"scala.quoted.Quotes$reflectModule$BindModule","location":"api/scala/quoted/Quotes$reflectModule$BindModule.html","searchKeys":["unapply"]},{"name":"object SortedMapFactory","description":"scala.collection.SortedMapFactory$","location":"api/scala/collection/SortedMapFactory$.html","searchKeys":["SortedMapFactory"]},{"name":"class PadTo[A](underlying: SomeIterableOps[A], len: Int, elem: A) extends AbstractView[A]","description":"scala.collection.View$$PadTo","location":"api/scala/collection/View$$PadTo.html","searchKeys":["PadTo"]},{"name":"def to(end: T, step: T): IndexedSeq[T]","description":"scala.runtime.RangedProxy","location":"api/scala/runtime/RangedProxy.html","searchKeys":["to"]},{"name":"class RBNode[K, V](var key: K, var hash: Int, var value: V, var red: Boolean, var left: RBNode[K, V], var right: RBNode[K, V], var parent: RBNode[K, V]) extends Node","description":"scala.collection.mutable.CollisionProofHashMap$$RBNode","location":"api/scala/collection/mutable/CollisionProofHashMap$$RBNode.html","searchKeys":["RBNode"]},{"name":"def fill(n: Int)(elem: => A): C","description":"scala.collection.SpecificIterableFactory","location":"api/scala/collection/SpecificIterableFactory.html","searchKeys":["fill"]},{"name":"given FloatToExpr[T <: Float]: ToExpr[T]","description":"scala.quoted.ToExpr$$FloatToExpr","location":"api/scala/quoted/ToExpr$$FloatToExpr.html","searchKeys":["FloatToExpr"]},{"name":"def view(from: Int, until: Int): View[A]","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["view"]},{"name":"val NULLconst: 5","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["NULLconst"]},{"name":"object None extends Option[Nothing]","description":"scala.None$","location":"api/scala/None$.html","searchKeys":["None"]},{"name":"def sortBy[T](f: T => U)(evidence$11: ClassTag[U], Ordering[U]): IArray[T]","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["sortBy"]},{"name":"def arg: TypeTree","description":"scala.quoted.Quotes$reflectModule$AnnotatedMethods","location":"api/scala/quoted/Quotes$reflectModule$AnnotatedMethods.html","searchKeys":["arg"]},{"name":"def exact(d: Double): BigDecimal","description":"scala.math.BigDecimal$","location":"api/scala/math/BigDecimal$.html","searchKeys":["exact"]},{"name":"def append(elem: T): Unrolled[T]","description":"scala.collection.mutable.UnrolledBuffer$$Unrolled","location":"api/scala/collection/mutable/UnrolledBuffer$$Unrolled.html","searchKeys":["append"]},{"name":"given StringToExpr[T <: String]: ToExpr[T]","description":"scala.quoted.ToExpr$$StringToExpr","location":"api/scala/quoted/ToExpr$$StringToExpr.html","searchKeys":["StringToExpr"]},{"name":"type MirroredElemLabels = EmptyTuple","description":"scala.deriving.Mirror$$Singleton","location":"api/scala/deriving/Mirror$$Singleton.html","searchKeys":["MirroredElemLabels"]},{"name":"def asJavaEnumeration: Enumeration[A]","description":"scala.collection.convert.AsJavaExtensions$IteratorHasAsJava","location":"api/scala/collection/convert/AsJavaExtensions$IteratorHasAsJava.html","searchKeys":["asJavaEnumeration"]},{"name":"def iterate[A, C](start: A, len: Int)(f: A => A)(canAccumulate: AccumulatorFactoryShape[A, C]): C","description":"scala.jdk.Accumulator$","location":"api/scala/jdk/Accumulator$.html","searchKeys":["iterate"]},{"name":"def map[K2, V2](f: (K, V) => (K2, V2)): CC[K2, V2]","description":"scala.collection.MapOps","location":"api/scala/collection/MapOps.html","searchKeys":["map"]},{"name":"def transformTypeTree(tree: TypeTree)(owner: Symbol): TypeTree","description":"scala.quoted.Quotes$reflectModule$TreeMap","location":"api/scala/quoted/Quotes$reflectModule$TreeMap.html","searchKeys":["transformTypeTree"]},{"name":"class DistinctBy[A, B](underlying: SomeIterableOps[A], f: A => B) extends AbstractView[A]","description":"scala.collection.View$$DistinctBy","location":"api/scala/collection/View$$DistinctBy.html","searchKeys":["DistinctBy"]},{"name":"def asScala: T => Boolean","description":"scala.jdk.FunctionWrappers$$RichPredicateAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichPredicateAsFunction1.html","searchKeys":["asScala"]},{"name":"def _3: T3","description":"scala.Product18","location":"api/scala/Product18.html","searchKeys":["_3"]},{"name":"class AbstractFunction16[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, -T14, -T15, -T16, +R] extends (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) => R","description":"scala.runtime.AbstractFunction16","location":"api/scala/runtime/AbstractFunction16.html","searchKeys":["AbstractFunction16"]},{"name":"def get(key: K): Option[V]","description":"scala.collection.immutable.TreeMap","location":"api/scala/collection/immutable/TreeMap.html","searchKeys":["get"]},{"name":"The @targetName annotation","description":"","location":"docs/reference/other-new-features/targetName.html","searchKeys":["The @targetName annotation"]},{"name":"def isAtEnd: Boolean","description":"dotty.tools.tasty.TastyReader","location":"api/dotty/tools/tasty/TastyReader.html","searchKeys":["isAtEnd"]},{"name":"def fold[A1 >: A](z: A1)(op: (A1, A1) => A1): A1","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["fold"]},{"name":"object Exception","description":"scala.util.control.Exception$","location":"api/scala/util/control/Exception$.html","searchKeys":["Exception"]},{"name":"def fromFunction[T](cmp: (T, T) => Boolean): Equiv[T]","description":"scala.math.Equiv$","location":"api/scala/math/Equiv$.html","searchKeys":["fromFunction"]},{"name":"val x$21: FromExpr[T7]","description":"scala.quoted.FromExpr$$Tuple14FromExpr","location":"api/scala/quoted/FromExpr$$Tuple14FromExpr.html","searchKeys":["x$21"]},{"name":"def >(x: Short): Boolean","description":"scala.Float","location":"api/scala/Float.html","searchKeys":[">"]},{"name":"def unapply(x: TermParamClause): Some[List[ValDef]]","description":"scala.quoted.Quotes$reflectModule$TermParamClauseModule","location":"api/scala/quoted/Quotes$reflectModule$TermParamClauseModule.html","searchKeys":["unapply"]},{"name":"val x$4: Type[T4]","description":"scala.quoted.FromExpr$$Tuple18FromExpr","location":"api/scala/quoted/FromExpr$$Tuple18FromExpr.html","searchKeys":["x$4"]},{"name":"object StreamConverters","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["StreamConverters"]},{"name":"def err(s: => String): Unit","description":"scala.sys.process.ProcessLogger","location":"api/scala/sys/process/ProcessLogger.html","searchKeys":["err"]},{"name":"def _6: T6","description":"scala.Product19","location":"api/scala/Product19.html","searchKeys":["_6"]},{"name":"def asJavaSeqCharStream: IntStream","description":"scala.collection.convert.StreamExtensions$StringHasSeqParStream","location":"api/scala/collection/convert/StreamExtensions$StringHasSeqParStream.html","searchKeys":["asJavaSeqCharStream"]},{"name":"val x$43: FromExpr[T21]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["x$43"]},{"name":"def toFloat(x: Float): Float","description":"scala.math.Numeric$$FloatIsFractional","location":"api/scala/math/Numeric$$FloatIsFractional.html","searchKeys":["toFloat"]},{"name":"def lastIndexWhere[T](p: T => Boolean, end: Int): Int","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["lastIndexWhere"]},{"name":"def copy(original: Tree)(lhs: Term, rhs: Term): Assign","description":"scala.quoted.Quotes$reflectModule$AssignModule","location":"api/scala/quoted/Quotes$reflectModule$AssignModule.html","searchKeys":["copy"]},{"name":"def asScala(p: Properties): Map[String, String]","description":"scala.collection.convert.AsScalaConverters","location":"api/scala/collection/convert/AsScalaConverters.html","searchKeys":["asScala"]},{"name":"given LeftFromExpr[L, R](using val x$1: Type[L], val x$2: Type[R], val x$3: FromExpr[L]): FromExpr[Left[L, R]]","description":"scala.quoted.FromExpr$$LeftFromExpr","location":"api/scala/quoted/FromExpr$.html","searchKeys":["LeftFromExpr"]},{"name":"class RichFunction1AsIntToLongFunction(underlying: Int => Long) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichFunction1AsIntToLongFunction","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsIntToLongFunction.html","searchKeys":["RichFunction1AsIntToLongFunction"]},{"name":"def asJavaIntToLongFunction(sf: Integer => Long): IntToLongFunction","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asJavaIntToLongFunction"]},{"name":"given PolyTypeMethods","description":"scala.quoted.Quotes$reflectModule$PolyTypeMethods","location":"api/scala/quoted/Quotes$reflectModule$PolyTypeMethods.html","searchKeys":["PolyTypeMethods"]},{"name":"given AnnotatedMethods","description":"scala.quoted.Quotes$reflectModule$AnnotatedMethods","location":"api/scala/quoted/Quotes$reflectModule$AnnotatedMethods.html","searchKeys":["AnnotatedMethods"]},{"name":"def compare(x: Boolean, y: Boolean): Int","description":"scala.math.Ordering$$BooleanOrdering","location":"api/scala/math/Ordering$$BooleanOrdering.html","searchKeys":["compare"]},{"name":"def pushAll(elems: IterableOnce[A]): Stack[A]","description":"scala.collection.mutable.Stack","location":"api/scala/collection/mutable/Stack.html","searchKeys":["pushAll"]},{"name":"def unapply(x: NamedArg): (String, Term)","description":"scala.quoted.Quotes$reflectModule$NamedArgModule","location":"api/scala/quoted/Quotes$reflectModule$NamedArgModule.html","searchKeys":["unapply"]},{"name":"val hashCode: Int","description":"scala.reflect.AnyValManifest","location":"api/scala/reflect/AnyValManifest.html","searchKeys":["hashCode"]},{"name":"trait SortedSetOps[A, +CC <: ([X] =>> SortedSet[X]), +C <: SortedSetOps[A, CC, C]] extends SetOps[A, [A] =>> Set[A], C] with SortedSetOps[A, CC, C]","description":"scala.collection.immutable.SortedSetOps","location":"api/scala/collection/immutable/SortedSetOps.html","searchKeys":["SortedSetOps"]},{"name":"def merged[V1 >: V](that: HashMap[K, V1])(mergef: ((K, V), (K, V1)) => (K, V1)): HashMap[K, V1]","description":"scala.collection.immutable.HashMap","location":"api/scala/collection/immutable/HashMap.html","searchKeys":["merged"]},{"name":"val x$12: Type[T12]","description":"scala.quoted.FromExpr$$Tuple18FromExpr","location":"api/scala/quoted/FromExpr$$Tuple18FromExpr.html","searchKeys":["x$12"]},{"name":"val IMPLICITarg: 97","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["IMPLICITarg"]},{"name":"trait Reference[+T <: AnyRef] extends () => T","description":"scala.ref.Reference","location":"api/scala/ref/Reference.html","searchKeys":["Reference"]},{"name":"given ClosureMethods","description":"scala.quoted.Quotes$reflectModule$ClosureMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ClosureMethods"]},{"name":"def apply$mcFDI$sp(v1: Double, v2: Int): Float","description":"scala.runtime.java8.JFunction2$mcFDI$sp","location":"api/scala/runtime/java8/JFunction2$mcFDI$sp.html","searchKeys":["apply$mcFDI$sp"]},{"name":"def scalaUtilChainingOps[A](a: A): ChainingOps[A]","description":"scala.util.ChainingSyntax","location":"api/scala/util/ChainingSyntax.html","searchKeys":["scalaUtilChainingOps"]},{"name":"trait IdentModule","description":"scala.quoted.Quotes$reflectModule$IdentModule","location":"api/scala/quoted/Quotes$reflectModule$IdentModule.html","searchKeys":["IdentModule"]},{"name":"def hasNext: Boolean","description":"scala.io.Source","location":"api/scala/io/Source.html","searchKeys":["hasNext"]},{"name":"class Deadline extends Ordered[Deadline]","description":"scala.concurrent.duration.Deadline","location":"api/scala/concurrent/duration/Deadline.html","searchKeys":["Deadline"]},{"name":"def apply(n: Int): A","description":"scala.collection.mutable.ArrayBufferView","location":"api/scala/collection/mutable/ArrayBufferView.html","searchKeys":["apply"]},{"name":"def range(start: Int, end: Int): Array[Int]","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["range"]},{"name":"type ValDef <: Definition","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ValDef"]},{"name":"def apply(start: Int, end: Int): Exclusive","description":"scala.collection.immutable.Range$","location":"api/scala/collection/immutable/Range$.html","searchKeys":["apply"]},{"name":"def fromIteratorProvider[A](it: () => Iterator[A]): View[A]","description":"scala.collection.View$","location":"api/scala/collection/View$.html","searchKeys":["fromIteratorProvider"]},{"name":"val IDENTtpt: 111","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["IDENTtpt"]},{"name":"def apply(i: Int): Long","description":"scala.collection.immutable.ArraySeq$$ofLong","location":"api/scala/collection/immutable/ArraySeq$$ofLong.html","searchKeys":["apply"]},{"name":"def Double2double(x: Double): Double","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["Double2double"]},{"name":"def withError(process: InputStream => Unit): ProcessIO","description":"scala.sys.process.ProcessIO","location":"api/scala/sys/process/ProcessIO.html","searchKeys":["withError"]},{"name":"def asJava: Optional[A]","description":"scala.jdk.OptionConverters$$RichOption","location":"api/scala/jdk/OptionConverters$$RichOption.html","searchKeys":["asJava"]},{"name":"def ready[T](awaitable: Awaitable[T], atMost: Duration): awaitable","description":"scala.concurrent.Await$","location":"api/scala/concurrent/Await$.html","searchKeys":["ready"]},{"name":"given Tuple22FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22](using val x$1: Type[T1], val x$2: Type[T2], val x$3: Type[T3], val x$4: Type[T4], val x$5: Type[T5], val x$6: Type[T6], val x$7: Type[T7], val x$8: Type[T8], val x$9: Type[T9], val x$10: Type[T10], val x$11: Type[T11], val x$12: Type[T12], val x$13: Type[T13], val x$14: Type[T14], val x$15: Type[T15], val x$16: Type[T16], val x$17: Type[T17], val x$18: Type[T18], val x$19: Type[T19], val x$20: Type[T20], val x$21: Type[T21], val x$22: Type[T22], val x$23: FromExpr[T1], val x$24: FromExpr[T2], val x$25: FromExpr[T3], val x$26: FromExpr[T4], val x$27: FromExpr[T5], val x$28: FromExpr[T6], val x$29: FromExpr[T7], val x$30: FromExpr[T8], val x$31: FromExpr[T9], val x$32: FromExpr[T10], val x$33: FromExpr[T11], val x$34: FromExpr[T12], val x$35: FromExpr[T13], val x$36: FromExpr[T14], val x$37: FromExpr[T15], val x$38: FromExpr[T16], val x$39: FromExpr[T17], val x$40: FromExpr[T18], val x$41: FromExpr[T19], val x$42: FromExpr[T20], val x$43: FromExpr[T21], val x$44: FromExpr[T22]): FromExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22)]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["Tuple22FromExpr"]},{"name":"def daemonized(): ProcessIO","description":"scala.sys.process.ProcessIO","location":"api/scala/sys/process/ProcessIO.html","searchKeys":["daemonized"]},{"name":"def subtractOne(elem: A): LinkedHashSet[A]","description":"scala.collection.mutable.LinkedHashSet","location":"api/scala/collection/mutable/LinkedHashSet.html","searchKeys":["subtractOne"]},{"name":"Overview","description":"","location":"docs/reference/contextual/motivation.html","searchKeys":["Overview"]},{"name":"def iterator: Iterator[A]","description":"scala.collection.immutable.ListSet","location":"api/scala/collection/immutable/ListSet.html","searchKeys":["iterator"]},{"name":"def from[E](it: IterableOnce[E])(ordering: Ordering[E]): TreeSet[E]","description":"scala.collection.mutable.TreeSet$","location":"api/scala/collection/mutable/TreeSet$.html","searchKeys":["from"]},{"name":"val byteStreamShape: StreamShape[Byte, IntStream, IntStepper]","description":"scala.collection.convert.StreamExtensions$$StreamShape$","location":"api/scala/collection/convert/StreamExtensions$$StreamShape$.html","searchKeys":["byteStreamShape"]},{"name":"class Source extends Iterator[Char] with Closeable","description":"scala.io.Source","location":"api/scala/io/Source.html","searchKeys":["Source"]},{"name":"def mapFactory: MapViewFactory","description":"scala.collection.MapView","location":"api/scala/collection/MapView.html","searchKeys":["mapFactory"]},{"name":"def toOption: Option[A]","description":"scala.util.Either$$LeftProjection","location":"api/scala/util/Either$$LeftProjection.html","searchKeys":["toOption"]},{"name":"def indexWhere(p: A => Boolean, from: Int): Int","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["indexWhere"]},{"name":"def enrichAsScalaFromIntBinaryOperator(jf: IntBinaryOperator): RichIntBinaryOperatorAsFunction2","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsScalaFromIntBinaryOperator"]},{"name":"def append(elems: A*): Buffer[A]","description":"scala.collection.mutable.Buffer","location":"api/scala/collection/mutable/Buffer.html","searchKeys":["append"]},{"name":"trait RenameSelectorModule","description":"scala.quoted.Quotes$reflectModule$RenameSelectorModule","location":"api/scala/quoted/Quotes$reflectModule$RenameSelectorModule.html","searchKeys":["RenameSelectorModule"]},{"name":"def empty[A]: ListBuffer[A]","description":"scala.collection.mutable.ListBuffer$","location":"api/scala/collection/mutable/ListBuffer$.html","searchKeys":["empty"]},{"name":"def TreeCode: Printer[Tree]","description":"scala.quoted.Quotes$reflectModule$PrinterModule","location":"api/scala/quoted/Quotes$reflectModule$PrinterModule.html","searchKeys":["TreeCode"]},{"name":"given DefinitionTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["DefinitionTypeTest"]},{"name":"def from[K, V](it: IterableOnce[(K, V)]): C[K, V]","description":"scala.collection.MapFactory$$Delegate","location":"api/scala/collection/MapFactory$$Delegate.html","searchKeys":["from"]},{"name":"val x$5: Type[T5]","description":"scala.quoted.FromExpr$$Tuple11FromExpr","location":"api/scala/quoted/FromExpr$$Tuple11FromExpr.html","searchKeys":["x$5"]},{"name":"def efficientStepper[S <: Stepper[]](shape: StepperShape[Double, S]): S & EfficientSplit","description":"scala.jdk.DoubleAccumulator","location":"api/scala/jdk/DoubleAccumulator.html","searchKeys":["efficientStepper"]},{"name":"def toByte: Byte","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["toByte"]},{"name":"class RichFunction1AsLongFunction[R](underlying: Long => R) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichFunction1AsLongFunction","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsLongFunction.html","searchKeys":["RichFunction1AsLongFunction"]},{"name":"val x$30: FromExpr[T9]","description":"scala.quoted.FromExpr$$Tuple21FromExpr","location":"api/scala/quoted/FromExpr$$Tuple21FromExpr.html","searchKeys":["x$30"]},{"name":"def /(x: Char): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["/"]},{"name":"def >(x: Double): Boolean","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":[">"]},{"name":"def <=(x: Int): Boolean","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["<="]},{"name":"type ResultWithoutStep = NumericRange[T]","description":"scala.runtime.IntegralProxy","location":"api/scala/runtime/IntegralProxy.html","searchKeys":["ResultWithoutStep"]},{"name":"given of","description":"scala.quoted.Type$","location":"api/scala/quoted/Type$.html","searchKeys":["of"]},{"name":"trait IntegralProxy[T] extends ScalaWholeNumberProxy[T] with RangedProxy[T]","description":"scala.runtime.IntegralProxy","location":"api/scala/runtime/IntegralProxy.html","searchKeys":["IntegralProxy"]},{"name":"def box(x: Short): Short","description":"scala.Short$","location":"api/scala/Short$.html","searchKeys":["box"]},{"name":"def Character2char(x: Character): Char","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["Character2char"]},{"name":"def ==(x: Long): Boolean","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["=="]},{"name":"def addAll(xs: Array[ <: T]): ArrayBuilder[T]","description":"scala.collection.mutable.ArrayBuilder","location":"api/scala/collection/mutable/ArrayBuilder.html","searchKeys":["addAll"]},{"name":"val PositiveInfinity: Infinity","description":"scala.Double$","location":"api/scala/Double$.html","searchKeys":["PositiveInfinity"]},{"name":"def charValue: Char","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["charValue"]},{"name":"def copyToArray[B >: A](xs: Array[B], start: Int, len: Int): Int","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["copyToArray"]},{"name":"class MergeableEither[A](x: Either[A, A]) extends AnyVal","description":"scala.util.Either$$MergeableEither","location":"api/scala/util/Either$$MergeableEither.html","searchKeys":["MergeableEither"]},{"name":"def exclude(ordinal: Int): Ordering[T]","description":"scala.collection.immutable.TreeSeqMap$$Ordering","location":"api/scala/collection/immutable/TreeSeqMap$$Ordering.html","searchKeys":["exclude"]},{"name":"def decimal(d: Double, mc: MathContext): BigDecimal","description":"scala.math.BigDecimal$","location":"api/scala/math/BigDecimal$.html","searchKeys":["decimal"]},{"name":"def splitAt(n: Int): (Array[A], Array[A])","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["splitAt"]},{"name":"def getType: Int","description":"scala.runtime.RichChar","location":"api/scala/runtime/RichChar.html","searchKeys":["getType"]},{"name":"def newBuilder: Builder[Int, BitSet]","description":"scala.collection.BitSet$","location":"api/scala/collection/BitSet$.html","searchKeys":["newBuilder"]},{"name":"def knownSize: Int","description":"scala.collection.mutable.Growable","location":"api/scala/collection/mutable/Growable.html","searchKeys":["knownSize"]},{"name":"given TypeDefTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeDefTypeTest"]},{"name":"given RightFromExpr[L, R](using val x$1: Type[L], val x$2: Type[R], val x$3: FromExpr[R]): FromExpr[Right[L, R]]","description":"scala.quoted.FromExpr$$RightFromExpr","location":"api/scala/quoted/FromExpr$.html","searchKeys":["RightFromExpr"]},{"name":"def toShort: Short","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["toShort"]},{"name":"val source: CharSequence","description":"scala.util.matching.Regex$$Match","location":"api/scala/util/matching/Regex$$Match.html","searchKeys":["source"]},{"name":"def enqueue(): Boolean","description":"scala.ref.ReferenceWrapper","location":"api/scala/ref/ReferenceWrapper.html","searchKeys":["enqueue"]},{"name":"trait OptManifest[+T] extends Serializable","description":"scala.reflect.OptManifest","location":"api/scala/reflect/OptManifest.html","searchKeys":["OptManifest"]},{"name":"def toVector: Vector[A]","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["toVector"]},{"name":"Other New Features","description":"","location":"docs/Other New Features/index.html","searchKeys":["Other New Features"]},{"name":"def name: String","description":"scala.quoted.Quotes$reflectModule$BindMethods","location":"api/scala/quoted/Quotes$reflectModule$BindMethods.html","searchKeys":["name"]},{"name":"val x$13: Type[T13]","description":"scala.quoted.FromExpr$$Tuple15FromExpr","location":"api/scala/quoted/FromExpr$$Tuple15FromExpr.html","searchKeys":["x$13"]},{"name":"def asJava: List[A]","description":"scala.collection.convert.AsJavaExtensions$SeqHasAsJava","location":"api/scala/collection/convert/AsJavaExtensions$SeqHasAsJava.html","searchKeys":["asJava"]},{"name":"val Byte: ByteManifest","description":"scala.reflect.ManifestFactory$","location":"api/scala/reflect/ManifestFactory$.html","searchKeys":["Byte"]},{"name":"package scala.annotation.meta","description":"scala.annotation.meta","location":"api/scala/annotation/meta.html","searchKeys":["scala.annotation.meta"]},{"name":"class BitSet1(val elems: Long) extends BitSet","description":"scala.collection.immutable.BitSet$$BitSet1","location":"api/scala/collection/immutable/BitSet$$BitSet1.html","searchKeys":["BitSet1"]},{"name":"def _8: T8","description":"scala.Product20","location":"api/scala/Product20.html","searchKeys":["_8"]},{"name":"def end(i: Int): Int","description":"scala.util.matching.Regex$$MatchIterator","location":"api/scala/util/matching/Regex$$MatchIterator.html","searchKeys":["end"]},{"name":"def max[U <: T](x: U, y: U): U","description":"scala.math.Ordering","location":"api/scala/math/Ordering.html","searchKeys":["max"]},{"name":"def asJavaSeqKeyDoubleStreamFromFloat[V](m: Map[Float, V]): DoubleStream","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaSeqKeyDoubleStreamFromFloat"]},{"name":"def isLetter: Boolean","description":"scala.runtime.RichChar","location":"api/scala/runtime/RichChar.html","searchKeys":["isLetter"]},{"name":"def mkString(start: String, sep: String, end: String): String","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["mkString"]},{"name":"Dropped: Scala 2 Macros","description":"","location":"docs/reference/dropped-features/macros.html","searchKeys":["Dropped: Scala 2 Macros"]},{"name":"def unapply(x: Expr[Map[T, U]])(using Quotes): Option[Map[T, U]]","description":"scala.quoted.FromExpr$$MapFromExpr","location":"api/scala/quoted/FromExpr$$MapFromExpr.html","searchKeys":["unapply"]},{"name":"def NothingClass: Symbol","description":"scala.quoted.Quotes$reflectModule$defnModule","location":"api/scala/quoted/Quotes$reflectModule$defnModule.html","searchKeys":["NothingClass"]},{"name":"def right: TypeRepr","description":"scala.quoted.Quotes$reflectModule$AndOrTypeMethods","location":"api/scala/quoted/Quotes$reflectModule$AndOrTypeMethods.html","searchKeys":["right"]},{"name":"val key: AnyRef","description":"scala.runtime.NonLocalReturnControl","location":"api/scala/runtime/NonLocalReturnControl.html","searchKeys":["key"]},{"name":"val x$25: FromExpr[T9]","description":"scala.quoted.FromExpr$$Tuple16FromExpr","location":"api/scala/quoted/FromExpr$$Tuple16FromExpr.html","searchKeys":["x$25"]},{"name":"class Deferrer[A] extends AnyVal","description":"scala.collection.immutable.Stream$$Deferrer","location":"api/scala/collection/immutable/Stream$$Deferrer.html","searchKeys":["Deferrer"]},{"name":"def withDefault[V](default: Long => V): LongMap[V]","description":"scala.collection.mutable.LongMap$","location":"api/scala/collection/mutable/LongMap$.html","searchKeys":["withDefault"]},{"name":"def newBuilder[K, V]: Builder[(K, V), WeakHashMap[K, V]]","description":"scala.collection.mutable.WeakHashMap$","location":"api/scala/collection/mutable/WeakHashMap$.html","searchKeys":["newBuilder"]},{"name":"def #&&(other: ProcessBuilder): ProcessBuilder","description":"scala.sys.process.ProcessBuilder","location":"api/scala/sys/process/ProcessBuilder.html","searchKeys":["#&&"]},{"name":"def iterator: Iterator[(K, V)]","description":"scala.collection.immutable.Map$$Map1","location":"api/scala/collection/immutable/Map$$Map1.html","searchKeys":["iterator"]},{"name":"trait NamedArgModule","description":"scala.quoted.Quotes$reflectModule$NamedArgModule","location":"api/scala/quoted/Quotes$reflectModule$NamedArgModule.html","searchKeys":["NamedArgModule"]},{"name":"def asScala: Long => Int","description":"scala.jdk.FunctionWrappers$$RichLongToIntFunctionAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichLongToIntFunctionAsFunction1.html","searchKeys":["asScala"]},{"name":"def apply(unscaledVal: Long, scale: Int): BigDecimal","description":"scala.math.BigDecimal$","location":"api/scala/math/BigDecimal$.html","searchKeys":["apply"]},{"name":"def _7: T7","description":"scala.Product13","location":"api/scala/Product13.html","searchKeys":["_7"]},{"name":"def quickSort(a: Array[Float]): Unit","description":"scala.util.Sorting$","location":"api/scala/util/Sorting$.html","searchKeys":["quickSort"]},{"name":"class Failure[+T](exception: Throwable) extends Try[T]","description":"scala.util.Failure","location":"api/scala/util/Failure.html","searchKeys":["Failure"]},{"name":"val array: Array[Double]","description":"scala.collection.mutable.ArraySeq$$ofDouble","location":"api/scala/collection/mutable/ArraySeq$$ofDouble.html","searchKeys":["array"]},{"name":"object Manifest","description":"scala.reflect.Manifest$","location":"api/scala/reflect/Manifest$.html","searchKeys":["Manifest"]},{"name":"def apply(i: Int): Int","description":"scala.jdk.IntAccumulator","location":"api/scala/jdk/IntAccumulator.html","searchKeys":["apply"]},{"name":"def subsets(len: Int): Iterator[C]","description":"scala.collection.SetOps","location":"api/scala/collection/SetOps.html","searchKeys":["subsets"]},{"name":"def toSeq: Seq[A]","description":"scala.collection.SeqFactory$$UnapplySeqWrapper","location":"api/scala/collection/SeqFactory$$UnapplySeqWrapper.html","searchKeys":["toSeq"]},{"name":"def constructor: DefDef","description":"scala.quoted.Quotes$reflectModule$ClassDefMethods","location":"api/scala/quoted/Quotes$reflectModule$ClassDefMethods.html","searchKeys":["constructor"]},{"name":"def transform(f: (K, V) => V): MapOps[K, V, CC, C]","description":"scala.collection.mutable.MapOps","location":"api/scala/collection/mutable/MapOps.html","searchKeys":["transform"]},{"name":"val self: Byte","description":"scala.runtime.RichByte","location":"api/scala/runtime/RichByte.html","searchKeys":["self"]},{"name":"def map[U](f: T => U): Try[U]","description":"scala.util.Try","location":"api/scala/util/Try.html","searchKeys":["map"]},{"name":"trait JFunction2$mcDII$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcDII$sp","location":"api/scala/runtime/java8/JFunction2$mcDII$sp.html","searchKeys":["JFunction2$mcDII$sp"]},{"name":"def modifyOrRemove[S](f: (Int, T) => Option[S]): IntMap[S]","description":"scala.collection.immutable.IntMap","location":"api/scala/collection/immutable/IntMap.html","searchKeys":["modifyOrRemove"]},{"name":"def copyOf[A](original: Array[A], newLength: Int): Array[A]","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["copyOf"]},{"name":"trait Source","description":"scala.sys.process.ProcessBuilder$$Source","location":"api/scala/sys/process/ProcessBuilder$$Source.html","searchKeys":["Source"]},{"name":"def drop(n: Int): Seq[A]","description":"scala.collection.SeqFactory$$UnapplySeqWrapper","location":"api/scala/collection/SeqFactory$$UnapplySeqWrapper.html","searchKeys":["drop"]},{"name":"def asJavaSeqKeyIntStream[V](m: Map[Integer, V]): IntStream","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaSeqKeyIntStream"]},{"name":"def genericWrapArray[T](xs: Array[T]): ArraySeq[T]","description":"scala.runtime.ScalaRunTime$","location":"api/scala/runtime/ScalaRunTime$.html","searchKeys":["genericWrapArray"]},{"name":"def _14: T14","description":"scala.Product16","location":"api/scala/Product16.html","searchKeys":["_14"]},{"name":"class Map2[K, +V](key1: K, value1: V, key2: K, value2: V) extends AbstractMap[K, V] with StrictOptimizedIterableOps[(K, V), [A] =>> Iterable[A], Map[K, V]] with Serializable","description":"scala.collection.immutable.Map$$Map2","location":"api/scala/collection/immutable/Map$$Map2.html","searchKeys":["Map2"]},{"name":"class ControlThrowable(message: String) extends Throwable","description":"scala.util.control.ControlThrowable","location":"api/scala/util/control/ControlThrowable.html","searchKeys":["ControlThrowable"]},{"name":"def +(other: Duration): Duration","description":"scala.concurrent.duration.Duration$$Infinite","location":"api/scala/concurrent/duration/Duration$$Infinite.html","searchKeys":["+"]},{"name":"def _1: T1","description":"scala.Product13","location":"api/scala/Product13.html","searchKeys":["_1"]},{"name":"def apply(v1: T1, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, v7: T7, v8: T8, v9: T9, v10: T10, v11: T11, v12: T12, v13: T13, v14: T14, v15: T15, v16: T16, v17: T17, v18: T18, v19: T19, v20: T20): R","description":"scala.Function20","location":"api/scala/Function20.html","searchKeys":["apply"]},{"name":"def get: A","description":"scala.Option","location":"api/scala/Option.html","searchKeys":["get"]},{"name":"def elementWise: ElementWiseExtractor[A, B]","description":"scala.PartialFunction","location":"api/scala/PartialFunction.html","searchKeys":["elementWise"]},{"name":"def _15: T15","description":"scala.Product19","location":"api/scala/Product19.html","searchKeys":["_15"]},{"name":"def apply(x: Byte): ByteConstant","description":"scala.quoted.Quotes$reflectModule$ByteConstantModule","location":"api/scala/quoted/Quotes$reflectModule$ByteConstantModule.html","searchKeys":["apply"]},{"name":"def allCatcher[T]: Catcher[T]","description":"scala.util.control.Exception$","location":"api/scala/util/control/Exception$.html","searchKeys":["allCatcher"]},{"name":"def urlToProcess(url: URL): URLBuilder","description":"scala.sys.process.ProcessImplicits","location":"api/scala/sys/process/ProcessImplicits.html","searchKeys":["urlToProcess"]},{"name":"trait IsIterableOnceLowPriority","description":"scala.collection.generic.IsIterableOnceLowPriority","location":"api/scala/collection/generic/IsIterableOnceLowPriority.html","searchKeys":["IsIterableOnceLowPriority"]},{"name":"val x$1: Type[T1]","description":"scala.quoted.FromExpr$$Tuple20FromExpr","location":"api/scala/quoted/FromExpr$$Tuple20FromExpr.html","searchKeys":["x$1"]},{"name":"def *(x: Byte): Int","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["*"]},{"name":"def asJavaObjDoubleConsumer: ObjDoubleConsumer[T]","description":"scala.jdk.FunctionWrappers$$RichFunction2AsObjDoubleConsumer","location":"api/scala/jdk/FunctionWrappers$$RichFunction2AsObjDoubleConsumer.html","searchKeys":["asJavaObjDoubleConsumer"]},{"name":"def asJavaParKeyStream[S <: BaseStream[, ], St <: Stepper[]](s: StreamShape[K, S, St], st: StepperShape[K, St], @implicitNotFound(\"parKeyStream can only be called on maps where `keyStepper` returns a `Stepper with EfficientSplit`\") isEfficient: CC[K, V] <:< MapOps[K, V, Map, ] { def keyStepper[S <: Stepper[]](shape: StepperShape[K, S]): S & EfficientSplit; ;  }): S","description":"scala.collection.convert.StreamExtensions$MapHasParKeyValueStream","location":"api/scala/collection/convert/StreamExtensions$MapHasParKeyValueStream.html","searchKeys":["asJavaParKeyStream"]},{"name":"class ListMap[K, V] extends AbstractMap[K, V] with MapOps[K, V, [K, V] =>> ListMap[K, V], ListMap[K, V]] with StrictOptimizedIterableOps[(K, V), [A] =>> Iterable[A], ListMap[K, V]] with StrictOptimizedMapOps[K, V, [K, V] =>> ListMap[K, V], ListMap[K, V]] with MapFactoryDefaults[K, V, [K, V] =>> ListMap[K, V], [A] =>> Iterable[A]] with DefaultSerializable","description":"scala.collection.mutable.ListMap","location":"api/scala/collection/mutable/ListMap.html","searchKeys":["ListMap"]},{"name":"def get(key: K): Option[V]","description":"scala.collection.mutable.ListMap","location":"api/scala/collection/mutable/ListMap.html","searchKeys":["get"]},{"name":"def apply(owner: Symbol, tpe: MethodType, rhsFn: (Symbol, List[Tree]) => Tree): Block","description":"scala.quoted.Quotes$reflectModule$LambdaModule","location":"api/scala/quoted/Quotes$reflectModule$LambdaModule.html","searchKeys":["apply"]},{"name":"given SourceFileMethods","description":"scala.quoted.Quotes$reflectModule$SourceFileMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["SourceFileMethods"]},{"name":"def asScala: Long => Boolean","description":"scala.jdk.FunctionWrappers$$RichLongPredicateAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichLongPredicateAsFunction1.html","searchKeys":["asScala"]},{"name":"def toArray: Array[Object]","description":"scala.runtime.TupleXXL","location":"api/scala/runtime/TupleXXL.html","searchKeys":["toArray"]},{"name":"trait JFunction2$mcVDJ$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcVDJ$sp","location":"api/scala/runtime/java8/JFunction2$mcVDJ$sp.html","searchKeys":["JFunction2$mcVDJ$sp"]},{"name":"def asJavaParStream: DoubleStream","description":"scala.collection.convert.StreamExtensions$DoubleArrayHasSeqParStream","location":"api/scala/collection/convert/StreamExtensions$DoubleArrayHasSeqParStream.html","searchKeys":["asJavaParStream"]},{"name":"def this(value: T)","description":"scala.ref.SoftReference","location":"api/scala/ref/SoftReference.html","searchKeys":["this"]},{"name":"class AbstractFunction13[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, +R] extends (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) => R","description":"scala.runtime.AbstractFunction13","location":"api/scala/runtime/AbstractFunction13.html","searchKeys":["AbstractFunction13"]},{"name":"trait AsScalaExtensions","description":"scala.collection.convert.AsScalaExtensions","location":"api/scala/collection/convert/AsScalaExtensions.html","searchKeys":["AsScalaExtensions"]},{"name":"class AsJavaToIntFunction[T](sf: T => Int) extends ToIntFunction[T]","description":"scala.jdk.FunctionWrappers$$AsJavaToIntFunction","location":"api/scala/jdk/FunctionWrappers$$AsJavaToIntFunction.html","searchKeys":["AsJavaToIntFunction"]},{"name":"object Product8","description":"scala.Product8$","location":"api/scala/Product8$.html","searchKeys":["Product8"]},{"name":"val TERMREFpkg: 64","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["TERMREFpkg"]},{"name":"type ClassDef <: Definition","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ClassDef"]},{"name":"def %(x: Char): Int","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["%"]},{"name":"def >>>(x: Long): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":[">>>"]},{"name":"val defaultValue: K => V","description":"scala.collection.mutable.Map$$WithDefault","location":"api/scala/collection/mutable/Map$$WithDefault.html","searchKeys":["defaultValue"]},{"name":"class inline extends StaticAnnotation","description":"scala.inline","location":"api/scala/inline.html","searchKeys":["inline"]},{"name":"def abstractType[T](prefix: Manifest[], name: String, upperBound: Class[], args: Manifest[]*): Manifest[T]","description":"scala.reflect.ManifestFactory$","location":"api/scala/reflect/ManifestFactory$.html","searchKeys":["abstractType"]},{"name":"def withFilter(q: Char => Boolean): WithFilter","description":"scala.collection.StringOps$$WithFilter","location":"api/scala/collection/StringOps$$WithFilter.html","searchKeys":["withFilter"]},{"name":"trait Function16[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, -T14, -T15, -T16, +R] extends AnyRef","description":"scala.Function16","location":"api/scala/Function16.html","searchKeys":["Function16"]},{"name":"def contains[B1 >: B](elem: B1): Boolean","description":"scala.util.Either","location":"api/scala/util/Either.html","searchKeys":["contains"]},{"name":"val Ordered: Ordered","description":"scala","location":"api/scala.html","searchKeys":["Ordered"]},{"name":"def length: Int","description":"scala.collection.SeqView$$Map","location":"api/scala/collection/SeqView$$Map.html","searchKeys":["length"]},{"name":"val TRUEconst: 4","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["TRUEconst"]},{"name":"val NegativeInfinity: -Infinity","description":"scala.Float$","location":"api/scala/Float$.html","searchKeys":["NegativeInfinity"]},{"name":"val x$1: Type[T1]","description":"scala.quoted.FromExpr$$Tuple11FromExpr","location":"api/scala/quoted/FromExpr$$Tuple11FromExpr.html","searchKeys":["x$1"]},{"name":"val x$29: FromExpr[T11]","description":"scala.quoted.FromExpr$$Tuple18FromExpr","location":"api/scala/quoted/FromExpr$$Tuple18FromExpr.html","searchKeys":["x$29"]},{"name":"def diff(other: Set[Int]): C","description":"scala.collection.BitSetOps","location":"api/scala/collection/BitSetOps.html","searchKeys":["diff"]},{"name":"def fromIterable(iterable: Iterable[Char]): Source","description":"scala.io.Source$","location":"api/scala/io/Source$.html","searchKeys":["fromIterable"]},{"name":"def bytesHash(data: Array[Byte]): Int","description":"scala.util.hashing.MurmurHash3$","location":"api/scala/util/hashing/MurmurHash3$.html","searchKeys":["bytesHash"]},{"name":"object DurationConverters","description":"scala.jdk.javaapi.DurationConverters$","location":"api/scala/jdk/javaapi/DurationConverters$.html","searchKeys":["DurationConverters"]},{"name":"def spliterator[B >: A]: Spliterator[]","description":"scala.collection.Stepper","location":"api/scala/collection/Stepper.html","searchKeys":["spliterator"]},{"name":"trait LinearSeq[+A] extends Seq[A] with LinearSeq[A] with LinearSeqOps[A, [A] =>> LinearSeq[A], LinearSeq[A]] with IterableFactoryDefaults[A, [A] =>> LinearSeq[A]]","description":"scala.collection.immutable.LinearSeq","location":"api/scala/collection/immutable/LinearSeq.html","searchKeys":["LinearSeq"]},{"name":"def removeLastOption(resizeInternalRepr: Boolean): Option[A]","description":"scala.collection.mutable.ArrayDeque","location":"api/scala/collection/mutable/ArrayDeque.html","searchKeys":["removeLastOption"]},{"name":"class AbstractFunction18[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, -T14, -T15, -T16, -T17, -T18, +R] extends (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) => R","description":"scala.runtime.AbstractFunction18","location":"api/scala/runtime/AbstractFunction18.html","searchKeys":["AbstractFunction18"]},{"name":"def subtractOne(x: A): Buffer[A]","description":"scala.collection.mutable.Buffer","location":"api/scala/collection/mutable/Buffer.html","searchKeys":["subtractOne"]},{"name":"def result(): To","description":"scala.collection.mutable.Builder","location":"api/scala/collection/mutable/Builder.html","searchKeys":["result"]},{"name":"val Applied: AppliedModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Applied"]},{"name":"class SizeCompareOps extends AnyVal","description":"scala.collection.IterableOps$$SizeCompareOps","location":"api/scala/collection/IterableOps$$SizeCompareOps.html","searchKeys":["SizeCompareOps"]},{"name":"type Drop[T <: Tuple, N <: Int] = N match {\n  case 0 => T\n  case S[n1] => T match {\n  case EmptyTuple => EmptyTuple\n  case x *: xs => Drop[xs, n1]\n}\n}","description":"scala.Tuple$","location":"api/scala/Tuple$.html","searchKeys":["Drop"]},{"name":"def addOne(elem: A): VectorBuilder[A]","description":"scala.collection.immutable.VectorBuilder","location":"api/scala/collection/immutable/VectorBuilder.html","searchKeys":["addOne"]},{"name":"def iterator: Iterator[A]","description":"scala.collection.View$$Elems","location":"api/scala/collection/View$$Elems.html","searchKeys":["iterator"]},{"name":"def box(x: Float): Float","description":"scala.Float$","location":"api/scala/Float$.html","searchKeys":["box"]},{"name":"def iterator: Iterator[A]","description":"scala.collection.View$$DropWhile","location":"api/scala/collection/View$$DropWhile.html","searchKeys":["iterator"]},{"name":"class Symbol extends Serializable","description":"scala.Symbol","location":"api/scala/Symbol.html","searchKeys":["Symbol"]},{"name":"def flatten[B](asIterable: A => IterableOnce[B]): CC[B]","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["flatten"]},{"name":"object Fractional","description":"scala.math.Fractional$","location":"api/scala/math/Fractional$.html","searchKeys":["Fractional"]},{"name":"given Tuple18FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18](using val x$1: Type[T1], val x$2: Type[T2], val x$3: Type[T3], val x$4: Type[T4], val x$5: Type[T5], val x$6: Type[T6], val x$7: Type[T7], val x$8: Type[T8], val x$9: Type[T9], val x$10: Type[T10], val x$11: Type[T11], val x$12: Type[T12], val x$13: Type[T13], val x$14: Type[T14], val x$15: Type[T15], val x$16: Type[T16], val x$17: Type[T17], val x$18: Type[T18], val x$19: FromExpr[T1], val x$20: FromExpr[T2], val x$21: FromExpr[T3], val x$22: FromExpr[T4], val x$23: FromExpr[T5], val x$24: FromExpr[T6], val x$25: FromExpr[T7], val x$26: FromExpr[T8], val x$27: FromExpr[T9], val x$28: FromExpr[T10], val x$29: FromExpr[T11], val x$30: FromExpr[T12], val x$31: FromExpr[T13], val x$32: FromExpr[T14], val x$33: FromExpr[T15], val x$34: FromExpr[T16], val x$35: FromExpr[T17], val x$36: FromExpr[T18]): FromExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18)]","description":"scala.quoted.FromExpr$$Tuple18FromExpr","location":"api/scala/quoted/FromExpr$.html","searchKeys":["Tuple18FromExpr"]},{"name":"given OptionToExpr[T]: ToExpr[Option[T]]","description":"scala.quoted.ToExpr$$OptionToExpr","location":"api/scala/quoted/ToExpr$.html","searchKeys":["OptionToExpr"]},{"name":"def fold[A1 >: A](z: A1)(op: (A1, A1) => A1): A1","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["fold"]},{"name":"class FromJavaDoubleConsumer(jf: DoubleConsumer) extends Double => Unit","description":"scala.jdk.FunctionWrappers$$FromJavaDoubleConsumer","location":"api/scala/jdk/FunctionWrappers$$FromJavaDoubleConsumer.html","searchKeys":["FromJavaDoubleConsumer"]},{"name":"val While: WhileModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["While"]},{"name":"def name: String","description":"scala.quoted.Quotes$reflectModule$TypeBindMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeBindMethods.html","searchKeys":["name"]},{"name":"def fromProduct(product: Product): Tuple","description":"scala.Tuple$","location":"api/scala/Tuple$.html","searchKeys":["fromProduct"]},{"name":"val x$1: Type[T1]","description":"scala.quoted.FromExpr$$Tuple6FromExpr","location":"api/scala/quoted/FromExpr$$Tuple6FromExpr.html","searchKeys":["x$1"]},{"name":"class AbstractMapView[K, +V] extends AbstractView[(K, V)] with MapView[K, V]","description":"scala.collection.AbstractMapView","location":"api/scala/collection/AbstractMapView.html","searchKeys":["AbstractMapView"]},{"name":"def apply$mcIID$sp(v1: Int, v2: Double): Int","description":"scala.runtime.java8.JFunction2$mcIID$sp","location":"api/scala/runtime/java8/JFunction2$mcIID$sp.html","searchKeys":["apply$mcIID$sp"]},{"name":"def !=(x: Double): Boolean","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["!="]},{"name":"object Seq extends Delegate[[A] =>> Seq[A]]","description":"scala.collection.immutable.Seq$","location":"api/scala/collection/immutable/Seq$.html","searchKeys":["Seq"]},{"name":"trait AndTypeModule","description":"scala.quoted.Quotes$reflectModule$AndTypeModule","location":"api/scala/quoted/Quotes$reflectModule$AndTypeModule.html","searchKeys":["AndTypeModule"]},{"name":"def scanLeft[B](z: B)(op: (B, A) => B): CC[B]","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["scanLeft"]},{"name":"val TYPEREFsymbol: 116","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["TYPEREFsymbol"]},{"name":"def elemTag: ClassTag[]","description":"scala.collection.mutable.ArraySeq$$ofShort","location":"api/scala/collection/mutable/ArraySeq$$ofShort.html","searchKeys":["elemTag"]},{"name":"trait SortedMap[K, +V] extends Map[K, V] with SortedMapOps[K, V, [K, V] =>> SortedMap[K, V], SortedMap[K, V]] with SortedMapFactoryDefaults[K, V, [K, V] =>> SortedMap[K, V], [A] =>> Iterable[A], [K, V] =>> Map[K, V]]","description":"scala.collection.SortedMap","location":"api/scala/collection/SortedMap.html","searchKeys":["SortedMap"]},{"name":"def partition[T](p: T => Boolean): (IArray[T], IArray[T])","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["partition"]},{"name":"def sortInPlace[B >: A](ord: Ordering[B]): IndexedSeqOps[A, CC, C]","description":"scala.collection.mutable.IndexedSeqOps","location":"api/scala/collection/mutable/IndexedSeqOps.html","searchKeys":["sortInPlace"]},{"name":"def arrayFactory[A](evidence$31: ClassTag[A]): Factory[A, Array[A]]","description":"scala.collection.Factory$","location":"api/scala/collection/Factory$.html","searchKeys":["arrayFactory"]},{"name":"class <:<[-From, +To] extends From => To with Serializable","description":"scala.<:<","location":"api/scala/<:<.html","searchKeys":["<:<"]},{"name":"def drain(that: DoubleAccumulator): Unit","description":"scala.jdk.DoubleAccumulator","location":"api/scala/jdk/DoubleAccumulator.html","searchKeys":["drain"]},{"name":"def asJava: IntSupplier","description":"scala.jdk.FunctionWrappers$$RichFunction0AsIntSupplier","location":"api/scala/jdk/FunctionWrappers$$RichFunction0AsIntSupplier.html","searchKeys":["asJava"]},{"name":"def newBuilder[A](evidence$2: ClassTag[A]): Builder[A, ArraySeq[A]]","description":"scala.collection.immutable.ArraySeq$","location":"api/scala/collection/immutable/ArraySeq$.html","searchKeys":["newBuilder"]},{"name":"def getOffset(clz: Class[], name: String): Long","description":"scala.runtime.LazyVals$","location":"api/scala/runtime/LazyVals$.html","searchKeys":["getOffset"]},{"name":"def hasNext: Boolean","description":"scala.collection.Iterator","location":"api/scala/collection/Iterator.html","searchKeys":["hasNext"]},{"name":"def !=(x: Short): Boolean","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["!="]},{"name":"val PositionsSection: \"Positions\"","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["PositionsSection"]},{"name":"def asJavaIntPredicate(sf: Integer => Boolean): IntPredicate","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asJavaIntPredicate"]},{"name":"def _17: T17","description":"scala.Product21","location":"api/scala/Product21.html","searchKeys":["_17"]},{"name":"def toTry: Catch[Try[T]]","description":"scala.util.control.Exception$$Catch","location":"api/scala/util/control/Exception$$Catch.html","searchKeys":["toTry"]},{"name":"def empty[K, V]: OpenHashMap[K, V]","description":"scala.collection.mutable.OpenHashMap$","location":"api/scala/collection/mutable/OpenHashMap$.html","searchKeys":["empty"]},{"name":"type StringIndexOutOfBoundsException = StringIndexOutOfBoundsException","description":"scala","location":"api/scala.html","searchKeys":["StringIndexOutOfBoundsException"]},{"name":"def enrichAsJavaLongBinaryOperator[A0, A1](sf: (A0, A1) => Long)(evA0: A0 =:= Long, evA1: A1 =:= Long): RichFunction2AsLongBinaryOperator","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsJavaLongBinaryOperator"]},{"name":"def Tuple4[T1, T2, T3, T4](eqv1: Equiv[T1], eqv2: Equiv[T2], eqv3: Equiv[T3], eqv4: Equiv[T4]): Equiv[(T1, T2, T3, T4)]","description":"scala.math.Equiv$","location":"api/scala/math/Equiv$.html","searchKeys":["Tuple4"]},{"name":"def toQueue: Queue[A]","description":"scala.collection.mutable.PriorityQueue","location":"api/scala/collection/mutable/PriorityQueue.html","searchKeys":["toQueue"]},{"name":"object Boolean extends Equiv[Boolean]","description":"scala.math.Equiv$$Boolean$","location":"api/scala/math/Equiv$$Boolean$.html","searchKeys":["Boolean"]},{"name":"def apply(x1: T): Int","description":"scala.jdk.FunctionWrappers$$FromJavaToIntFunction","location":"api/scala/jdk/FunctionWrappers$$FromJavaToIntFunction.html","searchKeys":["apply"]},{"name":"def apply(parentExp: RecursiveType => TypeRepr): RecursiveType","description":"scala.quoted.Quotes$reflectModule$RecursiveTypeModule","location":"api/scala/quoted/Quotes$reflectModule$RecursiveTypeModule.html","searchKeys":["apply"]},{"name":"def !!(log: ProcessLogger): String","description":"scala.sys.process.ProcessBuilder","location":"api/scala/sys/process/ProcessBuilder.html","searchKeys":["!!"]},{"name":"def ExtensionMethod: Flags","description":"scala.quoted.Quotes$reflectModule$FlagsModule","location":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html","searchKeys":["ExtensionMethod"]},{"name":"def length: Long","description":"scala.concurrent.duration.Duration$$Infinite","location":"api/scala/concurrent/duration/Duration$$Infinite.html","searchKeys":["length"]},{"name":"class WithFilter[K, +V, +IterableCC <: ([_$2] =>> Any), +MapCC <: ([X, Y] =>> Map[X, Y]), +CC <: ([X, Y] =>> Map[X, Y] & SortedMapOps[X, Y, CC, ])](self: SortedMapOps[K, V, CC, ] & MapOps[K, V, MapCC, ] & IterableOps[(K, V), IterableCC, ], p: (K, V) => Boolean) extends WithFilter[K, V, IterableCC, MapCC]","description":"scala.collection.SortedMapOps$$WithFilter","location":"api/scala/collection/SortedMapOps$$WithFilter.html","searchKeys":["WithFilter"]},{"name":"def copy(original: Tree)(expr: Term, selectors: List[Selector]): Import","description":"scala.quoted.Quotes$reflectModule$ImportModule","location":"api/scala/quoted/Quotes$reflectModule$ImportModule.html","searchKeys":["copy"]},{"name":"def copy(original: Tree)(ref: Term): Singleton","description":"scala.quoted.Quotes$reflectModule$SingletonModule","location":"api/scala/quoted/Quotes$reflectModule$SingletonModule.html","searchKeys":["copy"]},{"name":"def mapAsJavaMapConverter[K, V](m: Map[K, V]): AsJava[Map[K, V]]","description":"scala.collection.JavaConverters$","location":"api/scala/collection/JavaConverters$.html","searchKeys":["mapAsJavaMapConverter"]},{"name":"type Fractional[T] = Fractional[T]","description":"scala","location":"api/scala.html","searchKeys":["Fractional"]},{"name":"val longStreamUnboxer: StreamUnboxer[Long, LongStream]","description":"scala.collection.convert.StreamExtensions$$StreamUnboxer$","location":"api/scala/collection/convert/StreamExtensions$$StreamUnboxer$.html","searchKeys":["longStreamUnboxer"]},{"name":"def option2Iterable[A](xo: Option[A]): Iterable[A]","description":"scala.Option$","location":"api/scala/Option$.html","searchKeys":["option2Iterable"]},{"name":"def headOption: Option[A]","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["headOption"]},{"name":"trait SeqOps[+A, +CC <: ([_$1] =>> Any), +C] extends IterableOps[A, CC, C]","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["SeqOps"]},{"name":"def !<: Int","description":"scala.sys.process.ProcessBuilder","location":"api/scala/sys/process/ProcessBuilder.html","searchKeys":["!<"]},{"name":"type PackageClause <: Tree","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["PackageClause"]},{"name":"val DefaultInitialSize: 16","description":"scala.collection.mutable.ArrayBuffer$","location":"api/scala/collection/mutable/ArrayBuffer$.html","searchKeys":["DefaultInitialSize"]},{"name":"def done[A](result: A): TailRec[A]","description":"scala.util.control.TailCalls$","location":"api/scala/util/control/TailCalls$.html","searchKeys":["done"]},{"name":"def *(n: Int): String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["*"]},{"name":"type -[X <: Int, Y <: Int] <: Int","description":"scala.compiletime.ops.int$","location":"api/scala/compiletime/ops/int$.html","searchKeys":["-"]},{"name":"def iterator: Iterator[A1]","description":"scala.collection.View$$LeftPartitionMapped","location":"api/scala/collection/View$$LeftPartitionMapped.html","searchKeys":["iterator"]},{"name":"def apply(mc: MathContext): BigDecimal","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["apply"]},{"name":"def apply(x1: Double, x2: Double): Double","description":"scala.jdk.FunctionWrappers$$FromJavaDoubleBinaryOperator","location":"api/scala/jdk/FunctionWrappers$$FromJavaDoubleBinaryOperator.html","searchKeys":["apply"]},{"name":"def patch(from: Int, other: IterableOnce[Char], replaced: Int): String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["patch"]},{"name":"def toFloat: Float","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["toFloat"]},{"name":"def toMicros: Long","description":"scala.concurrent.duration.Duration","location":"api/scala/concurrent/duration/Duration.html","searchKeys":["toMicros"]},{"name":"def byte2double(x: Byte): Double","description":"scala.Byte$","location":"api/scala/Byte$.html","searchKeys":["byte2double"]},{"name":"type SourceFile <: AnyRef","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["SourceFile"]},{"name":"def isNaN: Boolean","description":"scala.runtime.RichDouble","location":"api/scala/runtime/RichDouble.html","searchKeys":["isNaN"]},{"name":"def tabulate[A](n1: Int, n2: Int, n3: Int, n4: Int)(f: (Int, Int, Int, Int) => A): CC[CC[CC[CC[A]]]]","description":"scala.collection.IterableFactory","location":"api/scala/collection/IterableFactory.html","searchKeys":["tabulate"]},{"name":"trait StrictOptimizedSeqOps[+A, +CC <: ([_$1] =>> Any), +C] extends SeqOps[A, CC, C] with StrictOptimizedSeqOps[A, CC, C] with StrictOptimizedIterableOps[A, CC, C]","description":"scala.collection.immutable.StrictOptimizedSeqOps","location":"api/scala/collection/immutable/StrictOptimizedSeqOps.html","searchKeys":["StrictOptimizedSeqOps"]},{"name":"def apply(fn: String => Unit): ProcessLogger","description":"scala.sys.process.ProcessLogger$","location":"api/scala/sys/process/ProcessLogger$.html","searchKeys":["apply"]},{"name":"def toFloat(x: Int): Float","description":"scala.math.Numeric$$IntIsIntegral","location":"api/scala/math/Numeric$$IntIsIntegral.html","searchKeys":["toFloat"]},{"name":"def <=(x: Char): Boolean","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["<="]},{"name":"def toByte: Byte","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["toByte"]},{"name":"type Take[T <: Tuple, N <: Int] = N match {\n  case 0 => EmptyTuple\n  case S[n1] => T match {\n  case EmptyTuple => EmptyTuple\n  case x *: xs => x *: Take[xs, n1]\n}\n}","description":"scala.Tuple$","location":"api/scala/Tuple$.html","searchKeys":["Take"]},{"name":"def apply(i: Int): T","description":"scala.Array$$UnapplySeqWrapper","location":"api/scala/Array$$UnapplySeqWrapper.html","searchKeys":["apply"]},{"name":"def !=(x: Int): Boolean","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["!="]},{"name":"val x$23: FromExpr[T8]","description":"scala.quoted.FromExpr$$Tuple15FromExpr","location":"api/scala/quoted/FromExpr$$Tuple15FromExpr.html","searchKeys":["x$23"]},{"name":"def >(x: Long): Boolean","description":"scala.Int","location":"api/scala/Int.html","searchKeys":[">"]},{"name":"def isProbablePrime(certainty: Int): Boolean","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["isProbablePrime"]},{"name":"def buffered: BufferedIterator[A]","description":"scala.collection.Iterator","location":"api/scala/collection/Iterator.html","searchKeys":["buffered"]},{"name":"def isUpper: Boolean","description":"scala.runtime.RichChar","location":"api/scala/runtime/RichChar.html","searchKeys":["isUpper"]},{"name":"def parseArgument[T](args: Array[String], n: Int)(using fs: FromString[T]): T","description":"scala.util.CommandLineParser$","location":"api/scala/util/CommandLineParser$.html","searchKeys":["parseArgument"]},{"name":"def throwError(msg: String): Nothing","description":"scala.quoted.Quotes$reflectModule$reportModule","location":"api/scala/quoted/Quotes$reflectModule$reportModule.html","searchKeys":["throwError"]},{"name":"def headOption: Option[T]","description":"scala.collection.immutable.TreeSeqMap$$Ordering","location":"api/scala/collection/immutable/TreeSeqMap$$Ordering.html","searchKeys":["headOption"]},{"name":"val PACKAGE: 128","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["PACKAGE"]},{"name":"def ^(x: Char): Int","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["^"]},{"name":"def knownSize: Int","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["knownSize"]},{"name":"type Cloneable = Cloneable","description":"scala","location":"api/scala.html","searchKeys":["Cloneable"]},{"name":"def prependToList(xs: List[A]): List[A]","description":"scala.collection.mutable.ListBuffer","location":"api/scala/collection/mutable/ListBuffer.html","searchKeys":["prependToList"]},{"name":"def |(x: Char): Int","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["|"]},{"name":"type EmptyTuple = EmptyTuple","description":"scala.Tuple$package$","location":"api/scala.html","searchKeys":["EmptyTuple"]},{"name":"def >=(x: Double): Boolean","description":"scala.Float","location":"api/scala/Float.html","searchKeys":[">="]},{"name":"def clear(): Unit","description":"scala.collection.mutable.HashSet","location":"api/scala/collection/mutable/HashSet.html","searchKeys":["clear"]},{"name":"def patchInPlace(from: Int, patch: IterableOnce[T], replaced: Int): UnrolledBuffer[T]","description":"scala.collection.mutable.UnrolledBuffer","location":"api/scala/collection/mutable/UnrolledBuffer.html","searchKeys":["patchInPlace"]},{"name":"def flush(): Unit","description":"scala.Console$","location":"api/scala/Console$.html","searchKeys":["flush"]},{"name":"def parents: List[Tree]","description":"scala.quoted.Quotes$reflectModule$ClassDefMethods","location":"api/scala/quoted/Quotes$reflectModule$ClassDefMethods.html","searchKeys":["parents"]},{"name":"def lastKey: Long","description":"scala.collection.immutable.LongMap","location":"api/scala/collection/immutable/LongMap.html","searchKeys":["lastKey"]},{"name":"def apply(x1: T, x2: U): R","description":"scala.jdk.FunctionWrappers$$FromJavaBiFunction","location":"api/scala/jdk/FunctionWrappers$$FromJavaBiFunction.html","searchKeys":["apply"]},{"name":"def !=(x: Byte): Boolean","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["!="]},{"name":"def <(x: Short): Boolean","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["<"]},{"name":"def apply(i: Int): A","description":"scala.collection.SeqView$$Reverse","location":"api/scala/collection/SeqView$$Reverse.html","searchKeys":["apply"]},{"name":"def _13: T13","description":"scala.Product13","location":"api/scala/Product13.html","searchKeys":["_13"]},{"name":"object IeeeOrdering extends IeeeOrdering","description":"scala.math.Ordering$$Float$$IeeeOrdering$","location":"api/scala/math/Ordering$$Float$$IeeeOrdering$.html","searchKeys":["IeeeOrdering"]},{"name":"def encoder: CharsetEncoder","description":"scala.io.Codec","location":"api/scala/io/Codec.html","searchKeys":["encoder"]},{"name":"def arrayClass(clazz: Class[]): Class[]","description":"scala.runtime.ScalaRunTime$","location":"api/scala/runtime/ScalaRunTime$.html","searchKeys":["arrayClass"]},{"name":"given TupleConsToExpr[H, T <: Tuple]: ToExpr[H *: T]","description":"scala.quoted.ToExpr$$TupleConsToExpr","location":"api/scala/quoted/ToExpr$.html","searchKeys":["TupleConsToExpr"]},{"name":"given Tuple21FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21](using val x$1: Type[T1], val x$2: Type[T2], val x$3: Type[T3], val x$4: Type[T4], val x$5: Type[T5], val x$6: Type[T6], val x$7: Type[T7], val x$8: Type[T8], val x$9: Type[T9], val x$10: Type[T10], val x$11: Type[T11], val x$12: Type[T12], val x$13: Type[T13], val x$14: Type[T14], val x$15: Type[T15], val x$16: Type[T16], val x$17: Type[T17], val x$18: Type[T18], val x$19: Type[T19], val x$20: Type[T20], val x$21: Type[T21], val x$22: FromExpr[T1], val x$23: FromExpr[T2], val x$24: FromExpr[T3], val x$25: FromExpr[T4], val x$26: FromExpr[T5], val x$27: FromExpr[T6], val x$28: FromExpr[T7], val x$29: FromExpr[T8], val x$30: FromExpr[T9], val x$31: FromExpr[T10], val x$32: FromExpr[T11], val x$33: FromExpr[T12], val x$34: FromExpr[T13], val x$35: FromExpr[T14], val x$36: FromExpr[T15], val x$37: FromExpr[T16], val x$38: FromExpr[T17], val x$39: FromExpr[T18], val x$40: FromExpr[T19], val x$41: FromExpr[T20], val x$42: FromExpr[T21]): FromExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21)]","description":"scala.quoted.FromExpr$$Tuple21FromExpr","location":"api/scala/quoted/FromExpr$$Tuple21FromExpr.html","searchKeys":["Tuple21FromExpr"]},{"name":"def update(key: K, value: V): Unit","description":"scala.collection.mutable.MapOps","location":"api/scala/collection/mutable/MapOps.html","searchKeys":["update"]},{"name":"def pattern: Tree","description":"scala.quoted.Quotes$reflectModule$CaseDefMethods","location":"api/scala/quoted/Quotes$reflectModule$CaseDefMethods.html","searchKeys":["pattern"]},{"name":"def initialized: Boolean","description":"scala.runtime.LazyRef","location":"api/scala/runtime/LazyRef.html","searchKeys":["initialized"]},{"name":"def enrichAsScalaFromToIntBiFunction[T, U](jf: ToIntBiFunction[T, U]): RichToIntBiFunctionAsFunction2[T, U]","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsScalaFromToIntBiFunction"]},{"name":"def iterator: Iterator[T]","description":"scala.collection.mutable.UnrolledBuffer","location":"api/scala/collection/mutable/UnrolledBuffer.html","searchKeys":["iterator"]},{"name":"def thistpe: TypeRepr","description":"scala.quoted.Quotes$reflectModule$SuperTypeMethods","location":"api/scala/quoted/Quotes$reflectModule$SuperTypeMethods.html","searchKeys":["thistpe"]},{"name":"def quot(x: T, y: T): T","description":"scala.math.Integral","location":"api/scala/math/Integral.html","searchKeys":["quot"]},{"name":"def force: Stream[A]","description":"scala.collection.immutable.Stream","location":"api/scala/collection/immutable/Stream.html","searchKeys":["force"]},{"name":"class RichDoubleConsumerAsFunction1(underlying: DoubleConsumer) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichDoubleConsumerAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichDoubleConsumerAsFunction1.html","searchKeys":["RichDoubleConsumerAsFunction1"]},{"name":"val MODULE_SUFFIX_STRING: \"$\"","description":"scala.reflect.NameTransformer$","location":"api/scala/reflect/NameTransformer$.html","searchKeys":["MODULE_SUFFIX_STRING"]},{"name":"val x$8: Type[T8]","description":"scala.quoted.FromExpr$$Tuple18FromExpr","location":"api/scala/quoted/FromExpr$$Tuple18FromExpr.html","searchKeys":["x$8"]},{"name":"def unapply(x: TypeBoundsTree): (TypeTree, TypeTree)","description":"scala.quoted.Quotes$reflectModule$TypeBoundsTreeModule","location":"api/scala/quoted/Quotes$reflectModule$TypeBoundsTreeModule.html","searchKeys":["unapply"]},{"name":"def evidenceIterableFactory[A](evidence$23: Ev[A]): Factory[A, CC[A]]","description":"scala.collection.EvidenceIterableFactory","location":"api/scala/collection/EvidenceIterableFactory.html","searchKeys":["evidenceIterableFactory"]},{"name":"class AsJavaLongPredicate(sf: Long => Boolean) extends LongPredicate","description":"scala.jdk.FunctionWrappers$$AsJavaLongPredicate","location":"api/scala/jdk/FunctionWrappers$$AsJavaLongPredicate.html","searchKeys":["AsJavaLongPredicate"]},{"name":"trait View[+A] extends Iterable[A] with IterableOps[A, [A] =>> View[A], View[A]] with IterableFactoryDefaults[A, [A] =>> View[A]] with Serializable","description":"scala.collection.View","location":"api/scala/collection/View.html","searchKeys":["View"]},{"name":"object Product10","description":"scala.Product10$","location":"api/scala/Product10$.html","searchKeys":["Product10"]},{"name":"def updated[V1 >: V](key: K, value: V1): HashMap[K, V1]","description":"scala.collection.immutable.HashMap","location":"api/scala/collection/immutable/HashMap.html","searchKeys":["updated"]},{"name":"def set asScala[A](s: Set[A]): Set[A]","description":"scala.collection.convert.ToScalaImplicits","location":"api/scala/collection/convert/ToScalaImplicits.html","searchKeys":["set asScala"]},{"name":"val x$18: FromExpr[T6]","description":"scala.quoted.FromExpr$$Tuple12FromExpr","location":"api/scala/quoted/FromExpr$$Tuple12FromExpr.html","searchKeys":["x$18"]},{"name":"def noAccumulatorFactoryInfo[A, C]: AccumulatorFactoryInfo[A, C]","description":"scala.collection.convert.StreamExtensions$$LowPriorityAccumulatorFactoryInfo","location":"api/scala/collection/convert/StreamExtensions$$LowPriorityAccumulatorFactoryInfo.html","searchKeys":["noAccumulatorFactoryInfo"]},{"name":"trait DefDefModule","description":"scala.quoted.Quotes$reflectModule$DefDefModule","location":"api/scala/quoted/Quotes$reflectModule$DefDefModule.html","searchKeys":["DefDefModule"]},{"name":"def fromBitMask(elems: Array[Long]): BitSet","description":"scala.collection.immutable.BitSet$","location":"api/scala/collection/immutable/BitSet$.html","searchKeys":["fromBitMask"]},{"name":"def >>(x: Int): Int","description":"scala.Short","location":"api/scala/Short.html","searchKeys":[">>"]},{"name":"class AsJavaLongFunction[R](sf: Long => R) extends LongFunction[R]","description":"scala.jdk.FunctionWrappers$$AsJavaLongFunction","location":"api/scala/jdk/FunctionWrappers$$AsJavaLongFunction.html","searchKeys":["AsJavaLongFunction"]},{"name":"val x$29: FromExpr[T9]","description":"scala.quoted.FromExpr$$Tuple20FromExpr","location":"api/scala/quoted/FromExpr$$Tuple20FromExpr.html","searchKeys":["x$29"]},{"name":"def unapply(constant: ClassOfConstant): Option[TypeRepr]","description":"scala.quoted.Quotes$reflectModule$ClassOfConstantModule","location":"api/scala/quoted/Quotes$reflectModule$ClassOfConstantModule.html","searchKeys":["unapply"]},{"name":"def universal[T]: Equiv[T]","description":"scala.math.Equiv$","location":"api/scala/math/Equiv$.html","searchKeys":["universal"]},{"name":"def asJava: Function[T, R]","description":"scala.jdk.FunctionWrappers$$RichFunction1AsFunction","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsFunction.html","searchKeys":["asJava"]},{"name":"val WHILE: 145","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["WHILE"]},{"name":"val Block: BlockModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Block"]},{"name":"def >>(x: Long): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":[">>"]},{"name":"def flatMap(f: Double => IterableOnce[Double]): DoubleAccumulator","description":"scala.jdk.DoubleAccumulator","location":"api/scala/jdk/DoubleAccumulator.html","searchKeys":["flatMap"]},{"name":"given Tuple9FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9](using val x$1: Type[T1], val x$2: Type[T2], val x$3: Type[T3], val x$4: Type[T4], val x$5: Type[T5], val x$6: Type[T6], val x$7: Type[T7], val x$8: Type[T8], val x$9: Type[T9], val x$10: FromExpr[T1], val x$11: FromExpr[T2], val x$12: FromExpr[T3], val x$13: FromExpr[T4], val x$14: FromExpr[T5], val x$15: FromExpr[T6], val x$16: FromExpr[T7], val x$17: FromExpr[T8], val x$18: FromExpr[T9]): FromExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9)]","description":"scala.quoted.FromExpr$$Tuple9FromExpr","location":"api/scala/quoted/FromExpr$$Tuple9FromExpr.html","searchKeys":["Tuple9FromExpr"]},{"name":"def reverse: Array[A]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["reverse"]},{"name":"def >=(x: Char): Boolean","description":"scala.Short","location":"api/scala/Short.html","searchKeys":[">="]},{"name":"def fromBitMaskNoCopy(elems: Array[Long]): BitSet","description":"scala.collection.mutable.BitSet$","location":"api/scala/collection/mutable/BitSet$.html","searchKeys":["fromBitMaskNoCopy"]},{"name":"def map[B](f: A => B): CC[B]","description":"scala.collection.IterableOps$$WithFilter","location":"api/scala/collection/IterableOps$$WithFilter.html","searchKeys":["map"]},{"name":"object Mirror","description":"scala.deriving.Mirror$","location":"api/scala/deriving/Mirror$.html","searchKeys":["Mirror"]},{"name":"val hashCode: Int","description":"scala.collection.immutable.NumericRange","location":"api/scala/collection/immutable/NumericRange.html","searchKeys":["hashCode"]},{"name":"def foreachValue[U](f: T => U): Unit","description":"scala.collection.immutable.LongMap","location":"api/scala/collection/immutable/LongMap.html","searchKeys":["foreachValue"]},{"name":"def partition(p: A => Boolean): (Iterator[A], Iterator[A])","description":"scala.collection.Iterator","location":"api/scala/collection/Iterator.html","searchKeys":["partition"]},{"name":"def subsetOf(that: Set[A]): Boolean","description":"scala.collection.SetOps","location":"api/scala/collection/SetOps.html","searchKeys":["subsetOf"]},{"name":"def asJavaSeqStream[A](cc: IterableOnce[A]): Stream[A]","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaSeqStream"]},{"name":"def addBinding(key: K, value: V): MultiMap[K, V]","description":"scala.collection.mutable.MultiMap","location":"api/scala/collection/mutable/MultiMap.html","searchKeys":["addBinding"]},{"name":"val x$3: Type[T3]","description":"scala.quoted.FromExpr$$Tuple3FromExpr","location":"api/scala/quoted/FromExpr$$Tuple3FromExpr.html","searchKeys":["x$3"]},{"name":"def >(x: Long): Boolean","description":"scala.Float","location":"api/scala/Float.html","searchKeys":[">"]},{"name":"def enrichAsScalaFromUnaryOperator[T](jf: UnaryOperator[T]): RichUnaryOperatorAsFunction1[T]","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsScalaFromUnaryOperator"]},{"name":"def toDeferrer[A](l: => Stream[A]): Deferrer[A]","description":"scala.collection.immutable.Stream$","location":"api/scala/collection/immutable/Stream$.html","searchKeys":["toDeferrer"]},{"name":"type ClassManifest[T] = ClassTag[T]","description":"scala.reflect","location":"api/scala/reflect.html","searchKeys":["ClassManifest"]},{"name":"class field extends StaticAnnotation","description":"scala.annotation.meta.field","location":"api/scala/annotation/meta/field.html","searchKeys":["field"]},{"name":"trait AnnotatedModule","description":"scala.quoted.Quotes$reflectModule$AnnotatedModule","location":"api/scala/quoted/Quotes$reflectModule$AnnotatedModule.html","searchKeys":["AnnotatedModule"]},{"name":"def +(x: Char): Int","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["+"]},{"name":"def zip[A1 >: A, B](that: Option[B]): Option[(A1, B)]","description":"scala.Option","location":"api/scala/Option.html","searchKeys":["zip"]},{"name":"trait SummonFromModule","description":"scala.quoted.Quotes$reflectModule$SummonFromModule","location":"api/scala/quoted/Quotes$reflectModule$SummonFromModule.html","searchKeys":["SummonFromModule"]},{"name":"val x$4: Type[T4]","description":"scala.quoted.FromExpr$$Tuple14FromExpr","location":"api/scala/quoted/FromExpr$$Tuple14FromExpr.html","searchKeys":["x$4"]},{"name":"def head: T","description":"scala.collection.immutable.TreeSeqMap$$Ordering","location":"api/scala/collection/immutable/TreeSeqMap$$Ordering.html","searchKeys":["head"]},{"name":"def times(x: BigInt, y: BigInt): BigInt","description":"scala.math.Numeric$$BigIntIsIntegral","location":"api/scala/math/Numeric$$BigIntIsIntegral.html","searchKeys":["times"]},{"name":"val x$15: Type[T15]","description":"scala.quoted.FromExpr$$Tuple18FromExpr","location":"api/scala/quoted/FromExpr$$Tuple18FromExpr.html","searchKeys":["x$15"]},{"name":"val Manifest: Manifest","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["Manifest"]},{"name":"def toJavaOptionalInt(o: Option[Integer]): OptionalInt","description":"scala.jdk.javaapi.OptionConverters$","location":"api/scala/jdk/javaapi/OptionConverters$.html","searchKeys":["toJavaOptionalInt"]},{"name":"Implicit Conversions","description":"","location":"docs/reference/changed-features/implicit-conversions.html","searchKeys":["Implicit Conversions"]},{"name":"def #<<(p: ProcessBuilder): ProcessBuilder","description":"scala.sys.process.ProcessBuilder$$FileBuilder","location":"api/scala/sys/process/ProcessBuilder$$FileBuilder.html","searchKeys":["#<<"]},{"name":"def apply(i: Int): A","description":"scala.collection.SeqView$$Sorted","location":"api/scala/collection/SeqView$$Sorted.html","searchKeys":["apply"]},{"name":"object postfixOps extends postfixOps","description":"scala.languageFeature$$postfixOps$","location":"api/scala/languageFeature$$postfixOps$.html","searchKeys":["postfixOps"]},{"name":"val x$36: FromExpr[T14]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["x$36"]},{"name":"def apply$mcV$sp(): Unit","description":"scala.runtime.java8.JFunction0$mcV$sp","location":"api/scala/runtime/java8/JFunction0$mcV$sp.html","searchKeys":["apply$mcV$sp"]},{"name":"def -(x: Short): Int","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["-"]},{"name":"def >>>(x: Int): Int","description":"scala.Short","location":"api/scala/Short.html","searchKeys":[">>>"]},{"name":"given MatchTypeTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["MatchTypeTypeTest"]},{"name":"def filterNot(pred: Char => Boolean): String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["filterNot"]},{"name":"def apply(x1: T): Unit","description":"scala.jdk.FunctionWrappers$$FromJavaConsumer","location":"api/scala/jdk/FunctionWrappers$$FromJavaConsumer.html","searchKeys":["apply"]},{"name":"def unsorted: Set[A]","description":"scala.collection.immutable.SortedSetOps","location":"api/scala/collection/immutable/SortedSetOps.html","searchKeys":["unsorted"]},{"name":"def <=(x: Double): Boolean","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["<="]},{"name":"def apply(x: None)(using Quotes): Expr[None]","description":"scala.quoted.ToExpr$$NoneToExpr$","location":"api/scala/quoted/ToExpr$$NoneToExpr$.html","searchKeys":["apply"]},{"name":"def countLong(p: Int => Boolean): Long","description":"scala.jdk.IntAccumulator","location":"api/scala/jdk/IntAccumulator.html","searchKeys":["countLong"]},{"name":"def asJavaSeqValueStream[S <: BaseStream[, ], St <: Stepper[]](s: StreamShape[V, S, St], st: StepperShape[V, St]): S","description":"scala.collection.convert.StreamExtensions$MapHasSeqKeyValueStream","location":"api/scala/collection/convert/StreamExtensions$MapHasSeqKeyValueStream.html","searchKeys":["asJavaSeqValueStream"]},{"name":"val dynamics: dynamics","description":"scala.language$","location":"api/scala/language$.html","searchKeys":["dynamics"]},{"name":"object DoubleIsFractional extends DoubleIsFractional with IeeeOrdering","description":"scala.math.Numeric$$DoubleIsFractional$","location":"api/scala/math/Numeric$$DoubleIsFractional$.html","searchKeys":["DoubleIsFractional"]},{"name":"def %(x: Int): Int","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["%"]},{"name":"val GenSet: Set","description":"scala.collection","location":"api/scala/collection.html","searchKeys":["GenSet"]},{"name":"def intersectionType[T](parents: Manifest[]*): Manifest[T]","description":"scala.reflect.ManifestFactory$","location":"api/scala/reflect/ManifestFactory$.html","searchKeys":["intersectionType"]},{"name":"def empty[A, B]: PartialFunction[A, B]","description":"scala.PartialFunction$","location":"api/scala/PartialFunction$.html","searchKeys":["empty"]},{"name":"def emptyShortIArray: IArray[Short]","description":"scala.IArray$package$$IArray$","location":"api/scala/IArray$package$$IArray$.html","searchKeys":["emptyShortIArray"]},{"name":"def plus(x: Long, y: Long): Long","description":"scala.math.Numeric$$LongIsIntegral","location":"api/scala/math/Numeric$$LongIsIntegral.html","searchKeys":["plus"]},{"name":"def apply(ct: ClassTag[T])(using Quotes): Expr[ClassTag[T]]","description":"scala.quoted.ToExpr$$ClassTagToExpr","location":"api/scala/quoted/ToExpr$$ClassTagToExpr.html","searchKeys":["apply"]},{"name":"class FromJavaBiFunction[T, U, R](jf: BiFunction[T, U, R]) extends (T, U) => R","description":"scala.jdk.FunctionWrappers$$FromJavaBiFunction","location":"api/scala/jdk/FunctionWrappers$$FromJavaBiFunction.html","searchKeys":["FromJavaBiFunction"]},{"name":"val processOutput: InputStream => Unit","description":"scala.sys.process.ProcessIO","location":"api/scala/sys/process/ProcessIO.html","searchKeys":["processOutput"]},{"name":"def keysIteratorFrom(start: K): Iterator[K]","description":"scala.collection.SortedMapOps","location":"api/scala/collection/SortedMapOps.html","searchKeys":["keysIteratorFrom"]},{"name":"def cond[T](x: T)(pf: PartialFunction[T, Boolean]): Boolean","description":"scala.PartialFunction$","location":"api/scala/PartialFunction$.html","searchKeys":["cond"]},{"name":"def before: CharSequence","description":"scala.util.matching.Regex$$MatchData","location":"api/scala/util/matching/Regex$$MatchData.html","searchKeys":["before"]},{"name":"def asJavaCollectionConverter[A](i: Iterable[A]): AsJavaCollection[A]","description":"scala.collection.JavaConverters$","location":"api/scala/collection/JavaConverters$.html","searchKeys":["asJavaCollectionConverter"]},{"name":"def foreach[U](f: A => U): Unit","description":"scala.Option$WithFilter","location":"api/scala/Option$WithFilter.html","searchKeys":["foreach"]},{"name":"trait StrictOptimizedLinearSeqOps[+A, +CC <: ([X] =>> LinearSeq[X]), +C <: LinearSeq[A] & StrictOptimizedLinearSeqOps[A, CC, C]] extends LinearSeqOps[A, CC, C] with StrictOptimizedSeqOps[A, CC, C]","description":"scala.collection.StrictOptimizedLinearSeqOps","location":"api/scala/collection/StrictOptimizedLinearSeqOps.html","searchKeys":["StrictOptimizedLinearSeqOps"]},{"name":"def asJava: LongConsumer","description":"scala.jdk.FunctionWrappers$$RichFunction1AsLongConsumer","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsLongConsumer.html","searchKeys":["asJava"]},{"name":"def before(i: Int): CharSequence","description":"scala.util.matching.Regex$$MatchData","location":"api/scala/util/matching/Regex$$MatchData.html","searchKeys":["before"]},{"name":"class ListMap[K, +V] extends AbstractMap[K, V] with SeqMap[K, V] with StrictOptimizedMapOps[K, V, [K, V] =>> ListMap[K, V], ListMap[K, V]] with MapFactoryDefaults[K, V, [K, V] =>> ListMap[K, V], [A] =>> Iterable[A]] with DefaultSerializable","description":"scala.collection.immutable.ListMap","location":"api/scala/collection/immutable/ListMap.html","searchKeys":["ListMap"]},{"name":"def toShort: Short","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["toShort"]},{"name":"def unsorted: Set[A]","description":"scala.collection.mutable.SortedSetOps","location":"api/scala/collection/mutable/SortedSetOps.html","searchKeys":["unsorted"]},{"name":"def isNewline(ch: Char): Boolean","description":"scala.io.Source$LineIterator","location":"api/scala/io/Source$LineIterator.html","searchKeys":["isNewline"]},{"name":"def #|(other: ProcessBuilder): ProcessBuilder","description":"scala.sys.process.ProcessBuilder","location":"api/scala/sys/process/ProcessBuilder.html","searchKeys":["#|"]},{"name":"type LinearSeq[X] = Seq[X] & LinearSeq[X]","description":"scala.collection.mutable","location":"api/scala/collection/mutable.html","searchKeys":["LinearSeq"]},{"name":"class TakeWhile[A](underlying: SomeIterableOps[A], p: A => Boolean) extends AbstractView[A]","description":"scala.collection.View$$TakeWhile","location":"api/scala/collection/View$$TakeWhile.html","searchKeys":["TakeWhile"]},{"name":"given Tuple4ToExpr[T1, T2, T3, T4]: ToExpr[(T1, T2, T3, T4)]","description":"scala.quoted.ToExpr$$Tuple4ToExpr","location":"api/scala/quoted/ToExpr$.html","searchKeys":["Tuple4ToExpr"]},{"name":"def abstractType[T](prefix: Manifest[], name: String, upperBound: Class[], args: Manifest[]*): Manifest[T]","description":"scala.reflect.Manifest$","location":"api/scala/reflect/Manifest$.html","searchKeys":["abstractType"]},{"name":"def lastIndexWhere(p: A => Boolean, end: Int): Int","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["lastIndexWhere"]},{"name":"def negate(x: BigDecimal): BigDecimal","description":"scala.math.Numeric$$BigDecimalIsConflicted","location":"api/scala/math/Numeric$$BigDecimalIsConflicted.html","searchKeys":["negate"]},{"name":"def zippedIterable3ToIterable[El1, El2, El3](zz: ZippedIterable3[El1, El2, El3]): Iterable[(El1, El2, El3)]","description":"scala.runtime.ZippedIterable3$","location":"api/scala/runtime/ZippedIterable3$.html","searchKeys":["zippedIterable3ToIterable"]},{"name":"val x$11: Type[T11]","description":"scala.quoted.FromExpr$$Tuple17FromExpr","location":"api/scala/quoted/FromExpr$$Tuple17FromExpr.html","searchKeys":["x$11"]},{"name":"trait ShortOrdering extends Ordering[Short]","description":"scala.math.Ordering$$ShortOrdering","location":"api/scala/math/Ordering$$ShortOrdering.html","searchKeys":["ShortOrdering"]},{"name":"class ofUnit(val unsafeArray: Array[Unit]) extends ArraySeq[Unit]","description":"scala.collection.immutable.ArraySeq$$ofUnit","location":"api/scala/collection/immutable/ArraySeq$$ofUnit.html","searchKeys":["ofUnit"]},{"name":"object Short extends AnyValCompanion","description":"scala.Short$","location":"api/scala/Short$.html","searchKeys":["Short"]},{"name":"def printf(text: String, args: Any*): Unit","description":"scala.Console$","location":"api/scala/Console$.html","searchKeys":["printf"]},{"name":"object SeqMap extends MapFactory[[K, V] =>> SeqMap[K, V]]","description":"scala.collection.immutable.SeqMap$","location":"api/scala/collection/immutable/SeqMap$.html","searchKeys":["SeqMap"]},{"name":"def asScalaFromObjLongConsumer[T](jf: ObjLongConsumer[T]): (T, Long) => BoxedUnit","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asScalaFromObjLongConsumer"]},{"name":"def binary(d: Double): BigDecimal","description":"scala.math.BigDecimal$","location":"api/scala/math/BigDecimal$.html","searchKeys":["binary"]},{"name":"type Function[-A, +B] = A => B","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["Function"]},{"name":"def enrichAsJavaIntToLongFunction[A0](sf: A0 => Long)(evA0: A0 =:= Int): RichFunction1AsIntToLongFunction","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsJavaIntToLongFunction"]},{"name":"def &(x: Short): Int","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["&"]},{"name":"def ^=(other: BitSet): BitSet","description":"scala.collection.mutable.BitSet","location":"api/scala/collection/mutable/BitSet.html","searchKeys":["^="]},{"name":"def transformValues(f: V => V): AnyRefMap[K, V]","description":"scala.collection.mutable.AnyRefMap","location":"api/scala/collection/mutable/AnyRefMap.html","searchKeys":["transformValues"]},{"name":"class LazyChar extends Serializable","description":"scala.runtime.LazyChar","location":"api/scala/runtime/LazyChar.html","searchKeys":["LazyChar"]},{"name":"def %(x: Double): Double","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["%"]},{"name":"class AbstractSeq[A] extends AbstractSeq[A] with Seq[A]","description":"scala.collection.mutable.AbstractSeq","location":"api/scala/collection/mutable/AbstractSeq.html","searchKeys":["AbstractSeq"]},{"name":"def derivesFrom(cls: Symbol): Boolean","description":"scala.quoted.Quotes$reflectModule$TypeReprMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html","searchKeys":["derivesFrom"]},{"name":"def newBuilder[A]: Builder[A, Queue[A]]","description":"scala.collection.mutable.Queue$","location":"api/scala/collection/mutable/Queue$.html","searchKeys":["newBuilder"]},{"name":"def intersect[B >: A](that: Seq[B]): C","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["intersect"]},{"name":"object NoPositioner extends Positioner","description":"scala.io.Source$NoPositioner$","location":"api/scala/io/Source$NoPositioner$.html","searchKeys":["NoPositioner"]},{"name":"def apply(patterns: List[Tree]): Alternatives","description":"scala.quoted.Quotes$reflectModule$AlternativesModule","location":"api/scala/quoted/Quotes$reflectModule$AlternativesModule.html","searchKeys":["apply"]},{"name":"def _7: T7","description":"scala.Product7","location":"api/scala/Product7.html","searchKeys":["_7"]},{"name":"val SELECTouter: 148","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["SELECTouter"]},{"name":"def tabulate[A](n1: Int, n2: Int)(f: (Int, Int) => A): CC[CC[A]]","description":"scala.collection.IterableFactory","location":"api/scala/collection/IterableFactory.html","searchKeys":["tabulate"]},{"name":"def _8: T8","description":"scala.Product13","location":"api/scala/Product13.html","searchKeys":["_8"]},{"name":"class LazyZip2[+El1, +El2, C1]","description":"scala.collection.LazyZip2","location":"api/scala/collection/LazyZip2.html","searchKeys":["LazyZip2"]},{"name":"def show(using Printer[Constant]): String","description":"scala.quoted.Quotes$reflectModule$ConstantMethods","location":"api/scala/quoted/Quotes$reflectModule$ConstantMethods.html","searchKeys":["show"]},{"name":"def mutableSeq AsJavaList[A](seq: Seq[A]): List[A]","description":"scala.collection.convert.ToJavaImplicits","location":"api/scala/collection/convert/ToJavaImplicits.html","searchKeys":["mutableSeq AsJavaList"]},{"name":"def isInstanceOfEmptyTuple(x: Any): Boolean","description":"scala.runtime.Tuples$","location":"api/scala/runtime/Tuples$.html","searchKeys":["isInstanceOfEmptyTuple"]},{"name":"def names: Iterator[String]","description":"scala.sys.SystemProperties","location":"api/scala/sys/SystemProperties.html","searchKeys":["names"]},{"name":"def tail: Ordering[T]","description":"scala.collection.immutable.TreeSeqMap$$Ordering","location":"api/scala/collection/immutable/TreeSeqMap$$Ordering.html","searchKeys":["tail"]},{"name":"def result(): Array[Short]","description":"scala.collection.mutable.ArrayBuilder$$ofShort","location":"api/scala/collection/mutable/ArrayBuilder$$ofShort.html","searchKeys":["result"]},{"name":"def subtractOne(elem: A): Shrinkable[A]","description":"scala.collection.mutable.Shrinkable","location":"api/scala/collection/mutable/Shrinkable.html","searchKeys":["subtractOne"]},{"name":"def name: String","description":"scala.quoted.Quotes$reflectModule$DefinitionMethods","location":"api/scala/quoted/Quotes$reflectModule$DefinitionMethods.html","searchKeys":["name"]},{"name":"def *(d: Duration): Duration","description":"scala.concurrent.duration.package$$LongMult","location":"api/scala/concurrent/duration/package$$LongMult.html","searchKeys":["*"]},{"name":"def fold[A1 >: A](z: A1)(op: (A1, A1) => A1): A1","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["fold"]},{"name":"def asScalaFromPredicate[T](jf: Predicate[T]): T => Boolean","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asScalaFromPredicate"]},{"name":"def ^(x: Boolean): Boolean","description":"scala.Boolean","location":"api/scala/Boolean.html","searchKeys":["^"]},{"name":"def asScala: Iterable[A]","description":"scala.collection.convert.AsScalaExtensions$CollectionHasAsScala","location":"api/scala/collection/convert/AsScalaExtensions$CollectionHasAsScala.html","searchKeys":["asScala"]},{"name":"def min(that: T): T","description":"scala.runtime.ScalaNumberProxy","location":"api/scala/runtime/ScalaNumberProxy.html","searchKeys":["min"]},{"name":"def andThen[C](r: To =:= C): From =:= C","description":"scala.=:=","location":"api/scala/=:=.html","searchKeys":["andThen"]},{"name":"class TreeMap[K, V] extends AbstractMap[K, V] with SortedMap[K, V] with SortedMapOps[K, V, [K, V] =>> TreeMap[K, V], TreeMap[K, V]] with StrictOptimizedIterableOps[(K, V), [A] =>> Iterable[A], TreeMap[K, V]] with StrictOptimizedMapOps[K, V, [K, V] =>> Map[K, V], TreeMap[K, V]] with StrictOptimizedSortedMapOps[K, V, [K, V] =>> TreeMap[K, V], TreeMap[K, V]] with SortedMapFactoryDefaults[K, V, [K, V] =>> TreeMap[K, V], [A] =>> Iterable[A], [K, V] =>> Map[K, V]] with DefaultSerializable","description":"scala.collection.mutable.TreeMap","location":"api/scala/collection/mutable/TreeMap.html","searchKeys":["TreeMap"]},{"name":"def getOrElse[U >: T](default: => U): U","description":"scala.util.Try","location":"api/scala/util/Try.html","searchKeys":["getOrElse"]},{"name":"given Tuple15FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15](using val x$1: Type[T1], val x$2: Type[T2], val x$3: Type[T3], val x$4: Type[T4], val x$5: Type[T5], val x$6: Type[T6], val x$7: Type[T7], val x$8: Type[T8], val x$9: Type[T9], val x$10: Type[T10], val x$11: Type[T11], val x$12: Type[T12], val x$13: Type[T13], val x$14: Type[T14], val x$15: Type[T15], val x$16: FromExpr[T1], val x$17: FromExpr[T2], val x$18: FromExpr[T3], val x$19: FromExpr[T4], val x$20: FromExpr[T5], val x$21: FromExpr[T6], val x$22: FromExpr[T7], val x$23: FromExpr[T8], val x$24: FromExpr[T9], val x$25: FromExpr[T10], val x$26: FromExpr[T11], val x$27: FromExpr[T12], val x$28: FromExpr[T13], val x$29: FromExpr[T14], val x$30: FromExpr[T15]): FromExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)]","description":"scala.quoted.FromExpr$$Tuple15FromExpr","location":"api/scala/quoted/FromExpr$$Tuple15FromExpr.html","searchKeys":["Tuple15FromExpr"]},{"name":"def >(x: Float): Boolean","description":"scala.Float","location":"api/scala/Float.html","searchKeys":[">"]},{"name":"def andThen[C](r: To <:< C): From <:< C","description":"scala.<:<","location":"api/scala/<:<.html","searchKeys":["andThen"]},{"name":"class IterableHasSeqStream[A](cc: IterableOnce[A])","description":"scala.collection.convert.StreamExtensions$IterableHasSeqStream","location":"api/scala/collection/convert/StreamExtensions$IterableHasSeqStream.html","searchKeys":["IterableHasSeqStream"]},{"name":"object EvidenceIterableFactory","description":"scala.collection.EvidenceIterableFactory$","location":"api/scala/collection/EvidenceIterableFactory$.html","searchKeys":["EvidenceIterableFactory"]},{"name":"def *(x: Long): Long","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["*"]},{"name":"object LazyList extends SeqFactory[[A] =>> LazyList[A]]","description":"scala.collection.immutable.LazyList$","location":"api/scala/collection/immutable/LazyList$.html","searchKeys":["LazyList"]},{"name":"def length: Int","description":"scala.collection.IndexedSeqView$$Slice","location":"api/scala/collection/IndexedSeqView$$Slice.html","searchKeys":["length"]},{"name":"def _6: T6","description":"scala.Product6","location":"api/scala/Product6.html","searchKeys":["_6"]},{"name":"def <=(x: Byte): Boolean","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["<="]},{"name":"def SeqCharSequence(sequenceOfChars: IndexedSeq[Char]): SeqCharSequence","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["SeqCharSequence"]},{"name":"val x$6: Type[T6]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["x$6"]},{"name":"val x$16: FromExpr[T5]","description":"scala.quoted.FromExpr$$Tuple11FromExpr","location":"api/scala/quoted/FromExpr$$Tuple11FromExpr.html","searchKeys":["x$16"]},{"name":"def ofDim[T](n1: Int, n2: Int, n3: Int, n4: Int)(evidence$9: ClassTag[T]): Array[Array[Array[Array[T]]]]","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["ofDim"]},{"name":"def charset2codec(c: Charset): Codec","description":"scala.io.Codec$","location":"api/scala/io/Codec$.html","searchKeys":["charset2codec"]},{"name":"val Ident: IdentModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Ident"]},{"name":"val x$7: Type[T7]","description":"scala.quoted.FromExpr$$Tuple7FromExpr","location":"api/scala/quoted/FromExpr$$Tuple7FromExpr.html","searchKeys":["x$7"]},{"name":"def unapply[T1, T2, T3, T4, T5, T6](x: Product6[T1, T2, T3, T4, T5, T6]): Option[Product6[T1, T2, T3, T4, T5, T6]]","description":"scala.Product6$","location":"api/scala/Product6$.html","searchKeys":["unapply"]},{"name":"def dequeueWhile(f: A => Boolean): Seq[A]","description":"scala.collection.mutable.Queue","location":"api/scala/collection/mutable/Queue.html","searchKeys":["dequeueWhile"]},{"name":"def asJavaSeqValueDoubleStream[K](m: Map[K, Double]): DoubleStream","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaSeqValueDoubleStream"]},{"name":"def enqueueAll[B >: A](iter: Iterable[B]): Queue[B]","description":"scala.collection.immutable.Queue","location":"api/scala/collection/immutable/Queue.html","searchKeys":["enqueueAll"]},{"name":"object ValueOrdering extends Ordering[Value]","description":"scala.Enumeration$ValueOrdering$","location":"api/scala/Enumeration$ValueOrdering$.html","searchKeys":["ValueOrdering"]},{"name":"type NullConstant <: Constant","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["NullConstant"]},{"name":"def copy(original: Tree)(cond: Term, body: Term): While","description":"scala.quoted.Quotes$reflectModule$WhileModule","location":"api/scala/quoted/Quotes$reflectModule$WhileModule.html","searchKeys":["copy"]},{"name":"def apply$mcFDJ$sp(v1: Double, v2: Long): Float","description":"scala.runtime.java8.JFunction2$mcFDJ$sp","location":"api/scala/runtime/java8/JFunction2$mcFDJ$sp.html","searchKeys":["apply$mcFDJ$sp"]},{"name":"def fromDigits(digits: String, radix: Int): T","description":"scala.util.FromDigits$$WithRadix","location":"api/scala/util/FromDigits$$WithRadix.html","searchKeys":["fromDigits"]},{"name":"def concat(that: UnrolledBuffer[T]): UnrolledBuffer[T]","description":"scala.collection.mutable.UnrolledBuffer","location":"api/scala/collection/mutable/UnrolledBuffer.html","searchKeys":["concat"]},{"name":"def transform[S](f: Try[T] => Try[S])(executor: ExecutionContext): Future[S]","description":"scala.concurrent.Future","location":"api/scala/concurrent/Future.html","searchKeys":["transform"]},{"name":"def minutes[C](c: C)(ev: Classifier[C]): R","description":"scala.concurrent.duration.DurationConversions","location":"api/scala/concurrent/duration/DurationConversions.html","searchKeys":["minutes"]},{"name":"def update(idx: Long, elem: Int): Unit","description":"scala.jdk.IntAccumulator","location":"api/scala/jdk/IntAccumulator.html","searchKeys":["update"]},{"name":"type Singleton <: TypeTree","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Singleton"]},{"name":"def Given: Flags","description":"scala.quoted.Quotes$reflectModule$FlagsModule","location":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html","searchKeys":["Given"]},{"name":"given LambdaTypeMethods","description":"scala.quoted.Quotes$reflectModule$LambdaTypeMethods","location":"api/scala/quoted/Quotes$reflectModule$LambdaTypeMethods.html","searchKeys":["LambdaTypeMethods"]},{"name":"trait dynamics","description":"scala.languageFeature$$dynamics","location":"api/scala/languageFeature$$dynamics.html","searchKeys":["dynamics"]},{"name":"given EitherToExpr[L, R]: ToExpr[Either[L, R]]","description":"scala.quoted.ToExpr$$EitherToExpr","location":"api/scala/quoted/ToExpr$$EitherToExpr.html","searchKeys":["EitherToExpr"]},{"name":"class FiniteDuration(val length: Long, val unit: TimeUnit) extends Duration","description":"scala.concurrent.duration.FiniteDuration","location":"api/scala/concurrent/duration/FiniteDuration.html","searchKeys":["FiniteDuration"]},{"name":"def byteValue: Byte","description":"scala.runtime.ScalaNumberProxy","location":"api/scala/runtime/ScalaNumberProxy.html","searchKeys":["byteValue"]},{"name":"val x$34: FromExpr[T15]","description":"scala.quoted.FromExpr$$Tuple19FromExpr","location":"api/scala/quoted/FromExpr$$Tuple19FromExpr.html","searchKeys":["x$34"]},{"name":"def SomeModule: Symbol","description":"scala.quoted.Quotes$reflectModule$defnModule","location":"api/scala/quoted/Quotes$reflectModule$defnModule.html","searchKeys":["SomeModule"]},{"name":"object Nil extends List[Nothing]","description":"scala.collection.immutable.Nil$","location":"api/scala/collection/immutable/Nil$.html","searchKeys":["Nil"]},{"name":"val x$23: FromExpr[T10]","description":"scala.quoted.FromExpr$$Tuple13FromExpr","location":"api/scala/quoted/FromExpr$$Tuple13FromExpr.html","searchKeys":["x$23"]},{"name":"object ArraySeq extends StrictOptimizedClassTagSeqFactory[[A] =>> ArraySeq[A]]","description":"scala.collection.immutable.ArraySeq$","location":"api/scala/collection/immutable/ArraySeq$.html","searchKeys":["ArraySeq"]},{"name":"def *(x: Byte): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["*"]},{"name":"def ^(x: Int): Int","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["^"]},{"name":"val x$2: Type[T2]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["x$2"]},{"name":"def execute(runnable: Runnable): Unit","description":"scala.concurrent.ExecutionContext","location":"api/scala/concurrent/ExecutionContext.html","searchKeys":["execute"]},{"name":"def newBuilder[A](ordering: Ordering[A]): Builder[A, TreeSet[A]]","description":"scala.collection.mutable.TreeSet$","location":"api/scala/collection/mutable/TreeSet$.html","searchKeys":["newBuilder"]},{"name":"def slice(from: Int, until: Int): C","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["slice"]},{"name":"class setter extends StaticAnnotation","description":"scala.annotation.meta.setter","location":"api/scala/annotation/meta/setter.html","searchKeys":["setter"]},{"name":"def asJavaObjLongConsumer: ObjLongConsumer[T]","description":"scala.jdk.FunctionWrappers$$RichFunction2AsObjLongConsumer","location":"api/scala/jdk/FunctionWrappers$$RichFunction2AsObjLongConsumer.html","searchKeys":["asJavaObjLongConsumer"]},{"name":"def diff[B >: A](that: Seq[B]): Array[A]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["diff"]},{"name":"object adhocExtensions","description":"scala.language$$adhocExtensions$","location":"api/scala/language$$adhocExtensions$.html","searchKeys":["adhocExtensions"]},{"name":"val x$6: Type[T6]","description":"scala.quoted.FromExpr$$Tuple13FromExpr","location":"api/scala/quoted/FromExpr$$Tuple13FromExpr.html","searchKeys":["x$6"]},{"name":"def fallbackStringCanBuildFrom[A]: BuildFrom[String, A, IndexedSeq[A]]","description":"scala.collection.BuildFromLowPriority1","location":"api/scala/collection/BuildFromLowPriority1.html","searchKeys":["fallbackStringCanBuildFrom"]},{"name":"val step: T","description":"scala.collection.immutable.NumericRange","location":"api/scala/collection/immutable/NumericRange.html","searchKeys":["step"]},{"name":"def asScala: (T, Long) => Unit","description":"scala.jdk.FunctionWrappers$$RichObjLongConsumerAsFunction2","location":"api/scala/jdk/FunctionWrappers$$RichObjLongConsumerAsFunction2.html","searchKeys":["asScala"]},{"name":"def toInt: Int","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["toInt"]},{"name":"def Array_apply: Symbol","description":"scala.quoted.Quotes$reflectModule$defnModule","location":"api/scala/quoted/Quotes$reflectModule$defnModule.html","searchKeys":["Array_apply"]},{"name":"class HashMap[K, +V] extends AbstractMap[K, V] with StrictOptimizedMapOps[K, V, [K, V] =>> HashMap[K, V], HashMap[K, V]] with MapFactoryDefaults[K, V, [K, V] =>> HashMap[K, V], [A] =>> Iterable[A]] with DefaultSerializable","description":"scala.collection.immutable.HashMap","location":"api/scala/collection/immutable/HashMap.html","searchKeys":["HashMap"]},{"name":"def enrichAsScalaFromLongConsumer(jf: LongConsumer): RichLongConsumerAsFunction1","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsScalaFromLongConsumer"]},{"name":"given FloatConstantTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["FloatConstantTypeTest"]},{"name":"def %(x: Byte): Int","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["%"]},{"name":"val unsafeArray: Array[Unit]","description":"scala.collection.immutable.ArraySeq$$ofUnit","location":"api/scala/collection/immutable/ArraySeq$$ofUnit.html","searchKeys":["unsafeArray"]},{"name":"def asScala: Int => Double","description":"scala.jdk.FunctionWrappers$$RichIntToDoubleFunctionAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichIntToDoubleFunctionAsFunction1.html","searchKeys":["asScala"]},{"name":"def decoder: CharsetDecoder","description":"scala.io.Codec","location":"api/scala/io/Codec.html","searchKeys":["decoder"]},{"name":"given NamedTypeMethods","description":"scala.quoted.Quotes$reflectModule$NamedTypeMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["NamedTypeMethods"]},{"name":"def indexOfSlice[B >: A](that: Seq[B]): Int","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["indexOfSlice"]},{"name":"val p: A => Boolean","description":"scala.collection.View$$Filter","location":"api/scala/collection/View$$Filter.html","searchKeys":["p"]},{"name":"def requiredPackage(path: String): Symbol","description":"scala.quoted.Quotes$reflectModule$SymbolModule","location":"api/scala/quoted/Quotes$reflectModule$SymbolModule.html","searchKeys":["requiredPackage"]},{"name":"package scala.concurrent.duration","description":"scala.concurrent.duration","location":"api/scala/concurrent/duration.html","searchKeys":["scala.concurrent.duration"]},{"name":"def span(p: A => Boolean): (Array[A], Array[A])","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["span"]},{"name":"given ArrayToExpr[T]: ToExpr[Array[T]]","description":"scala.quoted.ToExpr$$ArrayToExpr","location":"api/scala/quoted/ToExpr$$ArrayToExpr.html","searchKeys":["ArrayToExpr"]},{"name":"def parUnbox(st: AnyStepper[T] & EfficientSplit): S & EfficientSplit","description":"scala.collection.StepperShape","location":"api/scala/collection/StepperShape.html","searchKeys":["parUnbox"]},{"name":"def #>>(f: File): ProcessBuilder","description":"scala.sys.process.ProcessBuilder$$Source","location":"api/scala/sys/process/ProcessBuilder$$Source.html","searchKeys":["#>>"]},{"name":"def <(rhs: T): Boolean","description":"scala.math.Ordering$OrderingOps","location":"api/scala/math/Ordering$OrderingOps.html","searchKeys":["<"]},{"name":"def unapply(x: MatchCase): (TypeRepr, TypeRepr)","description":"scala.quoted.Quotes$reflectModule$MatchCaseModule","location":"api/scala/quoted/Quotes$reflectModule$MatchCaseModule.html","searchKeys":["unapply"]},{"name":"val MinValue: -128","description":"scala.Byte$","location":"api/scala/Byte$.html","searchKeys":["MinValue"]},{"name":"val parameterTypes: Array[Class[]]","description":"scala.runtime.StructuralCallSite","location":"api/scala/runtime/StructuralCallSite.html","searchKeys":["parameterTypes"]},{"name":"def -(x: Long): Float","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["-"]},{"name":"def toFactory[V](dummy: LongMap): Factory[(Long, V), LongMap[V]]","description":"scala.collection.mutable.LongMap$","location":"api/scala/collection/mutable/LongMap$.html","searchKeys":["toFactory"]},{"name":"def apply(x: Long, xs: Long*): Array[Long]","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["apply"]},{"name":"def cat(files: Seq[Source]): ProcessBuilder","description":"scala.sys.process.ProcessCreation","location":"api/scala/sys/process/ProcessCreation.html","searchKeys":["cat"]},{"name":"def iteratorFrom(start: K): Iterator[(K, V)]","description":"scala.collection.mutable.TreeMap","location":"api/scala/collection/mutable/TreeMap.html","searchKeys":["iteratorFrom"]},{"name":"def modPow(exp: BigInt, m: BigInt): BigInt","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["modPow"]},{"name":"def -(x: Short): Int","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["-"]},{"name":"def param(idx: Int): TypeRepr","description":"scala.quoted.Quotes$reflectModule$MethodTypeMethods","location":"api/scala/quoted/Quotes$reflectModule$MethodTypeMethods.html","searchKeys":["param"]},{"name":"def :++(suffix: String): String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":[":++"]},{"name":"trait SpecificIterableFactory[-A, +C] extends Factory[A, C]","description":"scala.collection.SpecificIterableFactory","location":"api/scala/collection/SpecificIterableFactory.html","searchKeys":["SpecificIterableFactory"]},{"name":"def unapply(x: Expr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20)])(using Quotes): Option[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20)]","description":"scala.quoted.FromExpr$$Tuple20FromExpr","location":"api/scala/quoted/FromExpr$$Tuple20FromExpr.html","searchKeys":["unapply"]},{"name":"val E: 2.718281828459045","description":"scala.math","location":"api/scala/math.html","searchKeys":["E"]},{"name":"def input(connect: Boolean): OutputStream => Unit","description":"scala.sys.process.BasicIO$","location":"api/scala/sys/process/BasicIO$.html","searchKeys":["input"]},{"name":"given RecursiveTypeMethods","description":"scala.quoted.Quotes$reflectModule$RecursiveTypeMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["RecursiveTypeMethods"]},{"name":"def applyAsDouble(x1: T, x2: U): Double","description":"scala.jdk.FunctionWrappers$$AsJavaToDoubleBiFunction","location":"api/scala/jdk/FunctionWrappers$$AsJavaToDoubleBiFunction.html","searchKeys":["applyAsDouble"]},{"name":"class ArrayBuffer[A] extends AbstractBuffer[A] with IndexedBuffer[A] with IndexedSeqOps[A, [A] =>> ArrayBuffer[A], ArrayBuffer[A]] with StrictOptimizedSeqOps[A, [A] =>> ArrayBuffer[A], ArrayBuffer[A]] with IterableFactoryDefaults[A, [A] =>> ArrayBuffer[A]] with DefaultSerializable","description":"scala.collection.mutable.ArrayBuffer","location":"api/scala/collection/mutable/ArrayBuffer.html","searchKeys":["ArrayBuffer"]},{"name":"def delegate[T](body: => Future[T])(executor: ExecutionContext): Future[T]","description":"scala.concurrent.Future$","location":"api/scala/concurrent/Future$.html","searchKeys":["delegate"]},{"name":"def accept(x1: Int): Unit","description":"scala.jdk.FunctionWrappers$$AsJavaIntConsumer","location":"api/scala/jdk/FunctionWrappers$$AsJavaIntConsumer.html","searchKeys":["accept"]},{"name":"def apply(v1: T1, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, v7: T7, v8: T8, v9: T9, v10: T10, v11: T11, v12: T12): R","description":"scala.Function12","location":"api/scala/Function12.html","searchKeys":["apply"]},{"name":"def apply(unscaledVal: BigInt, scale: Int, mc: MathContext): BigDecimal","description":"scala.math.BigDecimal$","location":"api/scala/math/BigDecimal$.html","searchKeys":["apply"]},{"name":"def underlying: Object","description":"scala.math.ScalaNumericConversions","location":"api/scala/math/ScalaNumericConversions.html","searchKeys":["underlying"]},{"name":"def toInt: Int","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["toInt"]},{"name":"class ScanLeft[+A, +B](underlying: SomeIterableOps[A], z: B, op: (B, A) => B) extends AbstractView[B]","description":"scala.collection.View$$ScanLeft","location":"api/scala/collection/View$$ScanLeft.html","searchKeys":["ScanLeft"]},{"name":"def toJavaIntegerAccumulator(ia: IntAccumulator): SpecificIterableFactory[Integer, IntAccumulator]","description":"scala.jdk.IntAccumulator$","location":"api/scala/jdk/IntAccumulator$.html","searchKeys":["toJavaIntegerAccumulator"]},{"name":"object MapOps","description":"scala.collection.MapOps$","location":"api/scala/collection/MapOps$.html","searchKeys":["MapOps"]},{"name":"object Breaks extends Breaks","description":"scala.util.control.Breaks$","location":"api/scala/util/control/Breaks$.html","searchKeys":["Breaks"]},{"name":"def asJavaIntBinaryOperator(sf: (Integer, Integer) => Integer): IntBinaryOperator","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asJavaIntBinaryOperator"]},{"name":"def implicitly[T](e: T): T","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["implicitly"]},{"name":"object Product3","description":"scala.Product3$","location":"api/scala/Product3$.html","searchKeys":["Product3"]},{"name":"val Selector: SelectorModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Selector"]},{"name":"def rhs: Term","description":"scala.quoted.Quotes$reflectModule$AssignMethods","location":"api/scala/quoted/Quotes$reflectModule$AssignMethods.html","searchKeys":["rhs"]},{"name":"def apply$mcFJJ$sp(v1: Long, v2: Long): Float","description":"scala.runtime.java8.JFunction2$mcFJJ$sp","location":"api/scala/runtime/java8/JFunction2$mcFJJ$sp.html","searchKeys":["apply$mcFJJ$sp"]},{"name":"def reflectiveSelectable(x: Any): Selectable","description":"scala.reflect.Selectable$","location":"api/scala/reflect/Selectable$.html","searchKeys":["reflectiveSelectable"]},{"name":"val unsafeArray: Array[Int]","description":"scala.collection.immutable.ArraySeq$$ofInt","location":"api/scala/collection/immutable/ArraySeq$$ofInt.html","searchKeys":["unsafeArray"]},{"name":"def popAll(): Seq[A]","description":"scala.collection.mutable.Stack","location":"api/scala/collection/mutable/Stack.html","searchKeys":["popAll"]},{"name":"def checkLengths(args: Seq[Any]): Unit","description":"scala.StringContext","location":"api/scala/StringContext.html","searchKeys":["checkLengths"]},{"name":"def |(x: Byte): Int","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["|"]},{"name":"val SIGNED: 63","description":"dotty.tools.tasty.TastyFormat$$NameTags","location":"api/dotty/tools/tasty/TastyFormat$$NameTags.html","searchKeys":["SIGNED"]},{"name":"def compare(x: T, y: T): Int","description":"scala.math.Ordering","location":"api/scala/math/Ordering.html","searchKeys":["compare"]},{"name":"def -(x: Long): Long","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["-"]},{"name":"trait Stepper[@specialized(Double, Int, Long) +A]","description":"scala.collection.Stepper","location":"api/scala/collection/Stepper.html","searchKeys":["Stepper"]},{"name":"def iterator: Iterator[A2]","description":"scala.collection.View$$RightPartitionMapped","location":"api/scala/collection/View$$RightPartitionMapped.html","searchKeys":["iterator"]},{"name":"def rangeImpl(from: Option[Value], until: Option[Value]): ValueSet","description":"scala.Enumeration$ValueSet","location":"api/scala/Enumeration$ValueSet.html","searchKeys":["rangeImpl"]},{"name":"val Any: Manifest[Any]","description":"scala.reflect.ManifestFactory$","location":"api/scala/reflect/ManifestFactory$.html","searchKeys":["Any"]},{"name":"def valuesIteratorFrom(start: K): Iterator[V]","description":"scala.collection.SortedMapOps","location":"api/scala/collection/SortedMapOps.html","searchKeys":["valuesIteratorFrom"]},{"name":"given DefDefTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["DefDefTypeTest"]},{"name":"Announcing Dotty 0.26.0-RC1 - unified extension methods and more","description":"","location":"blog/2020/07/27/26th-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.26.0-RC1 - unified extension methods and more"]},{"name":"def lengthCompare(len: Int): Int","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["lengthCompare"]},{"name":"object SortedMapOps","description":"scala.collection.SortedMapOps$","location":"api/scala/collection/SortedMapOps$.html","searchKeys":["SortedMapOps"]},{"name":"def mkString(start: String, sep: String, end: String): String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["mkString"]},{"name":"given BigDecimalFromDigits: Floating[BigDecimal]","description":"scala.util.FromDigits$$BigDecimalFromDigits$","location":"api/scala/util/FromDigits$$BigDecimalFromDigits$.html","searchKeys":["BigDecimalFromDigits"]},{"name":"def apply(tmref: TermRef): Term","description":"scala.quoted.Quotes$reflectModule$IdentModule","location":"api/scala/quoted/Quotes$reflectModule$IdentModule.html","searchKeys":["apply"]},{"name":"def !=(x: Float): Boolean","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["!="]},{"name":"def asJavaParValueIntStreamFromByte[K](m: Map[K, Byte]): IntStream","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaParValueIntStreamFromByte"]},{"name":"trait TypeMatchModule","description":"scala.quoted.runtime.QuoteMatching$TypeMatchModule","location":"api/scala/quoted/runtime/QuoteMatching$TypeMatchModule.html","searchKeys":["TypeMatchModule"]},{"name":"type Ordering[T] = Ordering[T]","description":"scala","location":"api/scala.html","searchKeys":["Ordering"]},{"name":"def min(x: Long, y: Long): Long","description":"scala.math","location":"api/scala/math.html","searchKeys":["min"]},{"name":"type GrowingBuilder[Elem, To <: Growable[Elem]] = GrowableBuilder[Elem, To]","description":"scala.collection.mutable","location":"api/scala/collection/mutable.html","searchKeys":["GrowingBuilder"]},{"name":"val productSeed: -889275714","description":"scala.util.hashing.MurmurHash3$","location":"api/scala/util/hashing/MurmurHash3$.html","searchKeys":["productSeed"]},{"name":"def empty[K, V]: CC[K, V]","description":"scala.collection.MapFactory","location":"api/scala/collection/MapFactory.html","searchKeys":["empty"]},{"name":"Working with Scalafix","description":"","location":"docs/contributing/tools/scalafix.html","searchKeys":["Working with Scalafix"]},{"name":"def collect[K2, V2](pf: PartialFunction[(K, V), (K2, V2)]): CC[K2, V2]","description":"scala.collection.MapOps","location":"api/scala/collection/MapOps.html","searchKeys":["collect"]},{"name":"def asExpr: Expr[Any]","description":"scala.quoted.Quotes$reflectModule$TreeMethods","location":"api/scala/quoted/Quotes$reflectModule$TreeMethods.html","searchKeys":["asExpr"]},{"name":"def _10: T10","description":"scala.Product21","location":"api/scala/Product21.html","searchKeys":["_10"]},{"name":"def enqueue[B >: A](iter: Iterable[B]): Queue[B]","description":"scala.collection.immutable.Queue","location":"api/scala/collection/immutable/Queue.html","searchKeys":["enqueue"]},{"name":"trait JFunction1$mcFI$sp extends Any => Any with Serializable","description":"scala.runtime.java8.JFunction1$mcFI$sp","location":"api/scala/runtime/java8/JFunction1$mcFI$sp.html","searchKeys":["JFunction1$mcFI$sp"]},{"name":"def stripPrefix(prefix: String): String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["stripPrefix"]},{"name":"def -(x: Float): Float","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["-"]},{"name":"def nextLong(): Long","description":"scala.util.Random","location":"api/scala/util/Random.html","searchKeys":["nextLong"]},{"name":"def value[T](using FromExpr[T]): Option[T]","description":"scala.quoted.Quotes","location":"api/scala/quoted/Quotes.html","searchKeys":["value"]},{"name":"def unapply[TypeBindings <: Tuple, Tup <: Tuple](scrutinee: Expr[Any])(using pattern: Expr[Any]): Option[Tup]","description":"scala.quoted.runtime.QuoteMatching$ExprMatchModule","location":"api/scala/quoted/runtime/QuoteMatching$ExprMatchModule.html","searchKeys":["unapply"]},{"name":"def scala$collection$BitSetOps$$super$intersect(that: Set[Int]): C","description":"scala.collection.BitSetOps","location":"api/scala/collection/BitSetOps.html","searchKeys":["scala$collection$BitSetOps$$super$intersect"]},{"name":"def curried: T1 => T2 => T3 => T4 => T5 => T6 => T7 => T8 => R","description":"scala.Function8","location":"api/scala/Function8.html","searchKeys":["curried"]},{"name":"object BlockContext","description":"scala.concurrent.BlockContext$","location":"api/scala/concurrent/BlockContext$.html","searchKeys":["BlockContext"]},{"name":"def withDefaultValue(d: V): Map[K, V]","description":"scala.collection.mutable.Map","location":"api/scala/collection/mutable/Map.html","searchKeys":["withDefaultValue"]},{"name":"def toUTF8(chars: Array[Char], offset: Int, len: Int): Array[Byte]","description":"scala.io.Codec$","location":"api/scala/io/Codec$.html","searchKeys":["toUTF8"]},{"name":"def tpe: TypeRepr","description":"scala.quoted.Quotes$reflectModule$TermMethods","location":"api/scala/quoted/Quotes$reflectModule$TermMethods.html","searchKeys":["tpe"]},{"name":"val unsafeArray: Array[Double]","description":"scala.collection.immutable.ArraySeq$$ofDouble","location":"api/scala/collection/immutable/ArraySeq$$ofDouble.html","searchKeys":["unsafeArray"]},{"name":"def >(x: Char): Boolean","description":"scala.Short","location":"api/scala/Short.html","searchKeys":[">"]},{"name":"object s","description":"scala.StringContext$s$","location":"api/scala/StringContext$s$.html","searchKeys":["s"]},{"name":"class Tuple5[+T1, +T2, +T3, +T4, +T5](_1: T1, _2: T2, _3: T3, _4: T4, _5: T5) extends Product5[T1, T2, T3, T4, T5]","description":"scala.Tuple5","location":"api/scala/Tuple5.html","searchKeys":["Tuple5"]},{"name":"def from(start: Int): Iterator[Int]","description":"scala.collection.Iterator$","location":"api/scala/collection/Iterator$.html","searchKeys":["from"]},{"name":"def <(x: Long): Boolean","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["<"]},{"name":"def unapply(x: Expr[Left[L, R]])(using Quotes): Option[Left[L, R]]","description":"scala.quoted.FromExpr$$LeftFromExpr","location":"api/scala/quoted/FromExpr$$LeftFromExpr.html","searchKeys":["unapply"]},{"name":"def +(x: Long): Float","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["+"]},{"name":"trait StrictOptimizedSetOps[A, +CC <: ([X] =>> Any), +C <: SetOps[A, CC, C]] extends SetOps[A, CC, C] with StrictOptimizedSetOps[A, CC, C] with StrictOptimizedIterableOps[A, CC, C]","description":"scala.collection.immutable.StrictOptimizedSetOps","location":"api/scala/collection/immutable/StrictOptimizedSetOps.html","searchKeys":["StrictOptimizedSetOps"]},{"name":"trait IterableOnce[+A]","description":"scala.collection.IterableOnce","location":"api/scala/collection/IterableOnce.html","searchKeys":["IterableOnce"]},{"name":"given CaseDefTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["CaseDefTypeTest"]},{"name":"def toStdErr: InputStream => Unit","description":"scala.sys.process.BasicIO$","location":"api/scala/sys/process/BasicIO$.html","searchKeys":["toStdErr"]},{"name":"def statements: List[Statement]","description":"scala.quoted.Quotes$reflectModule$BlockMethods","location":"api/scala/quoted/Quotes$reflectModule$BlockMethods.html","searchKeys":["statements"]},{"name":"val TypeRef: TypeRefModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeRef"]},{"name":"def map(f: Double => Double): DoubleAccumulator","description":"scala.jdk.DoubleAccumulator","location":"api/scala/jdk/DoubleAccumulator.html","searchKeys":["map"]},{"name":"val x$14: FromExpr[T4]","description":"scala.quoted.FromExpr$$Tuple10FromExpr","location":"api/scala/quoted/FromExpr$$Tuple10FromExpr.html","searchKeys":["x$14"]},{"name":"given Tuple19ToExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19]: ToExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19)]","description":"scala.quoted.ToExpr$$Tuple19ToExpr","location":"api/scala/quoted/ToExpr$$Tuple19ToExpr.html","searchKeys":["Tuple19ToExpr"]},{"name":"def >=(x: Byte): Boolean","description":"scala.Int","location":"api/scala/Int.html","searchKeys":[">="]},{"name":"def forall(p: (El1, El2, El3) => Boolean): Boolean","description":"scala.runtime.Tuple3Zipped","location":"api/scala/runtime/Tuple3Zipped.html","searchKeys":["forall"]},{"name":"def Lazy: Flags","description":"scala.quoted.Quotes$reflectModule$FlagsModule","location":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html","searchKeys":["Lazy"]},{"name":"def _4: T4","description":"scala.Product18","location":"api/scala/Product18.html","searchKeys":["_4"]},{"name":"def %(x: Byte): Float","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["%"]},{"name":"given TypeBoundsTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeBoundsTypeTest"]},{"name":"def tupled: (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) => R","description":"scala.Function10","location":"api/scala/Function10.html","searchKeys":["tupled"]},{"name":"val x$4: FromExpr[T2]","description":"scala.quoted.FromExpr$$Tuple2FromExpr","location":"api/scala/quoted/FromExpr$$Tuple2FromExpr.html","searchKeys":["x$4"]},{"name":"class MatchError(obj: Any) extends RuntimeException","description":"scala.MatchError","location":"api/scala/MatchError.html","searchKeys":["MatchError"]},{"name":"def >=(x: Long): Boolean","description":"scala.Float","location":"api/scala/Float.html","searchKeys":[">="]},{"name":"def unary_~: Int","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["unary_~"]},{"name":"def <(x: Short): Boolean","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["<"]},{"name":"val DOUBLEconst: 73","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["DOUBLEconst"]},{"name":"val x$14: Type[T14]","description":"scala.quoted.FromExpr$$Tuple17FromExpr","location":"api/scala/quoted/FromExpr$$Tuple17FromExpr.html","searchKeys":["x$14"]},{"name":"class Set2[A] extends AbstractSet[A] with StrictOptimizedIterableOps[A, [A] =>> Set[A], Set[A]] with Serializable","description":"scala.collection.immutable.Set$$Set2","location":"api/scala/collection/immutable/Set$$Set2.html","searchKeys":["Set2"]},{"name":"def unwrap: String","description":"scala.collection.immutable.WrappedString$$UnwrapOp","location":"api/scala/collection/immutable/WrappedString$$UnwrapOp.html","searchKeys":["unwrap"]},{"name":"Announcing Dotty 0.17.0-RC1 – new implicit scoping rules and more","description":"","location":"blog/2019/07/25/17th-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.17.0-RC1 – new implicit scoping rules and more"]},{"name":"val Iterable: Iterable","description":"scala","location":"api/scala.html","searchKeys":["Iterable"]},{"name":"def fromFile(uri: URI, enc: String): BufferedSource","description":"scala.io.Source$","location":"api/scala/io/Source$.html","searchKeys":["fromFile"]},{"name":"def Tuple6[T1, T2, T3, T4, T5, T6](eqv1: Equiv[T1], eqv2: Equiv[T2], eqv3: Equiv[T3], eqv4: Equiv[T4], eqv5: Equiv[T5], eqv6: Equiv[T6]): Equiv[(T1, T2, T3, T4, T5, T6)]","description":"scala.math.Equiv$","location":"api/scala/math/Equiv$.html","searchKeys":["Tuple6"]},{"name":"type ThisType <: TypeRepr","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ThisType"]},{"name":"type NoMatchingImplicits <: ImplicitSearchFailure","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["NoMatchingImplicits"]},{"name":"def &(x: Long): Long","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["&"]},{"name":"def exists(p: (El1, El2, El3) => Boolean): Boolean","description":"scala.collection.LazyZip3","location":"api/scala/collection/LazyZip3.html","searchKeys":["exists"]},{"name":"def iterator: Iterator[(K, V)]","description":"scala.collection.mutable.LinkedHashMap","location":"api/scala/collection/mutable/LinkedHashMap.html","searchKeys":["iterator"]},{"name":"def merger: BiConsumer[DoubleAccumulator, DoubleAccumulator]","description":"scala.jdk.DoubleAccumulator$","location":"api/scala/jdk/DoubleAccumulator$.html","searchKeys":["merger"]},{"name":"class FromJavaIntFunction[R](jf: IntFunction[R]) extends Int => R","description":"scala.jdk.FunctionWrappers$$FromJavaIntFunction","location":"api/scala/jdk/FunctionWrappers$$FromJavaIntFunction.html","searchKeys":["FromJavaIntFunction"]},{"name":"class TastyHeader(uuid: UUID, majorVersion: Int, minorVersion: Int)","description":"dotty.tools.tasty.TastyHeader","location":"api/dotty/tools/tasty/TastyHeader.html","searchKeys":["TastyHeader"]},{"name":"trait TypeConstraint extends Annotation","description":"scala.annotation.TypeConstraint","location":"api/scala/annotation/TypeConstraint.html","searchKeys":["TypeConstraint"]},{"name":"val defaultReporter: Throwable => Unit","description":"scala.concurrent.ExecutionContext$","location":"api/scala/concurrent/ExecutionContext$.html","searchKeys":["defaultReporter"]},{"name":"def &(x: Char): Int","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["&"]},{"name":"def asJavaParStream[S <: BaseStream[, ], St <: Stepper[]](s: StreamShape[A, S, St], st: StepperShape[A, St]): S","description":"scala.collection.convert.StreamExtensions$StepperHasParStream","location":"api/scala/collection/convert/StreamExtensions$StepperHasParStream.html","searchKeys":["asJavaParStream"]},{"name":"def fromExecutorService(e: ExecutorService, reporter: Throwable => Unit): ExecutionContextExecutorService","description":"scala.concurrent.ExecutionContext$","location":"api/scala/concurrent/ExecutionContext$.html","searchKeys":["fromExecutorService"]},{"name":"class Ensuring[A](self: A) extends AnyVal","description":"scala.Predef$$Ensuring","location":"api/scala/Predef$$Ensuring.html","searchKeys":["Ensuring"]},{"name":"type Signature <: AnyRef","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Signature"]},{"name":"def unapply[A](s: LazyList[A]): Option[(A, LazyList[A])]","description":"scala.collection.immutable.LazyList$$#::$","location":"api/scala/collection/immutable/LazyList$$#::$.html","searchKeys":["unapply"]},{"name":"def apply(selector: Term, cases: List[CaseDef]): Match","description":"scala.quoted.Quotes$reflectModule$MatchModule","location":"api/scala/quoted/Quotes$reflectModule$MatchModule.html","searchKeys":["apply"]},{"name":"type DoubleConstant <: Constant","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["DoubleConstant"]},{"name":"given SelectOuterMethods","description":"scala.quoted.Quotes$reflectModule$SelectOuterMethods","location":"api/scala/quoted/Quotes$reflectModule$SelectOuterMethods.html","searchKeys":["SelectOuterMethods"]},{"name":"val report: reportModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["report"]},{"name":"given AppliedTypeMethods","description":"scala.quoted.Quotes$reflectModule$AppliedTypeMethods","location":"api/scala/quoted/Quotes$reflectModule$AppliedTypeMethods.html","searchKeys":["AppliedTypeMethods"]},{"name":"def from[A](source: IterableOnce[A]): Queue[A]","description":"scala.collection.immutable.Queue$","location":"api/scala/collection/immutable/Queue$.html","searchKeys":["from"]},{"name":"def parseString(str: String): Option[Double]","description":"scala.math.Numeric$$DoubleIsFractional","location":"api/scala/math/Numeric$$DoubleIsFractional.html","searchKeys":["parseString"]},{"name":"def apply(index: Int): Char","description":"scala.collection.mutable.ArraySeq$$ofChar","location":"api/scala/collection/mutable/ArraySeq$$ofChar.html","searchKeys":["apply"]},{"name":"trait UnapplyModule","description":"scala.quoted.Quotes$reflectModule$UnapplyModule","location":"api/scala/quoted/Quotes$reflectModule$UnapplyModule.html","searchKeys":["UnapplyModule"]},{"name":"def allCatch[T]: Catch[T]","description":"scala.util.control.Exception$","location":"api/scala/util/control/Exception$.html","searchKeys":["allCatch"]},{"name":"def toDouble(x: Int): Double","description":"scala.math.Numeric$$IntIsIntegral","location":"api/scala/math/Numeric$$IntIsIntegral.html","searchKeys":["toDouble"]},{"name":"def apply[T](): Promise[T]","description":"scala.concurrent.Promise$","location":"api/scala/concurrent/Promise$.html","searchKeys":["apply"]},{"name":"trait JFunction2$mcVID$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcVID$sp","location":"api/scala/runtime/java8/JFunction2$mcVID$sp.html","searchKeys":["JFunction2$mcVID$sp"]},{"name":"def lazyLines: LazyList[String]","description":"scala.sys.process.ProcessBuilder","location":"api/scala/sys/process/ProcessBuilder.html","searchKeys":["lazyLines"]},{"name":"def pos: Position","description":"scala.quoted.Quotes$reflectModule$TreeMethods","location":"api/scala/quoted/Quotes$reflectModule$TreeMethods.html","searchKeys":["pos"]},{"name":"val SUPERtype: 158","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["SUPERtype"]},{"name":"def min(x: Int, y: Int): Int","description":"scala.math","location":"api/scala/math.html","searchKeys":["min"]},{"name":"def &(that: BigInt): BigInt","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["&"]},{"name":"val x$9: Type[T9]","description":"scala.quoted.FromExpr$$Tuple16FromExpr","location":"api/scala/quoted/FromExpr$$Tuple16FromExpr.html","searchKeys":["x$9"]},{"name":"object StrictEquiv extends StrictEquiv","description":"scala.math.Equiv$$Double$$StrictEquiv$","location":"api/scala/math/Equiv$$Double$$StrictEquiv$.html","searchKeys":["StrictEquiv"]},{"name":"def unlift[T, R](f: T => Option[R]): PartialFunction[T, R]","description":"scala.Function$","location":"api/scala/Function$.html","searchKeys":["unlift"]},{"name":"def flatten[B](ev: A => IterableOnce[B]): Iterator[B]","description":"scala.collection.Iterator","location":"api/scala/collection/Iterator.html","searchKeys":["flatten"]},{"name":"def -(x: Char): Int","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["-"]},{"name":"class UnapplySeqWrapper[A](c: SeqOps[A, [A] =>> Seq[A], Seq[A]]) extends AnyVal","description":"scala.collection.SeqFactory$$UnapplySeqWrapper","location":"api/scala/collection/SeqFactory$$UnapplySeqWrapper.html","searchKeys":["UnapplySeqWrapper"]},{"name":"trait Product12[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12] extends Product","description":"scala.Product12","location":"api/scala/Product12.html","searchKeys":["Product12"]},{"name":"def toShortExact: Short","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["toShortExact"]},{"name":"val unsafeArray: Array[Short]","description":"scala.collection.immutable.ArraySeq$$ofShort","location":"api/scala/collection/immutable/ArraySeq$$ofShort.html","searchKeys":["unsafeArray"]},{"name":"def append(x: Byte): StringBuilder","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["append"]},{"name":"class param extends StaticAnnotation","description":"scala.annotation.meta.param","location":"api/scala/annotation/meta/param.html","searchKeys":["param"]},{"name":"def typeCheckErrors(inline code: String): List[Error]","description":"scala.compiletime.testing.package$package$","location":"api/scala/compiletime/testing.html","searchKeys":["typeCheckErrors"]},{"name":"def int2Integer(x: Int): Integer","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["int2Integer"]},{"name":"def *(x: Double): Double","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["*"]},{"name":"type Widen[Tup <: Tuple] = Tup match {\n  case EmptyTuple => EmptyTuple\n  case h *: t => h *: t\n}","description":"scala.compiletime","location":"api/scala/compiletime.html","searchKeys":["Widen"]},{"name":"class AbstractIndexedSeqView[+A] extends AbstractSeqView[A] with IndexedSeqView[A]","description":"scala.collection.AbstractIndexedSeqView","location":"api/scala/collection/AbstractIndexedSeqView.html","searchKeys":["AbstractIndexedSeqView"]},{"name":"val AnyVal: Manifest[AnyVal]","description":"scala.reflect.ManifestFactory$","location":"api/scala/reflect/ManifestFactory$.html","searchKeys":["AnyVal"]},{"name":"def appliedToArgss(argss: List[List[Term]]): Term","description":"scala.quoted.Quotes$reflectModule$TermMethods","location":"api/scala/quoted/Quotes$reflectModule$TermMethods.html","searchKeys":["appliedToArgss"]},{"name":"val Arg: Group[(Int, Long, Float, Double)]","description":"scala.Specializable$","location":"api/scala/Specializable$.html","searchKeys":["Arg"]},{"name":"given given_FromString_Float: FromString[Float]","description":"scala.util.CommandLineParser$$FromString$$given_FromString_Float$","location":"api/scala/util/CommandLineParser$$FromString$.html","searchKeys":["given_FromString_Float"]},{"name":"def elemTag: ClassTag[]","description":"scala.collection.mutable.ArraySeq$$ofDouble","location":"api/scala/collection/mutable/ArraySeq$$ofDouble.html","searchKeys":["elemTag"]},{"name":"trait IfModule","description":"scala.quoted.Quotes$reflectModule$IfModule","location":"api/scala/quoted/Quotes$reflectModule$IfModule.html","searchKeys":["IfModule"]},{"name":"val bigDecAsIntegral: BigDecimalAsIfIntegral","description":"scala.collection.immutable.Range$$BigDecimal$","location":"api/scala/collection/immutable/Range$$BigDecimal$.html","searchKeys":["bigDecAsIntegral"]},{"name":"type MirroredMonoType = Singleton","description":"scala.deriving.Mirror$$Singleton","location":"api/scala/deriving/Mirror$$Singleton.html","searchKeys":["MirroredMonoType"]},{"name":"val x$21: FromExpr[T8]","description":"scala.quoted.FromExpr$$Tuple13FromExpr","location":"api/scala/quoted/FromExpr$$Tuple13FromExpr.html","searchKeys":["x$21"]},{"name":"def >(x: Char): Boolean","description":"scala.Long","location":"api/scala/Long.html","searchKeys":[">"]},{"name":"def maxByOption[B](f: A => B)(cmp: Ordering[B]): Option[A]","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["maxByOption"]},{"name":"def rangeImpl(from: Option[A], until: Option[A]): TreeSet[A]","description":"scala.collection.immutable.TreeSet","location":"api/scala/collection/immutable/TreeSet.html","searchKeys":["rangeImpl"]},{"name":"trait JFunction2$mcZJD$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcZJD$sp","location":"api/scala/runtime/java8/JFunction2$mcZJD$sp.html","searchKeys":["JFunction2$mcZJD$sp"]},{"name":"class Vector[+A] extends AbstractSeq[A] with IndexedSeq[A] with IndexedSeqOps[A, [A] =>> Vector[A], Vector[A]] with StrictOptimizedSeqOps[A, [A] =>> Vector[A], Vector[A]] with IterableFactoryDefaults[A, [A] =>> Vector[A]] with DefaultSerializable","description":"scala.collection.immutable.Vector","location":"api/scala/collection/immutable/Vector.html","searchKeys":["Vector"]},{"name":"def fill[A](n: Int)(elem: => A)(evidence$18: Ev[A]): CC[A]","description":"scala.collection.EvidenceIterableFactory","location":"api/scala/collection/EvidenceIterableFactory.html","searchKeys":["fill"]},{"name":"def get(key: K): Option[V]","description":"scala.collection.mutable.CollisionProofHashMap","location":"api/scala/collection/mutable/CollisionProofHashMap.html","searchKeys":["get"]},{"name":"val end: T","description":"scala.collection.immutable.NumericRange","location":"api/scala/collection/immutable/NumericRange.html","searchKeys":["end"]},{"name":"object FiniteDuration","description":"scala.concurrent.duration.FiniteDuration$","location":"api/scala/concurrent/duration/FiniteDuration$.html","searchKeys":["FiniteDuration"]},{"name":"def milli: FiniteDuration","description":"scala.concurrent.duration.DurationConversions","location":"api/scala/concurrent/duration/DurationConversions.html","searchKeys":["milli"]},{"name":"def buffer AsJavaList[A](b: Buffer[A]): List[A]","description":"scala.collection.convert.ToJavaImplicits","location":"api/scala/collection/convert/ToJavaImplicits.html","searchKeys":["buffer AsJavaList"]},{"name":"def enrichAsJavaToDoubleFunction[T](sf: T => Double): RichFunction1AsToDoubleFunction[T]","description":"scala.jdk.Priority1FunctionExtensions","location":"api/scala/jdk/Priority1FunctionExtensions.html","searchKeys":["enrichAsJavaToDoubleFunction"]},{"name":"val x$5: Type[T5]","description":"scala.quoted.FromExpr$$Tuple16FromExpr","location":"api/scala/quoted/FromExpr$$Tuple16FromExpr.html","searchKeys":["x$5"]},{"name":"def minus(x: BigInt, y: BigInt): BigInt","description":"scala.math.Numeric$$BigIntIsIntegral","location":"api/scala/math/Numeric$$BigIntIsIntegral.html","searchKeys":["minus"]},{"name":"def expr: Term","description":"scala.quoted.Quotes$reflectModule$ReturnMethods","location":"api/scala/quoted/Quotes$reflectModule$ReturnMethods.html","searchKeys":["expr"]},{"name":"trait LinearSeqOps[+A, +CC <: ([X] =>> LinearSeq[X]), +C <: LinearSeq[A] & LinearSeqOps[A, CC, C]] extends SeqOps[A, CC, C]","description":"scala.collection.LinearSeqOps","location":"api/scala/collection/LinearSeqOps.html","searchKeys":["LinearSeqOps"]},{"name":"def addOne(elem: A): HashSet[A]","description":"scala.collection.mutable.HashSet","location":"api/scala/collection/mutable/HashSet.html","searchKeys":["addOne"]},{"name":"def addOne(elem: Int): BitSet","description":"scala.collection.mutable.BitSet","location":"api/scala/collection/mutable/BitSet.html","searchKeys":["addOne"]},{"name":"def JavaDefined: Flags","description":"scala.quoted.Quotes$reflectModule$FlagsModule","location":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html","searchKeys":["JavaDefined"]},{"name":"val SELECTtpt: 113","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["SELECTtpt"]},{"name":"object LongAccumulator extends SpecificIterableFactory[Long, LongAccumulator]","description":"scala.jdk.LongAccumulator$","location":"api/scala/jdk/LongAccumulator$.html","searchKeys":["LongAccumulator"]},{"name":"def #<(f: File): ProcessBuilder","description":"scala.sys.process.ProcessBuilder$$Sink","location":"api/scala/sys/process/ProcessBuilder$$Sink.html","searchKeys":["#<"]},{"name":"def unary_-: Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["unary_-"]},{"name":"def apply$mcZJJ$sp(v1: Long, v2: Long): Boolean","description":"scala.runtime.java8.JFunction2$mcZJJ$sp","location":"api/scala/runtime/java8/JFunction2$mcZJJ$sp.html","searchKeys":["apply$mcZJJ$sp"]},{"name":"type NumberFormatException = NumberFormatException","description":"scala","location":"api/scala.html","searchKeys":["NumberFormatException"]},{"name":"def &(x: Int): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["&"]},{"name":"def isInstanceOfTuple(x: Any): Boolean","description":"scala.runtime.Tuples$","location":"api/scala/runtime/Tuples$.html","searchKeys":["isInstanceOfTuple"]},{"name":"Algebraic Data Types","description":"","location":"docs/reference/enums/adts.html","searchKeys":["Algebraic Data Types"]},{"name":"def _5: T5","description":"scala.Product9","location":"api/scala/Product9.html","searchKeys":["_5"]},{"name":"def corresponds[B](that: IterableOnce[B])(p: (A, B) => Boolean): Boolean","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["corresponds"]},{"name":"def length: Int","description":"scala.collection.immutable.Range","location":"api/scala/collection/immutable/Range.html","searchKeys":["length"]},{"name":"def desc: String","description":"scala.util.control.Exception$$Described","location":"api/scala/util/control/Exception$$Described.html","searchKeys":["desc"]},{"name":"def sizeCompare(otherSize: Int): Int","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["sizeCompare"]},{"name":"def >(x: Int): Boolean","description":"scala.Float","location":"api/scala/Float.html","searchKeys":[">"]},{"name":"def unsorted: Set[Int]","description":"scala.collection.BitSetOps","location":"api/scala/collection/BitSetOps.html","searchKeys":["unsorted"]},{"name":"def *(x: Int): Int","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["*"]},{"name":"val x$2: Type[T2]","description":"scala.quoted.FromExpr$$Tuple5FromExpr","location":"api/scala/quoted/FromExpr$$Tuple5FromExpr.html","searchKeys":["x$2"]},{"name":"val get: \"get\"","description":"scala.runtime.LazyVals$$Names$","location":"api/scala/runtime/LazyVals$$Names$.html","searchKeys":["get"]},{"name":"def ==(x: Char): Boolean","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["=="]},{"name":"given StringFromExpr","description":"scala.quoted.FromExpr$","location":"api/scala/quoted/FromExpr$.html","searchKeys":["StringFromExpr"]},{"name":"def indexOf[B >: A](elem: B, from: Int): Int","description":"scala.collection.Iterator","location":"api/scala/collection/Iterator.html","searchKeys":["indexOf"]},{"name":"def Tuple3[T1, T2, T3](eqv1: Equiv[T1], eqv2: Equiv[T2], eqv3: Equiv[T3]): Equiv[(T1, T2, T3)]","description":"scala.math.Equiv$","location":"api/scala/math/Equiv$.html","searchKeys":["Tuple3"]},{"name":"class Int extends AnyVal","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["Int"]},{"name":"def apply(tpt: TypeTree, args: List[Tree]): Applied","description":"scala.quoted.Quotes$reflectModule$AppliedModule","location":"api/scala/quoted/Quotes$reflectModule$AppliedModule.html","searchKeys":["apply"]},{"name":"def apply(i: Int): Double","description":"scala.jdk.DoubleAccumulator","location":"api/scala/jdk/DoubleAccumulator.html","searchKeys":["apply"]},{"name":"def !=(x: Byte): Boolean","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["!="]},{"name":"def toLong: Long","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["toLong"]},{"name":"class FromJavaBiPredicate[T, U](jf: BiPredicate[T, U]) extends (T, U) => Boolean","description":"scala.jdk.FunctionWrappers$$FromJavaBiPredicate","location":"api/scala/jdk/FunctionWrappers$$FromJavaBiPredicate.html","searchKeys":["FromJavaBiPredicate"]},{"name":"def coll: C & CC[K, V]","description":"scala.collection.immutable.SortedMapOps","location":"api/scala/collection/immutable/SortedMapOps.html","searchKeys":["coll"]},{"name":"def apply(v1: T1, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, v7: T7, v8: T8, v9: T9, v10: T10, v11: T11, v12: T12, v13: T13, v14: T14, v15: T15, v16: T16): R","description":"scala.Function16","location":"api/scala/Function16.html","searchKeys":["apply"]},{"name":"val x$34: FromExpr[T13]","description":"scala.quoted.FromExpr$$Tuple21FromExpr","location":"api/scala/quoted/FromExpr$$Tuple21FromExpr.html","searchKeys":["x$34"]},{"name":"def fromClass[T](clazz: Class[T]): ClassTag[T]","description":"scala.reflect.ClassManifestFactory$","location":"api/scala/reflect/ClassManifestFactory$.html","searchKeys":["fromClass"]},{"name":"def _9: T9","description":"scala.Product13","location":"api/scala/Product13.html","searchKeys":["_9"]},{"name":"val doubleStreamShape: StreamShape[Double, DoubleStream, DoubleStepper]","description":"scala.collection.convert.StreamExtensions$$StreamShape$","location":"api/scala/collection/convert/StreamExtensions$$StreamShape$.html","searchKeys":["doubleStreamShape"]},{"name":"def flatMap[B](f: A => IterableOnce[B])(@implicitNotFound ev: Ordering[B]): CC[B]","description":"scala.collection.SortedSetOps","location":"api/scala/collection/SortedSetOps.html","searchKeys":["flatMap"]},{"name":"val +:: +:","description":"scala","location":"api/scala.html","searchKeys":["+:"]},{"name":"type ProductOf[T] = Product { type MirroredType = T; type MirroredMonoType = T; type MirroredElemTypes <: Tuple;  }","description":"scala.deriving.Mirror$","location":"api/scala/deriving/Mirror$.html","searchKeys":["ProductOf"]},{"name":"given RepeatedMethods","description":"scala.quoted.Quotes$reflectModule$RepeatedMethods","location":"api/scala/quoted/Quotes$reflectModule$RepeatedMethods.html","searchKeys":["RepeatedMethods"]},{"name":"def out(s: => String): Unit","description":"scala.sys.process.ProcessLogger","location":"api/scala/sys/process/ProcessLogger.html","searchKeys":["out"]},{"name":"def floorMod(x: Long, y: Long): Long","description":"scala.math","location":"api/scala/math.html","searchKeys":["floorMod"]},{"name":"def liftCo[F <: ([_$7] =>> Any)]: F[From] <:< F[To]","description":"scala.<:<","location":"api/scala/<:<.html","searchKeys":["liftCo"]},{"name":"object NameTags extends NameTags","description":"dotty.tools.tasty.TastyFormat$$NameTags$","location":"api/dotty/tools/tasty/TastyFormat$$NameTags$.html","searchKeys":["NameTags"]},{"name":"def asJavaDictionary[K, V](m: Map[K, V]): Dictionary[K, V]","description":"scala.collection.convert.AsJavaConverters","location":"api/scala/collection/convert/AsJavaConverters.html","searchKeys":["asJavaDictionary"]},{"name":"def toFloat(x: Short): Float","description":"scala.math.Numeric$$ShortIsIntegral","location":"api/scala/math/Numeric$$ShortIsIntegral.html","searchKeys":["toFloat"]},{"name":"def result(): C","description":"scala.collection.mutable.ImmutableBuilder","location":"api/scala/collection/mutable/ImmutableBuilder.html","searchKeys":["result"]},{"name":"def flatMap[V2](f: (Long, V) => IterableOnce[(Long, V2)]): LongMap[V2]","description":"scala.collection.mutable.LongMap","location":"api/scala/collection/mutable/LongMap.html","searchKeys":["flatMap"]},{"name":"def this()","description":"scala.util.Random","location":"api/scala/util/Random.html","searchKeys":["this"]},{"name":"def ordering: Ordering[K]","description":"scala.collection.immutable.SortedMap$$WithDefault","location":"api/scala/collection/immutable/SortedMap$$WithDefault.html","searchKeys":["ordering"]},{"name":"def asScala: Map[K, V]","description":"scala.collection.convert.AsScalaExtensions$DictionaryHasAsScala","location":"api/scala/collection/convert/AsScalaExtensions$DictionaryHasAsScala.html","searchKeys":["asScala"]},{"name":"type AppliedType <: TypeRepr","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["AppliedType"]},{"name":"object Product4","description":"scala.Product4$","location":"api/scala/Product4$.html","searchKeys":["Product4"]},{"name":"def quickSort[K](a: Array[K])(evidence$1: Ordering[K]): Unit","description":"scala.util.Sorting$","location":"api/scala/util/Sorting$.html","searchKeys":["quickSort"]},{"name":"def ceil(x: Double): Double","description":"scala.math","location":"api/scala/math.html","searchKeys":["ceil"]},{"name":"def <=(x: Short): Boolean","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["<="]},{"name":"def length: Int","description":"scala.collection.mutable.ArrayDeque","location":"api/scala/collection/mutable/ArrayDeque.html","searchKeys":["length"]},{"name":"def this(initialSize: Int)","description":"scala.collection.mutable.Stack","location":"api/scala/collection/mutable/Stack.html","searchKeys":["this"]},{"name":"Dropped: Delayedinit","description":"","location":"docs/reference/dropped-features/delayed-init.html","searchKeys":["Dropped: Delayedinit"]},{"name":"def BooleanClass: Symbol","description":"scala.quoted.Quotes$reflectModule$defnModule","location":"api/scala/quoted/Quotes$reflectModule$defnModule.html","searchKeys":["BooleanClass"]},{"name":"class DictionaryHasAsScala[K, V](d: Dictionary[K, V])","description":"scala.collection.convert.AsScalaExtensions$DictionaryHasAsScala","location":"api/scala/collection/convert/AsScalaExtensions$DictionaryHasAsScala.html","searchKeys":["DictionaryHasAsScala"]},{"name":"def binder: TypeRepr","description":"scala.quoted.Quotes$reflectModule$ParamRefMethods","location":"api/scala/quoted/Quotes$reflectModule$ParamRefMethods.html","searchKeys":["binder"]},{"name":"class ListBuffer[A] extends AbstractBuffer[A] with SeqOps[A, [A] =>> ListBuffer[A], ListBuffer[A]] with StrictOptimizedSeqOps[A, [A] =>> ListBuffer[A], ListBuffer[A]] with ReusableBuilder[A, List[A]] with IterableFactoryDefaults[A, [A] =>> ListBuffer[A]] with DefaultSerializable","description":"scala.collection.mutable.ListBuffer","location":"api/scala/collection/mutable/ListBuffer.html","searchKeys":["ListBuffer"]},{"name":"def clear(): Unit","description":"scala.ref.ReferenceWrapper","location":"api/scala/ref/ReferenceWrapper.html","searchKeys":["clear"]},{"name":"def unapply(x: TypeProjection): (TypeTree, String)","description":"scala.quoted.Quotes$reflectModule$TypeProjectionModule","location":"api/scala/quoted/Quotes$reflectModule$TypeProjectionModule.html","searchKeys":["unapply"]},{"name":"def this(ordering: Ordering[K])","description":"scala.collection.mutable.CollisionProofHashMap","location":"api/scala/collection/mutable/CollisionProofHashMap.html","searchKeys":["this"]},{"name":"def _11: T11","description":"scala.Product17","location":"api/scala/Product17.html","searchKeys":["_11"]},{"name":"def scala$collection$immutable$StrictOptimizedSeqOps$$super$sorted[B >: A](ord: Ordering[B]): C","description":"scala.collection.immutable.StrictOptimizedSeqOps","location":"api/scala/collection/immutable/StrictOptimizedSeqOps.html","searchKeys":["scala$collection$immutable$StrictOptimizedSeqOps$$super$sorted"]},{"name":"class AsJavaUnaryOperator[T](sf: T => T) extends UnaryOperator[T]","description":"scala.jdk.FunctionWrappers$$AsJavaUnaryOperator","location":"api/scala/jdk/FunctionWrappers$$AsJavaUnaryOperator.html","searchKeys":["AsJavaUnaryOperator"]},{"name":"def sortInPlaceBy[B](f: A => B)(ord: Ordering[B]): IndexedSeqOps[A, CC, C]","description":"scala.collection.mutable.IndexedSeqOps","location":"api/scala/collection/mutable/IndexedSeqOps.html","searchKeys":["sortInPlaceBy"]},{"name":"class FromJavaIntPredicate(jf: IntPredicate) extends Int => Boolean","description":"scala.jdk.FunctionWrappers$$FromJavaIntPredicate","location":"api/scala/jdk/FunctionWrappers$$FromJavaIntPredicate.html","searchKeys":["FromJavaIntPredicate"]},{"name":"def short2Short(x: Short): Short","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["short2Short"]},{"name":"class WithFilter(p: A => Boolean)","description":"scala.Option$WithFilter","location":"api/scala/Option$WithFilter.html","searchKeys":["WithFilter"]},{"name":"object FileProp extends CreatorImpl[File]","description":"scala.sys.Prop$$FileProp$","location":"api/scala/sys/Prop$$FileProp$.html","searchKeys":["FileProp"]},{"name":"class FromJavaToDoubleBiFunction[T, U](jf: ToDoubleBiFunction[T, U]) extends (T, U) => Double","description":"scala.jdk.FunctionWrappers$$FromJavaToDoubleBiFunction","location":"api/scala/jdk/FunctionWrappers$$FromJavaToDoubleBiFunction.html","searchKeys":["FromJavaToDoubleBiFunction"]},{"name":"def indexOf(str: String, fromIndex: Int): Int","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["indexOf"]},{"name":"def mutableMap AsJavaMap[K, V](m: Map[K, V]): Map[K, V]","description":"scala.collection.convert.ToJavaImplicits","location":"api/scala/collection/convert/ToJavaImplicits.html","searchKeys":["mutableMap AsJavaMap"]},{"name":"def Tuple5[T1, T2, T3, T4, T5](eqv1: Equiv[T1], eqv2: Equiv[T2], eqv3: Equiv[T3], eqv4: Equiv[T4], eqv5: Equiv[T5]): Equiv[(T1, T2, T3, T4, T5)]","description":"scala.math.Equiv$","location":"api/scala/math/Equiv$.html","searchKeys":["Tuple5"]},{"name":"class FromJavaDoublePredicate(jf: DoublePredicate) extends Double => Boolean","description":"scala.jdk.FunctionWrappers$$FromJavaDoublePredicate","location":"api/scala/jdk/FunctionWrappers$$FromJavaDoublePredicate.html","searchKeys":["FromJavaDoublePredicate"]},{"name":"given MatchTypeTreeTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["MatchTypeTreeTypeTest"]},{"name":"def mapAsScalaConcurrentMap[A, B](m: ConcurrentMap[A, B]): Map[A, B]","description":"scala.collection.JavaConverters$","location":"api/scala/collection/JavaConverters$.html","searchKeys":["mapAsScalaConcurrentMap"]},{"name":"class Option[+A] extends IterableOnce[A] with Product with Serializable","description":"scala.Option","location":"api/scala/Option.html","searchKeys":["Option"]},{"name":"def apply$mcIDD$sp(v1: Double, v2: Double): Int","description":"scala.runtime.java8.JFunction2$mcIDD$sp","location":"api/scala/runtime/java8/JFunction2$mcIDD$sp.html","searchKeys":["apply$mcIDD$sp"]},{"name":"trait QuoteUnpickler","description":"scala.quoted.runtime.QuoteUnpickler","location":"api/scala/quoted/runtime/QuoteUnpickler.html","searchKeys":["QuoteUnpickler"]},{"name":"def init: String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["init"]},{"name":"def ++[S >: T](that: IntMap[S]): IntMap[S]","description":"scala.collection.immutable.IntMap","location":"api/scala/collection/immutable/IntMap.html","searchKeys":["++"]},{"name":"def enrichAsJavaConsumer[T](sf: T => Unit): RichFunction1AsConsumer[T]","description":"scala.jdk.Priority1FunctionExtensions","location":"api/scala/jdk/Priority1FunctionExtensions.html","searchKeys":["enrichAsJavaConsumer"]},{"name":"type TypeBounds <: TypeRepr","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeBounds"]},{"name":"def this()","description":"scala.Enumeration$Val","location":"api/scala/Enumeration$Val.html","searchKeys":["this"]},{"name":"def get(key: K): Option[V]","description":"scala.collection.immutable.Map$$Map1","location":"api/scala/collection/immutable/Map$$Map1.html","searchKeys":["get"]},{"name":"def fill[T](n1: Int, n2: Int, n3: Int)(elem: => T)(evidence$14: ClassTag[T]): Array[Array[Array[T]]]","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["fill"]},{"name":"def last: A","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["last"]},{"name":"def apply(pattern: TypeTree, rhs: TypeTree): TypeCaseDef","description":"scala.quoted.Quotes$reflectModule$TypeCaseDefModule","location":"api/scala/quoted/Quotes$reflectModule$TypeCaseDefModule.html","searchKeys":["apply"]},{"name":"def TreeAnsiCode: Printer[Tree]","description":"scala.quoted.Quotes$reflectModule$PrinterModule","location":"api/scala/quoted/Quotes$reflectModule$PrinterModule.html","searchKeys":["TreeAnsiCode"]},{"name":"def curried: T1 => T2 => T3 => T4 => T5 => T6 => T7 => T8 => T9 => T10 => T11 => T12 => T13 => R","description":"scala.Function13","location":"api/scala/Function13.html","searchKeys":["curried"]},{"name":"val Inlined: InlinedModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Inlined"]},{"name":"def foldRight[B](z: B)(op: (A, B) => B): B","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["foldRight"]},{"name":"def matches(source: CharSequence): Boolean","description":"scala.util.matching.Regex","location":"api/scala/util/matching/Regex.html","searchKeys":["matches"]},{"name":"def lower(lo: TypeRepr): TypeBounds","description":"scala.quoted.Quotes$reflectModule$TypeBoundsModule","location":"api/scala/quoted/Quotes$reflectModule$TypeBoundsModule.html","searchKeys":["lower"]},{"name":"def from[E](it: IterableOnce[E]): View[E]","description":"scala.collection.View$","location":"api/scala/collection/View$.html","searchKeys":["from"]},{"name":"def empty[T]: IntMap[T]","description":"scala.collection.immutable.IntMap$","location":"api/scala/collection/immutable/IntMap$.html","searchKeys":["empty"]},{"name":"def apply(elems: Any*): TupleXXL","description":"scala.runtime.TupleXXL$","location":"api/scala/runtime/TupleXXL$.html","searchKeys":["apply"]},{"name":"def this(inputStream: InputStream)(codec: Codec)","description":"scala.io.BufferedSource","location":"api/scala/io/BufferedSource.html","searchKeys":["this"]},{"name":"def toInt(x: Char): Int","description":"scala.math.Numeric$$CharIsIntegral","location":"api/scala/math/Numeric$$CharIsIntegral.html","searchKeys":["toInt"]},{"name":"val x$2: FromExpr[T]","description":"scala.quoted.FromExpr$$ListFromExpr","location":"api/scala/quoted/FromExpr$$ListFromExpr.html","searchKeys":["x$2"]},{"name":"def lazyZip[B](that: Iterable[B]): LazyZip4[El1, El2, El3, B, C1]","description":"scala.collection.LazyZip3","location":"api/scala/collection/LazyZip3.html","searchKeys":["lazyZip"]},{"name":"object FunctionConverters","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["FunctionConverters"]},{"name":"def :\\[B](z: B)(op: (A, B) => B): B","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":[":\\"]},{"name":"def applyAsLong(x1: T, x2: U): Long","description":"scala.jdk.FunctionWrappers$$AsJavaToLongBiFunction","location":"api/scala/jdk/FunctionWrappers$$AsJavaToLongBiFunction.html","searchKeys":["applyAsLong"]},{"name":"given SummonFromTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["SummonFromTypeTest"]},{"name":"class Double extends AnyVal","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["Double"]},{"name":"object AnsiColor extends AnsiColor","description":"scala.io.AnsiColor$","location":"api/scala/io/AnsiColor$.html","searchKeys":["AnsiColor"]},{"name":"def _4: T4","description":"scala.Product8","location":"api/scala/Product8.html","searchKeys":["_4"]},{"name":"def is(that: Flags): Boolean","description":"scala.quoted.Quotes$reflectModule$FlagsMethods","location":"api/scala/quoted/Quotes$reflectModule$FlagsMethods.html","searchKeys":["is"]},{"name":"def apply(array: Array[Float])(using Quotes): Expr[Array[Float]]","description":"scala.quoted.ToExpr$$ArrayOfFloatToExpr$","location":"api/scala/quoted/ToExpr$$ArrayOfFloatToExpr$.html","searchKeys":["apply"]},{"name":"def removeLastWhile(f: A => Boolean): Seq[A]","description":"scala.collection.mutable.ArrayDeque","location":"api/scala/collection/mutable/ArrayDeque.html","searchKeys":["removeLastWhile"]},{"name":"package scala.util.matching","description":"scala.util.matching","location":"api/scala/util/matching.html","searchKeys":["scala.util.matching"]},{"name":"type SumOf[T] = Sum { type MirroredType = T; type MirroredMonoType = T; type MirroredElemTypes <: Tuple;  }","description":"scala.deriving.Mirror$","location":"api/scala/deriving/Mirror$.html","searchKeys":["SumOf"]},{"name":"given LambdaTypeTreeTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["LambdaTypeTreeTypeTest"]},{"name":"def asJavaParValueStream[K, V](m: Map[K, V]): Stream[V]","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaParValueStream"]},{"name":"object reflectiveCalls extends reflectiveCalls","description":"scala.languageFeature$$reflectiveCalls$","location":"api/scala/languageFeature$$reflectiveCalls$.html","searchKeys":["reflectiveCalls"]},{"name":"def dequeueOption: Option[(A, Queue[A])]","description":"scala.collection.immutable.Queue","location":"api/scala/collection/immutable/Queue.html","searchKeys":["dequeueOption"]},{"name":"val x$4: FromExpr[R]","description":"scala.quoted.FromExpr$$EitherFromExpr","location":"api/scala/quoted/FromExpr$$EitherFromExpr.html","searchKeys":["x$4"]},{"name":"def endsWith[B >: A](that: Iterable[B]): Boolean","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["endsWith"]},{"name":"def apply$mcD$sp(): Double","description":"scala.runtime.java8.JFunction0$mcD$sp","location":"api/scala/runtime/java8/JFunction0$mcD$sp.html","searchKeys":["apply$mcD$sp"]},{"name":"val Object: Manifest[Object]","description":"scala.reflect.Manifest$","location":"api/scala/reflect/Manifest$.html","searchKeys":["Object"]},{"name":"def name: String","description":"scala.quoted.Quotes$reflectModule$IdentMethods","location":"api/scala/quoted/Quotes$reflectModule$IdentMethods.html","searchKeys":["name"]},{"name":"trait SingletonModule","description":"scala.quoted.Quotes$reflectModule$SingletonModule","location":"api/scala/quoted/Quotes$reflectModule$SingletonModule.html","searchKeys":["SingletonModule"]},{"name":"class ofBoolean(val array: Array[Boolean]) extends ArraySeq[Boolean]","description":"scala.collection.mutable.ArraySeq$$ofBoolean","location":"api/scala/collection/mutable/ArraySeq$$ofBoolean.html","searchKeys":["ofBoolean"]},{"name":"def charAt(index: Int): Char","description":"scala.Predef$$ArrayCharSequence","location":"api/scala/Predef$$ArrayCharSequence.html","searchKeys":["charAt"]},{"name":"def arrayHashing[@specialized T]: ArrayHashing[T]","description":"scala.util.hashing.MurmurHash3$","location":"api/scala/util/hashing/MurmurHash3$.html","searchKeys":["arrayHashing"]},{"name":"def update(idx: Int, elem: A): Unit","description":"scala.collection.mutable.SeqOps","location":"api/scala/collection/mutable/SeqOps.html","searchKeys":["update"]},{"name":"def <=(x: Int): Boolean","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["<="]},{"name":"class WithFilter(p: T => Boolean)","description":"scala.util.Try$WithFilter","location":"api/scala/util/Try$WithFilter.html","searchKeys":["WithFilter"]},{"name":"def *(x: Byte): Int","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["*"]},{"name":"def flatMap[B](f: A => IterableOnce[B])(evidence$6: ClassTag[B]): Array[B]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["flatMap"]},{"name":"object BitSet extends SpecificIterableFactory[Int, BitSet]","description":"scala.collection.immutable.BitSet$","location":"api/scala/collection/immutable/BitSet$.html","searchKeys":["BitSet"]},{"name":"def _3: T3","description":"scala.Product7","location":"api/scala/Product7.html","searchKeys":["_3"]},{"name":"def update(@deprecatedName(\"idx\", \"2.13.0\") index: Int, elem: T): Unit","description":"scala.collection.mutable.ArraySeq","location":"api/scala/collection/mutable/ArraySeq.html","searchKeys":["update"]},{"name":"given ArrayOfIntToExpr: ToExpr[Array[Int]]","description":"scala.quoted.ToExpr$$ArrayOfIntToExpr$","location":"api/scala/quoted/ToExpr$.html","searchKeys":["ArrayOfIntToExpr"]},{"name":"val x$29: FromExpr[T12]","description":"scala.quoted.FromExpr$$Tuple17FromExpr","location":"api/scala/quoted/FromExpr$$Tuple17FromExpr.html","searchKeys":["x$29"]},{"name":"def --=(xs: IterableOnce[A]): Shrinkable[A]","description":"scala.collection.mutable.Shrinkable","location":"api/scala/collection/mutable/Shrinkable.html","searchKeys":["--="]},{"name":"def _14: T14","description":"scala.Product22","location":"api/scala/Product22.html","searchKeys":["_14"]},{"name":"def result: T","description":"scala.util.control.NonLocalReturns$$ReturnThrowable","location":"api/scala/util/control/NonLocalReturns$$ReturnThrowable.html","searchKeys":["result"]},{"name":"def applyAsDouble(x1: Double, x2: Double): Double","description":"scala.jdk.FunctionWrappers$$AsJavaDoubleBinaryOperator","location":"api/scala/jdk/FunctionWrappers$$AsJavaDoubleBinaryOperator.html","searchKeys":["applyAsDouble"]},{"name":"given AmbiguousImplicitsTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["AmbiguousImplicitsTypeTest"]},{"name":"val x$23: FromExpr[T9]","description":"scala.quoted.FromExpr$$Tuple14FromExpr","location":"api/scala/quoted/FromExpr$$Tuple14FromExpr.html","searchKeys":["x$23"]},{"name":"trait ConstantModule","description":"scala.quoted.Quotes$reflectModule$ConstantModule","location":"api/scala/quoted/Quotes$reflectModule$ConstantModule.html","searchKeys":["ConstantModule"]},{"name":"def fromURL(url: URL, enc: String): BufferedSource","description":"scala.io.Source$","location":"api/scala/io/Source$.html","searchKeys":["fromURL"]},{"name":"def div(other: Duration): Double","description":"scala.concurrent.duration.Duration","location":"api/scala/concurrent/duration/Duration.html","searchKeys":["div"]},{"name":"def apply(tup: (T1, T2, T3, T4, T5, T6, T7, T8))(using Quotes): Expr[(T1, T2, T3, T4, T5, T6, T7, T8)]","description":"scala.quoted.ToExpr$$Tuple8ToExpr","location":"api/scala/quoted/ToExpr$$Tuple8ToExpr.html","searchKeys":["apply"]},{"name":"def hour: FiniteDuration","description":"scala.concurrent.duration.DurationConversions","location":"api/scala/concurrent/duration/DurationConversions.html","searchKeys":["hour"]},{"name":"def withOut[T](out: OutputStream)(thunk: => T): T","description":"scala.Console$","location":"api/scala/Console$.html","searchKeys":["withOut"]},{"name":"class IteratorHasAsJava[A](i: Iterator[A])","description":"scala.collection.convert.AsJavaExtensions$IteratorHasAsJava","location":"api/scala/collection/convert/AsJavaExtensions$IteratorHasAsJava.html","searchKeys":["IteratorHasAsJava"]},{"name":"def copy(original: Tree)(qualifier: Term, name: String, levels: Int): SelectOuter","description":"scala.quoted.Quotes$reflectModule$SelectOuterModule","location":"api/scala/quoted/Quotes$reflectModule$SelectOuterModule.html","searchKeys":["copy"]},{"name":"def newBuilder[A](evidence$3: ClassTag[A]): Builder[A, ArraySeq[A]]","description":"scala.collection.mutable.ArraySeq$","location":"api/scala/collection/mutable/ArraySeq$.html","searchKeys":["newBuilder"]},{"name":"object FunctionWrappers","description":"scala.jdk.FunctionWrappers$","location":"api/scala/jdk/FunctionWrappers$.html","searchKeys":["FunctionWrappers"]},{"name":"def appendedAll[B >: A](suffix: SomeIndexedSeqOps[B]): IndexedSeqView[B]","description":"scala.collection.IndexedSeqView","location":"api/scala/collection/IndexedSeqView.html","searchKeys":["appendedAll"]},{"name":"def copy(original: Tree)(meth: Tree, tpe: Option[TypeRepr]): Closure","description":"scala.quoted.Quotes$reflectModule$ClosureModule","location":"api/scala/quoted/Quotes$reflectModule$ClosureModule.html","searchKeys":["copy"]},{"name":"def iterator: Iterator[A]","description":"scala.collection.SeqView$$Reverse","location":"api/scala/collection/SeqView$$Reverse.html","searchKeys":["iterator"]},{"name":"trait JFunction2$mcJII$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcJII$sp","location":"api/scala/runtime/java8/JFunction2$mcJII$sp.html","searchKeys":["JFunction2$mcJII$sp"]},{"name":"type ArrayStack[X] = Stack[X]","description":"scala.collection.mutable","location":"api/scala/collection/mutable.html","searchKeys":["ArrayStack"]},{"name":"given ImportMethods","description":"scala.quoted.Quotes$reflectModule$ImportMethods","location":"api/scala/quoted/Quotes$reflectModule$ImportMethods.html","searchKeys":["ImportMethods"]},{"name":"def apply[K, V](elems: (K, V)*)(evidence$28: Ordering[K]): CC[K, V]","description":"scala.collection.SortedMapFactory","location":"api/scala/collection/SortedMapFactory.html","searchKeys":["apply"]},{"name":"class Tabulate[A](n: Int)(f: Int => A) extends AbstractView[A]","description":"scala.collection.View$$Tabulate","location":"api/scala/collection/View$$Tabulate.html","searchKeys":["Tabulate"]},{"name":"val x$2: FromExpr[T]","description":"scala.quoted.FromExpr$$SeqFromExpr","location":"api/scala/quoted/FromExpr$$SeqFromExpr.html","searchKeys":["x$2"]},{"name":"def test(x1: T): Boolean","description":"scala.jdk.FunctionWrappers$$AsJavaPredicate","location":"api/scala/jdk/FunctionWrappers$$AsJavaPredicate.html","searchKeys":["test"]},{"name":"def appendedAll[B >: A](suffix: Array[ <: B])(evidence$17: ClassTag[B]): Array[B]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["appendedAll"]},{"name":"class BooleanBeanProperty extends StaticAnnotation","description":"scala.beans.BooleanBeanProperty","location":"api/scala/beans/BooleanBeanProperty.html","searchKeys":["BooleanBeanProperty"]},{"name":"def ^(x: Short): Int","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["^"]},{"name":"def removed(key: K): C","description":"scala.collection.immutable.MapOps","location":"api/scala/collection/immutable/MapOps.html","searchKeys":["removed"]},{"name":"given SeqToExpr[T]: ToExpr[Seq[T]]","description":"scala.quoted.ToExpr$$SeqToExpr","location":"api/scala/quoted/ToExpr$.html","searchKeys":["SeqToExpr"]},{"name":"def equals(that: Any): Boolean","description":"scala.Equals","location":"api/scala/Equals.html","searchKeys":["equals"]},{"name":"def id: Option[String]","description":"scala.quoted.Quotes$reflectModule$ThisMethods","location":"api/scala/quoted/Quotes$reflectModule$ThisMethods.html","searchKeys":["id"]},{"name":"class AsJavaIntFunction[R](sf: Int => R) extends IntFunction[R]","description":"scala.jdk.FunctionWrappers$$AsJavaIntFunction","location":"api/scala/jdk/FunctionWrappers$$AsJavaIntFunction.html","searchKeys":["AsJavaIntFunction"]},{"name":"object Process extends ProcessImpl with ProcessCreation","description":"scala.sys.process.Process$","location":"api/scala/sys/process/Process$.html","searchKeys":["Process"]},{"name":"def iterableOnceExtensionMethods[A](it: IterableOnce[A]): IterableOnceExtensionMethods[A]","description":"scala.collection.IterableOnce$","location":"api/scala/collection/IterableOnce$.html","searchKeys":["iterableOnceExtensionMethods"]},{"name":"def >=(x: Short): Boolean","description":"scala.Short","location":"api/scala/Short.html","searchKeys":[">="]},{"name":"def zip[T](that: IArray[U])(evidence$15: ClassTag[U]): IArray[(T, U)]","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["zip"]},{"name":"def lengthIs: Int","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["lengthIs"]},{"name":"trait IndexedSeq[+A] extends Seq[A] with IndexedSeq[A] with IndexedSeqOps[A, [A] =>> IndexedSeq[A], IndexedSeq[A]] with IterableFactoryDefaults[A, [A] =>> IndexedSeq[A]]","description":"scala.collection.immutable.IndexedSeq","location":"api/scala/collection/immutable/IndexedSeq.html","searchKeys":["IndexedSeq"]},{"name":"def clearAndShrink(size: Int): ArrayDeque[A]","description":"scala.collection.mutable.ArrayDeque","location":"api/scala/collection/mutable/ArrayDeque.html","searchKeys":["clearAndShrink"]},{"name":"def foreach[U](f: A => U): Unit","description":"scala.collection.ArrayOps$$WithFilter","location":"api/scala/collection/ArrayOps$$WithFilter.html","searchKeys":["foreach"]},{"name":"def exp(x: Double): Double","description":"scala.math","location":"api/scala/math.html","searchKeys":["exp"]},{"name":"def mutableSeqAsJavaListConverter[A](b: Seq[A]): AsJava[List[A]]","description":"scala.collection.JavaConverters$","location":"api/scala/collection/JavaConverters$.html","searchKeys":["mutableSeqAsJavaListConverter"]},{"name":"def fromExecutor(e: Executor): ExecutionContextExecutor","description":"scala.concurrent.ExecutionContext$","location":"api/scala/concurrent/ExecutionContext$.html","searchKeys":["fromExecutor"]},{"name":"def take(n: Int): Array[A]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["take"]},{"name":"def clear(): Unit","description":"scala.collection.mutable.ArrayBuffer","location":"api/scala/collection/mutable/ArrayBuffer.html","searchKeys":["clear"]},{"name":"object 3.1","description":"scala.language$$3.1$","location":"api/scala/language$$3/1$.html","searchKeys":["3.1"]},{"name":"class RichLongConsumerAsFunction1(underlying: LongConsumer) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichLongConsumerAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichLongConsumerAsFunction1.html","searchKeys":["RichLongConsumerAsFunction1"]},{"name":"def _2: T2","description":"scala.Product17","location":"api/scala/Product17.html","searchKeys":["_2"]},{"name":"def >=[B >: A](that: B)(evidence$5: () => B): Boolean","description":"scala.math.PartiallyOrdered","location":"api/scala/math/PartiallyOrdered.html","searchKeys":[">="]},{"name":"def enrichAsJavaLongToIntFunction[A0](sf: A0 => Int)(evA0: A0 =:= Long): RichFunction1AsLongToIntFunction","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsJavaLongToIntFunction"]},{"name":"def from[A](it: IterableOnce[A])(evidence$2: ClassTag[A]): ArraySeq[A]","description":"scala.collection.mutable.ArraySeq$","location":"api/scala/collection/mutable/ArraySeq$.html","searchKeys":["from"]},{"name":"def this()","description":"scala.collection.immutable.HashSet","location":"api/scala/collection/immutable/HashSet.html","searchKeys":["this"]},{"name":"trait StreamUnboxer[A, S]","description":"scala.collection.convert.StreamExtensions$$StreamUnboxer","location":"api/scala/collection/convert/StreamExtensions$$StreamUnboxer.html","searchKeys":["StreamUnboxer"]},{"name":"def update(idx: Long, elem: Long): Unit","description":"scala.jdk.LongAccumulator","location":"api/scala/jdk/LongAccumulator.html","searchKeys":["update"]},{"name":"def unboxedDoubleAdder: ObjDoubleConsumer[AnyAccumulator[Double]]","description":"scala.jdk.AnyAccumulator$","location":"api/scala/jdk/AnyAccumulator$.html","searchKeys":["unboxedDoubleAdder"]},{"name":"def _10: T10","description":"scala.Product14","location":"api/scala/Product14.html","searchKeys":["_10"]},{"name":"def appliedToArgs(args: List[Term]): Apply","description":"scala.quoted.Quotes$reflectModule$TermMethods","location":"api/scala/quoted/Quotes$reflectModule$TermMethods.html","searchKeys":["appliedToArgs"]},{"name":"val Inferred: InferredModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Inferred"]},{"name":"object Seq extends Delegate[[A] =>> Seq[A]]","description":"scala.collection.Seq$","location":"api/scala/collection/Seq$.html","searchKeys":["Seq"]},{"name":"Implicit Function Types","description":"","location":"blog/2016/12/05/implicit-function-types.html","searchKeys":["Implicit Function Types"]},{"name":"class UninitializedFieldError(msg: String) extends RuntimeException","description":"scala.UninitializedFieldError","location":"api/scala/UninitializedFieldError.html","searchKeys":["UninitializedFieldError"]},{"name":"def indexOf[B >: A](elem: B, from: Int): Int","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["indexOf"]},{"name":"def <(x: Char): Boolean","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["<"]},{"name":"def Implicit: Flags","description":"scala.quoted.Quotes$reflectModule$FlagsModule","location":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html","searchKeys":["Implicit"]},{"name":"def repr: C","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["repr"]},{"name":"val LAMBDAtpt: 171","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["LAMBDAtpt"]},{"name":"def isBinaryFloat: Boolean","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["isBinaryFloat"]},{"name":"type ^[X <: Boolean, Y <: Boolean] <: Boolean","description":"scala.compiletime.ops.boolean$","location":"api/scala/compiletime/ops/boolean$.html","searchKeys":["^"]},{"name":"def Tuple9[T1, T2, T3, T4, T5, T6, T7, T8, T9](ord1: Ordering[T1], ord2: Ordering[T2], ord3: Ordering[T3], ord4: Ordering[T4], ord5: Ordering[T5], ord6: Ordering[T6], ord7: Ordering[T7], ord8: Ordering[T8], ord9: Ordering[T9]): Ordering[(T1, T2, T3, T4, T5, T6, T7, T8, T9)]","description":"scala.math.Ordering$","location":"api/scala/math/Ordering$.html","searchKeys":["Tuple9"]},{"name":"def from[A](source: IterableOnce[A]): AnyAccumulator[A]","description":"scala.jdk.AnyAccumulator$","location":"api/scala/jdk/AnyAccumulator$.html","searchKeys":["from"]},{"name":"val x$6: Type[T6]","description":"scala.quoted.FromExpr$$Tuple9FromExpr","location":"api/scala/quoted/FromExpr$$Tuple9FromExpr.html","searchKeys":["x$6"]},{"name":"def newGenericArray[T](length: Int)(tag: ClassTag[T]): Array[T]","description":"scala.runtime.Arrays$","location":"api/scala/runtime/Arrays$.html","searchKeys":["newGenericArray"]},{"name":"def _5: T5","description":"scala.Product18","location":"api/scala/Product18.html","searchKeys":["_5"]},{"name":"type OrType <: AndOrType","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["OrType"]},{"name":"def apply$mcZDI$sp(v1: Double, v2: Int): Boolean","description":"scala.runtime.java8.JFunction2$mcZDI$sp","location":"api/scala/runtime/java8/JFunction2$mcZDI$sp.html","searchKeys":["apply$mcZDI$sp"]},{"name":"def lastIndexOf[T](elem: T, end: Int): Int","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["lastIndexOf"]},{"name":"trait Product14[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14] extends Product","description":"scala.Product14","location":"api/scala/Product14.html","searchKeys":["Product14"]},{"name":"given IfTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["IfTypeTest"]},{"name":"def exact(l: Long): BigDecimal","description":"scala.math.BigDecimal$","location":"api/scala/math/BigDecimal$.html","searchKeys":["exact"]},{"name":"def filter(p: A => Boolean): Iterator[A]","description":"scala.collection.Iterator","location":"api/scala/collection/Iterator.html","searchKeys":["filter"]},{"name":"trait RecursiveTypeModule","description":"scala.quoted.Quotes$reflectModule$RecursiveTypeModule","location":"api/scala/quoted/Quotes$reflectModule$RecursiveTypeModule.html","searchKeys":["RecursiveTypeModule"]},{"name":"def -(x: Short): Float","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["-"]},{"name":"def range[A](start: A, end: A, step: A)(evidence$5: Integral[A], evidence$6: ClassTag[A]): CC[A]","description":"scala.collection.ClassTagIterableFactory","location":"api/scala/collection/ClassTagIterableFactory.html","searchKeys":["range"]},{"name":"class Unit extends AnyVal","description":"scala.Unit","location":"api/scala/Unit.html","searchKeys":["Unit"]},{"name":"def unapply(x: TypeRef): (TypeRepr, String)","description":"scala.quoted.Quotes$reflectModule$TypeRefModule","location":"api/scala/quoted/Quotes$reflectModule$TypeRefModule.html","searchKeys":["unapply"]},{"name":"def |(x: Boolean): Boolean","description":"scala.Boolean","location":"api/scala/Boolean.html","searchKeys":["|"]},{"name":"def iteratorFrom(start: K): Iterator[(K, V)]","description":"scala.collection.immutable.SortedMap$$WithDefault","location":"api/scala/collection/immutable/SortedMap$$WithDefault.html","searchKeys":["iteratorFrom"]},{"name":"given TypeProjectionTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeProjectionTypeTest"]},{"name":"trait Product22[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16, +T17, +T18, +T19, +T20, +T21, +T22] extends Product","description":"scala.Product22","location":"api/scala/Product22.html","searchKeys":["Product22"]},{"name":"class Annotation","description":"scala.annotation.Annotation","location":"api/scala/annotation/Annotation.html","searchKeys":["Annotation"]},{"name":"def asJavaObjDoubleConsumer[T](sf: (T, Double) => BoxedUnit): ObjDoubleConsumer[T]","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asJavaObjDoubleConsumer"]},{"name":"def result(): Array[Unit]","description":"scala.collection.mutable.ArrayBuilder$$ofUnit","location":"api/scala/collection/mutable/ArrayBuilder$$ofUnit.html","searchKeys":["result"]},{"name":"def booleanArrayOps(xs: Array[Boolean]): ArrayOps[Boolean]","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["booleanArrayOps"]},{"name":"def span(p: A => Boolean): (Iterator[A], Iterator[A])","description":"scala.collection.Iterator","location":"api/scala/collection/Iterator.html","searchKeys":["span"]},{"name":"def excl(elem: A): C","description":"scala.collection.immutable.SetOps","location":"api/scala/collection/immutable/SetOps.html","searchKeys":["excl"]},{"name":"type MirroredType = Singleton","description":"scala.deriving.Mirror$$Singleton","location":"api/scala/deriving/Mirror$$Singleton.html","searchKeys":["MirroredType"]},{"name":"def from[E](it: IterableOnce[E]): CC[E]","description":"scala.collection.IterableFactory$$Delegate","location":"api/scala/collection/IterableFactory$$Delegate.html","searchKeys":["from"]},{"name":"def from[A](source: IterableOnce[A]): Queue[A]","description":"scala.collection.mutable.Queue$","location":"api/scala/collection/mutable/Queue$.html","searchKeys":["from"]},{"name":"def apply$mcB$sp(): Byte","description":"scala.runtime.java8.JFunction0$mcB$sp","location":"api/scala/runtime/java8/JFunction0$mcB$sp.html","searchKeys":["apply$mcB$sp"]},{"name":"def subgroups: List[String]","description":"scala.util.matching.Regex$$MatchData","location":"api/scala/util/matching/Regex$$MatchData.html","searchKeys":["subgroups"]},{"name":"val Short: ShortManifest","description":"scala.reflect.ClassManifestFactory$","location":"api/scala/reflect/ClassManifestFactory$.html","searchKeys":["Short"]},{"name":"def _1: T1","description":"scala.Product12","location":"api/scala/Product12.html","searchKeys":["_1"]},{"name":"def >(x: Byte): Boolean","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":[">"]},{"name":"def this()","description":"scala.Enumeration","location":"api/scala/Enumeration.html","searchKeys":["this"]},{"name":"def fill[A](n1: Int, n2: Int, n3: Int, n4: Int, n5: Int)(elem: => A)(evidence$10: ClassTag[A]): CC[CC[CC[CC[CC[A]]]]]","description":"scala.collection.ClassTagIterableFactory","location":"api/scala/collection/ClassTagIterableFactory.html","searchKeys":["fill"]},{"name":"def flatMap[K2, V2](f: (K, V) => IterableOnce[(K2, V2)])(evidence$2: Ordering[K2]): CC[K2, V2]","description":"scala.collection.SortedMapOps$$WithFilter","location":"api/scala/collection/SortedMapOps$$WithFilter.html","searchKeys":["flatMap"]},{"name":"def isSuccess: Boolean","description":"scala.util.Try","location":"api/scala/util/Try.html","searchKeys":["isSuccess"]},{"name":"def |(x: Short): Int","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["|"]},{"name":"def add(receiver: Class[], m: Method): Method","description":"scala.runtime.StructuralCallSite","location":"api/scala/runtime/StructuralCallSite.html","searchKeys":["add"]},{"name":"def fromStepper(st: St, par: Boolean): S","description":"scala.collection.convert.StreamExtensions$$StreamShape","location":"api/scala/collection/convert/StreamExtensions$$StreamShape.html","searchKeys":["fromStepper"]},{"name":"def foreachEntry[U](f: (K, V) => U): Unit","description":"scala.collection.mutable.CollisionProofHashMap$$RBNode","location":"api/scala/collection/mutable/CollisionProofHashMap$$RBNode.html","searchKeys":["foreachEntry"]},{"name":"def unary_-: Float","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["unary_-"]},{"name":"given ListFromExpr[T](using val x$1: Type[T], val x$2: FromExpr[T]): FromExpr[List[T]]","description":"scala.quoted.FromExpr$$ListFromExpr","location":"api/scala/quoted/FromExpr$$ListFromExpr.html","searchKeys":["ListFromExpr"]},{"name":"trait ClosureModule","description":"scala.quoted.Quotes$reflectModule$ClosureModule","location":"api/scala/quoted/Quotes$reflectModule$ClosureModule.html","searchKeys":["ClosureModule"]},{"name":"trait TypeBlockModule","description":"scala.quoted.Quotes$reflectModule$TypeBlockModule","location":"api/scala/quoted/Quotes$reflectModule$TypeBlockModule.html","searchKeys":["TypeBlockModule"]},{"name":"val x$4: Type[T4]","description":"scala.quoted.FromExpr$$Tuple19FromExpr","location":"api/scala/quoted/FromExpr$$Tuple19FromExpr.html","searchKeys":["x$4"]},{"name":"def empty: C","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["empty"]},{"name":"given ConstantTypeMethods","description":"scala.quoted.Quotes$reflectModule$ConstantTypeMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ConstantTypeMethods"]},{"name":"def unapply(x: AppliedType): (TypeRepr, List[TypeRepr])","description":"scala.quoted.Quotes$reflectModule$AppliedTypeModule","location":"api/scala/quoted/Quotes$reflectModule$AppliedTypeModule.html","searchKeys":["unapply"]},{"name":"val MatchTypeTree: MatchTypeTreeModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["MatchTypeTree"]},{"name":"var bytes: Array[Byte]","description":"dotty.tools.tasty.TastyBuffer","location":"api/dotty/tools/tasty/TastyBuffer.html","searchKeys":["bytes"]},{"name":"def parent: TypeRepr","description":"scala.quoted.Quotes$reflectModule$RefinementMethods","location":"api/scala/quoted/Quotes$reflectModule$RefinementMethods.html","searchKeys":["parent"]},{"name":"Pattern Bindings","description":"","location":"docs/reference/changed-features/pattern-bindings.html","searchKeys":["Pattern Bindings"]},{"name":"val x$13: Type[T13]","description":"scala.quoted.FromExpr$$Tuple16FromExpr","location":"api/scala/quoted/FromExpr$$Tuple16FromExpr.html","searchKeys":["x$13"]},{"name":"def apply(i: Int): A","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["apply"]},{"name":"def subtractOne(elem: K): CollisionProofHashMap[K, V]","description":"scala.collection.mutable.CollisionProofHashMap","location":"api/scala/collection/mutable/CollisionProofHashMap.html","searchKeys":["subtractOne"]},{"name":"def appliedTo(targs: List[TypeRepr]): TypeRepr","description":"scala.quoted.Quotes$reflectModule$TypeReprMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html","searchKeys":["appliedTo"]},{"name":"def update(index: Int, elem: Char): Unit","description":"scala.collection.mutable.ArraySeq$$ofChar","location":"api/scala/collection/mutable/ArraySeq$$ofChar.html","searchKeys":["update"]},{"name":"def ofDim[T](n1: Int, n2: Int)(evidence$7: ClassTag[T]): Array[Array[T]]","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["ofDim"]},{"name":"given Tuple18ToExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18]: ToExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18)]","description":"scala.quoted.ToExpr$$Tuple18ToExpr","location":"api/scala/quoted/ToExpr$.html","searchKeys":["Tuple18ToExpr"]},{"name":"val Int: IntManifest","description":"scala.reflect.ClassTag$","location":"api/scala/reflect/ClassTag$.html","searchKeys":["Int"]},{"name":"val start: Int","description":"scala.util.matching.Regex$$Match","location":"api/scala/util/matching/Regex$$Match.html","searchKeys":["start"]},{"name":"def qualifier: Term","description":"scala.quoted.Quotes$reflectModule$SuperMethods","location":"api/scala/quoted/Quotes$reflectModule$SuperMethods.html","searchKeys":["qualifier"]},{"name":"def !=(x: Double): Boolean","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["!="]},{"name":"def asJava: BiPredicate[T, U]","description":"scala.jdk.FunctionWrappers$$RichFunction2AsBiPredicate","location":"api/scala/jdk/FunctionWrappers$$RichFunction2AsBiPredicate.html","searchKeys":["asJava"]},{"name":"def runWith[U](action: B => U): A => Boolean","description":"scala.PartialFunction","location":"api/scala/PartialFunction.html","searchKeys":["runWith"]},{"name":"def +(x: Float): Double","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["+"]},{"name":"def headTail: (T, Ordering[T])","description":"scala.collection.immutable.TreeSeqMap$$Ordering","location":"api/scala/collection/immutable/TreeSeqMap$$Ordering.html","searchKeys":["headTail"]},{"name":"def emptyObjectIArray: IArray[Object]","description":"scala.IArray$package$$IArray$","location":"api/scala/IArray$package$$IArray$.html","searchKeys":["emptyObjectIArray"]},{"name":"def curried: T1 => T2 => T3 => T4 => T5 => T6 => T7 => T8 => T9 => T10 => T11 => T12 => T13 => T14 => T15 => T16 => T17 => T18 => T19 => T20 => R","description":"scala.Function20","location":"api/scala/Function20.html","searchKeys":["curried"]},{"name":"val underlying: Reference[ <: T]","description":"scala.ref.ReferenceWrapper","location":"api/scala/ref/ReferenceWrapper.html","searchKeys":["underlying"]},{"name":"val WildcardTypeTree: WildcardTypeTreeModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["WildcardTypeTree"]},{"name":"type MirroredMonoType","description":"scala.deriving.Mirror","location":"api/scala/deriving/Mirror.html","searchKeys":["MirroredMonoType"]},{"name":"type SeqLike[A, T] = SeqOps[A, [A] =>> Seq[A], T]","description":"scala.collection","location":"api/scala/collection.html","searchKeys":["SeqLike"]},{"name":"def valueManifests: List[AnyValManifest[]]","description":"scala.reflect.Manifest$","location":"api/scala/reflect/Manifest$.html","searchKeys":["valueManifests"]},{"name":"val CHARconst: 69","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["CHARconst"]},{"name":"class IterableHasAsScala[A](i: Iterable[A])","description":"scala.collection.convert.AsScalaExtensions$IterableHasAsScala","location":"api/scala/collection/convert/AsScalaExtensions$IterableHasAsScala.html","searchKeys":["IterableHasAsScala"]},{"name":"def value: Byte","description":"scala.runtime.LazyByte","location":"api/scala/runtime/LazyByte.html","searchKeys":["value"]},{"name":"def processFully(processLine: String => Unit): InputStream => Unit","description":"scala.sys.process.BasicIO$","location":"api/scala/sys/process/BasicIO$.html","searchKeys":["processFully"]},{"name":"def catching[T](exceptions: Class[]*): Catch[T]","description":"scala.util.control.Exception$","location":"api/scala/util/control/Exception$.html","searchKeys":["catching"]},{"name":"val x$12: Type[T12]","description":"scala.quoted.FromExpr$$Tuple19FromExpr","location":"api/scala/quoted/FromExpr$$Tuple19FromExpr.html","searchKeys":["x$12"]},{"name":"def -(x: Long): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["-"]},{"name":"def !=(x: Short): Boolean","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["!="]},{"name":"def >=(x: Float): Boolean","description":"scala.Short","location":"api/scala/Short.html","searchKeys":[">="]},{"name":"trait BindModule","description":"scala.quoted.Quotes$reflectModule$BindModule","location":"api/scala/quoted/Quotes$reflectModule$BindModule.html","searchKeys":["BindModule"]},{"name":"def appliedToTypes(targs: List[TypeRepr]): Term","description":"scala.quoted.Quotes$reflectModule$TermMethods","location":"api/scala/quoted/Quotes$reflectModule$TermMethods.html","searchKeys":["appliedToTypes"]},{"name":"given ByNameTypeMethods","description":"scala.quoted.Quotes$reflectModule$ByNameTypeMethods","location":"api/scala/quoted/Quotes$reflectModule$ByNameTypeMethods.html","searchKeys":["ByNameTypeMethods"]},{"name":"def reserveAddr(): Addr","description":"dotty.tools.tasty.TastyBuffer","location":"api/dotty/tools/tasty/TastyBuffer.html","searchKeys":["reserveAddr"]},{"name":"def replaceAllLiterally(literal: String, replacement: String): String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["replaceAllLiterally"]},{"name":"def tupled: (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) => R","description":"scala.Function19","location":"api/scala/Function19.html","searchKeys":["tupled"]},{"name":"def _7: T7","description":"scala.Product12","location":"api/scala/Product12.html","searchKeys":["_7"]},{"name":"def addOne(elem: Short): ofShort","description":"scala.collection.mutable.ArrayBuilder$$ofShort","location":"api/scala/collection/mutable/ArrayBuilder$$ofShort.html","searchKeys":["addOne"]},{"name":"trait PartialOrdering[T] extends Equiv[T]","description":"scala.math.PartialOrdering","location":"api/scala/math/PartialOrdering.html","searchKeys":["PartialOrdering"]},{"name":"def end(i: Int): Int","description":"scala.util.matching.Regex$$Match","location":"api/scala/util/matching/Regex$$Match.html","searchKeys":["end"]},{"name":"def compare(that: BigDecimal): Int","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["compare"]},{"name":"def flatMap[A1, B1 >: B](f: A => Either[A1, B1]): Either[A1, B1]","description":"scala.util.Either$$LeftProjection","location":"api/scala/util/Either$$LeftProjection.html","searchKeys":["flatMap"]},{"name":"def Tuple3[T1, T2, T3](ord1: Ordering[T1], ord2: Ordering[T2], ord3: Ordering[T3]): Ordering[(T1, T2, T3)]","description":"scala.math.Ordering$","location":"api/scala/math/Ordering$.html","searchKeys":["Tuple3"]},{"name":"def mutableSet AsJavaSet[A](s: Set[A]): Set[A]","description":"scala.collection.convert.ToJavaImplicits","location":"api/scala/collection/convert/ToJavaImplicits.html","searchKeys":["mutableSet AsJavaSet"]},{"name":"val SUPER: 157","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["SUPER"]},{"name":"def declaredType(name: String): List[Symbol]","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["declaredType"]},{"name":"def insert(index: Int, x: Any): StringBuilder","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["insert"]},{"name":"package scala.deriving","description":"scala.deriving","location":"api/scala/deriving.html","searchKeys":["scala.deriving"]},{"name":"def day: FiniteDuration","description":"scala.concurrent.duration.DurationConversions","location":"api/scala/concurrent/duration/DurationConversions.html","searchKeys":["day"]},{"name":"def unzip[U, V](evidence$13: ClassTag[U], evidence$14: ClassTag[V]): (IArray[U], IArray[V])","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["unzip"]},{"name":"val x$5: Type[T5]","description":"scala.quoted.FromExpr$$Tuple12FromExpr","location":"api/scala/quoted/FromExpr$$Tuple12FromExpr.html","searchKeys":["x$5"]},{"name":"def asJavaConsumer: Consumer[T]","description":"scala.jdk.FunctionWrappers$$RichFunction1AsConsumer","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsConsumer.html","searchKeys":["asJavaConsumer"]},{"name":"type Typed <: Term","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Typed"]},{"name":"val self: Short","description":"scala.runtime.RichShort","location":"api/scala/runtime/RichShort.html","searchKeys":["self"]},{"name":"val x$36: FromExpr[T15]","description":"scala.quoted.FromExpr$$Tuple21FromExpr","location":"api/scala/quoted/FromExpr$$Tuple21FromExpr.html","searchKeys":["x$36"]},{"name":"trait JFunction2$mcZDD$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcZDD$sp","location":"api/scala/runtime/java8/JFunction2$mcZDD$sp.html","searchKeys":["JFunction2$mcZDD$sp"]},{"name":"def iterator asScala[A](it: Iterator[A]): Iterator[A]","description":"scala.collection.convert.ToScalaImplicits","location":"api/scala/collection/convert/ToScalaImplicits.html","searchKeys":["iterator asScala"]},{"name":"def _15: T15","description":"scala.Product18","location":"api/scala/Product18.html","searchKeys":["_15"]},{"name":"def %(x: Byte): Int","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["%"]},{"name":"def onUnmappableCharacter(newAction: CodingErrorAction): Codec","description":"scala.io.Codec","location":"api/scala/io/Codec.html","searchKeys":["onUnmappableCharacter"]},{"name":"trait IsMap[Repr] extends IsIterable[Repr]","description":"scala.collection.generic.IsMap","location":"api/scala/collection/generic/IsMap.html","searchKeys":["IsMap"]},{"name":"def toBuildFrom[V](factory: IntMap): BuildFrom[Any, (Int, V), IntMap[V]]","description":"scala.collection.immutable.IntMap$","location":"api/scala/collection/immutable/IntMap$.html","searchKeys":["toBuildFrom"]},{"name":"type +[X <: String, Y <: String] <: String","description":"scala.compiletime.ops.string$","location":"api/scala/compiletime/ops/string$.html","searchKeys":["+"]},{"name":"def enrichAsJavaIntFunction[A0, R](sf: A0 => R)(evA0: A0 =:= Int): RichFunction1AsIntFunction[R]","description":"scala.jdk.Priority1FunctionExtensions","location":"api/scala/jdk/Priority1FunctionExtensions.html","searchKeys":["enrichAsJavaIntFunction"]},{"name":"val x$2: Type[R]","description":"scala.quoted.FromExpr$$RightFromExpr","location":"api/scala/quoted/FromExpr$$RightFromExpr.html","searchKeys":["x$2"]},{"name":"given PositionMethods","description":"scala.quoted.Quotes$reflectModule$PositionMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["PositionMethods"]},{"name":"def from[E](it: IterableOnce[E])(evidence$3: Ordering[E]): PriorityQueue[E]","description":"scala.collection.mutable.PriorityQueue$","location":"api/scala/collection/mutable/PriorityQueue$.html","searchKeys":["from"]},{"name":"def isTraversableAgain: Boolean","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["isTraversableAgain"]},{"name":"def asJavaBiPredicate: BiPredicate[T, U]","description":"scala.jdk.FunctionWrappers$$RichFunction2AsBiPredicate","location":"api/scala/jdk/FunctionWrappers$$RichFunction2AsBiPredicate.html","searchKeys":["asJavaBiPredicate"]},{"name":"val MaxValue: 1.7976931348623157E308","description":"scala.Double$","location":"api/scala/Double$.html","searchKeys":["MaxValue"]},{"name":"given SetFromExpr[T](using val x$1: Type[T], val x$2: FromExpr[T]): FromExpr[Set[T]]","description":"scala.quoted.FromExpr$$SetFromExpr","location":"api/scala/quoted/FromExpr$$SetFromExpr.html","searchKeys":["SetFromExpr"]},{"name":"def rint(x: Double): Double","description":"scala.math","location":"api/scala/math.html","searchKeys":["rint"]},{"name":"def signum(x: Long): Long","description":"scala.math","location":"api/scala/math.html","searchKeys":["signum"]},{"name":"def *(x: Char): Float","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["*"]},{"name":"val array: Array[T]","description":"scala.collection.mutable.ArraySeq$$ofRef","location":"api/scala/collection/mutable/ArraySeq$$ofRef.html","searchKeys":["array"]},{"name":"def modifyOrRemove[S](f: (Int, T) => Option[S]): Ordering[S]","description":"scala.collection.immutable.TreeSeqMap$$Ordering","location":"api/scala/collection/immutable/TreeSeqMap$$Ordering.html","searchKeys":["modifyOrRemove"]},{"name":"def apply$mcDJJ$sp(v1: Long, v2: Long): Double","description":"scala.runtime.java8.JFunction2$mcDJJ$sp","location":"api/scala/runtime/java8/JFunction2$mcDJJ$sp.html","searchKeys":["apply$mcDJJ$sp"]},{"name":"trait SortedMap[K, +V] extends Map[K, V] with SortedMap[K, V] with SortedMapOps[K, V, [K, V] =>> SortedMap[K, V], SortedMap[K, V]] with SortedMapFactoryDefaults[K, V, [K, V] =>> SortedMap[K, V], [A] =>> Iterable[A], [K, V] =>> Map[K, V]]","description":"scala.collection.immutable.SortedMap","location":"api/scala/collection/immutable/SortedMap.html","searchKeys":["SortedMap"]},{"name":"def ofDim[T](n1: Int)(evidence$6: ClassTag[T]): Array[T]","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["ofDim"]},{"name":"object LazyZip2","description":"scala.collection.LazyZip2$","location":"api/scala/collection/LazyZip2$.html","searchKeys":["LazyZip2"]},{"name":"trait TypeBindModule","description":"scala.quoted.Quotes$reflectModule$TypeBindModule","location":"api/scala/quoted/Quotes$reflectModule$TypeBindModule.html","searchKeys":["TypeBindModule"]},{"name":"def Integer2int(x: Integer): Int","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["Integer2int"]},{"name":"val x$18: FromExpr[T7]","description":"scala.quoted.FromExpr$$Tuple11FromExpr","location":"api/scala/quoted/FromExpr$$Tuple11FromExpr.html","searchKeys":["x$18"]},{"name":"object BuildFrom extends BuildFromLowPriority1","description":"scala.collection.BuildFrom$","location":"api/scala/collection/BuildFrom$.html","searchKeys":["BuildFrom"]},{"name":"def charAt(index: Int): Char","description":"scala.runtime.ArrayCharSequence","location":"api/scala/runtime/ArrayCharSequence.html","searchKeys":["charAt"]},{"name":"def foldLeft[B](z: B)(op: (B, A) => B): B","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["foldLeft"]},{"name":"trait Described","description":"scala.util.control.Exception$$Described","location":"api/scala/util/control/Exception$$Described.html","searchKeys":["Described"]},{"name":"val x$1: Type[T1]","description":"scala.quoted.FromExpr$$Tuple12FromExpr","location":"api/scala/quoted/FromExpr$$Tuple12FromExpr.html","searchKeys":["x$1"]},{"name":"def companionModule: Symbol","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["companionModule"]},{"name":"class StringBuilder(val underlying: StringBuilder) extends AbstractSeq[Char] with ReusableBuilder[Char, String] with IndexedSeq[Char] with IndexedSeqOps[Char, [T] =>> IndexedSeq[T], StringBuilder] with IterableFactoryDefaults[Char, [T] =>> IndexedSeq[T]] with CharSequence with Serializable","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["StringBuilder"]},{"name":"def hasNext: Boolean","description":"scala.util.matching.Regex$$MatchIterator","location":"api/scala/util/matching/Regex$$MatchIterator.html","searchKeys":["hasNext"]},{"name":"def reverseMap[B](f: A => B): CC[B]","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["reverseMap"]},{"name":"def orderedCompanion: PriorityQueue","description":"scala.collection.mutable.PriorityQueue","location":"api/scala/collection/mutable/PriorityQueue.html","searchKeys":["orderedCompanion"]},{"name":"type StringOps = StringOps","description":"scala.collection.immutable","location":"api/scala/collection/immutable.html","searchKeys":["StringOps"]},{"name":"def takeWhile(p: A => Boolean): Iterator[A]","description":"scala.collection.Iterator","location":"api/scala/collection/Iterator.html","searchKeys":["takeWhile"]},{"name":"def paramNum: Int","description":"scala.quoted.Quotes$reflectModule$ParamRefMethods","location":"api/scala/quoted/Quotes$reflectModule$ParamRefMethods.html","searchKeys":["paramNum"]},{"name":"def apply$mcJIJ$sp(v1: Int, v2: Long): Long","description":"scala.runtime.java8.JFunction2$mcJIJ$sp","location":"api/scala/runtime/java8/JFunction2$mcJIJ$sp.html","searchKeys":["apply$mcJIJ$sp"]},{"name":"def rangeImpl(from: Option[K], until: Option[K]): WithDefault[K, V]","description":"scala.collection.mutable.SortedMap$$WithDefault","location":"api/scala/collection/mutable/SortedMap$$WithDefault.html","searchKeys":["rangeImpl"]},{"name":"object IntProp extends CreatorImpl[Int]","description":"scala.sys.Prop$$IntProp$","location":"api/scala/sys/Prop$$IntProp$.html","searchKeys":["IntProp"]},{"name":"def incl(value: Value): ValueSet","description":"scala.Enumeration$ValueSet","location":"api/scala/Enumeration$ValueSet.html","searchKeys":["incl"]},{"name":"def unzip3[A1, A2, A3](asTriple: A => (A1, A2, A3)): (CC[A1], CC[A2], CC[A3])","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["unzip3"]},{"name":"class DropRight[A](underlying: SomeIterableOps[A], n: Int) extends AbstractView[A]","description":"scala.collection.View$$DropRight","location":"api/scala/collection/View$$DropRight.html","searchKeys":["DropRight"]},{"name":"def unbox(x: Object): Boolean","description":"scala.Boolean$","location":"api/scala/Boolean$.html","searchKeys":["unbox"]},{"name":"def unapply[T <: AnyRef](wr: WeakReference[T]): Option[T]","description":"scala.ref.WeakReference$","location":"api/scala/ref/WeakReference$.html","searchKeys":["unapply"]},{"name":"def remainder(that: BigDecimal): BigDecimal","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["remainder"]},{"name":"def view: StringView","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["view"]},{"name":"def toByteOption: Option[Byte]","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["toByteOption"]},{"name":"type Symbol <: AnyRef","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Symbol"]},{"name":"def apply(sym: Symbol): TypeTree","description":"scala.quoted.Quotes$reflectModule$TypeIdentModule","location":"api/scala/quoted/Quotes$reflectModule$TypeIdentModule.html","searchKeys":["apply"]},{"name":"def distinctBy[B](f: A => B): Iterator[A]","description":"scala.collection.Iterator","location":"api/scala/collection/Iterator.html","searchKeys":["distinctBy"]},{"name":"val x$1: Type[T1]","description":"scala.quoted.FromExpr$$Tuple7FromExpr","location":"api/scala/quoted/FromExpr$$Tuple7FromExpr.html","searchKeys":["x$1"]},{"name":"def random(): Double","description":"scala.math","location":"api/scala/math.html","searchKeys":["random"]},{"name":"def toBuildFrom[K, V, CC <: ([_$63, _$64] =>> Any)](factory: SortedMapFactory[CC])(evidence$43: Ordering[K]): BuildFrom[Any, (K, V), CC[K, V]]","description":"scala.collection.SortedMapFactory$","location":"api/scala/collection/SortedMapFactory$.html","searchKeys":["toBuildFrom"]},{"name":"def -(x: Int): Int","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["-"]},{"name":"def qualifier: Term","description":"scala.quoted.Quotes$reflectModule$SelectOuterMethods","location":"api/scala/quoted/Quotes$reflectModule$SelectOuterMethods.html","searchKeys":["qualifier"]},{"name":"object FutureConverters","description":"scala.jdk.FutureConverters$","location":"api/scala/jdk/FutureConverters$.html","searchKeys":["FutureConverters"]},{"name":"def toList: List[A]","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["toList"]},{"name":"def slice(from: Int, until: Int): Iterator[A]","description":"scala.collection.Iterator","location":"api/scala/collection/Iterator.html","searchKeys":["slice"]},{"name":"def >(x: Short): Boolean","description":"scala.Double","location":"api/scala/Double.html","searchKeys":[">"]},{"name":"def classType[T](prefix: OptManifest[], clazz: Class[], args: OptManifest[]*): ClassTag[T]","description":"scala.reflect.ClassManifestFactory$","location":"api/scala/reflect/ClassManifestFactory$.html","searchKeys":["classType"]},{"name":"def isEmpty: Boolean","description":"scala.collection.immutable.VectorBuilder","location":"api/scala/collection/immutable/VectorBuilder.html","searchKeys":["isEmpty"]},{"name":"type Clearable = Clearable","description":"scala.collection.generic","location":"api/scala/collection/generic.html","searchKeys":["Clearable"]},{"name":"def Tuple8[T1, T2, T3, T4, T5, T6, T7, T8](ord1: Ordering[T1], ord2: Ordering[T2], ord3: Ordering[T3], ord4: Ordering[T4], ord5: Ordering[T5], ord6: Ordering[T6], ord7: Ordering[T7], ord8: Ordering[T8]): Ordering[(T1, T2, T3, T4, T5, T6, T7, T8)]","description":"scala.math.Ordering$","location":"api/scala/math/Ordering$.html","searchKeys":["Tuple8"]},{"name":"class ByteArrayHasSeqParStream(a: Array[Byte])","description":"scala.collection.convert.StreamExtensions$ByteArrayHasSeqParStream","location":"api/scala/collection/convert/StreamExtensions$ByteArrayHasSeqParStream.html","searchKeys":["ByteArrayHasSeqParStream"]},{"name":"def _17: T17","description":"scala.Product20","location":"api/scala/Product20.html","searchKeys":["_17"]},{"name":"def value: Float","description":"scala.runtime.LazyFloat","location":"api/scala/runtime/LazyFloat.html","searchKeys":["value"]},{"name":"def plus(x: BigInt, y: BigInt): BigInt","description":"scala.math.Numeric$$BigIntIsIntegral","location":"api/scala/math/Numeric$$BigIntIsIntegral.html","searchKeys":["plus"]},{"name":"def constant(key: String, isOn: Boolean): BooleanProp","description":"scala.sys.BooleanProp$","location":"api/scala/sys/BooleanProp$.html","searchKeys":["constant"]},{"name":"def length: Int","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["length"]},{"name":"trait JFunction1$mcII$sp extends Any => Any with Serializable","description":"scala.runtime.java8.JFunction1$mcII$sp","location":"api/scala/runtime/java8/JFunction1$mcII$sp.html","searchKeys":["JFunction1$mcII$sp"]},{"name":"def apply(x: Some[T])(using Quotes): Expr[Some[T]]","description":"scala.quoted.ToExpr$$SomeToExpr","location":"api/scala/quoted/ToExpr$$SomeToExpr.html","searchKeys":["apply"]},{"name":"def foldLeft[B](z: B)(op: (B, A) => B): B","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["foldLeft"]},{"name":"def length: Int","description":"scala.collection.immutable.ArraySeq$$ofByte","location":"api/scala/collection/immutable/ArraySeq$$ofByte.html","searchKeys":["length"]},{"name":"trait IntOrdering extends Ordering[Int]","description":"scala.math.Ordering$$IntOrdering","location":"api/scala/math/Ordering$$IntOrdering.html","searchKeys":["IntOrdering"]},{"name":"def toJavaGeneric: Optional[Long]","description":"scala.jdk.OptionConverters$$RichOptionalLong","location":"api/scala/jdk/OptionConverters$$RichOptionalLong.html","searchKeys":["toJavaGeneric"]},{"name":"def compare(x: Byte, y: Byte): Int","description":"scala.math.Ordering$$ByteOrdering","location":"api/scala/math/Ordering$$ByteOrdering.html","searchKeys":["compare"]},{"name":"def tupled: (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21) => R","description":"scala.Function21","location":"api/scala/Function21.html","searchKeys":["tupled"]},{"name":"def prepare(): ExecutionContext","description":"scala.concurrent.ExecutionContext","location":"api/scala/concurrent/ExecutionContext.html","searchKeys":["prepare"]},{"name":"def _3: T3","description":"scala.Product17","location":"api/scala/Product17.html","searchKeys":["_3"]},{"name":"class uncheckedVariance extends StaticAnnotation","description":"scala.annotation.unchecked.uncheckedVariance","location":"api/scala/annotation/unchecked/uncheckedVariance.html","searchKeys":["uncheckedVariance"]},{"name":"def _1: T1","description":"scala.Product9","location":"api/scala/Product9.html","searchKeys":["_1"]},{"name":"def unapply(x: TypeBounds): (TypeRepr, TypeRepr)","description":"scala.quoted.Quotes$reflectModule$TypeBoundsModule","location":"api/scala/quoted/Quotes$reflectModule$TypeBoundsModule.html","searchKeys":["unapply"]},{"name":"def asDigit: Int","description":"scala.runtime.RichChar","location":"api/scala/runtime/RichChar.html","searchKeys":["asDigit"]},{"name":"trait Factory[-A, +C]","description":"scala.collection.Factory","location":"api/scala/collection/Factory.html","searchKeys":["Factory"]},{"name":"trait JFunction0$mcJ$sp extends () => Any with Serializable","description":"scala.runtime.java8.JFunction0$mcJ$sp","location":"api/scala/runtime/java8/JFunction0$mcJ$sp.html","searchKeys":["JFunction0$mcJ$sp"]},{"name":"def --(keys: IterableOnce[K]): C","description":"scala.collection.MapOps","location":"api/scala/collection/MapOps.html","searchKeys":["--"]},{"name":"def iterator: Iterator[(K, V)]","description":"scala.collection.mutable.AnyRefMap","location":"api/scala/collection/mutable/AnyRefMap.html","searchKeys":["iterator"]},{"name":"def array_update(xs: AnyRef, idx: Int, value: Any): Unit","description":"scala.runtime.ScalaRunTime$","location":"api/scala/runtime/ScalaRunTime$.html","searchKeys":["array_update"]},{"name":"def ::[B >: A](elem: B): List[B]","description":"scala.collection.immutable.List","location":"api/scala/collection/immutable/List.html","searchKeys":["::"]},{"name":"def Package: Flags","description":"scala.quoted.Quotes$reflectModule$FlagsModule","location":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html","searchKeys":["Package"]},{"name":"val x$7: Type[T7]","description":"scala.quoted.FromExpr$$Tuple20FromExpr","location":"api/scala/quoted/FromExpr$$Tuple20FromExpr.html","searchKeys":["x$7"]},{"name":"def +(x: Short): Int","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["+"]},{"name":"def ++[This >: Tuple <: Tuple](that: Tuple): Concat[This, that]","description":"scala.Tuple","location":"api/scala/Tuple.html","searchKeys":["++"]},{"name":"object #::","description":"scala.collection.immutable.Stream$$#::$","location":"api/scala/collection/immutable/Stream$$#::$.html","searchKeys":["#::"]},{"name":"def apply[A](xs: A*)(evidence$17: Ev[A]): CC[A]","description":"scala.collection.EvidenceIterableFactory","location":"api/scala/collection/EvidenceIterableFactory.html","searchKeys":["apply"]},{"name":"def &(that: Flags): Flags","description":"scala.quoted.Quotes$reflectModule$FlagsMethods","location":"api/scala/quoted/Quotes$reflectModule$FlagsMethods.html","searchKeys":["&"]},{"name":"type TypeBlock <: TypeTree","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeBlock"]},{"name":"given NilFromExpr: FromExpr[Nil]","description":"scala.quoted.FromExpr$$NilFromExpr$","location":"api/scala/quoted/FromExpr$$NilFromExpr$.html","searchKeys":["NilFromExpr"]},{"name":"def OptionClass: Symbol","description":"scala.quoted.Quotes$reflectModule$defnModule","location":"api/scala/quoted/Quotes$reflectModule$defnModule.html","searchKeys":["OptionClass"]},{"name":"def _6: T6","description":"scala.Product18","location":"api/scala/Product18.html","searchKeys":["_6"]},{"name":"val x$34: FromExpr[T16]","description":"scala.quoted.FromExpr$$Tuple18FromExpr","location":"api/scala/quoted/FromExpr$$Tuple18FromExpr.html","searchKeys":["x$34"]},{"name":"class ImmutableBuilder[-A, C <: IterableOnce[]](empty: C) extends ReusableBuilder[A, C]","description":"scala.collection.mutable.ImmutableBuilder","location":"api/scala/collection/mutable/ImmutableBuilder.html","searchKeys":["ImmutableBuilder"]},{"name":"def copySign(magnitude: Float, sign: Float): Float","description":"scala.math","location":"api/scala/math.html","searchKeys":["copySign"]},{"name":"object ClassManifestFactory","description":"scala.reflect.ClassManifestFactory$","location":"api/scala/reflect/ClassManifestFactory$.html","searchKeys":["ClassManifestFactory"]},{"name":"def nonFatalCatcher[T]: Catcher[T]","description":"scala.util.control.Exception$","location":"api/scala/util/control/Exception$.html","searchKeys":["nonFatalCatcher"]},{"name":"def decimal(bd: BigDecimal, mc: MathContext): BigDecimal","description":"scala.math.BigDecimal$","location":"api/scala/math/BigDecimal$.html","searchKeys":["decimal"]},{"name":"def spliterator[B >: Double]: OfDouble","description":"scala.collection.DoubleStepper","location":"api/scala/collection/DoubleStepper.html","searchKeys":["spliterator"]},{"name":"val CharShape: Shape","description":"scala.collection.StepperShape$","location":"api/scala/collection/StepperShape$.html","searchKeys":["CharShape"]},{"name":"def asJavaSeqStream: LongStream","description":"scala.collection.convert.StreamExtensions$LongArrayHasSeqParStream","location":"api/scala/collection/convert/StreamExtensions$LongArrayHasSeqParStream.html","searchKeys":["asJavaSeqStream"]},{"name":"var tabinc: Int","description":"scala.io.Source$Positioner","location":"api/scala/io/Source$Positioner.html","searchKeys":["tabinc"]},{"name":"def filter(pred: Char => Boolean): String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["filter"]},{"name":"given LongConstantTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["LongConstantTypeTest"]},{"name":"def warning(msg: String): Unit","description":"scala.quoted.Quotes$reflectModule$reportModule","location":"api/scala/quoted/Quotes$reflectModule$reportModule.html","searchKeys":["warning"]},{"name":"given ValDefTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ValDefTypeTest"]},{"name":"def apply(sym: Symbol, pattern: Tree): Bind","description":"scala.quoted.Quotes$reflectModule$BindModule","location":"api/scala/quoted/Quotes$reflectModule$BindModule.html","searchKeys":["apply"]},{"name":"def from[A](empty: Growable[A], it: IterableOnce[A]): empty","description":"scala.collection.mutable.Growable$","location":"api/scala/collection/mutable/Growable$.html","searchKeys":["from"]},{"name":"def >(x: Double): Boolean","description":"scala.Long","location":"api/scala/Long.html","searchKeys":[">"]},{"name":"given ThisMethods","description":"scala.quoted.Quotes$reflectModule$ThisMethods","location":"api/scala/quoted/Quotes$reflectModule$ThisMethods.html","searchKeys":["ThisMethods"]},{"name":"def compare(x: Float, y: Float): Int","description":"scala.math.Ordering$$Float$$TotalOrdering","location":"api/scala/math/Ordering$$Float$$TotalOrdering.html","searchKeys":["compare"]},{"name":"val Return: ReturnModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Return"]},{"name":"def force: Cons[A]","description":"scala.collection.immutable.Stream$$Cons","location":"api/scala/collection/immutable/Stream$$Cons.html","searchKeys":["force"]},{"name":"val x$8: FromExpr[T3]","description":"scala.quoted.FromExpr$$Tuple5FromExpr","location":"api/scala/quoted/FromExpr$$Tuple5FromExpr.html","searchKeys":["x$8"]},{"name":"def _14: T14","description":"scala.Product15","location":"api/scala/Product15.html","searchKeys":["_14"]},{"name":"class RichOptionalDouble(o: OptionalDouble) extends AnyVal","description":"scala.jdk.OptionConverters$$RichOptionalDouble","location":"api/scala/jdk/OptionConverters$$RichOptionalDouble.html","searchKeys":["RichOptionalDouble"]},{"name":"def +(x: Double): Double","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["+"]},{"name":"def apply(array: Array[Boolean])(using Quotes): Expr[Array[Boolean]]","description":"scala.quoted.ToExpr$$ArrayOfBooleanToExpr$","location":"api/scala/quoted/ToExpr$$ArrayOfBooleanToExpr$.html","searchKeys":["apply"]},{"name":"def iterator: Iterator[(El1, El2)]","description":"scala.runtime.ZippedIterable2","location":"api/scala/runtime/ZippedIterable2.html","searchKeys":["iterator"]},{"name":"def run(log: ProcessLogger): Process","description":"scala.sys.process.ProcessBuilder","location":"api/scala/sys/process/ProcessBuilder.html","searchKeys":["run"]},{"name":"def asJavaCollection[A](i: Iterable[A]): Collection[A]","description":"scala.collection.convert.AsJavaConverters","location":"api/scala/collection/convert/AsJavaConverters.html","searchKeys":["asJavaCollection"]},{"name":"def unapply(x: Expr[(T1, T2, T3, T4, T5, T6, T7, T8, T9)])(using Quotes): Option[(T1, T2, T3, T4, T5, T6, T7, T8, T9)]","description":"scala.quoted.FromExpr$$Tuple9FromExpr","location":"api/scala/quoted/FromExpr$$Tuple9FromExpr.html","searchKeys":["unapply"]},{"name":"type ||[X <: Boolean, Y <: Boolean] <: Boolean","description":"scala.compiletime.ops.boolean$","location":"api/scala/compiletime/ops/boolean$.html","searchKeys":["||"]},{"name":"def mkOrderingOps(lhs: T): OrderingOps","description":"scala.math.Ordering","location":"api/scala/math/Ordering.html","searchKeys":["mkOrderingOps"]},{"name":"val x$7: Type[T7]","description":"scala.quoted.FromExpr$$Tuple11FromExpr","location":"api/scala/quoted/FromExpr$$Tuple11FromExpr.html","searchKeys":["x$7"]},{"name":"val x$8: Type[T8]","description":"scala.quoted.FromExpr$$Tuple19FromExpr","location":"api/scala/quoted/FromExpr$$Tuple19FromExpr.html","searchKeys":["x$8"]},{"name":"type Assign <: Term","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Assign"]},{"name":"given Tuple14FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14](using val x$1: Type[T1], val x$2: Type[T2], val x$3: Type[T3], val x$4: Type[T4], val x$5: Type[T5], val x$6: Type[T6], val x$7: Type[T7], val x$8: Type[T8], val x$9: Type[T9], val x$10: Type[T10], val x$11: Type[T11], val x$12: Type[T12], val x$13: Type[T13], val x$14: Type[T14], val x$15: FromExpr[T1], val x$16: FromExpr[T2], val x$17: FromExpr[T3], val x$18: FromExpr[T4], val x$19: FromExpr[T5], val x$20: FromExpr[T6], val x$21: FromExpr[T7], val x$22: FromExpr[T8], val x$23: FromExpr[T9], val x$24: FromExpr[T10], val x$25: FromExpr[T11], val x$26: FromExpr[T12], val x$27: FromExpr[T13], val x$28: FromExpr[T14]): FromExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)]","description":"scala.quoted.FromExpr$$Tuple14FromExpr","location":"api/scala/quoted/FromExpr$$Tuple14FromExpr.html","searchKeys":["Tuple14FromExpr"]},{"name":"trait JFunction1$mcVI$sp extends Any => Any with Serializable","description":"scala.runtime.java8.JFunction1$mcVI$sp","location":"api/scala/runtime/java8/JFunction1$mcVI$sp.html","searchKeys":["JFunction1$mcVI$sp"]},{"name":"def fromInt(x: Int): Double","description":"scala.math.Numeric$$DoubleIsFractional","location":"api/scala/math/Numeric$$DoubleIsFractional.html","searchKeys":["fromInt"]},{"name":"def apply(x1: T): T","description":"scala.jdk.FunctionWrappers$$FromJavaUnaryOperator","location":"api/scala/jdk/FunctionWrappers$$FromJavaUnaryOperator.html","searchKeys":["apply"]},{"name":"val REVERSED: \"\\033[7m\"","description":"scala.io.AnsiColor","location":"api/scala/io/AnsiColor.html","searchKeys":["REVERSED"]},{"name":"def patch[B >: A](from: Int, other: IterableOnce[B], replaced: Int)(evidence$24: ClassTag[B]): Array[B]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["patch"]},{"name":"def dictionaryAsScalaMap[A, B](p: Dictionary[A, B]): Map[A, B]","description":"scala.collection.JavaConverters$","location":"api/scala/collection/JavaConverters$.html","searchKeys":["dictionaryAsScalaMap"]},{"name":"val Boolean: BooleanManifest","description":"scala.reflect.ManifestFactory$","location":"api/scala/reflect/ManifestFactory$.html","searchKeys":["Boolean"]},{"name":"def split(separator: Char): Array[String]","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["split"]},{"name":"trait ExecutionContextExecutorService extends ExecutionContextExecutor with ExecutorService","description":"scala.concurrent.ExecutionContextExecutorService","location":"api/scala/concurrent/ExecutionContextExecutorService.html","searchKeys":["ExecutionContextExecutorService"]},{"name":"def toBuildFrom[K <: AnyRef, V](factory: AnyRefMap): BuildFrom[Any, (K, V), AnyRefMap[K, V]]","description":"scala.collection.mutable.AnyRefMap$","location":"api/scala/collection/mutable/AnyRefMap$.html","searchKeys":["toBuildFrom"]},{"name":"def ofSeqIntStepper(st: IntStepper): AnyStepper[Int]","description":"scala.collection.AnyStepper$","location":"api/scala/collection/AnyStepper$.html","searchKeys":["ofSeqIntStepper"]},{"name":"def iterator: Iterator[(K, W)]","description":"scala.collection.MapView$$MapValues","location":"api/scala/collection/MapView$$MapValues.html","searchKeys":["iterator"]},{"name":"def asJava: BooleanSupplier","description":"scala.jdk.FunctionWrappers$$RichFunction0AsBooleanSupplier","location":"api/scala/jdk/FunctionWrappers$$RichFunction0AsBooleanSupplier.html","searchKeys":["asJava"]},{"name":"class Tuple11[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11](_1: T1, _2: T2, _3: T3, _4: T4, _5: T5, _6: T6, _7: T7, _8: T8, _9: T9, _10: T10, _11: T11) extends Product11[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11]","description":"scala.Tuple11","location":"api/scala/Tuple11.html","searchKeys":["Tuple11"]},{"name":"class Tuple3[+T1, +T2, +T3](_1: T1, _2: T2, _3: T3) extends Product3[T1, T2, T3]","description":"scala.Tuple3","location":"api/scala/Tuple3.html","searchKeys":["Tuple3"]},{"name":"def abs: T","description":"scala.math.Numeric$NumericOps","location":"api/scala/math/Numeric$NumericOps.html","searchKeys":["abs"]},{"name":"def newBuilder[K, V]: ReusableBuilder[(K, V), ListMap[K, V]]","description":"scala.collection.immutable.ListMap$","location":"api/scala/collection/immutable/ListMap$.html","searchKeys":["newBuilder"]},{"name":"def charArrayOps(xs: Array[Char]): ArrayOps[Char]","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["charArrayOps"]},{"name":"val value: T","description":"scala.runtime.NonLocalReturnControl","location":"api/scala/runtime/NonLocalReturnControl.html","searchKeys":["value"]},{"name":"def apply(i: Int): Int","description":"scala.collection.immutable.ArraySeq$$ofInt","location":"api/scala/collection/immutable/ArraySeq$$ofInt.html","searchKeys":["apply"]},{"name":"class varargs extends StaticAnnotation","description":"scala.annotation.varargs","location":"api/scala/annotation/varargs.html","searchKeys":["varargs"]},{"name":"def apply$mcVJ$sp(v1: Long): Unit","description":"scala.runtime.java8.JFunction1$mcVJ$sp","location":"api/scala/runtime/java8/JFunction1$mcVJ$sp.html","searchKeys":["apply$mcVJ$sp"]},{"name":"val x$16: FromExpr[T6]","description":"scala.quoted.FromExpr$$Tuple10FromExpr","location":"api/scala/quoted/FromExpr$$Tuple10FromExpr.html","searchKeys":["x$16"]},{"name":"trait StepperShape[-T, S <: Stepper[]]","description":"scala.collection.StepperShape","location":"api/scala/collection/StepperShape.html","searchKeys":["StepperShape"]},{"name":"def /(x: Byte): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["/"]},{"name":"val TypeLambda: TypeLambdaModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeLambda"]},{"name":"class unchecked extends Annotation","description":"scala.unchecked","location":"api/scala/unchecked.html","searchKeys":["unchecked"]},{"name":"def from[E](it: IterableOnce[E])(evidence$15: Ev[E]): CC[E]","description":"scala.collection.EvidenceIterableFactory","location":"api/scala/collection/EvidenceIterableFactory.html","searchKeys":["from"]},{"name":"def betaReduce[T](expr: Expr[T])(using Quotes): Expr[T]","description":"scala.quoted.Expr$","location":"api/scala/quoted/Expr$.html","searchKeys":["betaReduce"]},{"name":"val elems0: Long","description":"scala.collection.immutable.BitSet$$BitSet2","location":"api/scala/collection/immutable/BitSet$$BitSet2.html","searchKeys":["elems0"]},{"name":"def >=(that: String): Boolean","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":[">="]},{"name":"def from(from: A): C","description":"scala.collection.SortedOps","location":"api/scala/collection/SortedOps.html","searchKeys":["from"]},{"name":"def asScala: () => Boolean","description":"scala.jdk.FunctionWrappers$$RichBooleanSupplierAsFunction0","location":"api/scala/jdk/FunctionWrappers$$RichBooleanSupplierAsFunction0.html","searchKeys":["asScala"]},{"name":"given TypeBoundsTreeTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeBoundsTreeTypeTest"]},{"name":"def <=(x: Byte): Boolean","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["<="]},{"name":"trait JFunction0$mcI$sp extends () => Any with Serializable","description":"scala.runtime.java8.JFunction0$mcI$sp","location":"api/scala/runtime/java8/JFunction0$mcI$sp.html","searchKeys":["JFunction0$mcI$sp"]},{"name":"def fromNodes(xs: Iterator[Node], size: Int): RBNode[K, V]","description":"scala.collection.mutable.CollisionProofHashMap","location":"api/scala/collection/mutable/CollisionProofHashMap.html","searchKeys":["fromNodes"]},{"name":"trait TermModule","description":"scala.quoted.Quotes$reflectModule$TermModule","location":"api/scala/quoted/Quotes$reflectModule$TermModule.html","searchKeys":["TermModule"]},{"name":"def asJavaParIntStreamFromByte(cc: IterableOnce[Byte]): IntStream","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaParIntStreamFromByte"]},{"name":"def elsep: Term","description":"scala.quoted.Quotes$reflectModule$IfMethods","location":"api/scala/quoted/Quotes$reflectModule$IfMethods.html","searchKeys":["elsep"]},{"name":"def unapply(x: MatchType): (TypeRepr, TypeRepr, List[TypeRepr])","description":"scala.quoted.Quotes$reflectModule$MatchTypeModule","location":"api/scala/quoted/Quotes$reflectModule$MatchTypeModule.html","searchKeys":["unapply"]},{"name":"def fromFile(file: File, enc: String): BufferedSource","description":"scala.io.Source$","location":"api/scala/io/Source$.html","searchKeys":["fromFile"]},{"name":"def unapply(x: Inlined): (Option[Tree], List[Definition], Term)","description":"scala.quoted.Quotes$reflectModule$InlinedModule","location":"api/scala/quoted/Quotes$reflectModule$InlinedModule.html","searchKeys":["unapply"]},{"name":"def this()","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["this"]},{"name":"trait FunctionXXL","description":"scala.runtime.FunctionXXL","location":"api/scala/runtime/FunctionXXL.html","searchKeys":["FunctionXXL"]},{"name":"def rangeUntil(until: A): C","description":"scala.collection.SortedOps","location":"api/scala/collection/SortedOps.html","searchKeys":["rangeUntil"]},{"name":"def clear(): Unit","description":"scala.collection.mutable.ArrayBuilder","location":"api/scala/collection/mutable/ArrayBuilder.html","searchKeys":["clear"]},{"name":"trait ConstantTypeModule","description":"scala.quoted.Quotes$reflectModule$ConstantTypeModule","location":"api/scala/quoted/Quotes$reflectModule$ConstantTypeModule.html","searchKeys":["ConstantTypeModule"]},{"name":"def isEmpty: Boolean","description":"scala.runtime.ZippedIterable3","location":"api/scala/runtime/ZippedIterable3.html","searchKeys":["isEmpty"]},{"name":"class FlatMap[A, B](underlying: SomeIterableOps[A], f: A => IterableOnce[B]) extends AbstractView[B]","description":"scala.collection.View$$FlatMap","location":"api/scala/collection/View$$FlatMap.html","searchKeys":["FlatMap"]},{"name":"trait Releasable[-R]","description":"scala.util.Using$$Releasable","location":"api/scala/util/Using$$Releasable.html","searchKeys":["Releasable"]},{"name":"def declaredFields: List[Symbol]","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["declaredFields"]},{"name":"def tryComplete(result: Try[T]): Boolean","description":"scala.concurrent.Promise","location":"api/scala/concurrent/Promise.html","searchKeys":["tryComplete"]},{"name":"def apply(i: Int): A","description":"scala.collection.mutable.ListBuffer","location":"api/scala/collection/mutable/ListBuffer.html","searchKeys":["apply"]},{"name":"def getErr(log: Option[ProcessLogger]): InputStream => Unit","description":"scala.sys.process.BasicIO$","location":"api/scala/sys/process/BasicIO$.html","searchKeys":["getErr"]},{"name":"def tail: C","description":"scala.collection.LinearSeqOps","location":"api/scala/collection/LinearSeqOps.html","searchKeys":["tail"]},{"name":"def iteratorFrom(start: Int): Iterator[Int]","description":"scala.collection.BitSetOps","location":"api/scala/collection/BitSetOps.html","searchKeys":["iteratorFrom"]},{"name":"def sortWith(lt: (Char, Char) => Boolean): String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["sortWith"]},{"name":"type Tree <: AnyRef","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Tree"]},{"name":"object RelaxedPosition extends Position","description":"scala.io.Source$RelaxedPosition$","location":"api/scala/io/Source$RelaxedPosition$.html","searchKeys":["RelaxedPosition"]},{"name":"object IntMap","description":"scala.collection.immutable.IntMap$","location":"api/scala/collection/immutable/IntMap$.html","searchKeys":["IntMap"]},{"name":"def Predef_classOf: Symbol","description":"scala.quoted.Quotes$reflectModule$defnModule","location":"api/scala/quoted/Quotes$reflectModule$defnModule.html","searchKeys":["Predef_classOf"]},{"name":"def result(): Vector[A]","description":"scala.collection.immutable.VectorBuilder","location":"api/scala/collection/immutable/VectorBuilder.html","searchKeys":["result"]},{"name":"val x$23: FromExpr[T11]","description":"scala.quoted.FromExpr$$Tuple12FromExpr","location":"api/scala/quoted/FromExpr$$Tuple12FromExpr.html","searchKeys":["x$23"]},{"name":"trait SpecializedGroup","description":"scala.Specializable$$SpecializedGroup","location":"api/scala/Specializable$$SpecializedGroup.html","searchKeys":["SpecializedGroup"]},{"name":"def stepper[S <: Stepper[]](shape: StepperShape[A, S]): S","description":"scala.collection.IterableOnce","location":"api/scala/collection/IterableOnce.html","searchKeys":["stepper"]},{"name":"type Nested = Quotes","description":"scala.quoted.Quotes","location":"api/scala/quoted/Quotes.html","searchKeys":["Nested"]},{"name":"object Implicits extends ExtraImplicits","description":"scala.math.Equiv$$Implicits$","location":"api/scala/math/Equiv$$Implicits$.html","searchKeys":["Implicits"]},{"name":"def &(x: Char): Int","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["&"]},{"name":"def enumerationAsScalaIterator[A](i: Enumeration[A]): Iterator[A]","description":"scala.collection.JavaConverters$","location":"api/scala/collection/JavaConverters$.html","searchKeys":["enumerationAsScalaIterator"]},{"name":"def Array_update: Symbol","description":"scala.quoted.Quotes$reflectModule$defnModule","location":"api/scala/quoted/Quotes$reflectModule$defnModule.html","searchKeys":["Array_update"]},{"name":"def unapply[A](s: LazyList[A]): Option[(A, LazyList[A])]","description":"scala.package$$#::$","location":"api/scala/package$$#::$.html","searchKeys":["unapply"]},{"name":"class AsJavaToIntBiFunction[T, U](sf: (T, U) => Int) extends ToIntBiFunction[T, U]","description":"scala.jdk.FunctionWrappers$$AsJavaToIntBiFunction","location":"api/scala/jdk/FunctionWrappers$$AsJavaToIntBiFunction.html","searchKeys":["AsJavaToIntBiFunction"]},{"name":"class threadUnsafe extends StaticAnnotation","description":"scala.annotation.threadUnsafe","location":"api/scala/annotation/threadUnsafe.html","searchKeys":["threadUnsafe"]},{"name":"def apply$mcVD$sp(v1: Double): Unit","description":"scala.runtime.java8.JFunction1$mcVD$sp","location":"api/scala/runtime/java8/JFunction1$mcVD$sp.html","searchKeys":["apply$mcVD$sp"]},{"name":"val x$3: Type[T3]","description":"scala.quoted.FromExpr$$Tuple20FromExpr","location":"api/scala/quoted/FromExpr$$Tuple20FromExpr.html","searchKeys":["x$3"]},{"name":"val Nothing: Manifest[Nothing]","description":"scala.reflect.ManifestFactory$","location":"api/scala/reflect/ManifestFactory$.html","searchKeys":["Nothing"]},{"name":"def apply(x: Double, xs: Double*): Array[Double]","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["apply"]},{"name":"def iterator: Iterator[A]","description":"scala.collection.SeqView$$Sorted","location":"api/scala/collection/SeqView$$Sorted.html","searchKeys":["iterator"]},{"name":"def unitArrayOps(xs: Array[Unit]): ArrayOps[Unit]","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["unitArrayOps"]},{"name":"val x$17: Type[T17]","description":"scala.quoted.FromExpr$$Tuple17FromExpr","location":"api/scala/quoted/FromExpr$$Tuple17FromExpr.html","searchKeys":["x$17"]},{"name":"class SerialVersionUID(value: Long) extends ConstantAnnotation","description":"scala.SerialVersionUID","location":"api/scala/SerialVersionUID.html","searchKeys":["SerialVersionUID"]},{"name":"def insertAll(idx: Int, elems: IterableOnce[A]): Unit","description":"scala.collection.mutable.ArrayDeque","location":"api/scala/collection/mutable/ArrayDeque.html","searchKeys":["insertAll"]},{"name":"type Block <: Term","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Block"]},{"name":"class Queue[A] extends ArrayDeque[A] with IndexedSeqOps[A, [A] =>> Queue[A], Queue[A]] with StrictOptimizedSeqOps[A, [A] =>> Queue[A], Queue[A]] with IterableFactoryDefaults[A, [A] =>> Queue[A]] with ArrayDequeOps[A, [A] =>> Queue[A], Queue[A]] with Cloneable[Queue[A]] with DefaultSerializable","description":"scala.collection.mutable.Queue","location":"api/scala/collection/mutable/Queue.html","searchKeys":["Queue"]},{"name":"def apply(paramNames: List[String], boundsFn: TypeLambda => List[TypeBounds], bodyFn: TypeLambda => TypeRepr): TypeLambda","description":"scala.quoted.Quotes$reflectModule$TypeLambdaModule","location":"api/scala/quoted/Quotes$reflectModule$TypeLambdaModule.html","searchKeys":["apply"]},{"name":"type IsTraversableOnce[Repr] = IsIterableOnce[Repr]","description":"scala.collection.generic","location":"api/scala/collection/generic.html","searchKeys":["IsTraversableOnce"]},{"name":"class Tuple14[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14](_1: T1, _2: T2, _3: T3, _4: T4, _5: T5, _6: T6, _7: T7, _8: T8, _9: T9, _10: T10, _11: T11, _12: T12, _13: T13, _14: T14) extends Product14[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14]","description":"scala.Tuple14","location":"api/scala/Tuple14.html","searchKeys":["Tuple14"]},{"name":"def append(s: StringBuilder): StringBuilder","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["append"]},{"name":"def isIterableLikeIsIterableOnce[Repr](isIterableLike: IsIterable[Repr]): IsIterableOnce[Repr] { type A = A;  }","description":"scala.collection.generic.IsIterableOnceLowPriority","location":"api/scala/collection/generic/IsIterableOnceLowPriority.html","searchKeys":["isIterableLikeIsIterableOnce"]},{"name":"given SetToExpr[T]: ToExpr[Set[T]]","description":"scala.quoted.ToExpr$$SetToExpr","location":"api/scala/quoted/ToExpr$.html","searchKeys":["SetToExpr"]},{"name":"def sortBy[B](f: A => B)(ord: Ordering[B]): C","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["sortBy"]},{"name":"def transformTree(tree: Tree)(owner: Symbol): Tree","description":"scala.quoted.Quotes$reflectModule$TreeMap","location":"api/scala/quoted/Quotes$reflectModule$TreeMap.html","searchKeys":["transformTree"]},{"name":"def toArray[B >: Char](tag: ClassTag[B]): Array[B]","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["toArray"]},{"name":"def after: CharSequence","description":"scala.util.matching.Regex$$MatchData","location":"api/scala/util/matching/Regex$$MatchData.html","searchKeys":["after"]},{"name":"def Abstract: Flags","description":"scala.quoted.Quotes$reflectModule$FlagsModule","location":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html","searchKeys":["Abstract"]},{"name":"def enrichAsScalaFromToLongFunction[T](jf: ToLongFunction[T]): RichToLongFunctionAsFunction1[T]","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsScalaFromToLongFunction"]},{"name":"def contains(elem: A): Boolean","description":"scala.collection.immutable.TreeSet","location":"api/scala/collection/immutable/TreeSet.html","searchKeys":["contains"]},{"name":"def apply(x: Array[Char]): BigDecimal","description":"scala.math.BigDecimal$","location":"api/scala/math/BigDecimal$.html","searchKeys":["apply"]},{"name":"def characteristics(): Int","description":"scala.collection.DoubleStepper$$DoubleStepperSpliterator","location":"api/scala/collection/DoubleStepper$$DoubleStepperSpliterator.html","searchKeys":["characteristics"]},{"name":"class Updated[A](underlying: SomeIterableOps[A], index: Int, elem: A) extends AbstractView[A]","description":"scala.collection.View$$Updated","location":"api/scala/collection/View$$Updated.html","searchKeys":["Updated"]},{"name":"class RichLongBinaryOperatorAsFunction2(underlying: LongBinaryOperator) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichLongBinaryOperatorAsFunction2","location":"api/scala/jdk/FunctionWrappers$$RichLongBinaryOperatorAsFunction2.html","searchKeys":["RichLongBinaryOperatorAsFunction2"]},{"name":"class Type[T <: AnyKind]","description":"scala.quoted.Type","location":"api/scala/quoted/Type.html","searchKeys":["Type"]},{"name":"object IntStepper","description":"scala.collection.IntStepper$","location":"api/scala/collection/IntStepper$.html","searchKeys":["IntStepper"]},{"name":"def +(x: Int): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["+"]},{"name":"def consIterator(head: Any, tail: Tuple): Iterator[Any]","description":"scala.runtime.Tuples$","location":"api/scala/runtime/Tuples$.html","searchKeys":["consIterator"]},{"name":"type AnnotatedType <: TypeRepr","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["AnnotatedType"]},{"name":"def decoder2codec(cd: CharsetDecoder): Codec","description":"scala.io.Codec$","location":"api/scala/io/Codec$.html","searchKeys":["decoder2codec"]},{"name":"val HOLE: 255","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["HOLE"]},{"name":"def iterator: Iterator[A]","description":"scala.collection.View$$Single","location":"api/scala/collection/View$$Single.html","searchKeys":["iterator"]},{"name":"def flatMap(f: Char => String): String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["flatMap"]},{"name":"def get: A","description":"scala.util.Either$$LeftProjection","location":"api/scala/util/Either$$LeftProjection.html","searchKeys":["get"]},{"name":"def lazyAppendedAll[B >: A](suffix: => IterableOnce[B]): Stream[B]","description":"scala.collection.immutable.Stream","location":"api/scala/collection/immutable/Stream.html","searchKeys":["lazyAppendedAll"]},{"name":"def codePointStepper: IntStepper & EfficientSplit","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["codePointStepper"]},{"name":"def ByteClass: Symbol","description":"scala.quoted.Quotes$reflectModule$defnModule","location":"api/scala/quoted/Quotes$reflectModule$defnModule.html","searchKeys":["ByteClass"]},{"name":"def mapAsScalaConcurrentMapConverter[K, V](m: ConcurrentMap[K, V]): AsScala[Map[K, V]]","description":"scala.collection.JavaConverters$","location":"api/scala/collection/JavaConverters$.html","searchKeys":["mapAsScalaConcurrentMapConverter"]},{"name":"val x$11: Type[T11]","description":"scala.quoted.FromExpr$$Tuple18FromExpr","location":"api/scala/quoted/FromExpr$$Tuple18FromExpr.html","searchKeys":["x$11"]},{"name":"def curried: T1 => T2 => T3 => T4 => T5 => T6 => T7 => T8 => T9 => T10 => T11 => T12 => T13 => T14 => T15 => T16 => T17 => T18 => T19 => R","description":"scala.Function19","location":"api/scala/Function19.html","searchKeys":["curried"]},{"name":"def toArray: Array[Long]","description":"scala.jdk.LongAccumulator","location":"api/scala/jdk/LongAccumulator.html","searchKeys":["toArray"]},{"name":"val Right: Right","description":"scala","location":"api/scala.html","searchKeys":["Right"]},{"name":"def <=(x: Short): Boolean","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["<="]},{"name":"object TastyFormat","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["TastyFormat"]},{"name":"def firstKey: A","description":"scala.collection.SortedOps","location":"api/scala/collection/SortedOps.html","searchKeys":["firstKey"]},{"name":"trait BuildFromLowPriority2","description":"scala.collection.BuildFromLowPriority2","location":"api/scala/collection/BuildFromLowPriority2.html","searchKeys":["BuildFromLowPriority2"]},{"name":"val x$16: Type[T16]","description":"scala.quoted.FromExpr$$Tuple16FromExpr","location":"api/scala/quoted/FromExpr$$Tuple16FromExpr.html","searchKeys":["x$16"]},{"name":"def toFloat(x: T): Float","description":"scala.math.Numeric","location":"api/scala/math/Numeric.html","searchKeys":["toFloat"]},{"name":"def apply$mcVJD$sp(v1: Long, v2: Double): Unit","description":"scala.runtime.java8.JFunction2$mcVJD$sp","location":"api/scala/runtime/java8/JFunction2$mcVJD$sp.html","searchKeys":["apply$mcVJD$sp"]},{"name":"def apply(x: Float): FloatConstant","description":"scala.quoted.Quotes$reflectModule$FloatConstantModule","location":"api/scala/quoted/Quotes$reflectModule$FloatConstantModule.html","searchKeys":["apply"]},{"name":"trait CaseDefModule","description":"scala.quoted.Quotes$reflectModule$CaseDefModule","location":"api/scala/quoted/Quotes$reflectModule$CaseDefModule.html","searchKeys":["CaseDefModule"]},{"name":"def minutes: FiniteDuration","description":"scala.concurrent.duration.DurationConversions","location":"api/scala/concurrent/duration/DurationConversions.html","searchKeys":["minutes"]},{"name":"val Short: ShortManifest","description":"scala.reflect.ClassTag$","location":"api/scala/reflect/ClassTag$.html","searchKeys":["Short"]},{"name":"def characteristics(): Int","description":"scala.collection.AnyStepper$$AnyStepperSpliterator","location":"api/scala/collection/AnyStepper$$AnyStepperSpliterator.html","searchKeys":["characteristics"]},{"name":"object AnyStepper","description":"scala.collection.AnyStepper$","location":"api/scala/collection/AnyStepper$.html","searchKeys":["AnyStepper"]},{"name":"val IDENT: 110","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["IDENT"]},{"name":"def iterator: Iterator[Long]","description":"scala.jdk.LongAccumulator","location":"api/scala/jdk/LongAccumulator.html","searchKeys":["iterator"]},{"name":"class FromJavaToIntBiFunction[T, U](jf: ToIntBiFunction[T, U]) extends (T, U) => Int","description":"scala.jdk.FunctionWrappers$$FromJavaToIntBiFunction","location":"api/scala/jdk/FunctionWrappers$$FromJavaToIntBiFunction.html","searchKeys":["FromJavaToIntBiFunction"]},{"name":"val jIntegerOptionShape: OptionShape[Integer, OptionalInt]","description":"scala.jdk.OptionShape$","location":"api/scala/jdk/OptionShape$.html","searchKeys":["jIntegerOptionShape"]},{"name":"def overridingSymbol(ofclazz: Symbol): Symbol","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["overridingSymbol"]},{"name":"def asJavaLongFunction[R](sf: Long => R): LongFunction[R]","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asJavaLongFunction"]},{"name":"def withDefault[V1 >: V](d: K => V1): Map[K, V1]","description":"scala.collection.immutable.Map","location":"api/scala/collection/immutable/Map.html","searchKeys":["withDefault"]},{"name":"def !=(x: Char): Boolean","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["!="]},{"name":"def get(key: K): Option[V]","description":"scala.collection.mutable.Map$$WithDefault","location":"api/scala/collection/mutable/Map$$WithDefault.html","searchKeys":["get"]},{"name":"val NAMEDARG: 119","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["NAMEDARG"]},{"name":"class AsJavaLongUnaryOperator(sf: Long => Long) extends LongUnaryOperator","description":"scala.jdk.FunctionWrappers$$AsJavaLongUnaryOperator","location":"api/scala/jdk/FunctionWrappers$$AsJavaLongUnaryOperator.html","searchKeys":["AsJavaLongUnaryOperator"]},{"name":"trait ExecutionContextExecutor extends ExecutionContext with Executor","description":"scala.concurrent.ExecutionContextExecutor","location":"api/scala/concurrent/ExecutionContextExecutor.html","searchKeys":["ExecutionContextExecutor"]},{"name":"def +(x: Float): Float","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["+"]},{"name":"val x$7: FromExpr[T3]","description":"scala.quoted.FromExpr$$Tuple4FromExpr","location":"api/scala/quoted/FromExpr$$Tuple4FromExpr.html","searchKeys":["x$7"]},{"name":"def empty[K, V]: Map[K, V]","description":"scala.collection.immutable.Map$","location":"api/scala/collection/immutable/Map$.html","searchKeys":["empty"]},{"name":"val Everything: Group[(Byte, Short, Int, Long, Char, Float, Double, Boolean, Unit, AnyRef)]","description":"scala.Specializable$","location":"api/scala/Specializable$.html","searchKeys":["Everything"]},{"name":"def isInline: Boolean","description":"scala.quoted.Quotes$reflectModule$MatchMethods","location":"api/scala/quoted/Quotes$reflectModule$MatchMethods.html","searchKeys":["isInline"]},{"name":"def scanRight[T](z: U)(op: (T, U) => U)(evidence$10: ClassTag[U]): IArray[U]","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["scanRight"]},{"name":"def toRadians: Double","description":"scala.runtime.RichDouble","location":"api/scala/runtime/RichDouble.html","searchKeys":["toRadians"]},{"name":"def isDefined: Boolean","description":"scala.Option","location":"api/scala/Option.html","searchKeys":["isDefined"]},{"name":"def recoverWith[U >: T](pf: PartialFunction[Throwable, Try[U]]): Try[U]","description":"scala.util.Try","location":"api/scala/util/Try.html","searchKeys":["recoverWith"]},{"name":"def foreach[U](f: A => U): Unit","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["foreach"]},{"name":"val x$17: FromExpr[T8]","description":"scala.quoted.FromExpr$$Tuple9FromExpr","location":"api/scala/quoted/FromExpr$$Tuple9FromExpr.html","searchKeys":["x$17"]},{"name":"object DeprecatedFloatOrdering extends TotalOrdering","description":"scala.math.Ordering$$DeprecatedFloatOrdering$","location":"api/scala/math/Ordering$$DeprecatedFloatOrdering$.html","searchKeys":["DeprecatedFloatOrdering"]},{"name":"def stringHash(x: String): Int","description":"scala.util.hashing.MurmurHash3$","location":"api/scala/util/hashing/MurmurHash3$.html","searchKeys":["stringHash"]},{"name":"def prepend(elem: A): ArrayDeque[A]","description":"scala.collection.mutable.ArrayDeque","location":"api/scala/collection/mutable/ArrayDeque.html","searchKeys":["prepend"]},{"name":"var next: Unrolled[T]","description":"scala.collection.mutable.UnrolledBuffer$$Unrolled","location":"api/scala/collection/mutable/UnrolledBuffer$$Unrolled.html","searchKeys":["next"]},{"name":"class RichFunction2AsToIntBiFunction[T, U](underlying: (T, U) => Int) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichFunction2AsToIntBiFunction","location":"api/scala/jdk/FunctionWrappers$$RichFunction2AsToIntBiFunction.html","searchKeys":["RichFunction2AsToIntBiFunction"]},{"name":"def toFloat: Float","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["toFloat"]},{"name":"def wrapBooleanArray(xs: Array[Boolean]): ArraySeq[Boolean]","description":"scala.runtime.ScalaRunTime$","location":"api/scala/runtime/ScalaRunTime$.html","searchKeys":["wrapBooleanArray"]},{"name":"def compose[A](g: A => T1): A => R","description":"scala.Function1","location":"api/scala/Function1.html","searchKeys":["compose"]},{"name":"def show: String","description":"scala.quoted.Quotes$reflectModule$FlagsMethods","location":"api/scala/quoted/Quotes$reflectModule$FlagsMethods.html","searchKeys":["show"]},{"name":"def <=(x: Byte): Boolean","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["<="]},{"name":"def defaultBlockContext: BlockContext","description":"scala.concurrent.BlockContext$","location":"api/scala/concurrent/BlockContext$.html","searchKeys":["defaultBlockContext"]},{"name":"trait macros","description":"scala.languageFeature$$experimental$$macros","location":"api/scala/languageFeature$$experimental$$macros.html","searchKeys":["macros"]},{"name":"def hasDefiniteSize: Boolean","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["hasDefiniteSize"]},{"name":"Dependent Function Types","description":"","location":"docs/reference/new-types/dependent-function-types.html","searchKeys":["Dependent Function Types"]},{"name":"trait JFunction1$mcVF$sp extends Any => Any with Serializable","description":"scala.runtime.java8.JFunction1$mcVF$sp","location":"api/scala/runtime/java8/JFunction1$mcVF$sp.html","searchKeys":["JFunction1$mcVF$sp"]},{"name":"def _8: T8","description":"scala.Product12","location":"api/scala/Product12.html","searchKeys":["_8"]},{"name":"def this()","description":"scala.collection.immutable.HashMap","location":"api/scala/collection/immutable/HashMap.html","searchKeys":["this"]},{"name":"val EXPORTED: 39","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["EXPORTED"]},{"name":"var ch: Char","description":"scala.io.Source$Positioner","location":"api/scala/io/Source$Positioner.html","searchKeys":["ch"]},{"name":"def unsorted: Map[K, V]","description":"scala.collection.immutable.SortedMapOps","location":"api/scala/collection/immutable/SortedMapOps.html","searchKeys":["unsorted"]},{"name":"val x$34: FromExpr[T14]","description":"scala.quoted.FromExpr$$Tuple20FromExpr","location":"api/scala/quoted/FromExpr$$Tuple20FromExpr.html","searchKeys":["x$34"]},{"name":"def headOption: Option[Char]","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["headOption"]},{"name":"given LeftToExpr[L, R]: ToExpr[Left[L, R]]","description":"scala.quoted.ToExpr$$LeftToExpr","location":"api/scala/quoted/ToExpr$$LeftToExpr.html","searchKeys":["LeftToExpr"]},{"name":"def in: BufferedReader","description":"scala.Console$","location":"api/scala/Console$.html","searchKeys":["in"]},{"name":"class Tuple15[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15](_1: T1, _2: T2, _3: T3, _4: T4, _5: T5, _6: T6, _7: T7, _8: T8, _9: T9, _10: T10, _11: T11, _12: T12, _13: T13, _14: T14, _15: T15) extends Product15[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15]","description":"scala.Tuple15","location":"api/scala/Tuple15.html","searchKeys":["Tuple15"]},{"name":"type SomeIterableOps[A] = IterableOps[A, AnyConstr, ]","description":"scala.collection.View$","location":"api/scala/collection/View$.html","searchKeys":["SomeIterableOps"]},{"name":"def zipAll[A1 >: A, B](that: IterableOnce[B], thisElem: A1, thatElem: B): Iterator[(A1, B)]","description":"scala.collection.Iterator","location":"api/scala/collection/Iterator.html","searchKeys":["zipAll"]},{"name":"def asScala: (T, T) => T","description":"scala.jdk.FunctionWrappers$$RichBinaryOperatorAsFunction2","location":"api/scala/jdk/FunctionWrappers$$RichBinaryOperatorAsFunction2.html","searchKeys":["asScala"]},{"name":"object ProcessLogger","description":"scala.sys.process.ProcessLogger$","location":"api/scala/sys/process/ProcessLogger$.html","searchKeys":["ProcessLogger"]},{"name":"type SimpleSelector <: Selector","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["SimpleSelector"]},{"name":"def transformCaseDef(tree: CaseDef)(owner: Symbol): CaseDef","description":"scala.quoted.Quotes$reflectModule$TreeMap","location":"api/scala/quoted/Quotes$reflectModule$TreeMap.html","searchKeys":["transformCaseDef"]},{"name":"class Manager","description":"scala.util.Using$$Manager","location":"api/scala/util/Using$$Manager.html","searchKeys":["Manager"]},{"name":"def supertpe: TypeRepr","description":"scala.quoted.Quotes$reflectModule$SuperTypeMethods","location":"api/scala/quoted/Quotes$reflectModule$SuperTypeMethods.html","searchKeys":["supertpe"]},{"name":"def asScala: Iterator[A]","description":"scala.collection.convert.AsScalaExtensions$IteratorHasAsScala","location":"api/scala/collection/convert/AsScalaExtensions$IteratorHasAsScala.html","searchKeys":["asScala"]},{"name":"def sameElements[B >: A](that: IterableOnce[B]): Boolean","description":"scala.collection.Iterator","location":"api/scala/collection/Iterator.html","searchKeys":["sameElements"]},{"name":"def apply(v1: T1, v2: T2, v3: T3, v4: T4, v5: T5): R","description":"scala.Function5","location":"api/scala/Function5.html","searchKeys":["apply"]},{"name":"val Boolean: BooleanManifest","description":"scala.reflect.Manifest$","location":"api/scala/reflect/Manifest$.html","searchKeys":["Boolean"]},{"name":"trait LongConstantModule","description":"scala.quoted.Quotes$reflectModule$LongConstantModule","location":"api/scala/quoted/Quotes$reflectModule$LongConstantModule.html","searchKeys":["LongConstantModule"]},{"name":"def enrichAsScalaFromBooleanSupplier(jf: BooleanSupplier): RichBooleanSupplierAsFunction0","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsScalaFromBooleanSupplier"]},{"name":"class NotImplementedError(msg: String) extends Error","description":"scala.NotImplementedError","location":"api/scala/NotImplementedError.html","searchKeys":["NotImplementedError"]},{"name":"def stringOf(arg: Any, maxElements: Int): String","description":"scala.runtime.ScalaRunTime$","location":"api/scala/runtime/ScalaRunTime$.html","searchKeys":["stringOf"]},{"name":"def unapply[T](ctag: ClassTag[T]): Option[Class[]]","description":"scala.reflect.ClassTag$","location":"api/scala/reflect/ClassTag$.html","searchKeys":["unapply"]},{"name":"val TypeProjection: TypeProjectionModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeProjection"]},{"name":"object Float","description":"scala.math.Equiv$$Float$","location":"api/scala/math/Equiv$$Float$.html","searchKeys":["Float"]},{"name":"val CYAN_B: \"\\033[46m\"","description":"scala.io.AnsiColor","location":"api/scala/io/AnsiColor.html","searchKeys":["CYAN_B"]},{"name":"def cases: List[CaseDef]","description":"scala.quoted.Quotes$reflectModule$TryMethods","location":"api/scala/quoted/Quotes$reflectModule$TryMethods.html","searchKeys":["cases"]},{"name":"trait ReferenceWrapper[+T <: AnyRef] extends Reference[T] with Proxy","description":"scala.ref.ReferenceWrapper","location":"api/scala/ref/ReferenceWrapper.html","searchKeys":["ReferenceWrapper"]},{"name":"trait ReusableBuilder[-Elem, +To] extends Builder[Elem, To]","description":"scala.collection.mutable.ReusableBuilder","location":"api/scala/collection/mutable/ReusableBuilder.html","searchKeys":["ReusableBuilder"]},{"name":"def num: Fractional[T]","description":"scala.runtime.FractionalProxy","location":"api/scala/runtime/FractionalProxy.html","searchKeys":["num"]},{"name":"def name: String","description":"scala.quoted.Quotes$reflectModule$RefinementMethods","location":"api/scala/quoted/Quotes$reflectModule$RefinementMethods.html","searchKeys":["name"]},{"name":"def isErasedFunctionType: Boolean","description":"scala.quoted.Quotes$reflectModule$TypeReprMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html","searchKeys":["isErasedFunctionType"]},{"name":"def mkNumericOps(lhs: T): NumericOps","description":"scala.math.Numeric","location":"api/scala/math/Numeric.html","searchKeys":["mkNumericOps"]},{"name":"def empty[K, V]: ListMap[K, V]","description":"scala.collection.immutable.ListMap$","location":"api/scala/collection/immutable/ListMap$.html","searchKeys":["empty"]},{"name":"def containsSlice[B](that: Seq[B]): Boolean","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["containsSlice"]},{"name":"def +(x: Char): Int","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["+"]},{"name":"Type Class Derivation","description":"","location":"docs/reference/contextual/derivation.html","searchKeys":["Type Class Derivation"]},{"name":"def <=(x: Byte): Boolean","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["<="]},{"name":"def >>>(x: Int): Int","description":"scala.Int","location":"api/scala/Int.html","searchKeys":[">>>"]},{"name":"def asJavaParDoubleStream(cc: IterableOnce[Double]): DoubleStream","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaParDoubleStream"]},{"name":"def enrichAsJavaDoubleToLongFunction[A0](sf: A0 => Long)(evA0: A0 =:= Double): RichFunction1AsDoubleToLongFunction","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsJavaDoubleToLongFunction"]},{"name":"def fromChar(c: Char): Source","description":"scala.io.Source$","location":"api/scala/io/Source$.html","searchKeys":["fromChar"]},{"name":"The Essence of Scala","description":"","location":"blog/2016/02/03/essence-of-scala.html","searchKeys":["The Essence of Scala"]},{"name":"def -(x: Byte): Int","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["-"]},{"name":"def asScalaFromIntBinaryOperator(jf: IntBinaryOperator): (Integer, Integer) => Integer","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asScalaFromIntBinaryOperator"]},{"name":"def inclusive: Inclusive[T]","description":"scala.collection.immutable.NumericRange$$Exclusive","location":"api/scala/collection/immutable/NumericRange$$Exclusive.html","searchKeys":["inclusive"]},{"name":"class Tuple6[+T1, +T2, +T3, +T4, +T5, +T6](_1: T1, _2: T2, _3: T3, _4: T4, _5: T5, _6: T6) extends Product6[T1, T2, T3, T4, T5, T6]","description":"scala.Tuple6","location":"api/scala/Tuple6.html","searchKeys":["Tuple6"]},{"name":"def /(x: Float): Float","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["/"]},{"name":"def >(x: Double): Boolean","description":"scala.Short","location":"api/scala/Short.html","searchKeys":[">"]},{"name":"def fromZip[K <: AnyRef, V](keys: Array[K], values: Array[V]): AnyRefMap[K, V]","description":"scala.collection.mutable.AnyRefMap$","location":"api/scala/collection/mutable/AnyRefMap$.html","searchKeys":["fromZip"]},{"name":"val self: Char","description":"scala.runtime.RichChar","location":"api/scala/runtime/RichChar.html","searchKeys":["self"]},{"name":"def apply(encoding: String): Codec","description":"scala.io.Codec$","location":"api/scala/io/Codec$.html","searchKeys":["apply"]},{"name":"def orElse(other: Ordering[T]): Ordering[T]","description":"scala.math.Ordering","location":"api/scala/math/Ordering.html","searchKeys":["orElse"]},{"name":"def updated(index: Int, elem: Char): String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["updated"]},{"name":"Debug Macros","description":"","location":"docs/internals/debug-macros.html","searchKeys":["Debug Macros"]},{"name":"class Try[+T] extends Product with Serializable","description":"scala.util.Try","location":"api/scala/util/Try.html","searchKeys":["Try"]},{"name":"def addOne(elem: A): Growable[A]","description":"scala.collection.mutable.Growable","location":"api/scala/collection/mutable/Growable.html","searchKeys":["addOne"]},{"name":"given OmitSelectorTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["OmitSelectorTypeTest"]},{"name":"val emptyObjectArray: Array[Object]","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["emptyObjectArray"]},{"name":"class RichDoubleToIntFunctionAsFunction1(underlying: DoubleToIntFunction) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichDoubleToIntFunctionAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichDoubleToIntFunctionAsFunction1.html","searchKeys":["RichDoubleToIntFunctionAsFunction1"]},{"name":"def flatMap[BS, B](f: A => BS)(asIterable: BS => Iterable[B], m: ClassTag[B]): Array[B]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["flatMap"]},{"name":"object ValueSet extends SpecificIterableFactory[Value, ValueSet]","description":"scala.Enumeration$ValueSet$","location":"api/scala/Enumeration$ValueSet$.html","searchKeys":["ValueSet"]},{"name":"type Stream[+A] = Stream[A]","description":"scala","location":"api/scala.html","searchKeys":["Stream"]},{"name":"trait ScalaNumberProxy[T] extends ScalaNumericAnyConversions with Typed[T] with OrderedProxy[T]","description":"scala.runtime.ScalaNumberProxy","location":"api/scala/runtime/ScalaNumberProxy.html","searchKeys":["ScalaNumberProxy"]},{"name":"Blog","description":"","location":"blog/index.html","searchKeys":["Blog"]},{"name":"def update(idx: Int, newelem: T): Unit","description":"scala.collection.mutable.UnrolledBuffer","location":"api/scala/collection/mutable/UnrolledBuffer.html","searchKeys":["update"]},{"name":"def ++:(prefix: String): String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["++:"]},{"name":"def asJavaParStream: IntStream","description":"scala.collection.convert.StreamExtensions$ByteArrayHasSeqParStream","location":"api/scala/collection/convert/StreamExtensions$ByteArrayHasSeqParStream.html","searchKeys":["asJavaParStream"]},{"name":"def length: Int","description":"scala.collection.mutable.ArraySeq$$ofDouble","location":"api/scala/collection/mutable/ArraySeq$$ofDouble.html","searchKeys":["length"]},{"name":"def refl[A]: A =:= A","description":"scala.<:<$","location":"api/scala/<:<$.html","searchKeys":["refl"]},{"name":"def append(elem: A): Buffer[A]","description":"scala.collection.mutable.Buffer","location":"api/scala/collection/mutable/Buffer.html","searchKeys":["append"]},{"name":"def insert(@deprecatedName(\"n\", \"2.13.0\") index: Int, elem: A): Unit","description":"scala.collection.mutable.ArrayBuffer","location":"api/scala/collection/mutable/ArrayBuffer.html","searchKeys":["insert"]},{"name":"def map[B, To](f: (El1, El2) => B)(bf: BuildFrom[It1, B, To]): To","description":"scala.runtime.Tuple2Zipped","location":"api/scala/runtime/Tuple2Zipped.html","searchKeys":["map"]},{"name":"def float2double(x: Float): Double","description":"scala.Float$","location":"api/scala/Float$.html","searchKeys":["float2double"]},{"name":"class ArrayHashing[@specialized T] extends Hashing[Array[T]]","description":"scala.util.hashing.MurmurHash3$$ArrayHashing","location":"api/scala/util/hashing/MurmurHash3$$ArrayHashing.html","searchKeys":["ArrayHashing"]},{"name":"def defaultLoadFactor: Double","description":"scala.collection.mutable.HashMap$","location":"api/scala/collection/mutable/HashMap$.html","searchKeys":["defaultLoadFactor"]},{"name":"def putNat(at: Addr, x: Int, width: Int): Unit","description":"dotty.tools.tasty.TastyBuffer","location":"api/dotty/tools/tasty/TastyBuffer.html","searchKeys":["putNat"]},{"name":"def ^(x: Char): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["^"]},{"name":"def fromNanos(nanos: Double): Duration","description":"scala.concurrent.duration.Duration$","location":"api/scala/concurrent/duration/Duration$.html","searchKeys":["fromNanos"]},{"name":"def exists(p: B => Boolean): Boolean","description":"scala.util.Either$$RightProjection","location":"api/scala/util/Either$$RightProjection.html","searchKeys":["exists"]},{"name":"trait TypeDefModule","description":"scala.quoted.Quotes$reflectModule$TypeDefModule","location":"api/scala/quoted/Quotes$reflectModule$TypeDefModule.html","searchKeys":["TypeDefModule"]},{"name":"def contains(elem: Any): Boolean","description":"scala.collection.Iterator","location":"api/scala/collection/Iterator.html","searchKeys":["contains"]},{"name":"def asJavaSeqDoubleStream(cc: IterableOnce[Double]): DoubleStream","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaSeqDoubleStream"]},{"name":"val x$7: Type[T7]","description":"scala.quoted.FromExpr$$Tuple8FromExpr","location":"api/scala/quoted/FromExpr$$Tuple8FromExpr.html","searchKeys":["x$7"]},{"name":"def shortArrayOps(xs: Array[Short]): ArrayOps[Short]","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["shortArrayOps"]},{"name":"def iterator: Iterator[(K, V)]","description":"scala.collection.mutable.TreeMap","location":"api/scala/collection/mutable/TreeMap.html","searchKeys":["iterator"]},{"name":"def boolean2Boolean(x: Boolean): Boolean","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["boolean2Boolean"]},{"name":"def apply[T](ord: Ordering[T]): Ordering[T]","description":"scala.math.Ordering$","location":"api/scala/math/Ordering$.html","searchKeys":["apply"]},{"name":"type Tupled[F <: ([_$1] =>> Any)] = { type Ap = [X, Y] =>> F[(X, Y)];  }","description":"scala.collection.generic.IsMap$","location":"api/scala/collection/generic/IsMap$.html","searchKeys":["Tupled"]},{"name":"def longMapIsMap[V0]: IsMap[LongMap[V0]] { type K = Long; type V = V0; type C = LongMap[V0];  }","description":"scala.collection.generic.IsMap$","location":"api/scala/collection/generic/IsMap$.html","searchKeys":["longMapIsMap"]},{"name":"def untupled[T1, T2, R](f: (T1, T2) => R): (T1, T2) => R","description":"scala.Function$","location":"api/scala/Function$.html","searchKeys":["untupled"]},{"name":"def fallbackTo[U >: T](that: Future[U]): Future[U]","description":"scala.concurrent.Future","location":"api/scala/concurrent/Future.html","searchKeys":["fallbackTo"]},{"name":"def valueIsTrue[T](key: String): BooleanProp","description":"scala.sys.BooleanProp$","location":"api/scala/sys/BooleanProp$.html","searchKeys":["valueIsTrue"]},{"name":"def iterator asJava[A](it: Iterator[A]): Iterator[A]","description":"scala.collection.convert.ToJavaImplicits","location":"api/scala/collection/convert/ToJavaImplicits.html","searchKeys":["iterator asJava"]},{"name":"object Int extends AnyValCompanion","description":"scala.Int$","location":"api/scala/Int$.html","searchKeys":["Int"]},{"name":"def unapply(x: Expr[(T1, T2, T3, T4, T5, T6, T7)])(using Quotes): Option[(T1, T2, T3, T4, T5, T6, T7)]","description":"scala.quoted.FromExpr$$Tuple7FromExpr","location":"api/scala/quoted/FromExpr$$Tuple7FromExpr.html","searchKeys":["unapply"]},{"name":"def toScala: Option[Long]","description":"scala.jdk.OptionConverters$$RichOptionalLong","location":"api/scala/jdk/OptionConverters$$RichOptionalLong.html","searchKeys":["toScala"]},{"name":"def apply[T](body: => T)(executor: ExecutionContext): Future[T]","description":"scala.concurrent.Future$","location":"api/scala/concurrent/Future$.html","searchKeys":["apply"]},{"name":"def ClassClass: Symbol","description":"scala.quoted.Quotes$reflectModule$defnModule","location":"api/scala/quoted/Quotes$reflectModule$defnModule.html","searchKeys":["ClassClass"]},{"name":"trait ProcessCreation","description":"scala.sys.process.ProcessCreation","location":"api/scala/sys/process/ProcessCreation.html","searchKeys":["ProcessCreation"]},{"name":"object Char extends CharOrdering","description":"scala.math.Ordering$$Char$","location":"api/scala/math/Ordering$$Char$.html","searchKeys":["Char"]},{"name":"val Numeric: Numeric","description":"scala","location":"api/scala.html","searchKeys":["Numeric"]},{"name":"def foreach[U](f: (El1, El2, El3) => U): Unit","description":"scala.runtime.Tuple3Zipped","location":"api/scala/runtime/Tuple3Zipped.html","searchKeys":["foreach"]},{"name":"object never extends Future[Nothing]","description":"scala.concurrent.Future$$never$","location":"api/scala/concurrent/Future$$never$.html","searchKeys":["never"]},{"name":"class SyncVar[A]","description":"scala.concurrent.SyncVar","location":"api/scala/concurrent/SyncVar.html","searchKeys":["SyncVar"]},{"name":"def copy(original: Tree)(elems: List[Term], tpt: TypeTree): Repeated","description":"scala.quoted.Quotes$reflectModule$RepeatedModule","location":"api/scala/quoted/Quotes$reflectModule$RepeatedModule.html","searchKeys":["copy"]},{"name":"object Implicits extends ExtraImplicits","description":"scala.math.Numeric$$Implicits$","location":"api/scala/math/Numeric$$Implicits$.html","searchKeys":["Implicits"]},{"name":"val x$6: Type[T6]","description":"scala.quoted.FromExpr$$Tuple14FromExpr","location":"api/scala/quoted/FromExpr$$Tuple14FromExpr.html","searchKeys":["x$6"]},{"name":"def spliceOwner: Symbol","description":"scala.quoted.Quotes$reflectModule$SymbolModule","location":"api/scala/quoted/Quotes$reflectModule$SymbolModule.html","searchKeys":["spliceOwner"]},{"name":"def iterator: Iterator[(K, V)]","description":"scala.collection.immutable.Map$$WithDefault","location":"api/scala/collection/immutable/Map$$WithDefault.html","searchKeys":["iterator"]},{"name":"def ^(x: Long): Long","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["^"]},{"name":"val BLINK: \"\\033[5m\"","description":"scala.io.AnsiColor","location":"api/scala/io/AnsiColor.html","searchKeys":["BLINK"]},{"name":"def collect[B](pf: PartialFunction[A, B])(@implicitNotFound ev: Ordering[B]): CC[B]","description":"scala.collection.SortedSetOps","location":"api/scala/collection/SortedSetOps.html","searchKeys":["collect"]},{"name":"def min(rhs: T): T","description":"scala.math.Ordering$OrderingOps","location":"api/scala/math/Ordering$OrderingOps.html","searchKeys":["min"]},{"name":"def HasDefault: Flags","description":"scala.quoted.Quotes$reflectModule$FlagsModule","location":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html","searchKeys":["HasDefault"]},{"name":"val Match: MatchModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Match"]},{"name":"def err(s: => String): Unit","description":"scala.sys.process.FileProcessLogger","location":"api/scala/sys/process/FileProcessLogger.html","searchKeys":["err"]},{"name":"trait Priority2FunctionExtensions extends Priority3FunctionExtensions","description":"scala.jdk.Priority2FunctionExtensions","location":"api/scala/jdk/Priority2FunctionExtensions.html","searchKeys":["Priority2FunctionExtensions"]},{"name":"def asScala: (T, U) => R","description":"scala.jdk.FunctionWrappers$$RichBiFunctionAsFunction2","location":"api/scala/jdk/FunctionWrappers$$RichBiFunctionAsFunction2.html","searchKeys":["asScala"]},{"name":"def default: Codec","description":"scala.io.Codec$","location":"api/scala/io/Codec$.html","searchKeys":["default"]},{"name":"val Select: SelectModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Select"]},{"name":"def filterNot[T](p: T => Boolean): IArray[T]","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["filterNot"]},{"name":"def long2float(x: Long): Float","description":"scala.Long$","location":"api/scala/Long$.html","searchKeys":["long2float"]},{"name":"def gt(other: Duration): Boolean","description":"scala.concurrent.duration.Duration","location":"api/scala/concurrent/duration/Duration.html","searchKeys":["gt"]},{"name":"def unapply(constant: ShortConstant): Some[Short]","description":"scala.quoted.Quotes$reflectModule$ShortConstantModule","location":"api/scala/quoted/Quotes$reflectModule$ShortConstantModule.html","searchKeys":["unapply"]},{"name":"def +(other: FiniteDuration): FiniteDuration","description":"scala.concurrent.duration.FiniteDuration","location":"api/scala/concurrent/duration/FiniteDuration.html","searchKeys":["+"]},{"name":"type A = (K, V)","description":"scala.collection.generic.IsMap","location":"api/scala/collection/generic/IsMap.html","searchKeys":["A"]},{"name":"def unary_+: Double","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["unary_+"]},{"name":"def acos(x: Double): Double","description":"scala.math","location":"api/scala/math.html","searchKeys":["acos"]},{"name":"def _10: T10","description":"scala.Product20","location":"api/scala/Product20.html","searchKeys":["_10"]},{"name":"object ScalaRunTime","description":"scala.runtime.ScalaRunTime$","location":"api/scala/runtime/ScalaRunTime$.html","searchKeys":["ScalaRunTime"]},{"name":"object Product12","description":"scala.Product12$","location":"api/scala/Product12$.html","searchKeys":["Product12"]},{"name":"def run(io: ProcessIO): Process","description":"scala.sys.process.ProcessBuilder","location":"api/scala/sys/process/ProcessBuilder.html","searchKeys":["run"]},{"name":"trait JFunction2$mcIID$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcIID$sp","location":"api/scala/runtime/java8/JFunction2$mcIID$sp.html","searchKeys":["JFunction2$mcIID$sp"]},{"name":"def fromPos: Position","description":"scala.quoted.Quotes$reflectModule$RenameSelectorMethods","location":"api/scala/quoted/Quotes$reflectModule$RenameSelectorMethods.html","searchKeys":["fromPos"]},{"name":"Announcing Dotty 0.15.0-RC1 – the fully bootstrapped compiler","description":"","location":"blog/2019/05/23/15th-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.15.0-RC1 – the fully bootstrapped compiler"]},{"name":"def asJavaBooleanSupplier(sf: () => Boolean): BooleanSupplier","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asJavaBooleanSupplier"]},{"name":"def asJavaParValueStream[S <: BaseStream[, ], St <: Stepper[]](s: StreamShape[V, S, St], st: StepperShape[V, St], @implicitNotFound(\"parValueStream can only be called on maps where `valueStepper` returns a `Stepper with EfficientSplit`\") isEfficient: CC[K, V] <:< MapOps[K, V, Map, ] { def valueStepper[S <: Stepper[]](shape: StepperShape[V, S]): S & EfficientSplit; ;  }): S","description":"scala.collection.convert.StreamExtensions$MapHasParKeyValueStream","location":"api/scala/collection/convert/StreamExtensions$MapHasParKeyValueStream.html","searchKeys":["asJavaParValueStream"]},{"name":"def takeRight(n: Int): Array[A]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["takeRight"]},{"name":"def body: Term","description":"scala.quoted.Quotes$reflectModule$TryMethods","location":"api/scala/quoted/Quotes$reflectModule$TryMethods.html","searchKeys":["body"]},{"name":"given ImplicitSearchFailureMethods","description":"scala.quoted.Quotes$reflectModule$ImplicitSearchFailureMethods","location":"api/scala/quoted/Quotes$reflectModule$ImplicitSearchFailureMethods.html","searchKeys":["ImplicitSearchFailureMethods"]},{"name":"val doubleOptionShape: OptionShape[Double, OptionalDouble]","description":"scala.jdk.OptionShape$","location":"api/scala/jdk/OptionShape$.html","searchKeys":["doubleOptionShape"]},{"name":"def -(elem1: A, elem2: A, elems: A*): C","description":"scala.collection.SetOps","location":"api/scala/collection/SetOps.html","searchKeys":["-"]},{"name":"def |(x: Long): Long","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["|"]},{"name":"def mapInPlace(f: A => A): PriorityQueue[A]","description":"scala.collection.mutable.PriorityQueue","location":"api/scala/collection/mutable/PriorityQueue.html","searchKeys":["mapInPlace"]},{"name":"val floatStepperShape: StepperShape[Float, DoubleStepper]","description":"scala.collection.StepperShape$","location":"api/scala/collection/StepperShape$.html","searchKeys":["floatStepperShape"]},{"name":"def isDefinedAt(x: A): Boolean","description":"scala.PartialFunction","location":"api/scala/PartialFunction.html","searchKeys":["isDefinedAt"]},{"name":"class TreeMap[K, +V] extends AbstractMap[K, V] with SortedMap[K, V] with StrictOptimizedSortedMapOps[K, V, [K, V] =>> TreeMap[K, V], TreeMap[K, V]] with SortedMapFactoryDefaults[K, V, [K, V] =>> TreeMap[K, V], [A] =>> Iterable[A], [K, V] =>> Map[K, V]] with DefaultSerializable","description":"scala.collection.immutable.TreeMap","location":"api/scala/collection/immutable/TreeMap.html","searchKeys":["TreeMap"]},{"name":"def grouped(size: Int): Iterator[String]","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["grouped"]},{"name":"def orElse[U >: T](default: => Try[U]): Try[U]","description":"scala.util.Try","location":"api/scala/util/Try.html","searchKeys":["orElse"]},{"name":"def withFilter(p: A => Boolean): WithFilter","description":"scala.Option","location":"api/scala/Option.html","searchKeys":["withFilter"]},{"name":"def _4: T4","description":"scala.Product17","location":"api/scala/Product17.html","searchKeys":["_4"]},{"name":"class AbstractFunction6[-T1, -T2, -T3, -T4, -T5, -T6, +R] extends (T1, T2, T3, T4, T5, T6) => R","description":"scala.runtime.AbstractFunction6","location":"api/scala/runtime/AbstractFunction6.html","searchKeys":["AbstractFunction6"]},{"name":"val x$18: FromExpr[T1]","description":"scala.quoted.FromExpr$$Tuple17FromExpr","location":"api/scala/quoted/FromExpr$$Tuple17FromExpr.html","searchKeys":["x$18"]},{"name":"def asJavaLongBinaryOperator(sf: (Long, Long) => Long): LongBinaryOperator","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asJavaLongBinaryOperator"]},{"name":"def empty[K, V](evidence$2: Ordering[K]): CollisionProofHashMap[K, V]","description":"scala.collection.mutable.CollisionProofHashMap$","location":"api/scala/collection/mutable/CollisionProofHashMap$.html","searchKeys":["empty"]},{"name":"class BeanProperty extends StaticAnnotation","description":"scala.beans.BeanProperty","location":"api/scala/beans/BeanProperty.html","searchKeys":["BeanProperty"]},{"name":"def *(x: Short): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["*"]},{"name":"def doubleValue: Double","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["doubleValue"]},{"name":"def print(sep: String): Unit","description":"scala.collection.immutable.Stream","location":"api/scala/collection/immutable/Stream.html","searchKeys":["print"]},{"name":"def catchingPromiscuously[T](c: Catcher[T]): Catch[T]","description":"scala.util.control.Exception$","location":"api/scala/util/control/Exception$.html","searchKeys":["catchingPromiscuously"]},{"name":"val SOURCE: 4","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["SOURCE"]},{"name":"def max(other: FiniteDuration): FiniteDuration","description":"scala.concurrent.duration.FiniteDuration","location":"api/scala/concurrent/duration/FiniteDuration.html","searchKeys":["max"]},{"name":"class Drop[A](underlying: SomeSeqOps[A], n: Int) extends Drop[A] with SeqView[A]","description":"scala.collection.SeqView$$Drop","location":"api/scala/collection/SeqView$$Drop.html","searchKeys":["Drop"]},{"name":"def asJavaLongConsumer(sf: Long => BoxedUnit): LongConsumer","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asJavaLongConsumer"]},{"name":"def toRadians(x: Double): Double","description":"scala.math","location":"api/scala/math.html","searchKeys":["toRadians"]},{"name":"val x$29: FromExpr[T13]","description":"scala.quoted.FromExpr$$Tuple16FromExpr","location":"api/scala/quoted/FromExpr$$Tuple16FromExpr.html","searchKeys":["x$29"]},{"name":"val SELECT: 112","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["SELECT"]},{"name":"def asJavaToLongFunction[T](sf: T => Long): ToLongFunction[T]","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asJavaToLongFunction"]},{"name":"def toBooleanOption: Option[Boolean]","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["toBooleanOption"]},{"name":"def clear(): Unit","description":"scala.sys.Prop","location":"api/scala/sys/Prop.html","searchKeys":["clear"]},{"name":"given ParamRefMethods","description":"scala.quoted.Quotes$reflectModule$ParamRefMethods","location":"api/scala/quoted/Quotes$reflectModule$ParamRefMethods.html","searchKeys":["ParamRefMethods"]},{"name":"def TupleClass(arity: Int): Symbol","description":"scala.quoted.Quotes$reflectModule$defnModule","location":"api/scala/quoted/Quotes$reflectModule$defnModule.html","searchKeys":["TupleClass"]},{"name":"class RichObjDoubleConsumerAsFunction2[T](underlying: ObjDoubleConsumer[T]) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichObjDoubleConsumerAsFunction2","location":"api/scala/jdk/FunctionWrappers$$RichObjDoubleConsumerAsFunction2.html","searchKeys":["RichObjDoubleConsumerAsFunction2"]},{"name":"def toIterable: Iterable[A]","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["toIterable"]},{"name":"class Filter[K, +V](underlying: SomeMapOps[K, V], isFlipped: Boolean, p: (K, V) => Boolean) extends AbstractMapView[K, V]","description":"scala.collection.MapView$$Filter","location":"api/scala/collection/MapView$$Filter.html","searchKeys":["Filter"]},{"name":"def apply[K, V](elems: (K, V)*): CC[K, V]","description":"scala.collection.MapFactory","location":"api/scala/collection/MapFactory.html","searchKeys":["apply"]},{"name":"val x$21: FromExpr[T10]","description":"scala.quoted.FromExpr$$Tuple11FromExpr","location":"api/scala/quoted/FromExpr$$Tuple11FromExpr.html","searchKeys":["x$21"]},{"name":"class AbstractFunction5[-T1, -T2, -T3, -T4, -T5, +R] extends (T1, T2, T3, T4, T5) => R","description":"scala.runtime.AbstractFunction5","location":"api/scala/runtime/AbstractFunction5.html","searchKeys":["AbstractFunction5"]},{"name":"val x$3: Type[T3]","description":"scala.quoted.FromExpr$$Tuple4FromExpr","location":"api/scala/quoted/FromExpr$$Tuple4FromExpr.html","searchKeys":["x$3"]},{"name":"def |(x: Long): Long","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["|"]},{"name":"def quot(x: BigDecimal, y: BigDecimal): BigDecimal","description":"scala.math.Numeric$$BigDecimalAsIfIntegral","location":"api/scala/math/Numeric$$BigDecimalAsIfIntegral.html","searchKeys":["quot"]},{"name":"def minAfter(key: A): Option[A]","description":"scala.collection.SortedSetOps","location":"api/scala/collection/SortedSetOps.html","searchKeys":["minAfter"]},{"name":"def tryFailure(cause: Throwable): Boolean","description":"scala.concurrent.Promise","location":"api/scala/concurrent/Promise.html","searchKeys":["tryFailure"]},{"name":"def toInt(x: T): Int","description":"scala.math.Numeric","location":"api/scala/math/Numeric.html","searchKeys":["toInt"]},{"name":"val x$15: Type[T15]","description":"scala.quoted.FromExpr$$Tuple19FromExpr","location":"api/scala/quoted/FromExpr$$Tuple19FromExpr.html","searchKeys":["x$15"]},{"name":"def asTerm: Term","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["asTerm"]},{"name":"package scala.math","description":"scala.math","location":"api/scala/math.html","searchKeys":["scala.math"]},{"name":"def copyToArray[T](xs: Array[U]): Int","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["copyToArray"]},{"name":"def stringToProcess(command: String): ProcessBuilder","description":"scala.sys.process.ProcessImplicits","location":"api/scala/sys/process/ProcessImplicits.html","searchKeys":["stringToProcess"]},{"name":"type NoSuchElementException = NoSuchElementException","description":"scala","location":"api/scala.html","searchKeys":["NoSuchElementException"]},{"name":"def count(p: Char => Boolean): Int","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["count"]},{"name":"def *(x: Short): Int","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["*"]},{"name":"def toLong: Long","description":"scala.math.Numeric$NumericOps","location":"api/scala/math/Numeric$NumericOps.html","searchKeys":["toLong"]},{"name":"def toLongOption: Option[Long]","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["toLongOption"]},{"name":"def low: TypeTree","description":"scala.quoted.Quotes$reflectModule$TypeBoundsTreeMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeBoundsTreeMethods.html","searchKeys":["low"]},{"name":"val pf: Catcher[T]","description":"scala.util.control.Exception$$Catch","location":"api/scala/util/control/Exception$$Catch.html","searchKeys":["pf"]},{"name":"val x$23: FromExpr[T1]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["x$23"]},{"name":"def swap: (T2, T1)","description":"scala.Tuple2","location":"api/scala/Tuple2.html","searchKeys":["swap"]},{"name":"def enrichAsJavaLongFunction[A0, R](sf: A0 => R)(evA0: A0 =:= Long): RichFunction1AsLongFunction[R]","description":"scala.jdk.Priority1FunctionExtensions","location":"api/scala/jdk/Priority1FunctionExtensions.html","searchKeys":["enrichAsJavaLongFunction"]},{"name":"val x$8: Type[T8]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["x$8"]},{"name":"def *(x: Double): Double","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["*"]},{"name":"type Alternatives <: Tree","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Alternatives"]},{"name":"class LambdaDeserialize","description":"scala.runtime.LambdaDeserialize","location":"api/scala/runtime/LambdaDeserialize.html","searchKeys":["LambdaDeserialize"]},{"name":"def apply(x: T)(using Quotes): Expr[T]","description":"scala.quoted.ToExpr","location":"api/scala/quoted/ToExpr.html","searchKeys":["apply"]},{"name":"def pow(n: Int): BigDecimal","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["pow"]},{"name":"def error(message: String): Nothing","description":"scala.sys","location":"api/scala/sys.html","searchKeys":["error"]},{"name":"def getNat(at: Addr): Int","description":"dotty.tools.tasty.TastyBuffer","location":"api/dotty/tools/tasty/TastyBuffer.html","searchKeys":["getNat"]},{"name":"def apply(command: Seq[String], cwd: Option[File], extraEnv: (String, String)*): ProcessBuilder","description":"scala.sys.process.ProcessCreation","location":"api/scala/sys/process/ProcessCreation.html","searchKeys":["apply"]},{"name":"def appendedAll[B >: A](suffix: IterableOnce[B]): CC[B]","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["appendedAll"]},{"name":"def fromString(s: String): Byte","description":"scala.util.CommandLineParser$$FromString$$given_FromString_Byte$","location":"api/scala/util/CommandLineParser$$FromString$$given_FromString_Byte$.html","searchKeys":["fromString"]},{"name":"object ClassTag","description":"scala.reflect.ClassTag$","location":"api/scala/reflect/ClassTag$.html","searchKeys":["ClassTag"]},{"name":"class AsJavaDoubleToIntFunction(sf: Double => Int) extends DoubleToIntFunction","description":"scala.jdk.FunctionWrappers$$AsJavaDoubleToIntFunction","location":"api/scala/jdk/FunctionWrappers$$AsJavaDoubleToIntFunction.html","searchKeys":["AsJavaDoubleToIntFunction"]},{"name":"def isLegalTag(tag: Int): Boolean","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["isLegalTag"]},{"name":"def keySet: Set[K]","description":"scala.collection.MapOps","location":"api/scala/collection/MapOps.html","searchKeys":["keySet"]},{"name":"val Set: Set","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["Set"]},{"name":"Usage","description":"","location":"docs/Usage/index.html","searchKeys":["Usage"]},{"name":"val ASSIGN: 139","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["ASSIGN"]},{"name":"def enqueueAll(elems: IterableOnce[A]): Queue[A]","description":"scala.collection.mutable.Queue","location":"api/scala/collection/mutable/Queue.html","searchKeys":["enqueueAll"]},{"name":"def from[K, V](it: IterableOnce[(K, V)]): VectorMap[K, V]","description":"scala.collection.immutable.VectorMap$","location":"api/scala/collection/immutable/VectorMap$.html","searchKeys":["from"]},{"name":"def drop[Repr](coll: Repr, num: Int)(iterable: IsIterable[Repr] { type C <: Repr;  }): Repr","description":"scala.runtime.ScalaRunTime$","location":"api/scala/runtime/ScalaRunTime$.html","searchKeys":["drop"]},{"name":"def _11: T11","description":"scala.Product16","location":"api/scala/Product16.html","searchKeys":["_11"]},{"name":"type StringConstant <: Constant","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["StringConstant"]},{"name":"def from[E](it: IterableOnce[E]): Vector[E]","description":"scala.collection.immutable.Vector$","location":"api/scala/collection/immutable/Vector$.html","searchKeys":["from"]},{"name":"trait ErrorKind","description":"scala.compiletime.testing.ErrorKind","location":"api/scala/compiletime/testing/ErrorKind.html","searchKeys":["ErrorKind"]},{"name":"type CancellationException = CancellationException","description":"scala.concurrent","location":"api/scala/concurrent.html","searchKeys":["CancellationException"]},{"name":"val x$34: FromExpr[T17]","description":"scala.quoted.FromExpr$$Tuple17FromExpr","location":"api/scala/quoted/FromExpr$$Tuple17FromExpr.html","searchKeys":["x$34"]},{"name":"val x$14: Type[T14]","description":"scala.quoted.FromExpr$$Tuple18FromExpr","location":"api/scala/quoted/FromExpr$$Tuple18FromExpr.html","searchKeys":["x$14"]},{"name":"def isDigit: Boolean","description":"scala.runtime.RichChar","location":"api/scala/runtime/RichChar.html","searchKeys":["isDigit"]},{"name":"def properties AsScalaMap(p: Properties): Map[String, String]","description":"scala.collection.convert.ToScalaImplicits","location":"api/scala/collection/convert/ToScalaImplicits.html","searchKeys":["properties AsScalaMap"]},{"name":"def fill[T](n1: Int, n2: Int, n3: Int, n4: Int)(elem: => T)(evidence$21: ClassTag[T]): IArray[IArray[IArray[IArray[T]]]]","description":"scala.IArray$package$$IArray$","location":"api/scala/IArray$package$$IArray$.html","searchKeys":["fill"]},{"name":"def apply(index: Int): Long","description":"scala.collection.mutable.ArraySeq$$ofLong","location":"api/scala/collection/mutable/ArraySeq$$ofLong.html","searchKeys":["apply"]},{"name":"object Regex","description":"scala.util.matching.Regex$","location":"api/scala/util/matching/Regex$.html","searchKeys":["Regex"]},{"name":"val x$2: Type[T2]","description":"scala.quoted.FromExpr$$Tuple6FromExpr","location":"api/scala/quoted/FromExpr$$Tuple6FromExpr.html","searchKeys":["x$2"]},{"name":"val EXPORT: 177","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["EXPORT"]},{"name":"def infixFractionalOps[T](x: T)(num: Fractional[T]): FractionalOps","description":"scala.math.Fractional$$ExtraImplicits","location":"api/scala/math/Fractional$$ExtraImplicits.html","searchKeys":["infixFractionalOps"]},{"name":"def this(hashf: Hashing[K], ef: Equiv[K])","description":"scala.collection.concurrent.TrieMap","location":"api/scala/collection/concurrent/TrieMap.html","searchKeys":["this"]},{"name":"val charStepperShape: StepperShape[Char, IntStepper]","description":"scala.collection.StepperShape$","location":"api/scala/collection/StepperShape$.html","searchKeys":["charStepperShape"]},{"name":"given BigIntFromDigits: WithRadix[BigInt]","description":"scala.util.FromDigits$$BigIntFromDigits$","location":"api/scala/util/FromDigits$$BigIntFromDigits$.html","searchKeys":["BigIntFromDigits"]},{"name":"def accept(x1: T, x2: U): Unit","description":"scala.jdk.FunctionWrappers$$AsJavaBiConsumer","location":"api/scala/jdk/FunctionWrappers$$AsJavaBiConsumer.html","searchKeys":["accept"]},{"name":"def asJava: LongSupplier","description":"scala.jdk.FunctionWrappers$$RichFunction0AsLongSupplier","location":"api/scala/jdk/FunctionWrappers$$RichFunction0AsLongSupplier.html","searchKeys":["asJava"]},{"name":"def future: Future[T]","description":"scala.concurrent.Promise","location":"api/scala/concurrent/Promise.html","searchKeys":["future"]},{"name":"val x$20: FromExpr[T1]","description":"scala.quoted.FromExpr$$Tuple19FromExpr","location":"api/scala/quoted/FromExpr$$Tuple19FromExpr.html","searchKeys":["x$20"]},{"name":"val x$4: FromExpr[U]","description":"scala.quoted.FromExpr$$MapFromExpr","location":"api/scala/quoted/FromExpr$$MapFromExpr.html","searchKeys":["x$4"]},{"name":"def *(x: Int): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["*"]},{"name":"def *(x: Char): Double","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["*"]},{"name":"def apply(length: Double, unit: TimeUnit): Duration","description":"scala.concurrent.duration.Duration$","location":"api/scala/concurrent/duration/Duration$.html","searchKeys":["apply"]},{"name":"def sizeHint(size: Int): Unit","description":"scala.collection.mutable.Builder","location":"api/scala/collection/mutable/Builder.html","searchKeys":["sizeHint"]},{"name":"def byteArrayOps(xs: Array[Byte]): ArrayOps[Byte]","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["byteArrayOps"]},{"name":"def >(x: Double): Boolean","description":"scala.Char","location":"api/scala/Char.html","searchKeys":[">"]},{"name":"class ParseError(val idx: Int, val msg: String) extends Exception","description":"scala.util.CommandLineParser$$ParseError","location":"api/scala/util/CommandLineParser$$ParseError.html","searchKeys":["ParseError"]},{"name":"def unapply[T1, T2, T3, T4, T5, T6, T7, T8](x: Product8[T1, T2, T3, T4, T5, T6, T7, T8]): Option[Product8[T1, T2, T3, T4, T5, T6, T7, T8]]","description":"scala.Product8$","location":"api/scala/Product8$.html","searchKeys":["unapply"]},{"name":"def filter[C](p: (El1, El2, El3, El4) => Boolean)(bf: BuildFrom[C1, (El1, El2, El3, El4), C]): C","description":"scala.collection.LazyZip4","location":"api/scala/collection/LazyZip4.html","searchKeys":["filter"]},{"name":"def asJavaSeqValueIntStreamFromChar[K](m: Map[K, Character]): IntStream","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaSeqValueIntStreamFromChar"]},{"name":"trait Product extends Mirror","description":"scala.deriving.Mirror$$Product","location":"api/scala/deriving/Mirror$$Product.html","searchKeys":["Product"]},{"name":"def _4: T4","description":"scala.Product7","location":"api/scala/Product7.html","searchKeys":["_4"]},{"name":"def supplier: Supplier[IntAccumulator]","description":"scala.jdk.IntAccumulator$","location":"api/scala/jdk/IntAccumulator$.html","searchKeys":["supplier"]},{"name":"def -(other: Duration): Duration","description":"scala.concurrent.duration.Duration","location":"api/scala/concurrent/duration/Duration.html","searchKeys":["-"]},{"name":"def elemTag: ClassTag[]","description":"scala.collection.mutable.ArraySeq$$ofFloat","location":"api/scala/collection/mutable/ArraySeq$$ofFloat.html","searchKeys":["elemTag"]},{"name":"val This: ThisModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["This"]},{"name":"val Any: Manifest[Any]","description":"scala.reflect.ClassManifestFactory$","location":"api/scala/reflect/ClassManifestFactory$.html","searchKeys":["Any"]},{"name":"How to write a type class `derived` method using macros","description":"","location":"docs/reference/contextual/derivation-macro.html","searchKeys":["How to write a type class `derived` method using macros"]},{"name":"def apply(x: String, mc: MathContext): BigDecimal","description":"scala.math.BigDecimal$","location":"api/scala/math/BigDecimal$.html","searchKeys":["apply"]},{"name":"def builderToProcess(builder: JProcessBuilder): ProcessBuilder","description":"scala.sys.process.ProcessImplicits","location":"api/scala/sys/process/ProcessImplicits.html","searchKeys":["builderToProcess"]},{"name":"class BitSetN(val elems: Array[Long]) extends BitSet","description":"scala.collection.immutable.BitSet$$BitSetN","location":"api/scala/collection/immutable/BitSet$$BitSetN.html","searchKeys":["BitSetN"]},{"name":"def toNanos: Long","description":"scala.concurrent.duration.Duration$$Infinite","location":"api/scala/concurrent/duration/Duration$$Infinite.html","searchKeys":["toNanos"]},{"name":"def applyAsLong(x1: Int): Long","description":"scala.jdk.FunctionWrappers$$AsJavaIntToLongFunction","location":"api/scala/jdk/FunctionWrappers$$AsJavaIntToLongFunction.html","searchKeys":["applyAsLong"]},{"name":"object chaining extends ChainingSyntax","description":"scala.util.package$$chaining$","location":"api/scala/util/package$$chaining$.html","searchKeys":["chaining"]},{"name":"trait RefinedModule","description":"scala.quoted.Quotes$reflectModule$RefinedModule","location":"api/scala/quoted/Quotes$reflectModule$RefinedModule.html","searchKeys":["RefinedModule"]},{"name":"type StringBuilder = StringBuilder","description":"scala","location":"api/scala.html","searchKeys":["StringBuilder"]},{"name":"def apply$mcFDD$sp(v1: Double, v2: Double): Float","description":"scala.runtime.java8.JFunction2$mcFDD$sp","location":"api/scala/runtime/java8/JFunction2$mcFDD$sp.html","searchKeys":["apply$mcFDD$sp"]},{"name":"type MirroredElemLabels <: Tuple","description":"scala.deriving.Mirror","location":"api/scala/deriving/Mirror.html","searchKeys":["MirroredElemLabels"]},{"name":"def <=(x: Float): Boolean","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["<="]},{"name":"val header: Array[Int]","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["header"]},{"name":"def copy(original: Tree)(expr: Term, tpt: TypeTree): Typed","description":"scala.quoted.Quotes$reflectModule$TypedModule","location":"api/scala/quoted/Quotes$reflectModule$TypedModule.html","searchKeys":["copy"]},{"name":"def connectToIn(o: OutputStream): Unit","description":"scala.sys.process.BasicIO$","location":"api/scala/sys/process/BasicIO$.html","searchKeys":["connectToIn"]},{"name":"def +(x: Char): Int","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["+"]},{"name":"val x$5: Type[T5]","description":"scala.quoted.FromExpr$$Tuple17FromExpr","location":"api/scala/quoted/FromExpr$$Tuple17FromExpr.html","searchKeys":["x$5"]},{"name":"object SystemProperties","description":"scala.sys.SystemProperties$","location":"api/scala/sys/SystemProperties$.html","searchKeys":["SystemProperties"]},{"name":"def empty[K, V](evidence$1: Ordering[K]): TreeMap[K, V]","description":"scala.collection.immutable.TreeMap$","location":"api/scala/collection/immutable/TreeMap$.html","searchKeys":["empty"]},{"name":"val REPEATED: 149","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["REPEATED"]},{"name":"def _3: T3","description":"scala.Product6","location":"api/scala/Product6.html","searchKeys":["_3"]},{"name":"def select(sym: Symbol): Select","description":"scala.quoted.Quotes$reflectModule$TermMethods","location":"api/scala/quoted/Quotes$reflectModule$TermMethods.html","searchKeys":["select"]},{"name":"def fromURI(uri: URI)(codec: Codec): BufferedSource","description":"scala.io.Source$","location":"api/scala/io/Source$.html","searchKeys":["fromURI"]},{"name":"def binder: RecursiveType","description":"scala.quoted.Quotes$reflectModule$RecursiveThisMethods","location":"api/scala/quoted/Quotes$reflectModule$RecursiveThisMethods.html","searchKeys":["binder"]},{"name":"def fill[A](n1: Int, n2: Int, n3: Int, n4: Int, n5: Int)(elem: => A): CC[CC[CC[CC[CC[A]]]]]","description":"scala.collection.IterableFactory","location":"api/scala/collection/IterableFactory.html","searchKeys":["fill"]},{"name":"def toFloat: Float","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["toFloat"]},{"name":"class IntAccumulator extends Accumulator[Int, [A] =>> AnyAccumulator[A], IntAccumulator] with SeqOps[Int, [A] =>> AnyAccumulator[A], IntAccumulator] with Serializable","description":"scala.jdk.IntAccumulator","location":"api/scala/jdk/IntAccumulator.html","searchKeys":["IntAccumulator"]},{"name":"val x$11: Type[T11]","description":"scala.quoted.FromExpr$$Tuple21FromExpr","location":"api/scala/quoted/FromExpr$$Tuple21FromExpr.html","searchKeys":["x$11"]},{"name":"def compare(x: Int, y: Int): Int","description":"scala.math.Ordering$$IntOrdering","location":"api/scala/math/Ordering$$IntOrdering.html","searchKeys":["compare"]},{"name":"def from[K, V](it: SomeMapOps[K, V]): MapView[K, V]","description":"scala.collection.MapViewFactory","location":"api/scala/collection/MapViewFactory.html","searchKeys":["from"]},{"name":"def enrichAsScalaFromIntToLongFunction(jf: IntToLongFunction): RichIntToLongFunctionAsFunction1","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsScalaFromIntToLongFunction"]},{"name":"val BODYRETAINER: 22","description":"dotty.tools.tasty.TastyFormat$$NameTags","location":"api/dotty/tools/tasty/TastyFormat$$NameTags.html","searchKeys":["BODYRETAINER"]},{"name":"def isSurrogate: Boolean","description":"scala.runtime.RichChar","location":"api/scala/runtime/RichChar.html","searchKeys":["isSurrogate"]},{"name":"def getExponent(d: Double): Int","description":"scala.math","location":"api/scala/math.html","searchKeys":["getExponent"]},{"name":"val THROW: 96","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["THROW"]},{"name":"The Matchable Trait","description":"","location":"docs/reference/other-new-features/matchable.html","searchKeys":["The Matchable Trait"]},{"name":"def substituteBoth[F <: ([_$1, _$2] =>> Any)](ftf: F[To, From]): F[From, To]","description":"scala.<:<","location":"api/scala/<:<.html","searchKeys":["substituteBoth"]},{"name":"def toDeferrer[A](l: => LazyList[A]): Deferrer[A]","description":"scala.collection.immutable.LazyList$","location":"api/scala/collection/immutable/LazyList$.html","searchKeys":["toDeferrer"]},{"name":"def apply[R](resource: R)(evidence$11: Releasable[R]): R","description":"scala.util.Using$$Manager","location":"api/scala/util/Using$$Manager.html","searchKeys":["apply"]},{"name":"def apply$mcI$sp(): Int","description":"scala.runtime.java8.JFunction0$mcI$sp","location":"api/scala/runtime/java8/JFunction0$mcI$sp.html","searchKeys":["apply$mcI$sp"]},{"name":"def orElseBy[S](f: T => S)(ord: Ordering[S]): Ordering[T]","description":"scala.math.Ordering","location":"api/scala/math/Ordering.html","searchKeys":["orElseBy"]},{"name":"def standard(in: OutputStream => Unit): ProcessIO","description":"scala.sys.process.BasicIO$","location":"api/scala/sys/process/BasicIO$.html","searchKeys":["standard"]},{"name":"def aliases: List[TypeDef]","description":"scala.quoted.Quotes$reflectModule$TypeBlockMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeBlockMethods.html","searchKeys":["aliases"]},{"name":"class RichDoubleBinaryOperatorAsFunction2(underlying: DoubleBinaryOperator) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichDoubleBinaryOperatorAsFunction2","location":"api/scala/jdk/FunctionWrappers$$RichDoubleBinaryOperatorAsFunction2.html","searchKeys":["RichDoubleBinaryOperatorAsFunction2"]},{"name":"def insert[V1 >: V](key: K, value: V1): TreeMap[K, V1]","description":"scala.collection.immutable.TreeMap","location":"api/scala/collection/immutable/TreeMap.html","searchKeys":["insert"]},{"name":"def Override: Flags","description":"scala.quoted.Quotes$reflectModule$FlagsModule","location":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html","searchKeys":["Override"]},{"name":"def fill[A](n1: Int, n2: Int, n3: Int, n4: Int)(elem: => A): CC[CC[CC[CC[A]]]]","description":"scala.collection.IterableFactory","location":"api/scala/collection/IterableFactory.html","searchKeys":["fill"]},{"name":"def seq AsJavaList[A](seq: Seq[A]): List[A]","description":"scala.collection.convert.ToJavaImplicits","location":"api/scala/collection/convert/ToJavaImplicits.html","searchKeys":["seq AsJavaList"]},{"name":"object LongMap","description":"scala.collection.immutable.LongMap$","location":"api/scala/collection/immutable/LongMap$.html","searchKeys":["LongMap"]},{"name":"def fromFile(file: File, enc: String, bufferSize: Int): BufferedSource","description":"scala.io.Source$","location":"api/scala/io/Source$.html","searchKeys":["fromFile"]},{"name":"def termParamss: List[TermParamClause]","description":"scala.quoted.Quotes$reflectModule$DefDefMethods","location":"api/scala/quoted/Quotes$reflectModule$DefDefMethods.html","searchKeys":["termParamss"]},{"name":"def filterNot(p: A => Boolean): Option[A]","description":"scala.Option","location":"api/scala/Option.html","searchKeys":["filterNot"]},{"name":"TASTy Inspection","description":"","location":"docs/reference/metaprogramming/tasty-inspect.html","searchKeys":["TASTy Inspection"]},{"name":"trait StrictOptimizedClassTagSeqFactory[+CC <: ([A] =>> SeqOps[A, [A] =>> Seq[A], Seq[A]])] extends ClassTagSeqFactory[CC]","description":"scala.collection.StrictOptimizedClassTagSeqFactory","location":"api/scala/collection/StrictOptimizedClassTagSeqFactory.html","searchKeys":["StrictOptimizedClassTagSeqFactory"]},{"name":"class AbstractSet[A] extends AbstractSet[A] with Set[A]","description":"scala.collection.mutable.AbstractSet","location":"api/scala/collection/mutable/AbstractSet.html","searchKeys":["AbstractSet"]},{"name":"class AsJavaDoubleConsumer(sf: Double => Unit) extends DoubleConsumer","description":"scala.jdk.FunctionWrappers$$AsJavaDoubleConsumer","location":"api/scala/jdk/FunctionWrappers$$AsJavaDoubleConsumer.html","searchKeys":["AsJavaDoubleConsumer"]},{"name":"val x$3: FromExpr[T]","description":"scala.quoted.FromExpr$$MapFromExpr","location":"api/scala/quoted/FromExpr$$MapFromExpr.html","searchKeys":["x$3"]},{"name":"def >=(x: Float): Boolean","description":"scala.Int","location":"api/scala/Int.html","searchKeys":[">="]},{"name":"def toLong(x: Double): Long","description":"scala.math.Numeric$$DoubleIsFractional","location":"api/scala/math/Numeric$$DoubleIsFractional.html","searchKeys":["toLong"]},{"name":"def quote[T](x: T): Quotes => Expr[T]","description":"scala.quoted.runtime.Expr$","location":"api/scala/quoted/runtime/Expr$.html","searchKeys":["quote"]},{"name":"def addOne(a: Int): IntAccumulator","description":"scala.jdk.IntAccumulator","location":"api/scala/jdk/IntAccumulator.html","searchKeys":["addOne"]},{"name":"type Either[+A, +B] = Either[A, B]","description":"scala","location":"api/scala.html","searchKeys":["Either"]},{"name":"def toFloat: Float","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["toFloat"]},{"name":"val MICROSECONDS: TimeUnit","description":"scala.concurrent.duration","location":"api/scala/concurrent/duration.html","searchKeys":["MICROSECONDS"]},{"name":"class LazyList[+A] extends AbstractSeq[A] with LinearSeq[A] with LinearSeqOps[A, [A] =>> LazyList[A], LazyList[A]] with IterableFactoryDefaults[A, [A] =>> LazyList[A]] with Serializable","description":"scala.collection.immutable.LazyList","location":"api/scala/collection/immutable/LazyList.html","searchKeys":["LazyList"]},{"name":"val IMPORT: 132","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["IMPORT"]},{"name":"def apply$mcDJI$sp(v1: Long, v2: Int): Double","description":"scala.runtime.java8.JFunction2$mcDJI$sp","location":"api/scala/runtime/java8/JFunction2$mcDJI$sp.html","searchKeys":["apply$mcDJI$sp"]},{"name":"val CommentsSection: \"Comments\"","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["CommentsSection"]},{"name":"def apply$mcFD$sp(v1: Double): Float","description":"scala.runtime.java8.JFunction1$mcFD$sp","location":"api/scala/runtime/java8/JFunction1$mcFD$sp.html","searchKeys":["apply$mcFD$sp"]},{"name":"def fromScala(o: Option[A]): O","description":"scala.jdk.OptionShape","location":"api/scala/jdk/OptionShape.html","searchKeys":["fromScala"]},{"name":"def _2: T2","description":"scala.Product16","location":"api/scala/Product16.html","searchKeys":["_2"]},{"name":"val x$36: FromExpr[T16]","description":"scala.quoted.FromExpr$$Tuple20FromExpr","location":"api/scala/quoted/FromExpr$$Tuple20FromExpr.html","searchKeys":["x$36"]},{"name":"def takeInPlace(n: Int): Buffer[A]","description":"scala.collection.mutable.Buffer","location":"api/scala/collection/mutable/Buffer.html","searchKeys":["takeInPlace"]},{"name":"def apply(start: Long, end: Long, step: Long): Exclusive[Long]","description":"scala.collection.immutable.Range$$Long$","location":"api/scala/collection/immutable/Range$$Long$.html","searchKeys":["apply"]},{"name":"def firstCompletedOf[T](futures: IterableOnce[Future[T]])(executor: ExecutionContext): Future[T]","description":"scala.concurrent.Future$","location":"api/scala/concurrent/Future$.html","searchKeys":["firstCompletedOf"]},{"name":"def apply(unscaledVal: BigInt, scale: Int): BigDecimal","description":"scala.math.BigDecimal$","location":"api/scala/math/BigDecimal$.html","searchKeys":["apply"]},{"name":"def toIndexedSeq: IndexedSeq[A]","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["toIndexedSeq"]},{"name":"def map[V2](f: (Int, T) => (Int, V2)): IntMap[V2]","description":"scala.collection.immutable.IntMap","location":"api/scala/collection/immutable/IntMap.html","searchKeys":["map"]},{"name":"object IndexedSeqDefaults","description":"scala.collection.immutable.IndexedSeqDefaults$","location":"api/scala/collection/immutable/IndexedSeqDefaults$.html","searchKeys":["IndexedSeqDefaults"]},{"name":"def addString(b: StringBuilder, sep: String): StringBuilder","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["addString"]},{"name":"def iterator: Iterator[B]","description":"scala.collection.View$$Map","location":"api/scala/collection/View$$Map.html","searchKeys":["iterator"]},{"name":"def flatMap[K2 <: AnyRef, V2](f: (K, V) => IterableOnce[(K2, V2)])(dummy: DummyImplicit): AnyRefMap[K2, V2]","description":"scala.collection.mutable.AnyRefMap","location":"api/scala/collection/mutable/AnyRefMap.html","searchKeys":["flatMap"]},{"name":"class AbstractFunction21[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, -T14, -T15, -T16, -T17, -T18, -T19, -T20, -T21, +R] extends (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21) => R","description":"scala.runtime.AbstractFunction21","location":"api/scala/runtime/AbstractFunction21.html","searchKeys":["AbstractFunction21"]},{"name":"def length: Int","description":"scala.collection.immutable.ArraySeq$$ofRef","location":"api/scala/collection/immutable/ArraySeq$$ofRef.html","searchKeys":["length"]},{"name":"val x$6: Type[T6]","description":"scala.quoted.FromExpr$$Tuple10FromExpr","location":"api/scala/quoted/FromExpr$$Tuple10FromExpr.html","searchKeys":["x$6"]},{"name":"def unapply(tree: Block): Option[(List[ValDef], Term)]","description":"scala.quoted.Quotes$reflectModule$LambdaModule","location":"api/scala/quoted/Quotes$reflectModule$LambdaModule.html","searchKeys":["unapply"]},{"name":"trait ShortIsIntegral extends Integral[Short]","description":"scala.math.Numeric$$ShortIsIntegral","location":"api/scala/math/Numeric$$ShortIsIntegral.html","searchKeys":["ShortIsIntegral"]},{"name":"def length: Long","description":"scala.concurrent.duration.Duration","location":"api/scala/concurrent/duration/Duration.html","searchKeys":["length"]},{"name":"object ByteIsIntegral extends ByteIsIntegral with ByteOrdering","description":"scala.math.Numeric$$ByteIsIntegral$","location":"api/scala/math/Numeric$$ByteIsIntegral$.html","searchKeys":["ByteIsIntegral"]},{"name":"def asExprOf(using Type[X]): Expr[X]","description":"scala.quoted.Quotes","location":"api/scala/quoted/Quotes.html","searchKeys":["asExprOf"]},{"name":"def fill[A](n: Int)(elem: => A): CC[A]","description":"scala.collection.IterableFactory","location":"api/scala/collection/IterableFactory.html","searchKeys":["fill"]},{"name":"trait Product1[@specialized(Int, Long, Double) +T1] extends Product","description":"scala.Product1","location":"api/scala/Product1.html","searchKeys":["Product1"]},{"name":"trait Function9[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, +R] extends AnyRef","description":"scala.Function9","location":"api/scala/Function9.html","searchKeys":["Function9"]},{"name":"class RichDoubleUnaryOperatorAsFunction1(underlying: DoubleUnaryOperator) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichDoubleUnaryOperatorAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichDoubleUnaryOperatorAsFunction1.html","searchKeys":["RichDoubleUnaryOperatorAsFunction1"]},{"name":"def asJavaBiConsumer[T, U](sf: (T, U) => BoxedUnit): BiConsumer[T, U]","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asJavaBiConsumer"]},{"name":"def asScala: (T, U) => Boolean","description":"scala.jdk.FunctionWrappers$$RichBiPredicateAsFunction2","location":"api/scala/jdk/FunctionWrappers$$RichBiPredicateAsFunction2.html","searchKeys":["asScala"]},{"name":"val TARGETSIGNED: 62","description":"dotty.tools.tasty.TastyFormat$$NameTags","location":"api/dotty/tools/tasty/TastyFormat$$NameTags.html","searchKeys":["TARGETSIGNED"]},{"name":"def toRight[X](left: => X): Either[X, A]","description":"scala.Option","location":"api/scala/Option.html","searchKeys":["toRight"]},{"name":"def curried: T1 => T2 => T3 => T4 => T5 => T6 => T7 => T8 => T9 => T10 => T11 => T12 => T13 => T14 => T15 => T16 => T17 => R","description":"scala.Function17","location":"api/scala/Function17.html","searchKeys":["curried"]},{"name":"def /(x: Int): Int","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["/"]},{"name":"class switch extends StaticAnnotation","description":"scala.annotation.switch","location":"api/scala/annotation/switch.html","searchKeys":["switch"]},{"name":"def stableSort[K, M](a: Seq[K], f: K => M)(evidence$8: ClassTag[K], evidence$9: Ordering[M]): Array[K]","description":"scala.util.Sorting$","location":"api/scala/util/Sorting$.html","searchKeys":["stableSort"]},{"name":"def requiredClass(path: String): Symbol","description":"scala.quoted.Quotes$reflectModule$SymbolModule","location":"api/scala/quoted/Quotes$reflectModule$SymbolModule.html","searchKeys":["requiredClass"]},{"name":"def values: ValueSet","description":"scala.Enumeration","location":"api/scala/Enumeration.html","searchKeys":["values"]},{"name":"val x$18: FromExpr[T8]","description":"scala.quoted.FromExpr$$Tuple10FromExpr","location":"api/scala/quoted/FromExpr$$Tuple10FromExpr.html","searchKeys":["x$18"]},{"name":"def flatMap[B](f: A => IterableOnce[B])(evidence$2: Ordering[B]): CC[B]","description":"scala.collection.SortedSetOps$$WithFilter","location":"api/scala/collection/SortedSetOps$$WithFilter.html","searchKeys":["flatMap"]},{"name":"def fromBytes(bytes: Array[Byte], enc: String): Source","description":"scala.io.Source$","location":"api/scala/io/Source$.html","searchKeys":["fromBytes"]},{"name":"given SuperTypeMethods","description":"scala.quoted.Quotes$reflectModule$SuperTypeMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["SuperTypeMethods"]},{"name":"def remove(@deprecatedName(\"n\", \"2.13.0\") index: Int): A","description":"scala.collection.mutable.ArrayBuffer","location":"api/scala/collection/mutable/ArrayBuffer.html","searchKeys":["remove"]},{"name":"def _5: T5","description":"scala.Product17","location":"api/scala/Product17.html","searchKeys":["_5"]},{"name":"def iterate[T](start: T, len: Int)(f: T => T)(evidence$22: ClassTag[T]): Array[T]","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["iterate"]},{"name":"type This <: Term","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["This"]},{"name":"def unapply(x: ParamRef): (TypeRepr, Int)","description":"scala.quoted.Quotes$reflectModule$ParamRefModule","location":"api/scala/quoted/Quotes$reflectModule$ParamRefModule.html","searchKeys":["unapply"]},{"name":"given SingletonTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["SingletonTypeTest"]},{"name":"type TypeProjection <: TypeTree","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeProjection"]},{"name":"def concat(suffix: IterableOnce[Char]): String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["concat"]},{"name":"class FutureOps[T](f: Future[T]) extends AnyVal","description":"scala.jdk.FutureConverters$$FutureOps","location":"api/scala/jdk/FutureConverters$$FutureOps.html","searchKeys":["FutureOps"]},{"name":"given TryTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TryTypeTest"]},{"name":"def |(x: Long): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["|"]},{"name":"def times(x: Long, y: Long): Long","description":"scala.math.Numeric$$LongIsIntegral","location":"api/scala/math/Numeric$$LongIsIntegral.html","searchKeys":["times"]},{"name":"def exists(p: (El1, El2, El3) => Boolean): Boolean","description":"scala.runtime.Tuple3Zipped","location":"api/scala/runtime/Tuple3Zipped.html","searchKeys":["exists"]},{"name":"val x$2: Type[T2]","description":"scala.quoted.FromExpr$$Tuple10FromExpr","location":"api/scala/quoted/FromExpr$$Tuple10FromExpr.html","searchKeys":["x$2"]},{"name":"def scala$collection$mutable$Cloneable$$super$clone(): Object","description":"scala.collection.mutable.Cloneable","location":"api/scala/collection/mutable/Cloneable.html","searchKeys":["scala$collection$mutable$Cloneable$$super$clone"]},{"name":"given ThisTypeMethods","description":"scala.quoted.Quotes$reflectModule$ThisTypeMethods","location":"api/scala/quoted/Quotes$reflectModule$ThisTypeMethods.html","searchKeys":["ThisTypeMethods"]},{"name":"def _12: T12","description":"scala.Product19","location":"api/scala/Product19.html","searchKeys":["_12"]},{"name":"def owner: Symbol","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["owner"]},{"name":"def _14: T14","description":"scala.Product21","location":"api/scala/Product21.html","searchKeys":["_14"]},{"name":"def transformChildren[T](e: Expr[T])(using Type[T])(using Quotes): Expr[T]","description":"scala.quoted.ExprMap","location":"api/scala/quoted/ExprMap.html","searchKeys":["transformChildren"]},{"name":"def <(x: Short): Boolean","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["<"]},{"name":"def inclusive: Range","description":"scala.collection.immutable.Range","location":"api/scala/collection/immutable/Range.html","searchKeys":["inclusive"]},{"name":"class NumberTooSmall(msg: String) extends FromDigitsException","description":"scala.util.FromDigits$$NumberTooSmall","location":"api/scala/util/FromDigits$$NumberTooSmall.html","searchKeys":["NumberTooSmall"]},{"name":"def copy(original: Tree)(name: String, paramss: List[ParamClause], tpt: TypeTree, rhs: Option[Term]): DefDef","description":"scala.quoted.Quotes$reflectModule$DefDefModule","location":"api/scala/quoted/Quotes$reflectModule$DefDefModule.html","searchKeys":["copy"]},{"name":"def quote(text: String): String","description":"scala.util.matching.Regex$","location":"api/scala/util/matching/Regex$.html","searchKeys":["quote"]},{"name":"val Traversable: Iterable","description":"scala","location":"api/scala.html","searchKeys":["Traversable"]},{"name":"class AsJavaToDoubleBiFunction[T, U](sf: (T, U) => Double) extends ToDoubleBiFunction[T, U]","description":"scala.jdk.FunctionWrappers$$AsJavaToDoubleBiFunction","location":"api/scala/jdk/FunctionWrappers$$AsJavaToDoubleBiFunction.html","searchKeys":["AsJavaToDoubleBiFunction"]},{"name":"val MaxValue: 2147483647","description":"scala.Int$","location":"api/scala/Int$.html","searchKeys":["MaxValue"]},{"name":"def toShort: Short","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["toShort"]},{"name":"val x$16: FromExpr[T8]","description":"scala.quoted.FromExpr$$Tuple8FromExpr","location":"api/scala/quoted/FromExpr$$Tuple8FromExpr.html","searchKeys":["x$16"]},{"name":"def apply(qual: Term, mix: Option[String]): Super","description":"scala.quoted.Quotes$reflectModule$SuperModule","location":"api/scala/quoted/Quotes$reflectModule$SuperModule.html","searchKeys":["apply"]},{"name":"val Byte: ByteManifest","description":"scala.reflect.ClassManifestFactory$","location":"api/scala/reflect/ClassManifestFactory$.html","searchKeys":["Byte"]},{"name":"def apply(lhs: TypeRepr, rhs: TypeRepr): AndType","description":"scala.quoted.Quotes$reflectModule$AndTypeModule","location":"api/scala/quoted/Quotes$reflectModule$AndTypeModule.html","searchKeys":["apply"]},{"name":"def length: Int","description":"scala.collection.SeqView$$TakeRight","location":"api/scala/collection/SeqView$$TakeRight.html","searchKeys":["length"]},{"name":"class ofRef[T <: AnyRef](val array: Array[T]) extends ArraySeq[T]","description":"scala.collection.mutable.ArraySeq$$ofRef","location":"api/scala/collection/mutable/ArraySeq$$ofRef.html","searchKeys":["ofRef"]},{"name":"val POLYtype: 169","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["POLYtype"]},{"name":"val self: Int","description":"scala.runtime.RichInt","location":"api/scala/runtime/RichInt.html","searchKeys":["self"]},{"name":"def enrichAsScalaFromLongToDoubleFunction(jf: LongToDoubleFunction): RichLongToDoubleFunctionAsFunction1","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsScalaFromLongToDoubleFunction"]},{"name":"class PropertiesHasAsScala(i: Properties)","description":"scala.collection.convert.AsScalaExtensions$PropertiesHasAsScala","location":"api/scala/collection/convert/AsScalaExtensions$PropertiesHasAsScala.html","searchKeys":["PropertiesHasAsScala"]},{"name":"val EXPANDPREFIX: 4","description":"dotty.tools.tasty.TastyFormat$$NameTags","location":"api/dotty/tools/tasty/TastyFormat$$NameTags.html","searchKeys":["EXPANDPREFIX"]},{"name":"def recover[U >: T](pf: PartialFunction[Throwable, U]): Try[U]","description":"scala.util.Try","location":"api/scala/util/Try.html","searchKeys":["recover"]},{"name":"def <(x: Short): Boolean","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["<"]},{"name":"def padToInPlace(len: Int, elem: A): Buffer[A]","description":"scala.collection.mutable.Buffer","location":"api/scala/collection/mutable/Buffer.html","searchKeys":["padToInPlace"]},{"name":"val NullConstant: NullConstantModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["NullConstant"]},{"name":"trait Function12[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, +R] extends AnyRef","description":"scala.Function12","location":"api/scala/Function12.html","searchKeys":["Function12"]},{"name":"def isFinite: Boolean","description":"scala.concurrent.duration.FiniteDuration","location":"api/scala/concurrent/duration/FiniteDuration.html","searchKeys":["isFinite"]},{"name":"Dotty Overall Structure","description":"","location":"docs/internals/overall-structure.html","searchKeys":["Dotty Overall Structure"]},{"name":"def minus(x: Double, y: Double): Double","description":"scala.math.Numeric$$DoubleIsFractional","location":"api/scala/math/Numeric$$DoubleIsFractional.html","searchKeys":["minus"]},{"name":"def indexWhere(p: A => Boolean): Int","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["indexWhere"]},{"name":"class patternType extends Annotation","description":"scala.quoted.runtime.Patterns$$patternType","location":"api/scala/quoted/runtime/Patterns$$patternType.html","searchKeys":["patternType"]},{"name":"val x$11: FromExpr[T5]","description":"scala.quoted.FromExpr$$Tuple6FromExpr","location":"api/scala/quoted/FromExpr$$Tuple6FromExpr.html","searchKeys":["x$11"]},{"name":"def filter(p: A => Boolean): Array[A]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["filter"]},{"name":"def ==(x: Byte): Boolean","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["=="]},{"name":"object CollectionConverters extends AsJavaConverters with AsScalaConverters","description":"scala.jdk.javaapi.CollectionConverters$","location":"api/scala/jdk/javaapi/CollectionConverters$.html","searchKeys":["CollectionConverters"]},{"name":"def append(x: Short): StringBuilder","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["append"]},{"name":"trait Function2[@specialized -T1, @specialized -T2, @specialized +R] extends AnyRef","description":"scala.Function2","location":"api/scala/Function2.html","searchKeys":["Function2"]},{"name":"def collect(pf: PartialFunction[Char, Char]): String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["collect"]},{"name":"class AsJavaIntConsumer(sf: Int => Unit) extends IntConsumer","description":"scala.jdk.FunctionWrappers$$AsJavaIntConsumer","location":"api/scala/jdk/FunctionWrappers$$AsJavaIntConsumer.html","searchKeys":["AsJavaIntConsumer"]},{"name":"def namePos: Position","description":"scala.quoted.Quotes$reflectModule$OmitSelectorMethods","location":"api/scala/quoted/Quotes$reflectModule$OmitSelectorMethods.html","searchKeys":["namePos"]},{"name":"Announcing Dotty 0.21.0-RC1 - explicit nulls, new syntax for `match` and conditional givens, and more","description":"","location":"blog/2019/12/20/21th-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.21.0-RC1 - explicit nulls, new syntax for `match` and conditional givens, and more"]},{"name":"def <=(x: Char): Boolean","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["<="]},{"name":"def remove: Option[Reference[T]]","description":"scala.ref.ReferenceQueue","location":"api/scala/ref/ReferenceQueue.html","searchKeys":["remove"]},{"name":"def fromDigits(digits: String, radix: Int): BigInt","description":"scala.util.FromDigits$$BigIntFromDigits$","location":"api/scala/util/FromDigits$$BigIntFromDigits$.html","searchKeys":["fromDigits"]},{"name":"def toOption: Catch[Option[T]]","description":"scala.util.control.Exception$$Catch","location":"api/scala/util/control/Exception$$Catch.html","searchKeys":["toOption"]},{"name":"def enrichAsScalaFromIntConsumer(jf: IntConsumer): RichIntConsumerAsFunction1","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsScalaFromIntConsumer"]},{"name":"val emptyShortArray: Array[Short]","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["emptyShortArray"]},{"name":"val charStreamShape: StreamShape[Char, IntStream, IntStepper]","description":"scala.collection.convert.StreamExtensions$$StreamShape$","location":"api/scala/collection/convert/StreamExtensions$$StreamShape$.html","searchKeys":["charStreamShape"]},{"name":"def tabulate[T](n1: Int, n2: Int, n3: Int, n4: Int)(f: (Int, Int, Int, Int) => T)(evidence$26: ClassTag[T]): IArray[IArray[IArray[IArray[T]]]]","description":"scala.IArray$package$$IArray$","location":"api/scala/IArray$package$$IArray$.html","searchKeys":["tabulate"]},{"name":"def ^(x: Char): Int","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["^"]},{"name":"given NoneToExpr: ToExpr[None]","description":"scala.quoted.ToExpr$$NoneToExpr$","location":"api/scala/quoted/ToExpr$.html","searchKeys":["NoneToExpr"]},{"name":"given Tuple7FromExpr[T1, T2, T3, T4, T5, T6, T7](using val x$1: Type[T1], val x$2: Type[T2], val x$3: Type[T3], val x$4: Type[T4], val x$5: Type[T5], val x$6: Type[T6], val x$7: Type[T7], val x$8: FromExpr[T1], val x$9: FromExpr[T2], val x$10: FromExpr[T3], val x$11: FromExpr[T4], val x$12: FromExpr[T5], val x$13: FromExpr[T6], val x$14: FromExpr[T7]): FromExpr[(T1, T2, T3, T4, T5, T6, T7)]","description":"scala.quoted.FromExpr$$Tuple7FromExpr","location":"api/scala/quoted/FromExpr$$Tuple7FromExpr.html","searchKeys":["Tuple7FromExpr"]},{"name":"def map[S](f: T => S)(executor: ExecutionContext): Future[S]","description":"scala.concurrent.Future","location":"api/scala/concurrent/Future.html","searchKeys":["map"]},{"name":"class StepperHasParStream[A](stepper: Stepper[A] & EfficientSplit)","description":"scala.collection.convert.StreamExtensions$StepperHasParStream","location":"api/scala/collection/convert/StreamExtensions$StepperHasParStream.html","searchKeys":["StepperHasParStream"]},{"name":"val OVERRIDE: 15","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["OVERRIDE"]},{"name":"def unary_+: Int","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["unary_+"]},{"name":"def toByte: Byte","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["toByte"]},{"name":"def this(capacity: Int)","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["this"]},{"name":"def from[K, V](it: IterableOnce[(K, V)])(evidence$1: Ordering[K]): CollisionProofHashMap[K, V]","description":"scala.collection.mutable.CollisionProofHashMap$","location":"api/scala/collection/mutable/CollisionProofHashMap$.html","searchKeys":["from"]},{"name":"val MinValue: '\\00'","description":"scala.Char$","location":"api/scala/Char$.html","searchKeys":["MinValue"]},{"name":"def _10: T10","description":"scala.Product13","location":"api/scala/Product13.html","searchKeys":["_10"]},{"name":"object BigDecimal extends BigDecimalOrdering","description":"scala.math.Ordering$$BigDecimal$","location":"api/scala/math/Ordering$$BigDecimal$.html","searchKeys":["BigDecimal"]},{"name":"def foreachKey[A](f: Long => A): Unit","description":"scala.collection.mutable.LongMap","location":"api/scala/collection/mutable/LongMap.html","searchKeys":["foreachKey"]},{"name":"def double2Double(x: Double): Double","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["double2Double"]},{"name":"def forall(@deprecatedName(\"f\", \"2.13.3\") p: A => Boolean): Boolean","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["forall"]},{"name":"def initialize(value: Short): Short","description":"scala.runtime.LazyShort","location":"api/scala/runtime/LazyShort.html","searchKeys":["initialize"]},{"name":"trait Equals","description":"scala.Equals","location":"api/scala/Equals.html","searchKeys":["Equals"]},{"name":"def ==(x: Int): Boolean","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["=="]},{"name":"def char2long(x: Char): Long","description":"scala.Char$","location":"api/scala/Char$.html","searchKeys":["char2long"]},{"name":"class AnyRefMap[K <: AnyRef, V] extends AbstractMap[K, V] with MapOps[K, V, [K, V] =>> Map[K, V], AnyRefMap[K, V]] with StrictOptimizedIterableOps[(K, V), [A] =>> Iterable[A], AnyRefMap[K, V]] with Serializable","description":"scala.collection.mutable.AnyRefMap","location":"api/scala/collection/mutable/AnyRefMap.html","searchKeys":["AnyRefMap"]},{"name":"def jpath: Path","description":"scala.quoted.Quotes$reflectModule$SourceFileMethods","location":"api/scala/quoted/Quotes$reflectModule$SourceFileMethods.html","searchKeys":["jpath"]},{"name":"def standardInterpolator(process: String => String, args: Seq[Any]): String","description":"scala.StringContext","location":"api/scala/StringContext.html","searchKeys":["standardInterpolator"]},{"name":"def rem(x: BigDecimal, y: BigDecimal): BigDecimal","description":"scala.math.Numeric$$BigDecimalAsIfIntegral","location":"api/scala/math/Numeric$$BigDecimalAsIfIntegral.html","searchKeys":["rem"]},{"name":"def !=(x: Double): Boolean","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["!="]},{"name":"def apply[A](hd: => A, tl: => LazyList[A]): LazyList[A]","description":"scala.collection.immutable.LazyList$$cons$","location":"api/scala/collection/immutable/LazyList$$cons$.html","searchKeys":["apply"]},{"name":"object Selectable","description":"scala.reflect.Selectable$","location":"api/scala/reflect/Selectable$.html","searchKeys":["Selectable"]},{"name":"object Int extends Equiv[Int]","description":"scala.math.Equiv$$Int$","location":"api/scala/math/Equiv$$Int$.html","searchKeys":["Int"]},{"name":"val Traversable: Iterable","description":"scala.collection","location":"api/scala/collection.html","searchKeys":["Traversable"]},{"name":"class UnpickleException(msg: String) extends RuntimeException","description":"dotty.tools.tasty.UnpickleException","location":"api/dotty/tools/tasty/UnpickleException.html","searchKeys":["UnpickleException"]},{"name":"val x$6: FromExpr[T3]","description":"scala.quoted.FromExpr$$Tuple3FromExpr","location":"api/scala/quoted/FromExpr$$Tuple3FromExpr.html","searchKeys":["x$6"]},{"name":"def iterator: Iterator[(El1, El2)]","description":"scala.runtime.Tuple2Zipped","location":"api/scala/runtime/Tuple2Zipped.html","searchKeys":["iterator"]},{"name":"given StringToExpr[T <: String]: ToExpr[T]","description":"scala.quoted.ToExpr$$StringToExpr","location":"api/scala/quoted/ToExpr$.html","searchKeys":["StringToExpr"]},{"name":"def asJavaSeqDoubleStreamFromFloat(cc: IterableOnce[Float]): DoubleStream","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaSeqDoubleStreamFromFloat"]},{"name":"def appendedAll[B >: A](suffix: IterableOnce[B])(evidence$16: ClassTag[B]): Array[B]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["appendedAll"]},{"name":"class Map1[K, +V](key1: K, value1: V) extends AbstractMap[K, V] with StrictOptimizedIterableOps[(K, V), [A] =>> Iterable[A], Map[K, V]] with Serializable","description":"scala.collection.immutable.Map$$Map1","location":"api/scala/collection/immutable/Map$$Map1.html","searchKeys":["Map1"]},{"name":"val isInclusive: Boolean","description":"scala.collection.immutable.NumericRange","location":"api/scala/collection/immutable/NumericRange.html","searchKeys":["isInclusive"]},{"name":"def asJavaLongUnaryOperator(sf: Long => Long): LongUnaryOperator","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asJavaLongUnaryOperator"]},{"name":"def apply(x1: T): Double","description":"scala.jdk.FunctionWrappers$$FromJavaToDoubleFunction","location":"api/scala/jdk/FunctionWrappers$$FromJavaToDoubleFunction.html","searchKeys":["apply"]},{"name":"def _5: T5","description":"scala.Product8","location":"api/scala/Product8.html","searchKeys":["_5"]},{"name":"def apply(i: Int): Long","description":"scala.jdk.LongAccumulator","location":"api/scala/jdk/LongAccumulator.html","searchKeys":["apply"]},{"name":"def toIndexedSeq: IndexedSeq[A]","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["toIndexedSeq"]},{"name":"def enrichAsScalaFromIntPredicate(jf: IntPredicate): RichIntPredicateAsFunction1","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsScalaFromIntPredicate"]},{"name":"def applyAsLong(x1: Long, x2: Long): Long","description":"scala.jdk.FunctionWrappers$$AsJavaLongBinaryOperator","location":"api/scala/jdk/FunctionWrappers$$AsJavaLongBinaryOperator.html","searchKeys":["applyAsLong"]},{"name":"given BooleanToExpr[T <: Boolean]: ToExpr[T]","description":"scala.quoted.ToExpr$$BooleanToExpr","location":"api/scala/quoted/ToExpr$$BooleanToExpr.html","searchKeys":["BooleanToExpr"]},{"name":"class RichDouble(val self: Double) extends AnyVal with FractionalProxy[Double]","description":"scala.runtime.RichDouble","location":"api/scala/runtime/RichDouble.html","searchKeys":["RichDouble"]},{"name":"class WithFilter[K, +V, +IterableCC <: ([_$3] =>> Any), +CC <: ([_$4, _$5] =>> IterableOps[, AnyConstr, ])](self: MapOps[K, V, CC, ] & IterableOps[(K, V), IterableCC, ], p: (K, V) => Boolean) extends WithFilter[(K, V), IterableCC] with Serializable","description":"scala.collection.MapOps$$WithFilter","location":"api/scala/collection/MapOps$$WithFilter.html","searchKeys":["WithFilter"]},{"name":"def asJavaBiFunction: BiFunction[T, U, R]","description":"scala.jdk.FunctionWrappers$$RichFunction2AsBiFunction","location":"api/scala/jdk/FunctionWrappers$$RichFunction2AsBiFunction.html","searchKeys":["asJavaBiFunction"]},{"name":"def isEmpty: Boolean","description":"scala.collection.LinearSeqOps","location":"api/scala/collection/LinearSeqOps.html","searchKeys":["isEmpty"]},{"name":"def apply(set: Set[T])(using Quotes): Expr[Set[T]]","description":"scala.quoted.ToExpr$$SetToExpr","location":"api/scala/quoted/ToExpr$$SetToExpr.html","searchKeys":["apply"]},{"name":"val emptyLongArray: Array[Long]","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["emptyLongArray"]},{"name":"def from[A, C](source: IterableOnce[A])(canAccumulate: AccumulatorFactoryShape[A, C]): C","description":"scala.jdk.Accumulator$","location":"api/scala/jdk/Accumulator$.html","searchKeys":["from"]},{"name":"object Exprs","description":"scala.quoted.Exprs$","location":"api/scala/quoted/Exprs$.html","searchKeys":["Exprs"]},{"name":"val x$18: Type[T18]","description":"scala.quoted.FromExpr$$Tuple19FromExpr","location":"api/scala/quoted/FromExpr$$Tuple19FromExpr.html","searchKeys":["x$18"]},{"name":"Vararg Patterns","description":"","location":"docs/reference/changed-features/vararg-patterns.html","searchKeys":["Vararg Patterns"]},{"name":"def !=(x: Byte): Boolean","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["!="]},{"name":"val array: Array[Char]","description":"scala.collection.mutable.ArraySeq$$ofChar","location":"api/scala/collection/mutable/ArraySeq$$ofChar.html","searchKeys":["array"]},{"name":"def of[T <: AnyKind](using Type[T]): TypeRepr","description":"scala.quoted.Quotes$reflectModule$TypeReprModule","location":"api/scala/quoted/Quotes$reflectModule$TypeReprModule.html","searchKeys":["of"]},{"name":"def apply(command: String, cwd: File, extraEnv: (String, String)*): ProcessBuilder","description":"scala.sys.process.ProcessCreation","location":"api/scala/sys/process/ProcessCreation.html","searchKeys":["apply"]},{"name":"def asJavaToLongBiFunction: ToLongBiFunction[T, U]","description":"scala.jdk.FunctionWrappers$$RichFunction2AsToLongBiFunction","location":"api/scala/jdk/FunctionWrappers$$RichFunction2AsToLongBiFunction.html","searchKeys":["asJavaToLongBiFunction"]},{"name":"class Node","description":"scala.collection.mutable.CollisionProofHashMap$$Node","location":"api/scala/collection/mutable/CollisionProofHashMap$$Node.html","searchKeys":["Node"]},{"name":"val x$9: Type[T9]","description":"scala.quoted.FromExpr$$Tuple17FromExpr","location":"api/scala/quoted/FromExpr$$Tuple17FromExpr.html","searchKeys":["x$9"]},{"name":"def from[K, V](it: IterableOnce[(K, V)]): ListMap[K, V]","description":"scala.collection.immutable.ListMap$","location":"api/scala/collection/immutable/ListMap$.html","searchKeys":["from"]},{"name":"def unapply(a: A): Option[B]","description":"scala.PartialFunction","location":"api/scala/PartialFunction.html","searchKeys":["unapply"]},{"name":"def length: Int","description":"scala.collection.mutable.ArraySeq$$ofByte","location":"api/scala/collection/mutable/ArraySeq$$ofByte.html","searchKeys":["length"]},{"name":"def _9: T9","description":"scala.Product12","location":"api/scala/Product12.html","searchKeys":["_9"]},{"name":"object Symbol extends Equiv[Symbol]","description":"scala.math.Equiv$$Symbol$","location":"api/scala/math/Equiv$$Symbol$.html","searchKeys":["Symbol"]},{"name":"trait CachedReverse[T] extends Ordering[T]","description":"scala.math.Ordering$$CachedReverse","location":"api/scala/math/Ordering$$CachedReverse.html","searchKeys":["CachedReverse"]},{"name":"def toByte: Byte","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["toByte"]},{"name":"def prependedAll(prefix: String): String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["prependedAll"]},{"name":"def empty[A]: HashSet[A]","description":"scala.collection.immutable.HashSet$","location":"api/scala/collection/immutable/HashSet$.html","searchKeys":["empty"]},{"name":"def apply(x1: T, x2: Double): Unit","description":"scala.jdk.FunctionWrappers$$FromJavaObjDoubleConsumer","location":"api/scala/jdk/FunctionWrappers$$FromJavaObjDoubleConsumer.html","searchKeys":["apply"]},{"name":"def asJava: ToDoubleBiFunction[T, U]","description":"scala.jdk.FunctionWrappers$$RichFunction2AsToDoubleBiFunction","location":"api/scala/jdk/FunctionWrappers$$RichFunction2AsToDoubleBiFunction.html","searchKeys":["asJava"]},{"name":"def ulp(x: Float): Float","description":"scala.math","location":"api/scala/math.html","searchKeys":["ulp"]},{"name":"trait Product17[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16, +T17] extends Product","description":"scala.Product17","location":"api/scala/Product17.html","searchKeys":["Product17"]},{"name":"var cline: Int","description":"scala.io.Source$Positioner","location":"api/scala/io/Source$Positioner.html","searchKeys":["cline"]},{"name":"val ANDtype: 165","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["ANDtype"]},{"name":"given TypeSelectMethods","description":"scala.quoted.Quotes$reflectModule$TypeSelectMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeSelectMethods.html","searchKeys":["TypeSelectMethods"]},{"name":"def asJavaIntFunction[R](sf: Integer => R): IntFunction[R]","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asJavaIntFunction"]},{"name":"object Await","description":"scala.concurrent.Await$","location":"api/scala/concurrent/Await$.html","searchKeys":["Await"]},{"name":"def from[K, V](it: IterableOnce[(K, V)]): TrieMap[K, V]","description":"scala.collection.concurrent.TrieMap$","location":"api/scala/collection/concurrent/TrieMap$.html","searchKeys":["from"]},{"name":"class UnapplySeqWrapper[T](a: Array[T]) extends AnyVal","description":"scala.Array$$UnapplySeqWrapper","location":"api/scala/Array$$UnapplySeqWrapper.html","searchKeys":["UnapplySeqWrapper"]},{"name":"val Either: Either","description":"scala","location":"api/scala.html","searchKeys":["Either"]},{"name":"def newBuilder[A]: Builder[A, View[A]]","description":"scala.collection.View$","location":"api/scala/collection/View$.html","searchKeys":["newBuilder"]},{"name":"def unapply(x: Expr[StringContext])(using Quotes): Option[StringContext]","description":"scala.quoted.FromExpr$$StringContextFromExpr$","location":"api/scala/quoted/FromExpr$$StringContextFromExpr$.html","searchKeys":["unapply"]},{"name":"def unapply(x: Unapply): (Term, List[Term], List[Tree])","description":"scala.quoted.Quotes$reflectModule$UnapplyModule","location":"api/scala/quoted/Quotes$reflectModule$UnapplyModule.html","searchKeys":["unapply"]},{"name":"def Macro: Flags","description":"scala.quoted.Quotes$reflectModule$FlagsModule","location":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html","searchKeys":["Macro"]},{"name":"def toIntExact(x: Long): Int","description":"scala.math","location":"api/scala/math.html","searchKeys":["toIntExact"]},{"name":"def apply(ix: Long): Long","description":"scala.jdk.LongAccumulator","location":"api/scala/jdk/LongAccumulator.html","searchKeys":["apply"]},{"name":"val x$15: Type[T15]","description":"scala.quoted.FromExpr$$Tuple15FromExpr","location":"api/scala/quoted/FromExpr$$Tuple15FromExpr.html","searchKeys":["x$15"]},{"name":"type ConcurrentModificationException = ConcurrentModificationException","description":"scala.compat.Platform$","location":"api/scala/compat/Platform$.html","searchKeys":["ConcurrentModificationException"]},{"name":"type ImplicitSearchSuccess <: ImplicitSearchResult","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ImplicitSearchSuccess"]},{"name":"def wildcardType[T](lowerBound: Manifest[], upperBound: Manifest[]): Manifest[T]","description":"scala.reflect.Manifest$","location":"api/scala/reflect/Manifest$.html","searchKeys":["wildcardType"]},{"name":"def |(x: Char): Int","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["|"]},{"name":"def isReverseOf(other: Ordering[]): Boolean","description":"scala.math.Ordering","location":"api/scala/math/Ordering.html","searchKeys":["isReverseOf"]},{"name":"def toDegrees: Double","description":"scala.runtime.RichDouble","location":"api/scala/runtime/RichDouble.html","searchKeys":["toDegrees"]},{"name":"def min(ord: Ordering[A]): A","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["min"]},{"name":"def asScala: Int => Int","description":"scala.jdk.FunctionWrappers$$RichIntUnaryOperatorAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichIntUnaryOperatorAsFunction1.html","searchKeys":["asScala"]},{"name":"def iteratorFrom(start: A): Iterator[A]","description":"scala.collection.mutable.TreeSet","location":"api/scala/collection/mutable/TreeSet.html","searchKeys":["iteratorFrom"]},{"name":"def collect(pf: PartialFunction[Int, Int]): IntAccumulator","description":"scala.jdk.IntAccumulator","location":"api/scala/jdk/IntAccumulator.html","searchKeys":["collect"]},{"name":"def map AsJavaConcurrentMap[K, V](m: Map[K, V]): ConcurrentMap[K, V]","description":"scala.collection.convert.ToJavaImplicits","location":"api/scala/collection/convert/ToJavaImplicits.html","searchKeys":["map AsJavaConcurrentMap"]},{"name":"given BigDecimalToExpr: ToExpr[BigDecimal]","description":"scala.quoted.ToExpr$$BigDecimalToExpr$","location":"api/scala/quoted/ToExpr$$BigDecimalToExpr$.html","searchKeys":["BigDecimalToExpr"]},{"name":"trait ImportModule","description":"scala.quoted.Quotes$reflectModule$ImportModule","location":"api/scala/quoted/Quotes$reflectModule$ImportModule.html","searchKeys":["ImportModule"]},{"name":"val REFINEDtpt: 160","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["REFINEDtpt"]},{"name":"object Range","description":"scala.collection.immutable.Range$","location":"api/scala/collection/immutable/Range$.html","searchKeys":["Range"]},{"name":"def concat[B >: A](suffix: Array[ <: B])(evidence$21: ClassTag[B]): Array[B]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["concat"]},{"name":"class RichDoubleFunctionAsFunction1[R](underlying: DoubleFunction[R]) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichDoubleFunctionAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichDoubleFunctionAsFunction1.html","searchKeys":["RichDoubleFunctionAsFunction1"]},{"name":"val TYPEBOUNDS: 163","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["TYPEBOUNDS"]},{"name":"def iteratorFrom(start: A): Iterator[A]","description":"scala.collection.SortedSetOps","location":"api/scala/collection/SortedSetOps.html","searchKeys":["iteratorFrom"]},{"name":"def filter(pred: A => Boolean): C","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["filter"]},{"name":"def nextOption(): Option[A]","description":"scala.collection.Iterator","location":"api/scala/collection/Iterator.html","searchKeys":["nextOption"]},{"name":"given Tuple20FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20](using val x$1: Type[T1], val x$2: Type[T2], val x$3: Type[T3], val x$4: Type[T4], val x$5: Type[T5], val x$6: Type[T6], val x$7: Type[T7], val x$8: Type[T8], val x$9: Type[T9], val x$10: Type[T10], val x$11: Type[T11], val x$12: Type[T12], val x$13: Type[T13], val x$14: Type[T14], val x$15: Type[T15], val x$16: Type[T16], val x$17: Type[T17], val x$18: Type[T18], val x$19: Type[T19], val x$20: Type[T20], val x$21: FromExpr[T1], val x$22: FromExpr[T2], val x$23: FromExpr[T3], val x$24: FromExpr[T4], val x$25: FromExpr[T5], val x$26: FromExpr[T6], val x$27: FromExpr[T7], val x$28: FromExpr[T8], val x$29: FromExpr[T9], val x$30: FromExpr[T10], val x$31: FromExpr[T11], val x$32: FromExpr[T12], val x$33: FromExpr[T13], val x$34: FromExpr[T14], val x$35: FromExpr[T15], val x$36: FromExpr[T16], val x$37: FromExpr[T17], val x$38: FromExpr[T18], val x$39: FromExpr[T19], val x$40: FromExpr[T20]): FromExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20)]","description":"scala.quoted.FromExpr$$Tuple20FromExpr","location":"api/scala/quoted/FromExpr$.html","searchKeys":["Tuple20FromExpr"]},{"name":"def flatMap[B](f: A => Option[B]): Option[B]","description":"scala.Option","location":"api/scala/Option.html","searchKeys":["flatMap"]},{"name":"def unary_!: Boolean","description":"scala.Boolean","location":"api/scala/Boolean.html","searchKeys":["unary_!"]},{"name":"def -(x: Long): Long","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["-"]},{"name":"def :+[B >: A](elem: B): CC[B]","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":[":+"]},{"name":"def copyToArray[B >: A](xs: Array[B]): Int","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["copyToArray"]},{"name":"def enrichAsScalaFromIntUnaryOperator(jf: IntUnaryOperator): RichIntUnaryOperatorAsFunction1","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsScalaFromIntUnaryOperator"]},{"name":"object ByteswapHashing","description":"scala.util.hashing.ByteswapHashing$","location":"api/scala/util/hashing/ByteswapHashing$.html","searchKeys":["ByteswapHashing"]},{"name":"def asJavaParKeyIntStreamFromChar[V](m: Map[Character, V]): IntStream","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaParKeyIntStreamFromChar"]},{"name":"def catching[T](c: Catcher[T]): Catch[T]","description":"scala.util.control.Exception$","location":"api/scala/util/control/Exception$.html","searchKeys":["catching"]},{"name":"def _7: T7","description":"scala.Product11","location":"api/scala/Product11.html","searchKeys":["_7"]},{"name":"given BlockTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["BlockTypeTest"]},{"name":"val elems: Array[Long]","description":"scala.collection.immutable.BitSet$$BitSetN","location":"api/scala/collection/immutable/BitSet$$BitSetN.html","searchKeys":["elems"]},{"name":"def asJava[T](f: Future[T]): CompletionStage[T]","description":"scala.jdk.javaapi.FutureConverters$","location":"api/scala/jdk/javaapi/FutureConverters$.html","searchKeys":["asJava"]},{"name":"Worksheet Mode - Implementation details","description":"","location":"docs/usage/worksheet-mode-implementation-details.html","searchKeys":["Worksheet Mode - Implementation details"]},{"name":"trait Product10[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10] extends Product","description":"scala.Product10","location":"api/scala/Product10.html","searchKeys":["Product10"]},{"name":"def >=(x: Int): Boolean","description":"scala.Short","location":"api/scala/Short.html","searchKeys":[">="]},{"name":"def Module: Flags","description":"scala.quoted.Quotes$reflectModule$FlagsModule","location":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html","searchKeys":["Module"]},{"name":"def ^(x: Int): Int","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["^"]},{"name":"val x$10: FromExpr[T5]","description":"scala.quoted.FromExpr$$Tuple5FromExpr","location":"api/scala/quoted/FromExpr$$Tuple5FromExpr.html","searchKeys":["x$10"]},{"name":"def elemTag: ClassTag[]","description":"scala.collection.mutable.ArraySeq","location":"api/scala/collection/mutable/ArraySeq.html","searchKeys":["elemTag"]},{"name":"val x$5: Type[T5]","description":"scala.quoted.FromExpr$$Tuple13FromExpr","location":"api/scala/quoted/FromExpr$$Tuple13FromExpr.html","searchKeys":["x$5"]},{"name":"def >>(x: Int): Int","description":"scala.Char","location":"api/scala/Char.html","searchKeys":[">>"]},{"name":"def empty[K, V]: WeakHashMap[K, V]","description":"scala.collection.mutable.WeakHashMap$","location":"api/scala/collection/mutable/WeakHashMap$.html","searchKeys":["empty"]},{"name":"val SelectOuter: SelectOuterModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["SelectOuter"]},{"name":"def drop(self: Tuple, n: Int): Tuple","description":"scala.runtime.Tuples$","location":"api/scala/runtime/Tuples$.html","searchKeys":["drop"]},{"name":"def slice(from: Int, until: Int): Array[A]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["slice"]},{"name":"def ###(other: ProcessBuilder): ProcessBuilder","description":"scala.sys.process.ProcessBuilder","location":"api/scala/sys/process/ProcessBuilder.html","searchKeys":["###"]},{"name":"type GenTraversable[+X] = Iterable[X]","description":"scala.collection","location":"api/scala/collection.html","searchKeys":["GenTraversable"]},{"name":"Overview","description":"","location":"docs/reference/overview.html","searchKeys":["Overview"]},{"name":"object OptionConverters","description":"scala.jdk.javaapi.OptionConverters$","location":"api/scala/jdk/javaapi/OptionConverters$.html","searchKeys":["OptionConverters"]},{"name":"def asJavaIteratorConverter[A](i: Iterator[A]): AsJava[Iterator[A]]","description":"scala.collection.JavaConverters$","location":"api/scala/collection/JavaConverters$.html","searchKeys":["asJavaIteratorConverter"]},{"name":"def shape: Shape","description":"scala.collection.StepperShape","location":"api/scala/collection/StepperShape.html","searchKeys":["shape"]},{"name":"class RichBinaryOperatorAsFunction2[T](underlying: BinaryOperator[T]) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichBinaryOperatorAsFunction2","location":"api/scala/jdk/FunctionWrappers$$RichBinaryOperatorAsFunction2.html","searchKeys":["RichBinaryOperatorAsFunction2"]},{"name":"def collect[B](pf: PartialFunction[A, B]): CC[B]","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["collect"]},{"name":"def union(that: Set[A]): C","description":"scala.collection.SetOps","location":"api/scala/collection/SetOps.html","searchKeys":["union"]},{"name":"class StringView(s: String) extends AbstractIndexedSeqView[Char]","description":"scala.collection.StringView","location":"api/scala/collection/StringView.html","searchKeys":["StringView"]},{"name":"class Exclusive[T](start: T, end: T, step: T)(num: Integral[T]) extends NumericRange[T]","description":"scala.collection.immutable.NumericRange$$Exclusive","location":"api/scala/collection/immutable/NumericRange$$Exclusive.html","searchKeys":["Exclusive"]},{"name":"given Tuple8ToExpr[T1, T2, T3, T4, T5, T6, T7, T8]: ToExpr[(T1, T2, T3, T4, T5, T6, T7, T8)]","description":"scala.quoted.ToExpr$$Tuple8ToExpr","location":"api/scala/quoted/ToExpr$.html","searchKeys":["Tuple8ToExpr"]},{"name":"def apply(x1: T): T","description":"scala.jdk.FunctionWrappers$$AsJavaUnaryOperator","location":"api/scala/jdk/FunctionWrappers$$AsJavaUnaryOperator.html","searchKeys":["apply"]},{"name":"type TypeApply <: Term","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeApply"]},{"name":"def map[B](f: A => B): Iterator[B]","description":"scala.collection.Iterator","location":"api/scala/collection/Iterator.html","searchKeys":["map"]},{"name":"def result(): C","description":"scala.collection.mutable.MapOps","location":"api/scala/collection/mutable/MapOps.html","searchKeys":["result"]},{"name":"def unapply(x: Expr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)])(using Quotes): Option[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)]","description":"scala.quoted.FromExpr$$Tuple13FromExpr","location":"api/scala/quoted/FromExpr$$Tuple13FromExpr.html","searchKeys":["unapply"]},{"name":"def +(x: Int): Int","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["+"]},{"name":"def get: MethodCache","description":"scala.runtime.StructuralCallSite","location":"api/scala/runtime/StructuralCallSite.html","searchKeys":["get"]},{"name":"val x$10: Type[T10]","description":"scala.quoted.FromExpr$$Tuple20FromExpr","location":"api/scala/quoted/FromExpr$$Tuple20FromExpr.html","searchKeys":["x$10"]},{"name":"trait LowPriorityCodecImplicits","description":"scala.io.LowPriorityCodecImplicits","location":"api/scala/io/LowPriorityCodecImplicits.html","searchKeys":["LowPriorityCodecImplicits"]},{"name":"object BitSet extends SpecificIterableFactory[Int, BitSet]","description":"scala.collection.mutable.BitSet$","location":"api/scala/collection/mutable/BitSet$.html","searchKeys":["BitSet"]},{"name":"given Tuple6FromExpr[T1, T2, T3, T4, T5, T6](using val x$1: Type[T1], val x$2: Type[T2], val x$3: Type[T3], val x$4: Type[T4], val x$5: Type[T5], val x$6: Type[T6], val x$7: FromExpr[T1], val x$8: FromExpr[T2], val x$9: FromExpr[T3], val x$10: FromExpr[T4], val x$11: FromExpr[T5], val x$12: FromExpr[T6]): FromExpr[(T1, T2, T3, T4, T5, T6)]","description":"scala.quoted.FromExpr$$Tuple6FromExpr","location":"api/scala/quoted/FromExpr$$Tuple6FromExpr.html","searchKeys":["Tuple6FromExpr"]},{"name":"val Char: CharManifest","description":"scala.reflect.ManifestFactory$","location":"api/scala/reflect/ManifestFactory$.html","searchKeys":["Char"]},{"name":"def enrichAsScalaFromLongToIntFunction(jf: LongToIntFunction): RichLongToIntFunctionAsFunction1","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsScalaFromLongToIntFunction"]},{"name":"val x$1: Type[T1]","description":"scala.quoted.FromExpr$$Tuple13FromExpr","location":"api/scala/quoted/FromExpr$$Tuple13FromExpr.html","searchKeys":["x$1"]},{"name":"def prependedAll[B >: A](prefix: Array[ <: B])(evidence$13: ClassTag[B]): Array[B]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["prependedAll"]},{"name":"def newBuilder[K, V]: Builder[(K, V), ListMap[K, V]]","description":"scala.collection.mutable.ListMap$","location":"api/scala/collection/mutable/ListMap$.html","searchKeys":["newBuilder"]},{"name":"object 3.0-migration","description":"scala.language$$3.0-migration$","location":"api/scala/language$$3/0-migration$.html","searchKeys":["3.0-migration"]},{"name":"val AnyRef: Manifest[AnyRef]","description":"scala.reflect.Manifest$","location":"api/scala/reflect/Manifest$.html","searchKeys":["AnyRef"]},{"name":"class RichFunction1AsToIntFunction[T](underlying: T => Int) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichFunction1AsToIntFunction","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsToIntFunction.html","searchKeys":["RichFunction1AsToIntFunction"]},{"name":"val Byte: ByteManifest","description":"scala.reflect.Manifest$","location":"api/scala/reflect/Manifest$.html","searchKeys":["Byte"]},{"name":"def slice(from: Int, until: Int): String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["slice"]},{"name":"def FunctionClass(arity: Int, isImplicit: Boolean, isErased: Boolean): Symbol","description":"scala.quoted.Quotes$reflectModule$defnModule","location":"api/scala/quoted/Quotes$reflectModule$defnModule.html","searchKeys":["FunctionClass"]},{"name":"package scala.jdk","description":"scala.jdk","location":"api/scala/jdk.html","searchKeys":["scala.jdk"]},{"name":"object RelaxedPositioner extends Positioner","description":"scala.io.Source$RelaxedPositioner$","location":"api/scala/io/Source$RelaxedPositioner$.html","searchKeys":["RelaxedPositioner"]},{"name":"def takeWhile(p: A => Boolean): C","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["takeWhile"]},{"name":"def asScalaFromBiFunction[T, U, R](jf: BiFunction[T, U, R]): (T, U) => R","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asScalaFromBiFunction"]},{"name":"trait MatchTypeTreeModule","description":"scala.quoted.Quotes$reflectModule$MatchTypeTreeModule","location":"api/scala/quoted/Quotes$reflectModule$MatchTypeTreeModule.html","searchKeys":["MatchTypeTreeModule"]},{"name":"def unapply(constant: UnitConstant): true","description":"scala.quoted.Quotes$reflectModule$UnitConstantModule","location":"api/scala/quoted/Quotes$reflectModule$UnitConstantModule.html","searchKeys":["unapply"]},{"name":"def <=(x: Char): Boolean","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["<="]},{"name":"def >=(x: Short): Boolean","description":"scala.Int","location":"api/scala/Int.html","searchKeys":[">="]},{"name":"def %(x: Double): Double","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["%"]},{"name":"def range[A, C](start: A, end: A)(evidence$1: Integral[A], canAccumulate: AccumulatorFactoryShape[A, C]): C","description":"scala.jdk.Accumulator$","location":"api/scala/jdk/Accumulator$.html","searchKeys":["range"]},{"name":"def /(x: Short): Int","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["/"]},{"name":"class AbstractFunction8[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, +R] extends (T1, T2, T3, T4, T5, T6, T7, T8) => R","description":"scala.runtime.AbstractFunction8","location":"api/scala/runtime/AbstractFunction8.html","searchKeys":["AbstractFunction8"]},{"name":"def _1: T1","description":"scala.Product22","location":"api/scala/Product22.html","searchKeys":["_1"]},{"name":"given Tuple12ToExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12]: ToExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)]","description":"scala.quoted.ToExpr$$Tuple12ToExpr","location":"api/scala/quoted/ToExpr$$Tuple12ToExpr.html","searchKeys":["Tuple12ToExpr"]},{"name":"def long2bigInt(l: Long): BigInt","description":"scala.math.BigInt$","location":"api/scala/math/BigInt$.html","searchKeys":["long2bigInt"]},{"name":"type ArrayLike[A] = SeqOps[A, [A] =>> Seq[A], Seq[A]]","description":"scala.collection","location":"api/scala/collection.html","searchKeys":["ArrayLike"]},{"name":"var size: Int","description":"scala.collection.mutable.UnrolledBuffer$$Unrolled","location":"api/scala/collection/mutable/UnrolledBuffer$$Unrolled.html","searchKeys":["size"]},{"name":"given TypeReprMethods","description":"scala.quoted.Quotes$reflectModule$TypeReprMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html","searchKeys":["TypeReprMethods"]},{"name":"def clear(): Unit","description":"scala.collection.mutable.Builder","location":"api/scala/collection/mutable/Builder.html","searchKeys":["clear"]},{"name":"def appendAll(xs: Array[Char]): StringBuilder","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["appendAll"]},{"name":"type IndexedOptimizedSeq[A] = IndexedSeq[A]","description":"scala.collection.mutable","location":"api/scala/collection/mutable.html","searchKeys":["IndexedOptimizedSeq"]},{"name":"def iterator: Iterator[(Int, T)]","description":"scala.collection.immutable.IntMap","location":"api/scala/collection/immutable/IntMap.html","searchKeys":["iterator"]},{"name":"def toHours: Long","description":"scala.concurrent.duration.Duration$$Infinite","location":"api/scala/concurrent/duration/Duration$$Infinite.html","searchKeys":["toHours"]},{"name":"val x$1: Type[T1]","description":"scala.quoted.FromExpr$$Tuple8FromExpr","location":"api/scala/quoted/FromExpr$$Tuple8FromExpr.html","searchKeys":["x$1"]},{"name":"def length: Int","description":"scala.collection.immutable.ArraySeq$$ofLong","location":"api/scala/collection/immutable/ArraySeq$$ofLong.html","searchKeys":["length"]},{"name":"val MINUTES: TimeUnit","description":"scala.concurrent.duration","location":"api/scala/concurrent/duration.html","searchKeys":["MINUTES"]},{"name":"def apply(decoder: CharsetDecoder): Codec","description":"scala.io.Codec$","location":"api/scala/io/Codec$.html","searchKeys":["apply"]},{"name":"def isRefinementClass: Boolean","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["isRefinementClass"]},{"name":"val MajorVersion: Int","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["MajorVersion"]},{"name":"trait Product6[+T1, +T2, +T3, +T4, +T5, +T6] extends Product","description":"scala.Product6","location":"api/scala/Product6.html","searchKeys":["Product6"]},{"name":"trait SourceFileModule","description":"scala.quoted.Quotes$reflectModule$SourceFileModule","location":"api/scala/quoted/Quotes$reflectModule$SourceFileModule.html","searchKeys":["SourceFileModule"]},{"name":"trait SetOps[A, +CC <: ([X] =>> Any), +C <: SetOps[A, CC, C]] extends SetOps[A, CC, C] with IterableOps[A, CC, C] with Cloneable[C] with Builder[A, C] with Growable[A] with Shrinkable[A]","description":"scala.collection.mutable.SetOps","location":"api/scala/collection/mutable/SetOps.html","searchKeys":["SetOps"]},{"name":"trait SelectOuterModule","description":"scala.quoted.Quotes$reflectModule$SelectOuterModule","location":"api/scala/quoted/Quotes$reflectModule$SelectOuterModule.html","searchKeys":["SelectOuterModule"]},{"name":"def plus(x: T, y: T): T","description":"scala.math.Numeric","location":"api/scala/math/Numeric.html","searchKeys":["plus"]},{"name":"def <(x: Byte): Boolean","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["<"]},{"name":"class beanGetter extends StaticAnnotation","description":"scala.annotation.meta.beanGetter","location":"api/scala/annotation/meta/beanGetter.html","searchKeys":["beanGetter"]},{"name":"def Method: Flags","description":"scala.quoted.Quotes$reflectModule$FlagsModule","location":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html","searchKeys":["Method"]},{"name":"def writeLongNat(x: Long): Unit","description":"dotty.tools.tasty.TastyBuffer","location":"api/dotty/tools/tasty/TastyBuffer.html","searchKeys":["writeLongNat"]},{"name":"def toDouble(x: Char): Double","description":"scala.math.Numeric$$CharIsIntegral","location":"api/scala/math/Numeric$$CharIsIntegral.html","searchKeys":["toDouble"]},{"name":"type ArrayIndexOutOfBoundsException = ArrayIndexOutOfBoundsException","description":"scala","location":"api/scala.html","searchKeys":["ArrayIndexOutOfBoundsException"]},{"name":"def asScala: Int => Boolean","description":"scala.jdk.FunctionWrappers$$RichIntPredicateAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichIntPredicateAsFunction1.html","searchKeys":["asScala"]},{"name":"def _2: T2","description":"scala.Product9","location":"api/scala/Product9.html","searchKeys":["_2"]},{"name":"def scanLeft[B](z: B)(op: (B, A) => B): CC[B]","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["scanLeft"]},{"name":"val BestOfBreed: Group[(Int, Double, Boolean, Unit, AnyRef)]","description":"scala.Specializable$","location":"api/scala/Specializable$.html","searchKeys":["BestOfBreed"]},{"name":"def next(): Char","description":"scala.io.Source$Positioner","location":"api/scala/io/Source$Positioner.html","searchKeys":["next"]},{"name":"given StringContextToExpr: ToExpr[StringContext]","description":"scala.quoted.ToExpr$$StringContextToExpr$","location":"api/scala/quoted/ToExpr$$StringContextToExpr$.html","searchKeys":["StringContextToExpr"]},{"name":"val MODULE_INSTANCE_NAME: \"MODULE$\"","description":"scala.reflect.NameTransformer$","location":"api/scala/reflect/NameTransformer$.html","searchKeys":["MODULE_INSTANCE_NAME"]},{"name":"def asJavaToIntBiFunction[T, U](sf: (T, U) => Integer): ToIntBiFunction[T, U]","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asJavaToIntBiFunction"]},{"name":"type TypeBoundsTree <: Tree","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeBoundsTree"]},{"name":"def |(x: Int): Int","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["|"]},{"name":"val x$21: FromExpr[T1]","description":"scala.quoted.FromExpr$$Tuple20FromExpr","location":"api/scala/quoted/FromExpr$$Tuple20FromExpr.html","searchKeys":["x$21"]},{"name":"trait IndexedSeqOps[A, +CC <: ([_$1] =>> Any), +C <: AnyRef] extends IndexedSeqOps[A, CC, C] with SeqOps[A, CC, C]","description":"scala.collection.mutable.IndexedSeqOps","location":"api/scala/collection/mutable/IndexedSeqOps.html","searchKeys":["IndexedSeqOps"]},{"name":"def rangeImpl(from: Option[Int], until: Option[Int]): C","description":"scala.collection.BitSetOps","location":"api/scala/collection/BitSetOps.html","searchKeys":["rangeImpl"]},{"name":"def clear(): Unit","description":"scala.jdk.Accumulator","location":"api/scala/jdk/Accumulator.html","searchKeys":["clear"]},{"name":"def drop(n: Int): Seq[T]","description":"scala.Array$$UnapplySeqWrapper","location":"api/scala/Array$$UnapplySeqWrapper.html","searchKeys":["drop"]},{"name":"def enrichAsScalaFromIntFunction[R](jf: IntFunction[R]): RichIntFunctionAsFunction1[R]","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsScalaFromIntFunction"]},{"name":"object JavaConversions","description":"scala.concurrent.JavaConversions$","location":"api/scala/concurrent/JavaConversions$.html","searchKeys":["JavaConversions"]},{"name":"trait Fractional[T] extends Numeric[T]","description":"scala.math.Fractional","location":"api/scala/math/Fractional.html","searchKeys":["Fractional"]},{"name":"def drop(n: Int): Array[A]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["drop"]},{"name":"val ::: ::","description":"scala","location":"api/scala.html","searchKeys":["::"]},{"name":"def apply(i: Int): A","description":"scala.collection.SeqView$$DropRight","location":"api/scala/collection/SeqView$$DropRight.html","searchKeys":["apply"]},{"name":"object Patterns","description":"scala.quoted.runtime.Patterns$","location":"api/scala/quoted/runtime/Patterns$.html","searchKeys":["Patterns"]},{"name":"object LinkedHashMap extends MapFactory[[K, V] =>> LinkedHashMap[K, V]]","description":"scala.collection.mutable.LinkedHashMap$","location":"api/scala/collection/mutable/LinkedHashMap$.html","searchKeys":["LinkedHashMap"]},{"name":"val ANNOTATEDtype: 153","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["ANNOTATEDtype"]},{"name":"given ArrayOfDoubleToExpr: ToExpr[Array[Double]]","description":"scala.quoted.ToExpr$$ArrayOfDoubleToExpr$","location":"api/scala/quoted/ToExpr$.html","searchKeys":["ArrayOfDoubleToExpr"]},{"name":"class ConcurrentMapHasAsScala[K, V](m: ConcurrentMap[K, V])","description":"scala.collection.convert.AsScalaExtensions$ConcurrentMapHasAsScala","location":"api/scala/collection/convert/AsScalaExtensions$ConcurrentMapHasAsScala.html","searchKeys":["ConcurrentMapHasAsScala"]},{"name":"def _3: T3","description":"scala.Product16","location":"api/scala/Product16.html","searchKeys":["_3"]},{"name":"object DeprecatedFloatEquiv extends StrictEquiv","description":"scala.math.Equiv$$DeprecatedFloatEquiv$","location":"api/scala/math/Equiv$$DeprecatedFloatEquiv$.html","searchKeys":["DeprecatedFloatEquiv"]},{"name":"def either[U >: T](body: => U): Either[Throwable, U]","description":"scala.util.control.Exception$$Catch","location":"api/scala/util/control/Exception$$Catch.html","searchKeys":["either"]},{"name":"def _18: T18","description":"scala.Product22","location":"api/scala/Product22.html","searchKeys":["_18"]},{"name":"def filterNot(p: A => Boolean): Array[A]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["filterNot"]},{"name":"def _1: T1","description":"scala.Product8","location":"api/scala/Product8.html","searchKeys":["_1"]},{"name":"given NewMethods","description":"scala.quoted.Quotes$reflectModule$NewMethods","location":"api/scala/quoted/Quotes$reflectModule$NewMethods.html","searchKeys":["NewMethods"]},{"name":"def apply(tpt: TypeTree): New","description":"scala.quoted.Quotes$reflectModule$NewModule","location":"api/scala/quoted/Quotes$reflectModule$NewModule.html","searchKeys":["apply"]},{"name":"def apply(index: Int): Int","description":"scala.collection.mutable.ArraySeq$$ofInt","location":"api/scala/collection/mutable/ArraySeq$$ofInt.html","searchKeys":["apply"]},{"name":"def fromInt(x: Int): BigInt","description":"scala.math.Numeric$$BigIntIsIntegral","location":"api/scala/math/Numeric$$BigIntIsIntegral.html","searchKeys":["fromInt"]},{"name":"def asJavaDoubleFunction: DoubleFunction[R]","description":"scala.jdk.FunctionWrappers$$RichFunction1AsDoubleFunction","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsDoubleFunction.html","searchKeys":["asJavaDoubleFunction"]},{"name":"def summon[T](using Type[T])(using Quotes): Option[Expr[T]]","description":"scala.quoted.Expr$","location":"api/scala/quoted/Expr$.html","searchKeys":["summon"]},{"name":"def groupBy[K](f: A => K): Map[K, Array[A]]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["groupBy"]},{"name":"val Alternatives: AlternativesModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Alternatives"]},{"name":"def expr: Term","description":"scala.quoted.Quotes$reflectModule$ExportMethods","location":"api/scala/quoted/Quotes$reflectModule$ExportMethods.html","searchKeys":["expr"]},{"name":"val Implicits: ImplicitsModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Implicits"]},{"name":"def selectDynamic(name: String): Any","description":"scala.reflect.Selectable","location":"api/scala/reflect/Selectable.html","searchKeys":["selectDynamic"]},{"name":"def <(x: Double): Boolean","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["<"]},{"name":"def toChar: Char","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["toChar"]},{"name":"def nonEmpty: Boolean","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["nonEmpty"]},{"name":"def <(x: Char): Boolean","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["<"]},{"name":"def apply(sym: Symbol): Ref","description":"scala.quoted.Quotes$reflectModule$RefModule","location":"api/scala/quoted/Quotes$reflectModule$RefModule.html","searchKeys":["apply"]},{"name":"def isInline: Boolean","description":"scala.quoted.Quotes$reflectModule$IfMethods","location":"api/scala/quoted/Quotes$reflectModule$IfMethods.html","searchKeys":["isInline"]},{"name":"def toInt: Int","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["toInt"]},{"name":"def inclusive(start: Int, end: Int, step: Int): Inclusive","description":"scala.collection.immutable.Range$","location":"api/scala/collection/immutable/Range$.html","searchKeys":["inclusive"]},{"name":"trait SeqMap[K, +V] extends Map[K, V] with SeqMap[K, V] with MapOps[K, V, [K, V] =>> SeqMap[K, V], SeqMap[K, V]] with MapFactoryDefaults[K, V, [K, V] =>> SeqMap[K, V], [A] =>> Iterable[A]]","description":"scala.collection.immutable.SeqMap","location":"api/scala/collection/immutable/SeqMap.html","searchKeys":["SeqMap"]},{"name":"given CharToExpr[T <: Char]: ToExpr[T]","description":"scala.quoted.ToExpr$$CharToExpr","location":"api/scala/quoted/ToExpr$.html","searchKeys":["CharToExpr"]},{"name":"val TypeCaseDef: TypeCaseDefModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeCaseDef"]},{"name":"def _6: T6","description":"scala.Product17","location":"api/scala/Product17.html","searchKeys":["_6"]},{"name":"class volatile extends StaticAnnotation","description":"scala.volatile","location":"api/scala/volatile.html","searchKeys":["volatile"]},{"name":"given ByNameTypeMethods","description":"scala.quoted.Quotes$reflectModule$ByNameTypeMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ByNameTypeMethods"]},{"name":"def lazyAppendedAll[B >: A](suffix: => IterableOnce[B]): LazyList[B]","description":"scala.collection.immutable.LazyList","location":"api/scala/collection/immutable/LazyList.html","searchKeys":["lazyAppendedAll"]},{"name":"def orElse[A1 >: A, B1 >: B](or: => Either[A1, B1]): Either[A1, B1]","description":"scala.util.Either","location":"api/scala/util/Either.html","searchKeys":["orElse"]},{"name":"def println(): Unit","description":"scala.Console$","location":"api/scala/Console$.html","searchKeys":["println"]},{"name":"def asJavaIterator[A](i: Iterator[A]): Iterator[A]","description":"scala.collection.JavaConverters$","location":"api/scala/collection/JavaConverters$.html","searchKeys":["asJavaIterator"]},{"name":"def flatMap[B](f: A => IterableOnce[B]): CC[B]","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["flatMap"]},{"name":"type IndexOutOfBoundsException = IndexOutOfBoundsException","description":"scala","location":"api/scala.html","searchKeys":["IndexOutOfBoundsException"]},{"name":"def apply(i: Int): Boolean","description":"scala.collection.immutable.ArraySeq$$ofBoolean","location":"api/scala/collection/immutable/ArraySeq$$ofBoolean.html","searchKeys":["apply"]},{"name":"def apply(charSet: Charset): Codec","description":"scala.io.Codec$","location":"api/scala/io/Codec$.html","searchKeys":["apply"]},{"name":"given ShortToExpr[T <: Short]: ToExpr[T]","description":"scala.quoted.ToExpr$$ShortToExpr","location":"api/scala/quoted/ToExpr$.html","searchKeys":["ShortToExpr"]},{"name":"def iterator: Iterator[A]","description":"scala.collection.SeqView$$Id","location":"api/scala/collection/SeqView$$Id.html","searchKeys":["iterator"]},{"name":"def initialize(value: T): T","description":"scala.runtime.LazyRef","location":"api/scala/runtime/LazyRef.html","searchKeys":["initialize"]},{"name":"def !=(x: Char): Boolean","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["!="]},{"name":"def lineStream(log: ProcessLogger): Stream[String]","description":"scala.sys.process.ProcessBuilder","location":"api/scala/sys/process/ProcessBuilder.html","searchKeys":["lineStream"]},{"name":"def Scala2x: Flags","description":"scala.quoted.Quotes$reflectModule$FlagsModule","location":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html","searchKeys":["Scala2x"]},{"name":"def >=(x: Char): Boolean","description":"scala.Float","location":"api/scala/Float.html","searchKeys":[">="]},{"name":"def apply(symbol: Symbol): TypeDef","description":"scala.quoted.Quotes$reflectModule$TypeDefModule","location":"api/scala/quoted/Quotes$reflectModule$TypeDefModule.html","searchKeys":["apply"]},{"name":"given Tuple11FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11](using val x$1: Type[T1], val x$2: Type[T2], val x$3: Type[T3], val x$4: Type[T4], val x$5: Type[T5], val x$6: Type[T6], val x$7: Type[T7], val x$8: Type[T8], val x$9: Type[T9], val x$10: Type[T10], val x$11: Type[T11], val x$12: FromExpr[T1], val x$13: FromExpr[T2], val x$14: FromExpr[T3], val x$15: FromExpr[T4], val x$16: FromExpr[T5], val x$17: FromExpr[T6], val x$18: FromExpr[T7], val x$19: FromExpr[T8], val x$20: FromExpr[T9], val x$21: FromExpr[T10], val x$22: FromExpr[T11]): FromExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)]","description":"scala.quoted.FromExpr$$Tuple11FromExpr","location":"api/scala/quoted/FromExpr$$Tuple11FromExpr.html","searchKeys":["Tuple11FromExpr"]},{"name":"given TypeBoundsMethods","description":"scala.quoted.Quotes$reflectModule$TypeBoundsMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeBoundsMethods"]},{"name":"type Tail[X <: NonEmptyTuple] = X match {\n  case _ *: xs => xs\n}","description":"scala.Tuple$","location":"api/scala/Tuple$.html","searchKeys":["Tail"]},{"name":"def compare(y: T): Int","description":"scala.runtime.OrderedProxy","location":"api/scala/runtime/OrderedProxy.html","searchKeys":["compare"]},{"name":"val IMPLICIT: 13","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["IMPLICIT"]},{"name":"def tabulate[A](n1: Int, n2: Int, n3: Int)(f: (Int, Int, Int) => A)(evidence$12: ClassTag[A]): CC[CC[CC[A]]]","description":"scala.collection.ClassTagIterableFactory","location":"api/scala/collection/ClassTagIterableFactory.html","searchKeys":["tabulate"]},{"name":"given ParamClauseMethods","description":"scala.quoted.Quotes$reflectModule$ParamClauseMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ParamClauseMethods"]},{"name":"def decimal(f: Float): BigDecimal","description":"scala.math.BigDecimal$","location":"api/scala/math/BigDecimal$.html","searchKeys":["decimal"]},{"name":"object Promise","description":"scala.concurrent.Promise$","location":"api/scala/concurrent/Promise$.html","searchKeys":["Promise"]},{"name":"class ZipWithIndex[A](underlying: SomeIterableOps[A]) extends AbstractView[(A, Int)]","description":"scala.collection.View$$ZipWithIndex","location":"api/scala/collection/View$$ZipWithIndex.html","searchKeys":["ZipWithIndex"]},{"name":"def appended[B >: A](elem: B): CC[B]","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["appended"]},{"name":"def withApply[U](f: Throwable => U): Catch[U]","description":"scala.util.control.Exception$$Catch","location":"api/scala/util/control/Exception$$Catch.html","searchKeys":["withApply"]},{"name":"def isLeft: Boolean","description":"scala.util.Left","location":"api/scala/util/Left.html","searchKeys":["isLeft"]},{"name":"def tycon: TypeRepr","description":"scala.quoted.Quotes$reflectModule$AppliedTypeMethods","location":"api/scala/quoted/Quotes$reflectModule$AppliedTypeMethods.html","searchKeys":["tycon"]},{"name":"def %(x: Float): Float","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["%"]},{"name":"val RED: \"\\033[31m\"","description":"scala.io.AnsiColor","location":"api/scala/io/AnsiColor.html","searchKeys":["RED"]},{"name":"def *(x: Char): Int","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["*"]},{"name":"trait StrictOptimizedIterableOps[+A, +CC <: ([_$1] =>> Any), +C] extends IterableOps[A, CC, C]","description":"scala.collection.StrictOptimizedIterableOps","location":"api/scala/collection/StrictOptimizedIterableOps.html","searchKeys":["StrictOptimizedIterableOps"]},{"name":"class LazyShort extends Serializable","description":"scala.runtime.LazyShort","location":"api/scala/runtime/LazyShort.html","searchKeys":["LazyShort"]},{"name":"def default(key: K): V","description":"scala.collection.MapOps","location":"api/scala/collection/MapOps.html","searchKeys":["default"]},{"name":"given RepeatedMethods","description":"scala.quoted.Quotes$reflectModule$RepeatedMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["RepeatedMethods"]},{"name":"def sortWith(lt: (A, A) => Boolean): Array[A]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["sortWith"]},{"name":"def iterableAsScalaIterable[A](i: Iterable[A]): Iterable[A]","description":"scala.collection.JavaConverters$","location":"api/scala/collection/JavaConverters$.html","searchKeys":["iterableAsScalaIterable"]},{"name":"def _14: T14","description":"scala.Product14","location":"api/scala/Product14.html","searchKeys":["_14"]},{"name":"class AsScala[A](op: => A)","description":"scala.collection.JavaConverters$$AsScala","location":"api/scala/collection/JavaConverters$$AsScala.html","searchKeys":["AsScala"]},{"name":"val traversableSeed: -415593707","description":"scala.util.hashing.MurmurHash3$","location":"api/scala/util/hashing/MurmurHash3$.html","searchKeys":["traversableSeed"]},{"name":"def empty[A](evidence$38: Ev[A]): CC[A]","description":"scala.collection.EvidenceIterableFactory$$Delegate","location":"api/scala/collection/EvidenceIterableFactory$$Delegate.html","searchKeys":["empty"]},{"name":"def enumerationAsScalaIteratorConverter[A](i: Enumeration[A]): AsScala[Iterator[A]]","description":"scala.collection.JavaConverters$","location":"api/scala/collection/JavaConverters$.html","searchKeys":["enumerationAsScalaIteratorConverter"]},{"name":"val UNAPPLY: 152","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["UNAPPLY"]},{"name":"def /(x: Float): Float","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["/"]},{"name":"Announcing Dotty 0.24.0-RC1 - 2.13.2 standard library, better error messages and more","description":"","location":"blog/2020/04/29/24th-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.24.0-RC1 - 2.13.2 standard library, better error messages and more"]},{"name":"def reflectiveSelectableFromLangReflectiveCalls(x: Any)(using reflectiveCalls): Selectable","description":"scala.Selectable$","location":"api/scala/Selectable$.html","searchKeys":["reflectiveSelectableFromLangReflectiveCalls"]},{"name":"def unapply(x: NoPrefix): true","description":"scala.quoted.Quotes$reflectModule$NoPrefixModule","location":"api/scala/quoted/Quotes$reflectModule$NoPrefixModule.html","searchKeys":["unapply"]},{"name":"def ==(x: Short): Boolean","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["=="]},{"name":"val x$25: FromExpr[T3]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["x$25"]},{"name":"object NoStackTrace","description":"scala.util.control.NoStackTrace$","location":"api/scala/util/control/NoStackTrace$.html","searchKeys":["NoStackTrace"]},{"name":"def !=(x: Short): Boolean","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["!="]},{"name":"def reverse: PartialOrdering[T]","description":"scala.math.PartialOrdering","location":"api/scala/math/PartialOrdering.html","searchKeys":["reverse"]},{"name":"class ofInt extends ArrayBuilder[Int]","description":"scala.collection.mutable.ArrayBuilder$$ofInt","location":"api/scala/collection/mutable/ArrayBuilder$$ofInt.html","searchKeys":["ofInt"]},{"name":"trait IndexedSeqView[+A] extends IndexedSeqOps[A, [A] =>> View[A], View[A]] with SeqView[A]","description":"scala.collection.IndexedSeqView","location":"api/scala/collection/IndexedSeqView.html","searchKeys":["IndexedSeqView"]},{"name":"def >(x: Char): Boolean","description":"scala.Float","location":"api/scala/Float.html","searchKeys":[">"]},{"name":"class AsJavaObjLongConsumer[T](sf: (T, Long) => Unit) extends ObjLongConsumer[T]","description":"scala.jdk.FunctionWrappers$$AsJavaObjLongConsumer","location":"api/scala/jdk/FunctionWrappers$$AsJavaObjLongConsumer.html","searchKeys":["AsJavaObjLongConsumer"]},{"name":"def apply$mcID$sp(v1: Double): Int","description":"scala.runtime.java8.JFunction1$mcID$sp","location":"api/scala/runtime/java8/JFunction1$mcID$sp.html","searchKeys":["apply$mcID$sp"]},{"name":"def valueStepper[S <: Stepper[]](shape: StepperShape[V, S]): S","description":"scala.collection.MapOps","location":"api/scala/collection/MapOps.html","searchKeys":["valueStepper"]},{"name":"def tan(x: Double): Double","description":"scala.math","location":"api/scala/math.html","searchKeys":["tan"]},{"name":"def lengthIs: Int","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["lengthIs"]},{"name":"def empty[A, C](canAccumulate: AccumulatorFactoryShape[A, C]): C","description":"scala.jdk.Accumulator$","location":"api/scala/jdk/Accumulator$.html","searchKeys":["empty"]},{"name":"def apply(name: String, exitValue: => Int): ProcessBuilder","description":"scala.sys.process.ProcessCreation","location":"api/scala/sys/process/ProcessCreation.html","searchKeys":["apply"]},{"name":"def ^(other: BitSet): C","description":"scala.collection.BitSetOps","location":"api/scala/collection/BitSetOps.html","searchKeys":["^"]},{"name":"def between(minInclusive: Int, maxExclusive: Int): Int","description":"scala.util.Random","location":"api/scala/util/Random.html","searchKeys":["between"]},{"name":"val x$7: Type[T7]","description":"scala.quoted.FromExpr$$Tuple21FromExpr","location":"api/scala/quoted/FromExpr$$Tuple21FromExpr.html","searchKeys":["x$7"]},{"name":"val FLOATconst: 72","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["FLOATconst"]},{"name":"Dropped: Procedure Syntax","description":"","location":"docs/reference/dropped-features/procedure-syntax.html","searchKeys":["Dropped: Procedure Syntax"]},{"name":"def asJavaCollection: Collection[A]","description":"scala.collection.convert.AsJavaExtensions$IterableHasAsJava","location":"api/scala/collection/convert/AsJavaExtensions$IterableHasAsJava.html","searchKeys":["asJavaCollection"]},{"name":"def bytesHashing: Hashing[Array[Byte]]","description":"scala.util.hashing.MurmurHash3$","location":"api/scala/util/hashing/MurmurHash3$.html","searchKeys":["bytesHashing"]},{"name":"trait JFunction2$mcDJJ$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcDJJ$sp","location":"api/scala/runtime/java8/JFunction2$mcDJJ$sp.html","searchKeys":["JFunction2$mcDJJ$sp"]},{"name":"def newBuilder[K, V](orderedBy: OrderBy): Builder[(K, V), TreeSeqMap[K, V]]","description":"scala.collection.immutable.TreeSeqMap$","location":"api/scala/collection/immutable/TreeSeqMap$.html","searchKeys":["newBuilder"]},{"name":"class LongAccumulator extends Accumulator[Long, [A] =>> AnyAccumulator[A], LongAccumulator] with SeqOps[Long, [A] =>> AnyAccumulator[A], LongAccumulator] with Serializable","description":"scala.jdk.LongAccumulator","location":"api/scala/jdk/LongAccumulator.html","searchKeys":["LongAccumulator"]},{"name":"def until(end: T): ResultWithoutStep","description":"scala.runtime.RangedProxy","location":"api/scala/runtime/RangedProxy.html","searchKeys":["until"]},{"name":"def release(resource: R): Unit","description":"scala.util.Using$$Releasable","location":"api/scala/util/Using$$Releasable.html","searchKeys":["release"]},{"name":"def sortBy[B](f: A => B)(ord: Ordering[B]): Array[A]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["sortBy"]},{"name":"def id: Int","description":"scala.Enumeration$Value","location":"api/scala/Enumeration$Value.html","searchKeys":["id"]},{"name":"def enrichAsJavaBiPredicate[T, U](sf: (T, U) => Boolean): RichFunction2AsBiPredicate[T, U]","description":"scala.jdk.Priority2FunctionExtensions","location":"api/scala/jdk/Priority2FunctionExtensions.html","searchKeys":["enrichAsJavaBiPredicate"]},{"name":"def contains(elem: A): Boolean","description":"scala.collection.mutable.TreeSet","location":"api/scala/collection/mutable/TreeSet.html","searchKeys":["contains"]},{"name":"given canEqualSeq","description":"scala.CanEqual$","location":"api/scala/CanEqual$.html","searchKeys":["canEqualSeq"]},{"name":"def clear(): Unit","description":"scala.collection.mutable.BitSet","location":"api/scala/collection/mutable/BitSet.html","searchKeys":["clear"]},{"name":"def %(x: Byte): Int","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["%"]},{"name":"def toTitleCase: Char","description":"scala.runtime.RichChar","location":"api/scala/runtime/RichChar.html","searchKeys":["toTitleCase"]},{"name":"def reverseIterator: Iterator[A]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["reverseIterator"]},{"name":"def group(i: Int): String","description":"scala.util.matching.Regex$$MatchData","location":"api/scala/util/matching/Regex$$MatchData.html","searchKeys":["group"]},{"name":"val REFINEDtype: 159","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["REFINEDtype"]},{"name":"def length: Int","description":"scala.collection.mutable.ArrayBuffer","location":"api/scala/collection/mutable/ArrayBuffer.html","searchKeys":["length"]},{"name":"val cas: \"CAS\"","description":"scala.runtime.LazyVals$$Names$","location":"api/scala/runtime/LazyVals$$Names$.html","searchKeys":["cas"]},{"name":"def toBinaryString: String","description":"scala.runtime.RichLong","location":"api/scala/runtime/RichLong.html","searchKeys":["toBinaryString"]},{"name":"def efficientStepper[S <: Stepper[]](shape: StepperShape[Long, S]): S & EfficientSplit","description":"scala.jdk.LongAccumulator","location":"api/scala/jdk/LongAccumulator.html","searchKeys":["efficientStepper"]},{"name":"val x$32: FromExpr[T16]","description":"scala.quoted.FromExpr$$Tuple16FromExpr","location":"api/scala/quoted/FromExpr$$Tuple16FromExpr.html","searchKeys":["x$32"]},{"name":"val x$28: FromExpr[T10]","description":"scala.quoted.FromExpr$$Tuple18FromExpr","location":"api/scala/quoted/FromExpr$$Tuple18FromExpr.html","searchKeys":["x$28"]},{"name":"def asScala: () => Double","description":"scala.jdk.FunctionWrappers$$RichDoubleSupplierAsFunction0","location":"api/scala/jdk/FunctionWrappers$$RichDoubleSupplierAsFunction0.html","searchKeys":["asScala"]},{"name":"def second: FiniteDuration","description":"scala.concurrent.duration.DurationConversions","location":"api/scala/concurrent/duration/DurationConversions.html","searchKeys":["second"]},{"name":"def containsTyped(x: T): Boolean","description":"scala.collection.immutable.NumericRange","location":"api/scala/collection/immutable/NumericRange.html","searchKeys":["containsTyped"]},{"name":"def valueOrError[T](using FromExpr[T]): T","description":"scala.quoted.Quotes","location":"api/scala/quoted/Quotes.html","searchKeys":["valueOrError"]},{"name":"def isEmpty: Boolean","description":"scala.runtime.ZippedIterable2","location":"api/scala/runtime/ZippedIterable2.html","searchKeys":["isEmpty"]},{"name":"val x$3: Type[T3]","description":"scala.quoted.FromExpr$$Tuple21FromExpr","location":"api/scala/quoted/FromExpr$$Tuple21FromExpr.html","searchKeys":["x$3"]},{"name":"val x$17: Type[T17]","description":"scala.quoted.FromExpr$$Tuple18FromExpr","location":"api/scala/quoted/FromExpr$$Tuple18FromExpr.html","searchKeys":["x$17"]},{"name":"def toScala(o: OptionalInt): Option[Integer]","description":"scala.jdk.javaapi.OptionConverters$","location":"api/scala/jdk/javaapi/OptionConverters$.html","searchKeys":["toScala"]},{"name":"def compare(x: Float, y: Float): Int","description":"scala.math.Ordering$$Float$$IeeeOrdering","location":"api/scala/math/Ordering$$Float$$IeeeOrdering.html","searchKeys":["compare"]},{"name":"class AsJavaIntToDoubleFunction(sf: Int => Double) extends IntToDoubleFunction","description":"scala.jdk.FunctionWrappers$$AsJavaIntToDoubleFunction","location":"api/scala/jdk/FunctionWrappers$$AsJavaIntToDoubleFunction.html","searchKeys":["AsJavaIntToDoubleFunction"]},{"name":"def apply(fun: Term, args: List[Term]): Apply","description":"scala.quoted.Quotes$reflectModule$ApplyModule","location":"api/scala/quoted/Quotes$reflectModule$ApplyModule.html","searchKeys":["apply"]},{"name":"trait FromDigits[T]","description":"scala.util.FromDigits","location":"api/scala/util/FromDigits.html","searchKeys":["FromDigits"]},{"name":"def !=(x: Long): Boolean","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["!="]},{"name":"given Tuple3FromExpr[T1, T2, T3](using val x$1: Type[T1], val x$2: Type[T2], val x$3: Type[T3], val x$4: FromExpr[T1], val x$5: FromExpr[T2], val x$6: FromExpr[T3]): FromExpr[(T1, T2, T3)]","description":"scala.quoted.FromExpr$$Tuple3FromExpr","location":"api/scala/quoted/FromExpr$$Tuple3FromExpr.html","searchKeys":["Tuple3FromExpr"]},{"name":"def tryAdvance(c: IntConsumer): Boolean","description":"scala.collection.IntStepper$$IntStepperSpliterator","location":"api/scala/collection/IntStepper$$IntStepperSpliterator.html","searchKeys":["tryAdvance"]},{"name":"class deprecated(message: String, since: String) extends StaticAnnotation","description":"scala.deprecated","location":"api/scala/deprecated.html","searchKeys":["deprecated"]},{"name":"def foldLeft[T, R](futures: Iterable[Future[T]])(zero: R)(op: (R, T) => R)(executor: ExecutionContext): Future[R]","description":"scala.concurrent.Future$","location":"api/scala/concurrent/Future$.html","searchKeys":["foldLeft"]},{"name":"def copyToArray(xs: Array[Char]): Int","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["copyToArray"]},{"name":"val Refinement: RefinementModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Refinement"]},{"name":"def unapplySeq(m: Match): Option[List[String]]","description":"scala.util.matching.Regex","location":"api/scala/util/matching/Regex.html","searchKeys":["unapplySeq"]},{"name":"def ++:[V1 >: V](that: IterableOnce[(K, V1)]): CC[K, V1]","description":"scala.collection.MapOps","location":"api/scala/collection/MapOps.html","searchKeys":["++:"]},{"name":"val x$7: Type[T7]","description":"scala.quoted.FromExpr$$Tuple12FromExpr","location":"api/scala/quoted/FromExpr$$Tuple12FromExpr.html","searchKeys":["x$7"]},{"name":"def accept(x1: T, x2: Int): Unit","description":"scala.jdk.FunctionWrappers$$AsJavaObjIntConsumer","location":"api/scala/jdk/FunctionWrappers$$AsJavaObjIntConsumer.html","searchKeys":["accept"]},{"name":"def getAsBoolean(): Boolean","description":"scala.jdk.FunctionWrappers$$AsJavaBooleanSupplier","location":"api/scala/jdk/FunctionWrappers$$AsJavaBooleanSupplier.html","searchKeys":["getAsBoolean"]},{"name":"given RightToExpr[L, R]: ToExpr[Right[L, R]]","description":"scala.quoted.ToExpr$$RightToExpr","location":"api/scala/quoted/ToExpr$$RightToExpr.html","searchKeys":["RightToExpr"]},{"name":"def indexOf(str: String): Int","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["indexOf"]},{"name":"def plus(x: Byte, y: Byte): Byte","description":"scala.math.Numeric$$ByteIsIntegral","location":"api/scala/math/Numeric$$ByteIsIntegral.html","searchKeys":["plus"]},{"name":"def enrichAsJavaIntBinaryOperator[A0, A1](sf: (A0, A1) => Int)(evA0: A0 =:= Int, evA1: A1 =:= Int): RichFunction2AsIntBinaryOperator","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsJavaIntBinaryOperator"]},{"name":"def toSource: ProcessBuilder","description":"scala.sys.process.ProcessBuilder$$Source","location":"api/scala/sys/process/ProcessBuilder$$Source.html","searchKeys":["toSource"]},{"name":"def reverseIterator: Iterator[A]","description":"scala.collection.mutable.PriorityQueue","location":"api/scala/collection/mutable/PriorityQueue.html","searchKeys":["reverseIterator"]},{"name":"def show(using Printer[TypeRepr]): String","description":"scala.quoted.Quotes$reflectModule$TypeReprMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html","searchKeys":["show"]},{"name":"def merger[A]: BiConsumer[AnyAccumulator[A], AnyAccumulator[A]]","description":"scala.jdk.AnyAccumulator$","location":"api/scala/jdk/AnyAccumulator$.html","searchKeys":["merger"]},{"name":"def _1: T1","description":"scala.Product11","location":"api/scala/Product11.html","searchKeys":["_1"]},{"name":"def fill[T](n1: Int, n2: Int, n3: Int, n4: Int)(elem: => T)(evidence$15: ClassTag[T]): Array[Array[Array[Array[T]]]]","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["fill"]},{"name":"def isInclusive: Boolean","description":"scala.collection.immutable.Range$$Inclusive","location":"api/scala/collection/immutable/Range$$Inclusive.html","searchKeys":["isInclusive"]},{"name":"def *(x: Int): Double","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["*"]},{"name":"def param(idx: Int): TypeRepr","description":"scala.quoted.Quotes$reflectModule$PolyTypeMethods","location":"api/scala/quoted/Quotes$reflectModule$PolyTypeMethods.html","searchKeys":["param"]},{"name":"def emptyCharIArray: IArray[Char]","description":"scala.IArray$package$$IArray$","location":"api/scala/IArray$package$$IArray$.html","searchKeys":["emptyCharIArray"]},{"name":"def removeAll(): Seq[A]","description":"scala.collection.mutable.ArrayDeque","location":"api/scala/collection/mutable/ArrayDeque.html","searchKeys":["removeAll"]},{"name":"val x$23: FromExpr[T2]","description":"scala.quoted.FromExpr$$Tuple21FromExpr","location":"api/scala/quoted/FromExpr$$Tuple21FromExpr.html","searchKeys":["x$23"]},{"name":"def replace(k: K, v: V): Option[V]","description":"scala.collection.concurrent.Map","location":"api/scala/collection/concurrent/Map.html","searchKeys":["replace"]},{"name":"def retain(p: (K, V) => Boolean): MapOps[K, V, CC, C]","description":"scala.collection.mutable.MapOps","location":"api/scala/collection/mutable/MapOps.html","searchKeys":["retain"]},{"name":"val x$33: FromExpr[T11]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["x$33"]},{"name":"def zipWithIndex: Array[(A, Int)]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["zipWithIndex"]},{"name":"def signum: Int","description":"scala.runtime.ScalaNumberProxy","location":"api/scala/runtime/ScalaNumberProxy.html","searchKeys":["signum"]},{"name":"trait Subtractable[A, +Repr <: Subtractable[A, Repr]]","description":"scala.collection.generic.Subtractable","location":"api/scala/collection/generic/Subtractable.html","searchKeys":["Subtractable"]},{"name":"def !=(x: Float): Boolean","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["!="]},{"name":"def iterator: Iterator[Double]","description":"scala.jdk.DoubleAccumulator","location":"api/scala/jdk/DoubleAccumulator.html","searchKeys":["iterator"]},{"name":"def _15: T15","description":"scala.Product17","location":"api/scala/Product17.html","searchKeys":["_15"]},{"name":"trait Product7[+T1, +T2, +T3, +T4, +T5, +T6, +T7] extends Product","description":"scala.Product7","location":"api/scala/Product7.html","searchKeys":["Product7"]},{"name":"def subtractOne(elem: K): TreeMap[K, V]","description":"scala.collection.mutable.TreeMap","location":"api/scala/collection/mutable/TreeMap.html","searchKeys":["subtractOne"]},{"name":"object Long extends AnyValCompanion","description":"scala.Long$","location":"api/scala/Long$.html","searchKeys":["Long"]},{"name":"def tupled: (T1, T2, T3, T4) => R","description":"scala.Function4","location":"api/scala/Function4.html","searchKeys":["tupled"]},{"name":"def ultimately[T](body: => Unit): Catch[T]","description":"scala.util.control.Exception$","location":"api/scala/util/control/Exception$.html","searchKeys":["ultimately"]},{"name":"def Tuple8[T1, T2, T3, T4, T5, T6, T7, T8](eqv1: Equiv[T1], eqv2: Equiv[T2], eqv3: Equiv[T3], eqv4: Equiv[T4], eqv5: Equiv[T5], eqv6: Equiv[T6], eqv7: Equiv[T7], eqv8: Equiv[T8]): Equiv[(T1, T2, T3, T4, T5, T6, T7, T8)]","description":"scala.math.Equiv$","location":"api/scala/math/Equiv$.html","searchKeys":["Tuple8"]},{"name":"def force: Empty","description":"scala.collection.immutable.Stream$$Empty$","location":"api/scala/collection/immutable/Stream$$Empty$.html","searchKeys":["force"]},{"name":"given WildcardTypeTreeMethods","description":"scala.quoted.Quotes$reflectModule$WildcardTypeTreeMethods","location":"api/scala/quoted/Quotes$reflectModule$WildcardTypeTreeMethods.html","searchKeys":["WildcardTypeTreeMethods"]},{"name":"def foreach[U](f: Char => U): Unit","description":"scala.collection.StringOps$$WithFilter","location":"api/scala/collection/StringOps$$WithFilter.html","searchKeys":["foreach"]},{"name":"given StringContextFromExpr: FromExpr[StringContext]","description":"scala.quoted.FromExpr$$StringContextFromExpr$","location":"api/scala/quoted/FromExpr$$StringContextFromExpr$.html","searchKeys":["StringContextFromExpr"]},{"name":"def this(initialSize: Int)","description":"scala.collection.mutable.ArrayBuffer","location":"api/scala/collection/mutable/ArrayBuffer.html","searchKeys":["this"]},{"name":"val firstNatASTTreeTag: 110","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["firstNatASTTreeTag"]},{"name":"object Arrays","description":"scala.runtime.Arrays$","location":"api/scala/runtime/Arrays$.html","searchKeys":["Arrays"]},{"name":"class Accumulator[@specialized(Double, Int, Long) A, +CC <: ([X] =>> Seq[X]), +C <: Seq[A]] extends Seq[A] with Builder[A, C]","description":"scala.jdk.Accumulator","location":"api/scala/jdk/Accumulator.html","searchKeys":["Accumulator"]},{"name":"def equiv(x: Double, y: Double): Boolean","description":"scala.math.Equiv$$Double$$IeeeEquiv","location":"api/scala/math/Equiv$$Double$$IeeeEquiv.html","searchKeys":["equiv"]},{"name":"def shouldRethrow(x: Throwable): Boolean","description":"scala.util.control.Exception$","location":"api/scala/util/control/Exception$.html","searchKeys":["shouldRethrow"]},{"name":"package scala.collection.mutable","description":"scala.collection.mutable","location":"api/scala/collection/mutable.html","searchKeys":["scala.collection.mutable"]},{"name":"val x$13: Type[T13]","description":"scala.quoted.FromExpr$$Tuple17FromExpr","location":"api/scala/quoted/FromExpr$$Tuple17FromExpr.html","searchKeys":["x$13"]},{"name":"def prepended[B >: A](elem: B): CC[B]","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["prepended"]},{"name":"def curried: T1 => T2 => T3 => T4 => T5 => T6 => T7 => T8 => T9 => T10 => T11 => T12 => T13 => T14 => T15 => T16 => T17 => T18 => T19 => T20 => T21 => T22 => R","description":"scala.Function22","location":"api/scala/Function22.html","searchKeys":["curried"]},{"name":"def onMalformedInput(newAction: CodingErrorAction): Codec","description":"scala.io.Codec","location":"api/scala/io/Codec.html","searchKeys":["onMalformedInput"]},{"name":"def foldOverTree(x: X, tree: Tree)(owner: Symbol): X","description":"scala.quoted.Quotes$reflectModule$TreeAccumulator","location":"api/scala/quoted/Quotes$reflectModule$TreeAccumulator.html","searchKeys":["foldOverTree"]},{"name":"def ensuring(cond: Boolean): A","description":"scala.Predef$$Ensuring","location":"api/scala/Predef$$Ensuring.html","searchKeys":["ensuring"]},{"name":"class ArrowAssoc[A](self: A) extends AnyVal","description":"scala.Predef$$ArrowAssoc","location":"api/scala/Predef$$ArrowAssoc.html","searchKeys":["ArrowAssoc"]},{"name":"def excl(elem: A): TreeSet[A]","description":"scala.collection.immutable.TreeSet","location":"api/scala/collection/immutable/TreeSet.html","searchKeys":["excl"]},{"name":"def char2float(x: Char): Float","description":"scala.Char$","location":"api/scala/Char$.html","searchKeys":["char2float"]},{"name":"class StreamHasToScala[A](stream: Stream[A])","description":"scala.collection.convert.StreamExtensions$StreamHasToScala","location":"api/scala/collection/convert/StreamExtensions$StreamHasToScala.html","searchKeys":["StreamHasToScala"]},{"name":"def iterableEvidence: Ev[A]","description":"scala.collection.EvidenceIterableFactoryDefaults","location":"api/scala/collection/EvidenceIterableFactoryDefaults.html","searchKeys":["iterableEvidence"]},{"name":"object MapFactory","description":"scala.collection.MapFactory$","location":"api/scala/collection/MapFactory$.html","searchKeys":["MapFactory"]},{"name":"val self: Double","description":"scala.runtime.RichDouble","location":"api/scala/runtime/RichDouble.html","searchKeys":["self"]},{"name":"def addOne(elem: Char): ofChar","description":"scala.collection.mutable.ArrayBuilder$$ofChar","location":"api/scala/collection/mutable/ArrayBuilder$$ofChar.html","searchKeys":["addOne"]},{"name":"def underlying: Object","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["underlying"]},{"name":"class Zip[A, B](underlying: SomeIterableOps[A], other: Iterable[B]) extends AbstractView[(A, B)]","description":"scala.collection.View$$Zip","location":"api/scala/collection/View$$Zip.html","searchKeys":["Zip"]},{"name":"val elems1: Long","description":"scala.collection.immutable.BitSet$$BitSet2","location":"api/scala/collection/immutable/BitSet$$BitSet2.html","searchKeys":["elems1"]},{"name":"def splice[T](x: Quotes => Expr[T]): T","description":"scala.quoted.runtime.Expr$","location":"api/scala/quoted/runtime/Expr$.html","searchKeys":["splice"]},{"name":"def apply(x1: Double): R","description":"scala.jdk.FunctionWrappers$$AsJavaDoubleFunction","location":"api/scala/jdk/FunctionWrappers$$AsJavaDoubleFunction.html","searchKeys":["apply"]},{"name":"class alpha(externalName: String) extends StaticAnnotation","description":"scala.annotation.alpha","location":"api/scala/annotation/alpha.html","searchKeys":["alpha"]},{"name":"type NoPrefix <: TypeRepr","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["NoPrefix"]},{"name":"def toInt(x: Int): Int","description":"scala.math.Numeric$$IntIsIntegral","location":"api/scala/math/Numeric$$IntIsIntegral.html","searchKeys":["toInt"]},{"name":"def unapply(x: Expr[T])(using Quotes): Option[T]","description":"scala.quoted.FromExpr","location":"api/scala/quoted/FromExpr.html","searchKeys":["unapply"]},{"name":"def asJava: DoubleConsumer","description":"scala.jdk.FunctionWrappers$$RichFunction1AsDoubleConsumer","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsDoubleConsumer.html","searchKeys":["asJava"]},{"name":"val x$29: FromExpr[T14]","description":"scala.quoted.FromExpr$$Tuple15FromExpr","location":"api/scala/quoted/FromExpr$$Tuple15FromExpr.html","searchKeys":["x$29"]},{"name":"val WHITE: \"\\033[37m\"","description":"scala.io.AnsiColor","location":"api/scala/io/AnsiColor.html","searchKeys":["WHITE"]},{"name":"trait JFunction2$mcZJI$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcZJI$sp","location":"api/scala/runtime/java8/JFunction2$mcZJI$sp.html","searchKeys":["JFunction2$mcZJI$sp"]},{"name":"val Float: FloatManifest","description":"scala.reflect.ManifestFactory$","location":"api/scala/reflect/ManifestFactory$.html","searchKeys":["Float"]},{"name":"type Concat[X <: Tuple, +Y <: Tuple] = X match {\n  case EmptyTuple => Y\n  case x1 *: xs1 => x1 *: Concat[xs1, Y]\n}","description":"scala.Tuple$","location":"api/scala/Tuple$.html","searchKeys":["Concat"]},{"name":"val x$42: FromExpr[T20]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["x$42"]},{"name":"def until(end: BigInt, step: BigInt): Exclusive[BigInt]","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["until"]},{"name":"given canEqualSet","description":"scala.CanEqual$","location":"api/scala/CanEqual$.html","searchKeys":["canEqualSet"]},{"name":"def length: Int","description":"scala.collection.SeqView$$Id","location":"api/scala/collection/SeqView$$Id.html","searchKeys":["length"]},{"name":"def #>(f: File): ProcessBuilder","description":"scala.sys.process.ProcessBuilder$$Source","location":"api/scala/sys/process/ProcessBuilder$$Source.html","searchKeys":["#>"]},{"name":"def until(end: Int): Range","description":"scala.runtime.RichInt","location":"api/scala/runtime/RichInt.html","searchKeys":["until"]},{"name":"val SHAREDtype: 61","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["SHAREDtype"]},{"name":"def apply(ref: Term): Singleton","description":"scala.quoted.Quotes$reflectModule$SingletonModule","location":"api/scala/quoted/Quotes$reflectModule$SingletonModule.html","searchKeys":["apply"]},{"name":"val jIntegerAccumulatorFactoryShape: AccumulatorFactoryShape[Integer, IntAccumulator]","description":"scala.jdk.Accumulator$$AccumulatorFactoryShape$","location":"api/scala/jdk/Accumulator$$AccumulatorFactoryShape$.html","searchKeys":["jIntegerAccumulatorFactoryShape"]},{"name":"def dble[T](arr: Array[T])(evidence$1: ClassTag[T]): Array[T]","description":"dotty.tools.tasty.util.Util$","location":"api/dotty/tools/tasty/util/Util$.html","searchKeys":["dble"]},{"name":"val TERMREFdirect: 62","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["TERMREFdirect"]},{"name":"type AmbiguousImplicits <: ImplicitSearchFailure","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["AmbiguousImplicits"]},{"name":"class Set1[A] extends AbstractSet[A] with StrictOptimizedIterableOps[A, [A] =>> Set[A], Set[A]] with Serializable","description":"scala.collection.immutable.Set$$Set1","location":"api/scala/collection/immutable/Set$$Set1.html","searchKeys":["Set1"]},{"name":"type Iterator[+A] = Iterator[A]","description":"scala","location":"api/scala.html","searchKeys":["Iterator"]},{"name":"def enrichAsJavaBiFunction[T, U, R](sf: (T, U) => R): RichFunction2AsBiFunction[T, U, R]","description":"scala.jdk.Priority3FunctionExtensions","location":"api/scala/jdk/Priority3FunctionExtensions.html","searchKeys":["enrichAsJavaBiFunction"]},{"name":"object Tuples","description":"scala.runtime.Tuples$","location":"api/scala/runtime/Tuples$.html","searchKeys":["Tuples"]},{"name":"def apply(command: Seq[String]): ProcessBuilder","description":"scala.sys.process.ProcessCreation","location":"api/scala/sys/process/ProcessCreation.html","searchKeys":["apply"]},{"name":"def apply(v1: T1, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, v7: T7, v8: T8, v9: T9, v10: T10, v11: T11, v12: T12, v13: T13, v14: T14, v15: T15, v16: T16, v17: T17, v18: T18): R","description":"scala.Function18","location":"api/scala/Function18.html","searchKeys":["apply"]},{"name":"def convert(d: FiniteDuration): R","description":"scala.concurrent.duration.DurationConversions$$Classifier","location":"api/scala/concurrent/duration/DurationConversions$$Classifier.html","searchKeys":["convert"]},{"name":"val Boolean: BooleanManifest","description":"scala.reflect.ClassManifestFactory$","location":"api/scala/reflect/ClassManifestFactory$.html","searchKeys":["Boolean"]},{"name":"trait UnitConstantModule","description":"scala.quoted.Quotes$reflectModule$UnitConstantModule","location":"api/scala/quoted/Quotes$reflectModule$UnitConstantModule.html","searchKeys":["UnitConstantModule"]},{"name":"trait Proxy","description":"scala.Proxy","location":"api/scala/Proxy.html","searchKeys":["Proxy"]},{"name":"package scala.ref","description":"scala.ref","location":"api/scala/ref.html","searchKeys":["scala.ref"]},{"name":"def appendedAll[B >: A](suffix: SeqOps[B, AnyConstr, ]): SeqView[B]","description":"scala.collection.SeqView","location":"api/scala/collection/SeqView.html","searchKeys":["appendedAll"]},{"name":"def log(x: Double): Double","description":"scala.math","location":"api/scala/math.html","searchKeys":["log"]},{"name":"Reference","description":"","location":"docs/Reference/index.html","searchKeys":["Reference"]},{"name":"def concat[B >: A](suffix: SeqOps[B, AnyConstr, ]): SeqView[B]","description":"scala.collection.SeqView","location":"api/scala/collection/SeqView.html","searchKeys":["concat"]},{"name":"class Reverse[A](underlying: SomeSeqOps[A]) extends AbstractSeqView[A]","description":"scala.collection.SeqView$$Reverse","location":"api/scala/collection/SeqView$$Reverse.html","searchKeys":["Reverse"]},{"name":"def <=(x: Long): Boolean","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["<="]},{"name":"def _4: T4","description":"scala.Product16","location":"api/scala/Product16.html","searchKeys":["_4"]},{"name":"def <=(that: A): Boolean","description":"scala.math.Ordered","location":"api/scala/math/Ordered.html","searchKeys":["<="]},{"name":"type Statement <: Tree","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Statement"]},{"name":"def success(value: T): Promise[T]","description":"scala.concurrent.Promise","location":"api/scala/concurrent/Promise.html","searchKeys":["success"]},{"name":"val x$11: Type[T11]","description":"scala.quoted.FromExpr$$Tuple19FromExpr","location":"api/scala/quoted/FromExpr$$Tuple19FromExpr.html","searchKeys":["x$11"]},{"name":"given TypedTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypedTypeTest"]},{"name":"def applyAsDouble(x1: Int): Double","description":"scala.jdk.FunctionWrappers$$AsJavaIntToDoubleFunction","location":"api/scala/jdk/FunctionWrappers$$AsJavaIntToDoubleFunction.html","searchKeys":["applyAsDouble"]},{"name":"def dropRight(n: Int): String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["dropRight"]},{"name":"def unapply[T1, T2, T3, T4, T5](x: Product5[T1, T2, T3, T4, T5]): Option[Product5[T1, T2, T3, T4, T5]]","description":"scala.Product5$","location":"api/scala/Product5$.html","searchKeys":["unapply"]},{"name":"val FloatConstant: FloatConstantModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["FloatConstant"]},{"name":"def requiredModule(path: String): Symbol","description":"scala.quoted.Quotes$reflectModule$SymbolModule","location":"api/scala/quoted/Quotes$reflectModule$SymbolModule.html","searchKeys":["requiredModule"]},{"name":"def unapply(x: Expr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)])(using Quotes): Option[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)]","description":"scala.quoted.FromExpr$$Tuple10FromExpr","location":"api/scala/quoted/FromExpr$$Tuple10FromExpr.html","searchKeys":["unapply"]},{"name":"val x$13: Type[T13]","description":"scala.quoted.FromExpr$$Tuple20FromExpr","location":"api/scala/quoted/FromExpr$$Tuple20FromExpr.html","searchKeys":["x$13"]},{"name":"object Iterable extends Delegate[[A] =>> Iterable[A]]","description":"scala.collection.mutable.Iterable$","location":"api/scala/collection/mutable/Iterable$.html","searchKeys":["Iterable"]},{"name":"def unapply(x: ConstantType): Some[Constant]","description":"scala.quoted.Quotes$reflectModule$ConstantTypeModule","location":"api/scala/quoted/Quotes$reflectModule$ConstantTypeModule.html","searchKeys":["unapply"]},{"name":"def int2long(x: Int): Long","description":"scala.Int$","location":"api/scala/Int$.html","searchKeys":["int2long"]},{"name":"def enrichAsJavaDoubleBinaryOperator[A0, A1](sf: (A0, A1) => Double)(evA0: A0 =:= Double, evA1: A1 =:= Double): RichFunction2AsDoubleBinaryOperator","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsJavaDoubleBinaryOperator"]},{"name":"val GenTraversable: Iterable","description":"scala.collection","location":"api/scala/collection.html","searchKeys":["GenTraversable"]},{"name":"given Tuple15ToExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15]: ToExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)]","description":"scala.quoted.ToExpr$$Tuple15ToExpr","location":"api/scala/quoted/ToExpr$.html","searchKeys":["Tuple15ToExpr"]},{"name":"def box(x: Int): Integer","description":"scala.Int$","location":"api/scala/Int$.html","searchKeys":["box"]},{"name":"def filterOrElse[A1 >: A](p: B => Boolean, zero: => A1): Either[A1, B]","description":"scala.util.Either","location":"api/scala/util/Either.html","searchKeys":["filterOrElse"]},{"name":"given TermMethods","description":"scala.quoted.Quotes$reflectModule$TermMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TermMethods"]},{"name":"class elidable(val level: Int) extends StaticAnnotation","description":"scala.annotation.elidable","location":"api/scala/annotation/elidable.html","searchKeys":["elidable"]},{"name":"def from(start: Int): LazyList[Int]","description":"scala.collection.immutable.LazyList$","location":"api/scala/collection/immutable/LazyList$.html","searchKeys":["from"]},{"name":"def prepend(elems: A*): Buffer[A]","description":"scala.collection.mutable.Buffer","location":"api/scala/collection/mutable/Buffer.html","searchKeys":["prepend"]},{"name":"def unapply(tree: TypeCaseDef): (TypeTree, TypeTree)","description":"scala.quoted.Quotes$reflectModule$TypeCaseDefModule","location":"api/scala/quoted/Quotes$reflectModule$TypeCaseDefModule.html","searchKeys":["unapply"]},{"name":"package scala.beans","description":"scala.beans","location":"api/scala/beans.html","searchKeys":["scala.beans"]},{"name":"def indices: Range","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["indices"]},{"name":"def unapply[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17](x: Product17[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17]): Option[Product17[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17]]","description":"scala.Product17$","location":"api/scala/Product17$.html","searchKeys":["unapply"]},{"name":"def quot(x: Char, y: Char): Char","description":"scala.math.Numeric$$CharIsIntegral","location":"api/scala/math/Numeric$$CharIsIntegral.html","searchKeys":["quot"]},{"name":"trait reflectiveCalls","description":"scala.languageFeature$$reflectiveCalls","location":"api/scala/languageFeature$$reflectiveCalls.html","searchKeys":["reflectiveCalls"]},{"name":"def value: Short","description":"scala.runtime.LazyShort","location":"api/scala/runtime/LazyShort.html","searchKeys":["value"]},{"name":"given Tuple1ToExpr[T1]: ToExpr[(T1)]","description":"scala.quoted.ToExpr$$Tuple1ToExpr","location":"api/scala/quoted/ToExpr$$Tuple1ToExpr.html","searchKeys":["Tuple1ToExpr"]},{"name":"def splitAt[T](n: Int): (IArray[T], IArray[T])","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["splitAt"]},{"name":"def current: BlockContext","description":"scala.concurrent.BlockContext$","location":"api/scala/concurrent/BlockContext$.html","searchKeys":["current"]},{"name":"def fromSpecific(it: IterableOnce[Int]): BitSet","description":"scala.collection.mutable.BitSet$","location":"api/scala/collection/mutable/BitSet$.html","searchKeys":["fromSpecific"]},{"name":"def value: Char","description":"scala.runtime.LazyChar","location":"api/scala/runtime/LazyChar.html","searchKeys":["value"]},{"name":"def reverse: C","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["reverse"]},{"name":"def +(x: Long): Double","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["+"]},{"name":"def asScala[A](c: Collection[A]): Iterable[A]","description":"scala.collection.convert.AsScalaConverters","location":"api/scala/collection/convert/AsScalaConverters.html","searchKeys":["asScala"]},{"name":"def rem(x: Char, y: Char): Char","description":"scala.math.Numeric$$CharIsIntegral","location":"api/scala/math/Numeric$$CharIsIntegral.html","searchKeys":["rem"]},{"name":"def -(key: K): Map[K, V]","description":"scala.collection.Map","location":"api/scala/collection/Map.html","searchKeys":["-"]},{"name":"def _2: T2","description":"scala.Product22","location":"api/scala/Product22.html","searchKeys":["_2"]},{"name":"class WithDefault[K, V](underlying: SortedMap[K, V], defaultValue: K => V) extends WithDefault[K, V] with SortedMap[K, V] with SortedMapOps[K, V, [K, V] =>> SortedMap[K, V], WithDefault[K, V]] with Serializable","description":"scala.collection.mutable.SortedMap$$WithDefault","location":"api/scala/collection/mutable/SortedMap$$WithDefault.html","searchKeys":["WithDefault"]},{"name":"class RichFunction2AsObjDoubleConsumer[T](underlying: (T, Double) => Unit) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichFunction2AsObjDoubleConsumer","location":"api/scala/jdk/FunctionWrappers$$RichFunction2AsObjDoubleConsumer.html","searchKeys":["RichFunction2AsObjDoubleConsumer"]},{"name":"def >>>(x: Int): Int","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":[">>>"]},{"name":"class Tuple19[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16, +T17, +T18, +T19](_1: T1, _2: T2, _3: T3, _4: T4, _5: T5, _6: T6, _7: T7, _8: T8, _9: T9, _10: T10, _11: T11, _12: T12, _13: T13, _14: T14, _15: T15, _16: T16, _17: T17, _18: T18, _19: T19) extends Product19[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19]","description":"scala.Tuple19","location":"api/scala/Tuple19.html","searchKeys":["Tuple19"]},{"name":"def lineStream(log: ProcessLogger, capacity: Integer): Stream[String]","description":"scala.sys.process.ProcessBuilder","location":"api/scala/sys/process/ProcessBuilder.html","searchKeys":["lineStream"]},{"name":"given TreeMethods","description":"scala.quoted.Quotes$reflectModule$TreeMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TreeMethods"]},{"name":"def enrichAsJavaUnaryOperator[T, A1](sf: T => A1)(evA1: A1 =:= T): RichFunction1AsUnaryOperator[T]","description":"scala.jdk.Priority1FunctionExtensions","location":"api/scala/jdk/Priority1FunctionExtensions.html","searchKeys":["enrichAsJavaUnaryOperator"]},{"name":"def asJava: Consumer[T]","description":"scala.jdk.FunctionWrappers$$RichFunction1AsConsumer","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsConsumer.html","searchKeys":["asJava"]},{"name":"given Tuple17FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17](using val x$1: Type[T1], val x$2: Type[T2], val x$3: Type[T3], val x$4: Type[T4], val x$5: Type[T5], val x$6: Type[T6], val x$7: Type[T7], val x$8: Type[T8], val x$9: Type[T9], val x$10: Type[T10], val x$11: Type[T11], val x$12: Type[T12], val x$13: Type[T13], val x$14: Type[T14], val x$15: Type[T15], val x$16: Type[T16], val x$17: Type[T17], val x$18: FromExpr[T1], val x$19: FromExpr[T2], val x$20: FromExpr[T3], val x$21: FromExpr[T4], val x$22: FromExpr[T5], val x$23: FromExpr[T6], val x$24: FromExpr[T7], val x$25: FromExpr[T8], val x$26: FromExpr[T9], val x$27: FromExpr[T10], val x$28: FromExpr[T11], val x$29: FromExpr[T12], val x$30: FromExpr[T13], val x$31: FromExpr[T14], val x$32: FromExpr[T15], val x$33: FromExpr[T16], val x$34: FromExpr[T17]): FromExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17)]","description":"scala.quoted.FromExpr$$Tuple17FromExpr","location":"api/scala/quoted/FromExpr$$Tuple17FromExpr.html","searchKeys":["Tuple17FromExpr"]},{"name":"def map[B](f: A => B): Option[B]","description":"scala.Option$WithFilter","location":"api/scala/Option$WithFilter.html","searchKeys":["map"]},{"name":"def tabulate[T](n1: Int, n2: Int, n3: Int)(f: (Int, Int, Int) => T)(evidence$25: ClassTag[T]): IArray[IArray[IArray[T]]]","description":"scala.IArray$package$$IArray$","location":"api/scala/IArray$package$$IArray$.html","searchKeys":["tabulate"]},{"name":"def apply(call: Option[Tree], bindings: List[Definition], expansion: Term): Inlined","description":"scala.quoted.Quotes$reflectModule$InlinedModule","location":"api/scala/quoted/Quotes$reflectModule$InlinedModule.html","searchKeys":["apply"]},{"name":"def apply(tup: (T1, T2, T3, T4, T5, T6, T7))(using Quotes): Expr[(T1, T2, T3, T4, T5, T6, T7)]","description":"scala.quoted.ToExpr$$Tuple7ToExpr","location":"api/scala/quoted/ToExpr$$Tuple7ToExpr.html","searchKeys":["apply"]},{"name":"def headOption: Option[A]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["headOption"]},{"name":"def dictionary AsScalaMap[K, V](p: Dictionary[K, V]): Map[K, V]","description":"scala.collection.convert.ToScalaImplicits","location":"api/scala/collection/convert/ToScalaImplicits.html","searchKeys":["dictionary AsScalaMap"]},{"name":"def replace(k: K, oldvalue: V, newvalue: V): Boolean","description":"scala.collection.concurrent.TrieMap","location":"api/scala/collection/concurrent/TrieMap.html","searchKeys":["replace"]},{"name":"def lazyZip3ToIterable[El1, El2, El3](zipped3: LazyZip3[El1, El2, El3, ]): View[(El1, El2, El3)]","description":"scala.collection.LazyZip3$","location":"api/scala/collection/LazyZip3$.html","searchKeys":["lazyZip3ToIterable"]},{"name":"def nextString(length: Int): String","description":"scala.util.Random","location":"api/scala/util/Random.html","searchKeys":["nextString"]},{"name":"def <=(x: Short): Boolean","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["<="]},{"name":"def unapply[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11](x: Product11[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11]): Option[Product11[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11]]","description":"scala.Product11$","location":"api/scala/Product11$.html","searchKeys":["unapply"]},{"name":"def foreachKey[A](f: K => A): Unit","description":"scala.collection.mutable.AnyRefMap","location":"api/scala/collection/mutable/AnyRefMap.html","searchKeys":["foreachKey"]},{"name":"def <<(x: Int): Int","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["<<"]},{"name":"trait TypeParamClauseModule","description":"scala.quoted.Quotes$reflectModule$TypeParamClauseModule","location":"api/scala/quoted/Quotes$reflectModule$TypeParamClauseModule.html","searchKeys":["TypeParamClauseModule"]},{"name":"def *(x: Double): Double","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["*"]},{"name":"def unapply(x: MatchTypeTree): (Option[TypeTree], TypeTree, List[TypeCaseDef])","description":"scala.quoted.Quotes$reflectModule$MatchTypeTreeModule","location":"api/scala/quoted/Quotes$reflectModule$MatchTypeTreeModule.html","searchKeys":["unapply"]},{"name":"def bitSetFactory: SpecificIterableFactory[Int, BitSet]","description":"scala.collection.mutable.BitSet","location":"api/scala/collection/mutable/BitSet.html","searchKeys":["bitSetFactory"]},{"name":"val x$35: FromExpr[T13]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["x$35"]},{"name":"def tabulate[T](n1: Int, n2: Int, n3: Int)(f: (Int, Int, Int) => T)(evidence$19: ClassTag[T]): Array[Array[Array[T]]]","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["tabulate"]},{"name":"def Array_length: Symbol","description":"scala.quoted.Quotes$reflectModule$defnModule","location":"api/scala/quoted/Quotes$reflectModule$defnModule.html","searchKeys":["Array_length"]},{"name":"class SerializationProxy[A](var coll: LazyList[A]) extends Serializable","description":"scala.collection.immutable.LazyList$$SerializationProxy","location":"api/scala/collection/immutable/LazyList$$SerializationProxy.html","searchKeys":["SerializationProxy"]},{"name":"given SymbolMethods","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["SymbolMethods"]},{"name":"def apply(x1: Long): Unit","description":"scala.jdk.FunctionWrappers$$FromJavaLongConsumer","location":"api/scala/jdk/FunctionWrappers$$FromJavaLongConsumer.html","searchKeys":["apply"]},{"name":"def length: Int","description":"scala.collection.immutable.ArraySeq$$ofShort","location":"api/scala/collection/immutable/ArraySeq$$ofShort.html","searchKeys":["length"]},{"name":"def isArray(x: Any, atLevel: Int): Boolean","description":"scala.runtime.ScalaRunTime$","location":"api/scala/runtime/ScalaRunTime$.html","searchKeys":["isArray"]},{"name":"def isNegInfinity: Boolean","description":"scala.runtime.RichFloat","location":"api/scala/runtime/RichFloat.html","searchKeys":["isNegInfinity"]},{"name":"def traverseTree(tree: Tree)(owner: Symbol): Unit","description":"scala.quoted.Quotes$reflectModule$TreeTraverser","location":"api/scala/quoted/Quotes$reflectModule$TreeTraverser.html","searchKeys":["traverseTree"]},{"name":"val THIS: 90","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["THIS"]},{"name":"def collect[K2, V2](pf: PartialFunction[(K, V), (K2, V2)])(@implicitNotFound ordering: Ordering[K2]): CC[K2, V2]","description":"scala.collection.SortedMapOps","location":"api/scala/collection/SortedMapOps.html","searchKeys":["collect"]},{"name":"def /(x: Byte): Float","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["/"]},{"name":"class TreeSeqMap[K, +V] extends AbstractMap[K, V] with SeqMap[K, V] with MapOps[K, V, [K, V] =>> TreeSeqMap[K, V], TreeSeqMap[K, V]] with StrictOptimizedIterableOps[(K, V), [A] =>> Iterable[A], TreeSeqMap[K, V]] with StrictOptimizedMapOps[K, V, [K, V] =>> TreeSeqMap[K, V], TreeSeqMap[K, V]] with MapFactoryDefaults[K, V, [K, V] =>> TreeSeqMap[K, V], [A] =>> Iterable[A]]","description":"scala.collection.immutable.TreeSeqMap","location":"api/scala/collection/immutable/TreeSeqMap.html","searchKeys":["TreeSeqMap"]},{"name":"given Tuple5FromExpr[T1, T2, T3, T4, T5](using val x$1: Type[T1], val x$2: Type[T2], val x$3: Type[T3], val x$4: Type[T4], val x$5: Type[T5], val x$6: FromExpr[T1], val x$7: FromExpr[T2], val x$8: FromExpr[T3], val x$9: FromExpr[T4], val x$10: FromExpr[T5]): FromExpr[(T1, T2, T3, T4, T5)]","description":"scala.quoted.FromExpr$$Tuple5FromExpr","location":"api/scala/quoted/FromExpr$.html","searchKeys":["Tuple5FromExpr"]},{"name":"def isParamTag(tag: Int): Boolean","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["isParamTag"]},{"name":"def apply(signum: Int, magnitude: Array[Byte]): BigInt","description":"scala.math.BigInt$","location":"api/scala/math/BigInt$.html","searchKeys":["apply"]},{"name":"def incrementExact(x: Long): Long","description":"scala.math","location":"api/scala/math.html","searchKeys":["incrementExact"]},{"name":"val x$7: Type[T7]","description":"scala.quoted.FromExpr$$Tuple9FromExpr","location":"api/scala/quoted/FromExpr$$Tuple9FromExpr.html","searchKeys":["x$7"]},{"name":"def max(x: Long, y: Long): Long","description":"scala.math","location":"api/scala/math.html","searchKeys":["max"]},{"name":"def buildersToProcess[T](builders: Seq[T])(convert: T => Source): Seq[Source]","description":"scala.sys.process.ProcessImplicits","location":"api/scala/sys/process/ProcessImplicits.html","searchKeys":["buildersToProcess"]},{"name":"def exists: Boolean","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["exists"]},{"name":"def unapply(x: TypeBind): (String, Tree)","description":"scala.quoted.Quotes$reflectModule$TypeBindModule","location":"api/scala/quoted/Quotes$reflectModule$TypeBindModule.html","searchKeys":["unapply"]},{"name":"def appliedTo(arg: Term, args: Term*): Term","description":"scala.quoted.Quotes$reflectModule$TermMethods","location":"api/scala/quoted/Quotes$reflectModule$TermMethods.html","searchKeys":["appliedTo"]},{"name":"def toLong: Long","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["toLong"]},{"name":"val conversion: Repr => IterableOnce[A]","description":"scala.collection.generic.IsIterableOnce","location":"api/scala/collection/generic/IsIterableOnce.html","searchKeys":["conversion"]},{"name":"def longFromDigits(digits: String, radix: Int): Long","description":"scala.util.FromDigits$","location":"api/scala/util/FromDigits$.html","searchKeys":["longFromDigits"]},{"name":"def getOrElseUpdate(key: K, op: => V): V","description":"scala.collection.mutable.MapOps","location":"api/scala/collection/mutable/MapOps.html","searchKeys":["getOrElseUpdate"]},{"name":"def +(x: String): String","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["+"]},{"name":"def lowestSetBit: Int","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["lowestSetBit"]},{"name":"def scanRight[B](z: B)(op: (A, B) => B)(evidence$5: ClassTag[B]): Array[B]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["scanRight"]},{"name":"given AssignMethods","description":"scala.quoted.Quotes$reflectModule$AssignMethods","location":"api/scala/quoted/Quotes$reflectModule$AssignMethods.html","searchKeys":["AssignMethods"]},{"name":"def apply(ix: Long): Double","description":"scala.jdk.DoubleAccumulator","location":"api/scala/jdk/DoubleAccumulator.html","searchKeys":["apply"]},{"name":"def nextByte: Int","description":"dotty.tools.tasty.TastyReader","location":"api/dotty/tools/tasty/TastyReader.html","searchKeys":["nextByte"]},{"name":"def range[A, C](start: A, end: A, step: A)(evidence$2: Integral[A], canAccumulate: AccumulatorFactoryShape[A, C]): C","description":"scala.jdk.Accumulator$","location":"api/scala/jdk/Accumulator$.html","searchKeys":["range"]},{"name":"def compare(x: Short, y: Short): Int","description":"scala.math.Ordering$$ShortOrdering","location":"api/scala/math/Ordering$$ShortOrdering.html","searchKeys":["compare"]},{"name":"object StreamShape extends StreamShapeLowPriority1","description":"scala.collection.convert.StreamExtensions$$StreamShape$","location":"api/scala/collection/convert/StreamExtensions$$StreamShape$.html","searchKeys":["StreamShape"]},{"name":"def spliterator[B >: Int]: OfInt","description":"scala.collection.IntStepper","location":"api/scala/collection/IntStepper.html","searchKeys":["spliterator"]},{"name":"def thenp: Term","description":"scala.quoted.Quotes$reflectModule$IfMethods","location":"api/scala/quoted/Quotes$reflectModule$IfMethods.html","searchKeys":["thenp"]},{"name":"def patch[B >: A](from: Int, other: IterableOnce[B], replaced: Int): CC[B]","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["patch"]},{"name":"trait Seq[+A] extends Iterable[A] with Seq[A] with SeqOps[A, [A] =>> Seq[A], Seq[A]] with IterableFactoryDefaults[A, [A] =>> Seq[A]]","description":"scala.collection.immutable.Seq","location":"api/scala/collection/immutable/Seq.html","searchKeys":["Seq"]},{"name":"val TypeDef: TypeDefModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeDef"]},{"name":"def %(x: Short): Float","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["%"]},{"name":"trait StrictOptimizedSeqOps[+A, +CC <: ([_$1] =>> Any), +C] extends SeqOps[A, CC, C] with StrictOptimizedIterableOps[A, CC, C]","description":"scala.collection.StrictOptimizedSeqOps","location":"api/scala/collection/StrictOptimizedSeqOps.html","searchKeys":["StrictOptimizedSeqOps"]},{"name":"object Product21","description":"scala.Product21$","location":"api/scala/Product21$.html","searchKeys":["Product21"]},{"name":"def productToArray(self: Product): Array[Object]","description":"scala.runtime.Tuples$","location":"api/scala/runtime/Tuples$.html","searchKeys":["productToArray"]},{"name":"def apply$mcFI$sp(v1: Int): Float","description":"scala.runtime.java8.JFunction1$mcFI$sp","location":"api/scala/runtime/java8/JFunction1$mcFI$sp.html","searchKeys":["apply$mcFI$sp"]},{"name":"given RecursiveThisMethods","description":"scala.quoted.Quotes$reflectModule$RecursiveThisMethods","location":"api/scala/quoted/Quotes$reflectModule$RecursiveThisMethods.html","searchKeys":["RecursiveThisMethods"]},{"name":"val CLASSconst: 92","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["CLASSconst"]},{"name":"def /(x: Int): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["/"]},{"name":"def assume(assumption: Boolean, message: => Any): Unit","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["assume"]},{"name":"given Tuple12ToExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12]: ToExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)]","description":"scala.quoted.ToExpr$$Tuple12ToExpr","location":"api/scala/quoted/ToExpr$.html","searchKeys":["Tuple12ToExpr"]},{"name":"Announcing Dotty 0.12.0-RC1","description":"","location":"blog/2019/01/21/12th-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.12.0-RC1"]},{"name":"given ByteToExpr[T <: Byte]: ToExpr[T]","description":"scala.quoted.ToExpr$$ByteToExpr","location":"api/scala/quoted/ToExpr$.html","searchKeys":["ByteToExpr"]},{"name":"def unapply(x: TypeApply): (Term, List[TypeTree])","description":"scala.quoted.Quotes$reflectModule$TypeApplyModule","location":"api/scala/quoted/Quotes$reflectModule$TypeApplyModule.html","searchKeys":["unapply"]},{"name":"def unapply[T1, T2, T3](x: Product3[T1, T2, T3]): Option[Product3[T1, T2, T3]]","description":"scala.Product3$","location":"api/scala/Product3$.html","searchKeys":["unapply"]},{"name":"val x$5: FromExpr[T1]","description":"scala.quoted.FromExpr$$Tuple4FromExpr","location":"api/scala/quoted/FromExpr$$Tuple4FromExpr.html","searchKeys":["x$5"]},{"name":"object Tuple2Zipped","description":"scala.runtime.Tuple2Zipped$","location":"api/scala/runtime/Tuple2Zipped$.html","searchKeys":["Tuple2Zipped"]},{"name":"def size(self: Tuple): Int","description":"scala.runtime.Tuples$","location":"api/scala/runtime/Tuples$.html","searchKeys":["size"]},{"name":"object Releasable","description":"scala.util.Using$$Releasable$","location":"api/scala/util/Using$$Releasable$.html","searchKeys":["Releasable"]},{"name":"val x$15: FromExpr[T6]","description":"scala.quoted.FromExpr$$Tuple9FromExpr","location":"api/scala/quoted/FromExpr$$Tuple9FromExpr.html","searchKeys":["x$15"]},{"name":"given Tuple4ToExpr[T1, T2, T3, T4]: ToExpr[(T1, T2, T3, T4)]","description":"scala.quoted.ToExpr$$Tuple4ToExpr","location":"api/scala/quoted/ToExpr$$Tuple4ToExpr.html","searchKeys":["Tuple4ToExpr"]},{"name":"val x$6: Type[T6]","description":"scala.quoted.FromExpr$$Tuple15FromExpr","location":"api/scala/quoted/FromExpr$$Tuple15FromExpr.html","searchKeys":["x$6"]},{"name":"def addOne(key: K, value: V): Builder[K, V]","description":"scala.collection.immutable.TreeSeqMap$$Builder","location":"api/scala/collection/immutable/TreeSeqMap$$Builder.html","searchKeys":["addOne"]},{"name":"def >(that: String): Boolean","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":[">"]},{"name":"def iterator: Iterator[A]","description":"scala.collection.View$$Iterate","location":"api/scala/collection/View$$Iterate.html","searchKeys":["iterator"]},{"name":"def div(x: Float, y: Float): Float","description":"scala.math.Numeric$$FloatIsFractional","location":"api/scala/math/Numeric$$FloatIsFractional.html","searchKeys":["div"]},{"name":"def unifiedPrimitiveHashcode: Int","description":"scala.math.ScalaNumericAnyConversions","location":"api/scala/math/ScalaNumericAnyConversions.html","searchKeys":["unifiedPrimitiveHashcode"]},{"name":"def /(x: Char): Int","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["/"]},{"name":"object BigDecimal extends Equiv[BigDecimal]","description":"scala.math.Equiv$$BigDecimal$","location":"api/scala/math/Equiv$$BigDecimal$.html","searchKeys":["BigDecimal"]},{"name":"val pattern: Pattern","description":"scala.util.matching.Regex","location":"api/scala/util/matching/Regex.html","searchKeys":["pattern"]},{"name":"type Term <: Statement","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Term"]},{"name":"def encodingReplaceWith(newReplacement: Array[Byte]): Codec","description":"scala.io.Codec","location":"api/scala/io/Codec.html","searchKeys":["encodingReplaceWith"]},{"name":"def >>>(x: Long): Int","description":"scala.Short","location":"api/scala/Short.html","searchKeys":[">>>"]},{"name":"def union[B >: A](that: Seq[B]): CC[B]","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["union"]},{"name":"def reverse[T]: IArray[T]","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["reverse"]},{"name":"def test(x1: Double): Boolean","description":"scala.jdk.FunctionWrappers$$AsJavaDoublePredicate","location":"api/scala/jdk/FunctionWrappers$$AsJavaDoublePredicate.html","searchKeys":["test"]},{"name":"def assume(assumption: Boolean): Unit","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["assume"]},{"name":"var length: Int","description":"dotty.tools.tasty.TastyBuffer","location":"api/dotty/tools/tasty/TastyBuffer.html","searchKeys":["length"]},{"name":"def deserializeLambda(serialized: SerializedLambda): AnyRef","description":"scala.runtime.LambdaDeserialize","location":"api/scala/runtime/LambdaDeserialize.html","searchKeys":["deserializeLambda"]},{"name":"def ConstantStructure: Printer[Constant]","description":"scala.quoted.Quotes$reflectModule$PrinterModule","location":"api/scala/quoted/Quotes$reflectModule$PrinterModule.html","searchKeys":["ConstantStructure"]},{"name":"val BooleanConstant: BooleanConstantModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["BooleanConstant"]},{"name":"type IterableOnce[+A] = IterableOnce[A]","description":"scala","location":"api/scala.html","searchKeys":["IterableOnce"]},{"name":"def unapply(x: RecursiveType): Some[TypeRepr]","description":"scala.quoted.Quotes$reflectModule$RecursiveTypeModule","location":"api/scala/quoted/Quotes$reflectModule$RecursiveTypeModule.html","searchKeys":["unapply"]},{"name":"val FINEST: 300","description":"scala.annotation.elidable$","location":"api/scala/annotation/elidable$.html","searchKeys":["FINEST"]},{"name":"val postfixOps: postfixOps","description":"scala.language$","location":"api/scala/language$.html","searchKeys":["postfixOps"]},{"name":"val x$22: FromExpr[T3]","description":"scala.quoted.FromExpr$$Tuple19FromExpr","location":"api/scala/quoted/FromExpr$$Tuple19FromExpr.html","searchKeys":["x$22"]},{"name":"trait JFunction2$mcDDJ$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcDDJ$sp","location":"api/scala/runtime/java8/JFunction2$mcDDJ$sp.html","searchKeys":["JFunction2$mcDDJ$sp"]},{"name":"type &&[X <: Boolean, Y <: Boolean] <: Boolean","description":"scala.compiletime.ops.boolean$","location":"api/scala/compiletime/ops/boolean$.html","searchKeys":["&&"]},{"name":"class LazyDouble extends Serializable","description":"scala.runtime.LazyDouble","location":"api/scala/runtime/LazyDouble.html","searchKeys":["LazyDouble"]},{"name":"def collect[S](pf: PartialFunction[T, S])(executor: ExecutionContext): Future[S]","description":"scala.concurrent.Future","location":"api/scala/concurrent/Future.html","searchKeys":["collect"]},{"name":"val DefaultInitialSize: 16","description":"scala.collection.mutable.ArrayDeque$","location":"api/scala/collection/mutable/ArrayDeque$.html","searchKeys":["DefaultInitialSize"]},{"name":"def excl(value: Value): ValueSet","description":"scala.Enumeration$ValueSet","location":"api/scala/Enumeration$ValueSet.html","searchKeys":["excl"]},{"name":"class LongMap[+T] extends AbstractMap[Long, T] with StrictOptimizedMapOps[Long, T, [K, V] =>> Map[K, V], LongMap[T]] with Serializable","description":"scala.collection.immutable.LongMap","location":"api/scala/collection/immutable/LongMap.html","searchKeys":["LongMap"]},{"name":"val bigInteger: BigInteger","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["bigInteger"]},{"name":"def >(rhs: T): Boolean","description":"scala.math.Ordering$OrderingOps","location":"api/scala/math/Ordering$OrderingOps.html","searchKeys":[">"]},{"name":"def reduce(f: (A, A) => A): A","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["reduce"]},{"name":"def ignoring(exceptions: Class[]*): Catch[Unit]","description":"scala.util.control.Exception$","location":"api/scala/util/control/Exception$.html","searchKeys":["ignoring"]},{"name":"def excl(elem: A): Set[A]","description":"scala.collection.immutable.Set$$Set4","location":"api/scala/collection/immutable/Set$$Set4.html","searchKeys":["excl"]},{"name":"def init: Ordering[T]","description":"scala.collection.immutable.TreeSeqMap$$Ordering","location":"api/scala/collection/immutable/TreeSeqMap$$Ordering.html","searchKeys":["init"]},{"name":"given ByteToExpr[T <: Byte]: ToExpr[T]","description":"scala.quoted.ToExpr$$ByteToExpr","location":"api/scala/quoted/ToExpr$$ByteToExpr.html","searchKeys":["ByteToExpr"]},{"name":"def toChar: Char","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["toChar"]},{"name":"def apply(value: Boolean): ProcessBuilder","description":"scala.sys.process.ProcessCreation","location":"api/scala/sys/process/ProcessCreation.html","searchKeys":["apply"]},{"name":"def >=(x: Short): Boolean","description":"scala.Float","location":"api/scala/Float.html","searchKeys":[">="]},{"name":"class TupleXXL extends Product","description":"scala.runtime.TupleXXL","location":"api/scala/runtime/TupleXXL.html","searchKeys":["TupleXXL"]},{"name":"def prepended(c: Char): String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["prepended"]},{"name":"def overloaded(qualifier: Term, name: String, targs: List[TypeRepr], args: List[Term], returnType: TypeRepr): Apply","description":"scala.quoted.Quotes$reflectModule$SelectModule","location":"api/scala/quoted/Quotes$reflectModule$SelectModule.html","searchKeys":["overloaded"]},{"name":"val x$2: Type[U]","description":"scala.quoted.FromExpr$$MapFromExpr","location":"api/scala/quoted/FromExpr$$MapFromExpr.html","searchKeys":["x$2"]},{"name":"def num: Numeric[T]","description":"scala.runtime.ScalaNumberProxy","location":"api/scala/runtime/ScalaNumberProxy.html","searchKeys":["num"]},{"name":"def -(x: Byte): Float","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["-"]},{"name":"val x$1: Type[T]","description":"scala.quoted.FromExpr$$SeqFromExpr","location":"api/scala/quoted/FromExpr$$SeqFromExpr.html","searchKeys":["x$1"]},{"name":"def newBuilder: Builder[Int, BitSet]","description":"scala.collection.mutable.BitSet$","location":"api/scala/collection/mutable/BitSet$.html","searchKeys":["newBuilder"]},{"name":"type BooleanConstant <: Constant","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["BooleanConstant"]},{"name":"def combinations(n: Int): Iterator[String]","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["combinations"]},{"name":"val self: Boolean","description":"scala.runtime.RichBoolean","location":"api/scala/runtime/RichBoolean.html","searchKeys":["self"]},{"name":"Implementing Type classes","description":"","location":"docs/reference/contextual/type-classes.html","searchKeys":["Implementing Type classes"]},{"name":"trait SortedSet[A] extends Set[A] with SortedSet[A] with SortedSetOps[A, [A] =>> SortedSet[A], SortedSet[A]] with SortedSetFactoryDefaults[A, [A] =>> SortedSet[A], [A] =>> Set[A]]","description":"scala.collection.immutable.SortedSet","location":"api/scala/collection/immutable/SortedSet.html","searchKeys":["SortedSet"]},{"name":"def setBit(n: Int): BigInt","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["setBit"]},{"name":"def asScalaSet[A](s: Set[A]): Set[A]","description":"scala.collection.JavaConverters$","location":"api/scala/collection/JavaConverters$.html","searchKeys":["asScalaSet"]},{"name":"class RichFunction1AsIntPredicate(underlying: Int => Boolean) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichFunction1AsIntPredicate","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsIntPredicate.html","searchKeys":["RichFunction1AsIntPredicate"]},{"name":"Automatic Eta Expansion","description":"","location":"docs/reference/changed-features/eta-expansion.html","searchKeys":["Automatic Eta Expansion"]},{"name":"def asJavaUnaryOperator[T](sf: T => T): UnaryOperator[T]","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asJavaUnaryOperator"]},{"name":"def arrayHash[@specialized T](a: Array[T]): Int","description":"scala.util.hashing.MurmurHash3$","location":"api/scala/util/hashing/MurmurHash3$.html","searchKeys":["arrayHash"]},{"name":"val Double: DoubleManifest","description":"scala.reflect.ClassManifestFactory$","location":"api/scala/reflect/ClassManifestFactory$.html","searchKeys":["Double"]},{"name":"def anchored: Regex","description":"scala.util.matching.Regex","location":"api/scala/util/matching/Regex.html","searchKeys":["anchored"]},{"name":"def scan[B >: A](z: B)(op: (B, B) => B)(evidence$4: ClassTag[B]): Array[B]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["scan"]},{"name":"def min(other: FiniteDuration): FiniteDuration","description":"scala.concurrent.duration.FiniteDuration","location":"api/scala/concurrent/duration/FiniteDuration.html","searchKeys":["min"]},{"name":"def floor: Double","description":"scala.runtime.RichDouble","location":"api/scala/runtime/RichDouble.html","searchKeys":["floor"]},{"name":"def force: Match","description":"scala.util.matching.Regex$$Match","location":"api/scala/util/matching/Regex$$Match.html","searchKeys":["force"]},{"name":"given TypeLambdaMethods","description":"scala.quoted.Quotes$reflectModule$TypeLambdaMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeLambdaMethods.html","searchKeys":["TypeLambdaMethods"]},{"name":"def copyToArray[B >: A](xs: Array[B], start: Int): Int","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["copyToArray"]},{"name":"def negate(x: T): T","description":"scala.math.Numeric","location":"api/scala/math/Numeric.html","searchKeys":["negate"]},{"name":"type ToString[X <: Int] <: String","description":"scala.compiletime.ops.int$","location":"api/scala/compiletime/ops/int$.html","searchKeys":["ToString"]},{"name":"def classOf[T]: Class[T]","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["classOf"]},{"name":"def show(x: T): String","description":"scala.quoted.Quotes$reflectModule$Printer","location":"api/scala/quoted/Quotes$reflectModule$Printer.html","searchKeys":["show"]},{"name":"val x$3: Type[T3]","description":"scala.quoted.FromExpr$$Tuple5FromExpr","location":"api/scala/quoted/FromExpr$$Tuple5FromExpr.html","searchKeys":["x$3"]},{"name":"def unapplySeq[T](x: Array[T]): UnapplySeqWrapper[T]","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["unapplySeq"]},{"name":"def underlying: TypeRepr","description":"scala.quoted.Quotes$reflectModule$AnnotatedTypeMethods","location":"api/scala/quoted/Quotes$reflectModule$AnnotatedTypeMethods.html","searchKeys":["underlying"]},{"name":"def apply(idx: Int): A","description":"scala.collection.SeqView$$Take","location":"api/scala/collection/SeqView$$Take.html","searchKeys":["apply"]},{"name":"val x$33: FromExpr[T14]","description":"scala.quoted.FromExpr$$Tuple19FromExpr","location":"api/scala/quoted/FromExpr$$Tuple19FromExpr.html","searchKeys":["x$33"]},{"name":"def buffer[T](f: => T): T","description":"scala.sys.process.FileProcessLogger","location":"api/scala/sys/process/FileProcessLogger.html","searchKeys":["buffer"]},{"name":"def until(end: T, step: T): IndexedSeq[T]","description":"scala.runtime.RangedProxy","location":"api/scala/runtime/RangedProxy.html","searchKeys":["until"]},{"name":"package scala.reflect.macros","description":"scala.reflect.macros","location":"api/scala/reflect/macros.html","searchKeys":["scala.reflect.macros"]},{"name":"def mapResult[NewTo](f: ArrayBuffer[A] => NewTo): Builder[A, NewTo]","description":"scala.collection.mutable.ArrayBuffer","location":"api/scala/collection/mutable/ArrayBuffer.html","searchKeys":["mapResult"]},{"name":"package scala.sys.process","description":"scala.sys.process","location":"api/scala/sys/process.html","searchKeys":["scala.sys.process"]},{"name":"object ClassTagSeqFactory","description":"scala.collection.ClassTagSeqFactory$","location":"api/scala/collection/ClassTagSeqFactory$.html","searchKeys":["ClassTagSeqFactory"]},{"name":"trait Priority1FunctionExtensions extends Priority2FunctionExtensions","description":"scala.jdk.Priority1FunctionExtensions","location":"api/scala/jdk/Priority1FunctionExtensions.html","searchKeys":["Priority1FunctionExtensions"]},{"name":"class AbstractSet[A] extends AbstractSet[A] with Set[A]","description":"scala.collection.immutable.AbstractSet","location":"api/scala/collection/immutable/AbstractSet.html","searchKeys":["AbstractSet"]},{"name":"trait SortedMapOps[K, +V, +CC <: ([X, Y] =>> Map[X, Y] & SortedMapOps[X, Y, CC, ]), +C <: SortedMapOps[K, V, CC, C]] extends MapOps[K, V, [K, V] =>> Map[K, V], C] with SortedMapOps[K, V, CC, C]","description":"scala.collection.immutable.SortedMapOps","location":"api/scala/collection/immutable/SortedMapOps.html","searchKeys":["SortedMapOps"]},{"name":"trait JFunction2$mcFII$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcFII$sp","location":"api/scala/runtime/java8/JFunction2$mcFII$sp.html","searchKeys":["JFunction2$mcFII$sp"]},{"name":"class Builder[K, V](orderedBy: OrderBy) extends Builder[(K, V), TreeSeqMap[K, V]]","description":"scala.collection.immutable.TreeSeqMap$$Builder","location":"api/scala/collection/immutable/TreeSeqMap$$Builder.html","searchKeys":["Builder"]},{"name":"def toLeft[X](right: => X): Either[A, X]","description":"scala.Option","location":"api/scala/Option.html","searchKeys":["toLeft"]},{"name":"def asScala: Option[Long]","description":"scala.jdk.OptionConverters$$RichOptionalLong","location":"api/scala/jdk/OptionConverters$$RichOptionalLong.html","searchKeys":["asScala"]},{"name":"def fill[T](n1: Int, n2: Int, n3: Int, n4: Int, n5: Int)(elem: => T)(evidence$16: ClassTag[T]): Array[Array[Array[Array[Array[T]]]]]","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["fill"]},{"name":"def enqueue[B >: A](elem: B): Queue[B]","description":"scala.collection.immutable.Queue","location":"api/scala/collection/immutable/Queue.html","searchKeys":["enqueue"]},{"name":"class Array[T](_length: Int) extends Serializable with Cloneable","description":"scala.Array","location":"api/scala/Array.html","searchKeys":["Array"]},{"name":"val ORtype: 167","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["ORtype"]},{"name":"def _8: T8","description":"scala.Product11","location":"api/scala/Product11.html","searchKeys":["_8"]},{"name":"def doubleValue: Double","description":"scala.runtime.ScalaNumberProxy","location":"api/scala/runtime/ScalaNumberProxy.html","searchKeys":["doubleValue"]},{"name":"def get(key: K): Option[V]","description":"scala.collection.MapView$$Id","location":"api/scala/collection/MapView$$Id.html","searchKeys":["get"]},{"name":"class RichDoubleSupplierAsFunction0(underlying: DoubleSupplier) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichDoubleSupplierAsFunction0","location":"api/scala/jdk/FunctionWrappers$$RichDoubleSupplierAsFunction0.html","searchKeys":["RichDoubleSupplierAsFunction0"]},{"name":"def toJavaDoubleAccumulator(ia: DoubleAccumulator): SpecificIterableFactory[Double, DoubleAccumulator]","description":"scala.jdk.DoubleAccumulator$","location":"api/scala/jdk/DoubleAccumulator$.html","searchKeys":["toJavaDoubleAccumulator"]},{"name":"def tpt: TypeTree","description":"scala.quoted.Quotes$reflectModule$TypeBlockMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeBlockMethods.html","searchKeys":["tpt"]},{"name":"def toFloat: Float","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["toFloat"]},{"name":"class RichFunction1AsDoublePredicate(underlying: Double => Boolean) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichFunction1AsDoublePredicate","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsDoublePredicate.html","searchKeys":["RichFunction1AsDoublePredicate"]},{"name":"val doubleAccumulatorFactoryInfo: AccumulatorFactoryInfo[Double, DoubleAccumulator]","description":"scala.collection.convert.StreamExtensions$$AccumulatorFactoryInfo$","location":"api/scala/collection/convert/StreamExtensions$$AccumulatorFactoryInfo$.html","searchKeys":["doubleAccumulatorFactoryInfo"]},{"name":"def _11: T11","description":"scala.Product22","location":"api/scala/Product22.html","searchKeys":["_11"]},{"name":"def stringHashing: Hashing[String]","description":"scala.util.hashing.MurmurHash3$","location":"api/scala/util/hashing/MurmurHash3$.html","searchKeys":["stringHashing"]},{"name":"given MatchMethods","description":"scala.quoted.Quotes$reflectModule$MatchMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["MatchMethods"]},{"name":"def length: Int","description":"scala.collection.mutable.ArraySeq$$ofShort","location":"api/scala/collection/mutable/ArraySeq$$ofShort.html","searchKeys":["length"]},{"name":"def unapply(x: Expr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)])(using Quotes): Option[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)]","description":"scala.quoted.FromExpr$$Tuple15FromExpr","location":"api/scala/quoted/FromExpr$$Tuple15FromExpr.html","searchKeys":["unapply"]},{"name":"def -(key: K): C","description":"scala.collection.immutable.MapOps","location":"api/scala/collection/immutable/MapOps.html","searchKeys":["-"]},{"name":"def apply(x: Long): LongConstant","description":"scala.quoted.Quotes$reflectModule$LongConstantModule","location":"api/scala/quoted/Quotes$reflectModule$LongConstantModule.html","searchKeys":["apply"]},{"name":"def isReadOnly: Boolean","description":"scala.collection.concurrent.TrieMap","location":"api/scala/collection/concurrent/TrieMap.html","searchKeys":["isReadOnly"]},{"name":"type Size[X <: Tuple] = X match {\n  case EmptyTuple => 0\n  case x *: xs => S[Size[xs]]\n}","description":"scala.Tuple$","location":"api/scala/Tuple$.html","searchKeys":["Size"]},{"name":"def head: Char","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["head"]},{"name":"given ArrayOfLongToExpr: ToExpr[Array[Long]]","description":"scala.quoted.ToExpr$$ArrayOfLongToExpr$","location":"api/scala/quoted/ToExpr$$ArrayOfLongToExpr$.html","searchKeys":["ArrayOfLongToExpr"]},{"name":"def isLeft: Boolean","description":"scala.util.Right","location":"api/scala/util/Right.html","searchKeys":["isLeft"]},{"name":"trait ArrayDequeOps[A, +CC <: ([_$1] =>> Any), +C <: AnyRef] extends StrictOptimizedSeqOps[A, CC, C]","description":"scala.collection.mutable.ArrayDequeOps","location":"api/scala/collection/mutable/ArrayDequeOps.html","searchKeys":["ArrayDequeOps"]},{"name":"def sizeCompare(otherSize: Int): Int","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["sizeCompare"]},{"name":"def update(idx: Long, elem: Double): Unit","description":"scala.jdk.DoubleAccumulator","location":"api/scala/jdk/DoubleAccumulator.html","searchKeys":["update"]},{"name":"def round: Int","description":"scala.runtime.RichInt","location":"api/scala/runtime/RichInt.html","searchKeys":["round"]},{"name":"trait BlockModule","description":"scala.quoted.Quotes$reflectModule$BlockModule","location":"api/scala/quoted/Quotes$reflectModule$BlockModule.html","searchKeys":["BlockModule"]},{"name":"def withDefault(d: K => V): Map[K, V]","description":"scala.collection.mutable.Map","location":"api/scala/collection/mutable/Map.html","searchKeys":["withDefault"]},{"name":"val ByName: ByNameModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ByName"]},{"name":"def -(x: Double): Double","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["-"]},{"name":"def :++[B >: A](suffix: IterableOnce[B])(evidence$18: ClassTag[B]): Array[B]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":[":++"]},{"name":"def keysIteratorFrom(start: K): Iterator[K]","description":"scala.collection.immutable.TreeMap","location":"api/scala/collection/immutable/TreeMap.html","searchKeys":["keysIteratorFrom"]},{"name":"given SomeToExpr[T]: ToExpr[Some[T]]","description":"scala.quoted.ToExpr$$SomeToExpr","location":"api/scala/quoted/ToExpr$$SomeToExpr.html","searchKeys":["SomeToExpr"]},{"name":"val defn: defnModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["defn"]},{"name":"class TakeRight[+A](underlying: SomeSeqOps[A], n: Int) extends TakeRight[A] with SeqView[A]","description":"scala.collection.SeqView$$TakeRight","location":"api/scala/collection/SeqView$$TakeRight.html","searchKeys":["TakeRight"]},{"name":"def min(x: Double, y: Double): Double","description":"scala.math","location":"api/scala/math.html","searchKeys":["min"]},{"name":"val stringFactory: Factory[Char, String]","description":"scala.collection.Factory$","location":"api/scala/collection/Factory$.html","searchKeys":["stringFactory"]},{"name":"given RefTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["RefTypeTest"]},{"name":"def +(x: Double): Double","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["+"]},{"name":"def result(): C","description":"scala.collection.mutable.SetOps","location":"api/scala/collection/mutable/SetOps.html","searchKeys":["result"]},{"name":"def incl(elem: A): Set[A]","description":"scala.collection.immutable.Set$$Set4","location":"api/scala/collection/immutable/Set$$Set4.html","searchKeys":["incl"]},{"name":"def updated[V1 >: V](key: K, value: V1): CC[K, V1]","description":"scala.collection.immutable.MapOps","location":"api/scala/collection/immutable/MapOps.html","searchKeys":["updated"]},{"name":"def apply$mcJII$sp(v1: Int, v2: Int): Long","description":"scala.runtime.java8.JFunction2$mcJII$sp","location":"api/scala/runtime/java8/JFunction2$mcJII$sp.html","searchKeys":["apply$mcJII$sp"]},{"name":"def exists(p: A => Boolean): Boolean","description":"scala.util.Either$$LeftProjection","location":"api/scala/util/Either$$LeftProjection.html","searchKeys":["exists"]},{"name":"val x$16: Type[T16]","description":"scala.quoted.FromExpr$$Tuple17FromExpr","location":"api/scala/quoted/FromExpr$$Tuple17FromExpr.html","searchKeys":["x$16"]},{"name":"def asJavaLongSupplier(sf: () => Long): LongSupplier","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asJavaLongSupplier"]},{"name":"trait MapView[K, +V] extends MapOps[K, V, <none>, View[(K, V)]] with View[(K, V)]","description":"scala.collection.MapView","location":"api/scala/collection/MapView.html","searchKeys":["MapView"]},{"name":"def characteristics(): Int","description":"scala.collection.IntStepper$$IntStepperSpliterator","location":"api/scala/collection/IntStepper$$IntStepperSpliterator.html","searchKeys":["characteristics"]},{"name":"def CAS(t: Object, offset: Long, e: Long, v: Int, ord: Int): Boolean","description":"scala.runtime.LazyVals$","location":"api/scala/runtime/LazyVals$.html","searchKeys":["CAS"]},{"name":"def matches[T](that: Expr[Any]): Boolean","description":"scala.quoted.Quotes","location":"api/scala/quoted/Quotes.html","searchKeys":["matches"]},{"name":"def apply(start: Int, end: Int, step: Int): Exclusive[Int]","description":"scala.collection.immutable.Range$$Int$","location":"api/scala/collection/immutable/Range$$Int$.html","searchKeys":["apply"]},{"name":"trait JFunction2$mcVJD$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcVJD$sp","location":"api/scala/runtime/java8/JFunction2$mcVJD$sp.html","searchKeys":["JFunction2$mcVJD$sp"]},{"name":"def continually[A](elem: => A): Iterator[A]","description":"scala.collection.Iterator$","location":"api/scala/collection/Iterator$.html","searchKeys":["continually"]},{"name":"def apply[T](evidence$2: Equiv[T]): Equiv[T]","description":"scala.math.Equiv$","location":"api/scala/math/Equiv$.html","searchKeys":["apply"]},{"name":"def times(x: Double, y: Double): Double","description":"scala.math.Numeric$$DoubleIsFractional","location":"api/scala/math/Numeric$$DoubleIsFractional.html","searchKeys":["times"]},{"name":"def compare(x: Double, y: Double): Int","description":"scala.math.Ordering$$Double$$IeeeOrdering","location":"api/scala/math/Ordering$$Double$$IeeeOrdering.html","searchKeys":["compare"]},{"name":"def bitCount: Int","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["bitCount"]},{"name":"val ord: Ordering[A]","description":"scala.collection.mutable.PriorityQueue","location":"api/scala/collection/mutable/PriorityQueue.html","searchKeys":["ord"]},{"name":"val Ordering: Ordering","description":"scala","location":"api/scala.html","searchKeys":["Ordering"]},{"name":"def pow(exp: Int): BigInt","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["pow"]},{"name":"def head: A","description":"scala.collection.BufferedIterator","location":"api/scala/collection/BufferedIterator.html","searchKeys":["head"]},{"name":"class AbstractMap[K, +V] extends AbstractIterable[(K, V)] with Map[K, V]","description":"scala.collection.AbstractMap","location":"api/scala/collection/AbstractMap.html","searchKeys":["AbstractMap"]},{"name":"def short2int(x: Short): Int","description":"scala.Short$","location":"api/scala/Short$.html","searchKeys":["short2int"]},{"name":"class Collect[+A, B](underlying: SomeIterableOps[A], pf: PartialFunction[A, B]) extends AbstractView[B]","description":"scala.collection.View$$Collect","location":"api/scala/collection/View$$Collect.html","searchKeys":["Collect"]},{"name":"object CanEqual","description":"scala.CanEqual$","location":"api/scala/CanEqual$.html","searchKeys":["CanEqual"]},{"name":"def &(x: Long): Long","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["&"]},{"name":"def apply(x: BigInteger): BigInt","description":"scala.math.BigInt$","location":"api/scala/math/BigInt$.html","searchKeys":["apply"]},{"name":"val x$20: FromExpr[T2]","description":"scala.quoted.FromExpr$$Tuple18FromExpr","location":"api/scala/quoted/FromExpr$$Tuple18FromExpr.html","searchKeys":["x$20"]},{"name":"object Tuple","description":"scala.Tuple$","location":"api/scala/Tuple$.html","searchKeys":["Tuple"]},{"name":"def maxBefore(key: K): Option[(K, V)]","description":"scala.collection.SortedMapOps","location":"api/scala/collection/SortedMapOps.html","searchKeys":["maxBefore"]},{"name":"def uncurried[T1, T2, T3, T4, R](f: T1 => T2 => T3 => T4 => R): (T1, T2, T3, T4) => R","description":"scala.Function$","location":"api/scala/Function$.html","searchKeys":["uncurried"]},{"name":"def FieldAccessor: Flags","description":"scala.quoted.Quotes$reflectModule$FlagsModule","location":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html","searchKeys":["FieldAccessor"]},{"name":"def intersectionWith[S, R](that: LongMap[S], f: (Long, T, S) => R): LongMap[R]","description":"scala.collection.immutable.LongMap","location":"api/scala/collection/immutable/LongMap.html","searchKeys":["intersectionWith"]},{"name":"def length: Int","description":"scala.collection.mutable.PriorityQueue","location":"api/scala/collection/mutable/PriorityQueue.html","searchKeys":["length"]},{"name":"val jDoubleOptionShape: OptionShape[Double, OptionalDouble]","description":"scala.jdk.OptionShape$","location":"api/scala/jdk/OptionShape$.html","searchKeys":["jDoubleOptionShape"]},{"name":"trait JFunction2$mcVDD$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcVDD$sp","location":"api/scala/runtime/java8/JFunction2$mcVDD$sp.html","searchKeys":["JFunction2$mcVDD$sp"]},{"name":"def withDesc(s: String): Described","description":"scala.util.control.Exception$$Described","location":"api/scala/util/control/Exception$$Described.html","searchKeys":["withDesc"]},{"name":"given Tuple13FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13](using val x$1: Type[T1], val x$2: Type[T2], val x$3: Type[T3], val x$4: Type[T4], val x$5: Type[T5], val x$6: Type[T6], val x$7: Type[T7], val x$8: Type[T8], val x$9: Type[T9], val x$10: Type[T10], val x$11: Type[T11], val x$12: Type[T12], val x$13: Type[T13], val x$14: FromExpr[T1], val x$15: FromExpr[T2], val x$16: FromExpr[T3], val x$17: FromExpr[T4], val x$18: FromExpr[T5], val x$19: FromExpr[T6], val x$20: FromExpr[T7], val x$21: FromExpr[T8], val x$22: FromExpr[T9], val x$23: FromExpr[T10], val x$24: FromExpr[T11], val x$25: FromExpr[T12], val x$26: FromExpr[T13]): FromExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)]","description":"scala.quoted.FromExpr$$Tuple13FromExpr","location":"api/scala/quoted/FromExpr$.html","searchKeys":["Tuple13FromExpr"]},{"name":"def arrayclear(arr: Array[Int]): Unit","description":"scala.compat.Platform$","location":"api/scala/compat/Platform$.html","searchKeys":["arrayclear"]},{"name":"def iterator: Iterator[A]","description":"scala.collection.View$$Drop","location":"api/scala/collection/View$$Drop.html","searchKeys":["iterator"]},{"name":"def Value(name: String): Value","description":"scala.Enumeration","location":"api/scala/Enumeration.html","searchKeys":["Value"]},{"name":"given Tuple11ToExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11]: ToExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)]","description":"scala.quoted.ToExpr$$Tuple11ToExpr","location":"api/scala/quoted/ToExpr$$Tuple11ToExpr.html","searchKeys":["Tuple11ToExpr"]},{"name":"def paramSigs: List[String | Int]","description":"scala.quoted.Quotes$reflectModule$SignatureMethods","location":"api/scala/quoted/Quotes$reflectModule$SignatureMethods.html","searchKeys":["paramSigs"]},{"name":"def range(start: Int, end: Int, step: Int): IArray[Int]","description":"scala.IArray$package$$IArray$","location":"api/scala/IArray$package$$IArray$.html","searchKeys":["range"]},{"name":"trait PositionModule","description":"scala.quoted.Quotes$reflectModule$PositionModule","location":"api/scala/quoted/Quotes$reflectModule$PositionModule.html","searchKeys":["PositionModule"]},{"name":"def toggle(): Unit","description":"scala.sys.BooleanProp","location":"api/scala/sys/BooleanProp.html","searchKeys":["toggle"]},{"name":"def iterator: Iterator[(A, Int)]","description":"scala.collection.View$$ZipWithIndex","location":"api/scala/collection/View$$ZipWithIndex.html","searchKeys":["iterator"]},{"name":"def elemTag: ClassTag[]","description":"scala.collection.mutable.ArraySeq$$ofInt","location":"api/scala/collection/mutable/ArraySeq$$ofInt.html","searchKeys":["elemTag"]},{"name":"val x$4: FromExpr[T1]","description":"scala.quoted.FromExpr$$Tuple3FromExpr","location":"api/scala/quoted/FromExpr$$Tuple3FromExpr.html","searchKeys":["x$4"]},{"name":"val value: AnyRef","description":"scala.deriving.Mirror$$SingletonProxy","location":"api/scala/deriving/Mirror$$SingletonProxy.html","searchKeys":["value"]},{"name":"def asScala: T => Double","description":"scala.jdk.FunctionWrappers$$RichToDoubleFunctionAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichToDoubleFunctionAsFunction1.html","searchKeys":["asScala"]},{"name":"def filter[C](p: (El1, El2, El3) => Boolean)(bf: BuildFrom[C1, (El1, El2, El3), C]): C","description":"scala.collection.LazyZip3","location":"api/scala/collection/LazyZip3.html","searchKeys":["filter"]},{"name":"def remove(k: K, v: V): Boolean","description":"scala.collection.concurrent.TrieMap","location":"api/scala/collection/concurrent/TrieMap.html","searchKeys":["remove"]},{"name":"def >(x: Short): Boolean","description":"scala.Short","location":"api/scala/Short.html","searchKeys":[">"]},{"name":"val TypeMatch: TypeMatchModule","description":"scala.quoted.runtime.QuoteMatching","location":"api/scala/quoted/runtime/QuoteMatching.html","searchKeys":["TypeMatch"]},{"name":"def collectWhile[T](cond: => Boolean)(op: => T): List[T]","description":"dotty.tools.tasty.TastyReader","location":"api/dotty/tools/tasty/TastyReader.html","searchKeys":["collectWhile"]},{"name":"def empty[K, V]: HashMap[K, V]","description":"scala.collection.mutable.HashMap$","location":"api/scala/collection/mutable/HashMap$.html","searchKeys":["empty"]},{"name":"given AnnotatedTypeMethods","description":"scala.quoted.Quotes$reflectModule$AnnotatedTypeMethods","location":"api/scala/quoted/Quotes$reflectModule$AnnotatedTypeMethods.html","searchKeys":["AnnotatedTypeMethods"]},{"name":"package scala.sys","description":"scala.sys","location":"api/scala/sys.html","searchKeys":["scala.sys"]},{"name":"def withBlockContext[T](blockContext: BlockContext)(body: => T): T","description":"scala.concurrent.BlockContext$","location":"api/scala/concurrent/BlockContext$.html","searchKeys":["withBlockContext"]},{"name":"def asJavaSeqStream: IntStream","description":"scala.collection.convert.StreamExtensions$IntArrayHasSeqParStream","location":"api/scala/collection/convert/StreamExtensions$IntArrayHasSeqParStream.html","searchKeys":["asJavaSeqStream"]},{"name":"def _3: T3","description":"scala.Product5","location":"api/scala/Product5.html","searchKeys":["_3"]},{"name":"def test(x1: T, x2: U): Boolean","description":"scala.jdk.FunctionWrappers$$AsJavaBiPredicate","location":"api/scala/jdk/FunctionWrappers$$AsJavaBiPredicate.html","searchKeys":["test"]},{"name":"def _5: T5","description":"scala.Product16","location":"api/scala/Product16.html","searchKeys":["_5"]},{"name":"given TypeApplyTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeApplyTypeTest"]},{"name":"def result(): Array[Char]","description":"scala.collection.mutable.ArrayBuilder$$ofChar","location":"api/scala/collection/mutable/ArrayBuilder$$ofChar.html","searchKeys":["result"]},{"name":"val x$11: Type[T11]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["x$11"]},{"name":"def &(x: Char): Int","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["&"]},{"name":"def lt(other: Duration): Boolean","description":"scala.concurrent.duration.Duration","location":"api/scala/concurrent/duration/Duration.html","searchKeys":["lt"]},{"name":"def andThen[A](g: R => A): T1 => A","description":"scala.Function1","location":"api/scala/Function1.html","searchKeys":["andThen"]},{"name":"def newBuilder[V]: ReusableBuilder[(Long, V), LongMap[V]]","description":"scala.collection.mutable.LongMap$","location":"api/scala/collection/mutable/LongMap$.html","searchKeys":["newBuilder"]},{"name":"def plus(x: Short, y: Short): Short","description":"scala.math.Numeric$$ShortIsIntegral","location":"api/scala/math/Numeric$$ShortIsIntegral.html","searchKeys":["plus"]},{"name":"def byte2long(x: Byte): Long","description":"scala.Byte$","location":"api/scala/Byte$.html","searchKeys":["byte2long"]},{"name":"def asJavaSeqKeyLongStream[V](m: Map[Long, V]): LongStream","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaSeqKeyLongStream"]},{"name":"def unorderedHash(xs: IterableOnce[Any]): Int","description":"scala.util.hashing.MurmurHash3$","location":"api/scala/util/hashing/MurmurHash3$.html","searchKeys":["unorderedHash"]},{"name":"def from[K, V](it: IterableOnce[(K, V)]): OpenHashMap[K, V]","description":"scala.collection.mutable.OpenHashMap$","location":"api/scala/collection/mutable/OpenHashMap$.html","searchKeys":["from"]},{"name":"def flatten[T](evidence$3: ClassTag[U], T => Iterable[U]): IArray[U]","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["flatten"]},{"name":"def fromIArray(elems: IArray[Object]): TupleXXL","description":"scala.runtime.TupleXXL$","location":"api/scala/runtime/TupleXXL$.html","searchKeys":["fromIArray"]},{"name":"val waterline: Int","description":"scala.collection.mutable.UnrolledBuffer$","location":"api/scala/collection/mutable/UnrolledBuffer$.html","searchKeys":["waterline"]},{"name":"val MODULE_VAR_SUFFIX_STRING: \"$module\"","description":"scala.reflect.NameTransformer$","location":"api/scala/reflect/NameTransformer$.html","searchKeys":["MODULE_VAR_SUFFIX_STRING"]},{"name":"val jIntegerAccumulatorFactoryInfo: AccumulatorFactoryInfo[Integer, IntAccumulator]","description":"scala.collection.convert.StreamExtensions$$AccumulatorFactoryInfo$","location":"api/scala/collection/convert/StreamExtensions$$AccumulatorFactoryInfo$.html","searchKeys":["jIntegerAccumulatorFactoryInfo"]},{"name":"val x$42: FromExpr[T21]","description":"scala.quoted.FromExpr$$Tuple21FromExpr","location":"api/scala/quoted/FromExpr$$Tuple21FromExpr.html","searchKeys":["x$42"]},{"name":"def asScalaIterator[A](i: Iterator[A]): Iterator[A]","description":"scala.collection.JavaConverters$","location":"api/scala/collection/JavaConverters$.html","searchKeys":["asScalaIterator"]},{"name":"def _14: T14","description":"scala.Product20","location":"api/scala/Product20.html","searchKeys":["_14"]},{"name":"def <=(x: Int): Boolean","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["<="]},{"name":"def from[K, V](it: IterableOnce[(K, V)])(ordering: Ordering[K]): TreeMap[K, V]","description":"scala.collection.immutable.TreeMap$","location":"api/scala/collection/immutable/TreeMap$.html","searchKeys":["from"]},{"name":"class RichIntToLongFunctionAsFunction1(underlying: IntToLongFunction) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichIntToLongFunctionAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichIntToLongFunctionAsFunction1.html","searchKeys":["RichIntToLongFunctionAsFunction1"]},{"name":"def apply(inline x: Byte, inline xs: Byte*): IArray[Byte]","description":"scala.IArray$package$$IArray$","location":"api/scala/IArray$package$$IArray$.html","searchKeys":["apply"]},{"name":"object Queue extends StrictOptimizedSeqFactory[[A] =>> Queue[A]]","description":"scala.collection.immutable.Queue$","location":"api/scala/collection/immutable/Queue$.html","searchKeys":["Queue"]},{"name":"object ShutdownHookThread","description":"scala.sys.ShutdownHookThread$","location":"api/scala/sys/ShutdownHookThread$.html","searchKeys":["ShutdownHookThread"]},{"name":"def removed(key: K): Map[K, V]","description":"scala.collection.immutable.Map$$Map4","location":"api/scala/collection/immutable/Map$$Map4.html","searchKeys":["removed"]},{"name":"def toLong(x: T): Long","description":"scala.math.Numeric","location":"api/scala/math/Numeric.html","searchKeys":["toLong"]},{"name":"def endColumn: Int","description":"scala.quoted.Quotes$reflectModule$PositionMethods","location":"api/scala/quoted/Quotes$reflectModule$PositionMethods.html","searchKeys":["endColumn"]},{"name":"class Id[+A](underlying: SomeSeqOps[A]) extends AbstractSeqView[A]","description":"scala.collection.SeqView$$Id","location":"api/scala/collection/SeqView$$Id.html","searchKeys":["Id"]},{"name":"def initialize(): Unit","description":"scala.runtime.LazyUnit","location":"api/scala/runtime/LazyUnit.html","searchKeys":["initialize"]},{"name":"def _9: T9","description":"scala.Product22","location":"api/scala/Product22.html","searchKeys":["_9"]},{"name":"trait BuildFromLowPriority1 extends BuildFromLowPriority2","description":"scala.collection.BuildFromLowPriority1","location":"api/scala/collection/BuildFromLowPriority1.html","searchKeys":["BuildFromLowPriority1"]},{"name":"def scala$util$control$NoStackTrace$$super$fillInStackTrace(): Throwable","description":"scala.util.control.NoStackTrace","location":"api/scala/util/control/NoStackTrace.html","searchKeys":["scala$util$control$NoStackTrace$$super$fillInStackTrace"]},{"name":"def get(key: K): Option[V]","description":"scala.collection.mutable.LinkedHashMap","location":"api/scala/collection/mutable/LinkedHashMap.html","searchKeys":["get"]},{"name":"def asJavaDoublePredicate(sf: Double => Boolean): DoublePredicate","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asJavaDoublePredicate"]},{"name":"def result(): PriorityQueue[A]","description":"scala.collection.mutable.PriorityQueue","location":"api/scala/collection/mutable/PriorityQueue.html","searchKeys":["result"]},{"name":"def replace(k: K, v: V): Option[V]","description":"scala.collection.concurrent.TrieMap","location":"api/scala/collection/concurrent/TrieMap.html","searchKeys":["replace"]},{"name":"def equiv(x: T, y: T): Boolean","description":"scala.math.Equiv","location":"api/scala/math/Equiv.html","searchKeys":["equiv"]},{"name":"def >>(x: Long): Int","description":"scala.Short","location":"api/scala/Short.html","searchKeys":[">>"]},{"name":"def isClassDef: Boolean","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["isClassDef"]},{"name":"object Product14","description":"scala.Product14$","location":"api/scala/Product14$.html","searchKeys":["Product14"]},{"name":"val LongShape: Shape","description":"scala.collection.StepperShape$","location":"api/scala/collection/StepperShape$.html","searchKeys":["LongShape"]},{"name":"trait JFunction2$mcZIJ$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcZIJ$sp","location":"api/scala/runtime/java8/JFunction2$mcZIJ$sp.html","searchKeys":["JFunction2$mcZIJ$sp"]},{"name":"given MatchMethods","description":"scala.quoted.Quotes$reflectModule$MatchMethods","location":"api/scala/quoted/Quotes$reflectModule$MatchMethods.html","searchKeys":["MatchMethods"]},{"name":"def toIndexedSeq: IndexedSeq[A]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["toIndexedSeq"]},{"name":"val head: A","description":"scala.collection.immutable.Stream$$Cons","location":"api/scala/collection/immutable/Stream$$Cons.html","searchKeys":["head"]},{"name":"def prefixLength(p: A => Boolean): Int","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["prefixLength"]},{"name":"def caseFields: List[Symbol]","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["caseFields"]},{"name":"def from[V](coll: IterableOnce[(Int, V)]): IntMap[V]","description":"scala.collection.immutable.IntMap$","location":"api/scala/collection/immutable/IntMap$.html","searchKeys":["from"]},{"name":"def unapply(x: Expr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22)])(using Quotes): Option[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22)]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["unapply"]},{"name":"given TypeBindMethods","description":"scala.quoted.Quotes$reflectModule$TypeBindMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeBindMethods"]},{"name":"given TypeBlockMethods","description":"scala.quoted.Quotes$reflectModule$TypeBlockMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeBlockMethods.html","searchKeys":["TypeBlockMethods"]},{"name":"def asJavaParKeyStream[K, V](m: Map[K, V]): Stream[K]","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaParKeyStream"]},{"name":"given ClassDefMethods","description":"scala.quoted.Quotes$reflectModule$ClassDefMethods","location":"api/scala/quoted/Quotes$reflectModule$ClassDefMethods.html","searchKeys":["ClassDefMethods"]},{"name":"def asScala: (T, U) => Double","description":"scala.jdk.FunctionWrappers$$RichToDoubleBiFunctionAsFunction2","location":"api/scala/jdk/FunctionWrappers$$RichToDoubleBiFunctionAsFunction2.html","searchKeys":["asScala"]},{"name":"def forall(p: (El1, El2, El3, El4) => Boolean): Boolean","description":"scala.collection.LazyZip4","location":"api/scala/collection/LazyZip4.html","searchKeys":["forall"]},{"name":"class AsJavaLongToDoubleFunction(sf: Long => Double) extends LongToDoubleFunction","description":"scala.jdk.FunctionWrappers$$AsJavaLongToDoubleFunction","location":"api/scala/jdk/FunctionWrappers$$AsJavaLongToDoubleFunction.html","searchKeys":["AsJavaLongToDoubleFunction"]},{"name":"val x$6: Type[T6]","description":"scala.quoted.FromExpr$$Tuple11FromExpr","location":"api/scala/quoted/FromExpr$$Tuple11FromExpr.html","searchKeys":["x$6"]},{"name":"def asJavaSeqValueStream[K, V](m: Map[K, V]): Stream[V]","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaSeqValueStream"]},{"name":"def ready(atMost: Duration)(permit: CanAwait): Awaitable[T]","description":"scala.concurrent.Awaitable","location":"api/scala/concurrent/Awaitable.html","searchKeys":["ready"]},{"name":"def removed(key: Int): IntMap[T]","description":"scala.collection.immutable.IntMap","location":"api/scala/collection/immutable/IntMap.html","searchKeys":["removed"]},{"name":"val x$23: FromExpr[T3]","description":"scala.quoted.FromExpr$$Tuple20FromExpr","location":"api/scala/quoted/FromExpr$$Tuple20FromExpr.html","searchKeys":["x$23"]},{"name":"def _2: T2","description":"scala.Product15","location":"api/scala/Product15.html","searchKeys":["_2"]},{"name":"val x$33: FromExpr[T12]","description":"scala.quoted.FromExpr$$Tuple21FromExpr","location":"api/scala/quoted/FromExpr$$Tuple21FromExpr.html","searchKeys":["x$33"]},{"name":"def apply[T](xs: Seq[Expr[T]])(using Type[T])(using Quotes): Expr[Seq[T]]","description":"scala.quoted.Varargs$","location":"api/scala/quoted/Varargs$.html","searchKeys":["apply"]},{"name":"trait SortedMapOps[K, V, +CC <: ([X, Y] =>> Map[X, Y] & SortedMapOps[X, Y, CC, ]), +C <: SortedMapOps[K, V, CC, C]] extends SortedMapOps[K, V, CC, C] with MapOps[K, V, [K, V] =>> Map[K, V], C]","description":"scala.collection.mutable.SortedMapOps","location":"api/scala/collection/mutable/SortedMapOps.html","searchKeys":["SortedMapOps"]},{"name":"given OptionToExpr[T]: ToExpr[Option[T]]","description":"scala.quoted.ToExpr$$OptionToExpr","location":"api/scala/quoted/ToExpr$$OptionToExpr.html","searchKeys":["OptionToExpr"]},{"name":"type WildcardTypeTree <: Tree","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["WildcardTypeTree"]},{"name":"def apply(n: Int): Byte","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["apply"]},{"name":"def -(x: Char): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["-"]},{"name":"def from[E](it: IterableOnce[E]): ListSet[E]","description":"scala.collection.immutable.ListSet$","location":"api/scala/collection/immutable/ListSet$.html","searchKeys":["from"]},{"name":"type DefaultMap[K, +V] = Map[K, V]","description":"scala.collection.immutable","location":"api/scala/collection/immutable.html","searchKeys":["DefaultMap"]},{"name":"def unapply(x: RenameSelector): (String, String)","description":"scala.quoted.Quotes$reflectModule$RenameSelectorModule","location":"api/scala/quoted/Quotes$reflectModule$RenameSelectorModule.html","searchKeys":["unapply"]},{"name":"def *(d: Duration): Duration","description":"scala.concurrent.duration.package$$DoubleMult","location":"api/scala/concurrent/duration/package$$DoubleMult.html","searchKeys":["*"]},{"name":"def patterns: List[Tree]","description":"scala.quoted.Quotes$reflectModule$UnapplyMethods","location":"api/scala/quoted/Quotes$reflectModule$UnapplyMethods.html","searchKeys":["patterns"]},{"name":"def asScalaFromLongSupplier(jf: LongSupplier): () => Long","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asScalaFromLongSupplier"]},{"name":"def ==(x: Long): Boolean","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["=="]},{"name":"def %(x: Long): Long","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["%"]},{"name":"def -(x: Int): Double","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["-"]},{"name":"def !=(x: Short): Boolean","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["!="]},{"name":"val x$5: Type[T5]","description":"scala.quoted.FromExpr$$Tuple18FromExpr","location":"api/scala/quoted/FromExpr$$Tuple18FromExpr.html","searchKeys":["x$5"]},{"name":"val EXTENSION: 36","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["EXTENSION"]},{"name":"val ClassDef: ClassDefModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ClassDef"]},{"name":"class Appended[+A](underlying: SomeIndexedSeqOps[A], elem: A) extends Appended[A] with IndexedSeqView[A]","description":"scala.collection.IndexedSeqView$$Appended","location":"api/scala/collection/IndexedSeqView$$Appended.html","searchKeys":["Appended"]},{"name":"object IArray","description":"scala.IArray$package$$IArray$","location":"api/scala/IArray$package$$IArray$.html","searchKeys":["IArray"]},{"name":"def min(that: BigDecimal): BigDecimal","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["min"]},{"name":"def asScala[A, B](d: Dictionary[A, B]): Map[A, B]","description":"scala.collection.convert.AsScalaConverters","location":"api/scala/collection/convert/AsScalaConverters.html","searchKeys":["asScala"]},{"name":"val x$2: Type[T2]","description":"scala.quoted.FromExpr$$Tuple11FromExpr","location":"api/scala/quoted/FromExpr$$Tuple11FromExpr.html","searchKeys":["x$2"]},{"name":"val existentials: existentials","description":"scala.language$","location":"api/scala/language$.html","searchKeys":["existentials"]},{"name":"Importing Givens","description":"","location":"docs/reference/contextual/given-imports.html","searchKeys":["Importing Givens"]},{"name":"def tail: Stream[A]","description":"scala.collection.immutable.Stream","location":"api/scala/collection/immutable/Stream.html","searchKeys":["tail"]},{"name":"def asJavaFunction: Function[T, R]","description":"scala.jdk.FunctionWrappers$$RichFunction1AsFunction","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsFunction.html","searchKeys":["asJavaFunction"]},{"name":"def insertAll(idx: Int, elems: IterableOnce[T]): Unit","description":"scala.collection.mutable.UnrolledBuffer","location":"api/scala/collection/mutable/UnrolledBuffer.html","searchKeys":["insertAll"]},{"name":"def name: String","description":"scala.quoted.Quotes$reflectModule$SelectOuterMethods","location":"api/scala/quoted/Quotes$reflectModule$SelectOuterMethods.html","searchKeys":["name"]},{"name":"val ByNameType: ByNameTypeModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ByNameType"]},{"name":"def apply[T](ev: PartialOrdering[T]): PartialOrdering[T]","description":"scala.math.PartialOrdering$","location":"api/scala/math/PartialOrdering$.html","searchKeys":["apply"]},{"name":"val RecursiveType: RecursiveTypeModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["RecursiveType"]},{"name":"def unapply(x: Expr[(T1, T2, T3, T4, T5)])(using Quotes): Option[(T1, T2, T3, T4, T5)]","description":"scala.quoted.FromExpr$$Tuple5FromExpr","location":"api/scala/quoted/FromExpr$$Tuple5FromExpr.html","searchKeys":["unapply"]},{"name":"def read: A","description":"scala.concurrent.SyncChannel","location":"api/scala/concurrent/SyncChannel.html","searchKeys":["read"]},{"name":"def maybeOwner: Symbol","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["maybeOwner"]},{"name":"def equiv(x: Symbol, y: Symbol): Boolean","description":"scala.math.Equiv$$Symbol$","location":"api/scala/math/Equiv$$Symbol$.html","searchKeys":["equiv"]},{"name":"val preferIPv4Stack: BooleanProp","description":"scala.sys.SystemProperties$","location":"api/scala/sys/SystemProperties$.html","searchKeys":["preferIPv4Stack"]},{"name":"def delete(start: Int, end: Int): StringBuilder","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["delete"]},{"name":"def ObjectClass: Symbol","description":"scala.quoted.Quotes$reflectModule$defnModule","location":"api/scala/quoted/Quotes$reflectModule$defnModule.html","searchKeys":["ObjectClass"]},{"name":"def newBuilder[K, V]: Builder[(K, V), Map[K, V]]","description":"scala.collection.immutable.Map$","location":"api/scala/collection/immutable/Map$.html","searchKeys":["newBuilder"]},{"name":"def length: Int","description":"scala.runtime.ArrayCharSequence","location":"api/scala/runtime/ArrayCharSequence.html","searchKeys":["length"]},{"name":"object opaques","description":"scala.opaques$","location":"api/scala/opaques$.html","searchKeys":["opaques"]},{"name":"Scala 3","description":"","location":"index.html","searchKeys":["Scala 3"]},{"name":"def asScala: Long => R","description":"scala.jdk.FunctionWrappers$$RichLongFunctionAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichLongFunctionAsFunction1.html","searchKeys":["asScala"]},{"name":"given IdentTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["IdentTypeTest"]},{"name":"class AbstractFunction10[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, +R] extends (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) => R","description":"scala.runtime.AbstractFunction10","location":"api/scala/runtime/AbstractFunction10.html","searchKeys":["AbstractFunction10"]},{"name":"Differences between Scalac and Dotty","description":"","location":"docs/internals/dotc-scalac.html","searchKeys":["Differences between Scalac and Dotty"]},{"name":"trait BigIntOrdering extends Ordering[BigInt]","description":"scala.math.Ordering$$BigIntOrdering","location":"api/scala/math/Ordering$$BigIntOrdering.html","searchKeys":["BigIntOrdering"]},{"name":"def *(x: Double): Double","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["*"]},{"name":"def left: LeftProjection[A, B]","description":"scala.util.Either","location":"api/scala/util/Either.html","searchKeys":["left"]},{"name":"given EmptyTupleToExpr: ToExpr[EmptyTuple]","description":"scala.quoted.ToExpr$$EmptyTupleToExpr$","location":"api/scala/quoted/ToExpr$.html","searchKeys":["EmptyTupleToExpr"]},{"name":"trait Priority3FunctionExtensions","description":"scala.jdk.Priority3FunctionExtensions","location":"api/scala/jdk/Priority3FunctionExtensions.html","searchKeys":["Priority3FunctionExtensions"]},{"name":"def from[K, V](it: IterableOnce[(K, V)]): CC[K, V]","description":"scala.collection.MapFactory","location":"api/scala/collection/MapFactory.html","searchKeys":["from"]},{"name":"def dealias: TypeRepr","description":"scala.quoted.Quotes$reflectModule$TypeReprMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html","searchKeys":["dealias"]},{"name":"def withIn[T](in: InputStream)(thunk: => T): T","description":"scala.Console$","location":"api/scala/Console$.html","searchKeys":["withIn"]},{"name":"def applyAsLong(x1: T): Long","description":"scala.jdk.FunctionWrappers$$AsJavaToLongFunction","location":"api/scala/jdk/FunctionWrappers$$AsJavaToLongFunction.html","searchKeys":["applyAsLong"]},{"name":"def empty[A](evidence$1: ClassTag[A]): UnrolledBuffer[A]","description":"scala.collection.mutable.UnrolledBuffer$","location":"api/scala/collection/mutable/UnrolledBuffer$.html","searchKeys":["empty"]},{"name":"trait ClassTagIterableFactory[+CC <: ([_$44] =>> Any)] extends EvidenceIterableFactory[CC, [T] =>> ClassTag[T]]","description":"scala.collection.ClassTagIterableFactory","location":"api/scala/collection/ClassTagIterableFactory.html","searchKeys":["ClassTagIterableFactory"]},{"name":"def lazyLines(log: ProcessLogger, capacity: Integer): LazyList[String]","description":"scala.sys.process.ProcessBuilder","location":"api/scala/sys/process/ProcessBuilder.html","searchKeys":["lazyLines"]},{"name":"def withTry[U >: T](body: => U): Try[U]","description":"scala.util.control.Exception$$Catch","location":"api/scala/util/control/Exception$$Catch.html","searchKeys":["withTry"]},{"name":"class IntStepperSpliterator(s: IntStepper) extends OfInt","description":"scala.collection.IntStepper$$IntStepperSpliterator","location":"api/scala/collection/IntStepper$$IntStepperSpliterator.html","searchKeys":["IntStepperSpliterator"]},{"name":"def tail[This >: NonEmptyTuple <: NonEmptyTuple]: Tail[This]","description":"scala.NonEmptyTuple","location":"api/scala/NonEmptyTuple.html","searchKeys":["tail"]},{"name":"def concat[A, C](xss: Iterable[A]*)(canAccumulate: AccumulatorFactoryShape[A, C]): C","description":"scala.jdk.Accumulator$","location":"api/scala/jdk/Accumulator$.html","searchKeys":["concat"]},{"name":"class Appended[+A](underlying: SomeIterableOps[A], elem: A) extends AbstractView[A]","description":"scala.collection.View$$Appended","location":"api/scala/collection/View$$Appended.html","searchKeys":["Appended"]},{"name":"def RepeatedAnnot: Symbol","description":"scala.quoted.Quotes$reflectModule$defnModule","location":"api/scala/quoted/Quotes$reflectModule$defnModule.html","searchKeys":["RepeatedAnnot"]},{"name":"def toIterable: Iterable[A]","description":"scala.collection.Iterable","location":"api/scala/collection/Iterable.html","searchKeys":["toIterable"]},{"name":"trait JFunction2$mcIII$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcIII$sp","location":"api/scala/runtime/java8/JFunction2$mcIII$sp.html","searchKeys":["JFunction2$mcIII$sp"]},{"name":"def insert(idx: Int, elem: A): Unit","description":"scala.collection.mutable.ArrayDeque","location":"api/scala/collection/mutable/ArrayDeque.html","searchKeys":["insert"]},{"name":"def currentAddr: Addr","description":"dotty.tools.tasty.TastyBuffer","location":"api/dotty/tools/tasty/TastyBuffer.html","searchKeys":["currentAddr"]},{"name":"def bootstrap(lookup: Lookup, invokedName: String, invokedType: MethodType, targetMethods: MethodHandle*): CallSite","description":"scala.runtime.LambdaDeserialize$","location":"api/scala/runtime/LambdaDeserialize$.html","searchKeys":["bootstrap"]},{"name":"def checkInput(line: Int, column: Int): Unit","description":"scala.io.Source$RelaxedPosition$","location":"api/scala/io/Source$RelaxedPosition$.html","searchKeys":["checkInput"]},{"name":"def elemTag: ClassTag[]","description":"scala.collection.mutable.ArraySeq$$ofByte","location":"api/scala/collection/mutable/ArraySeq$$ofByte.html","searchKeys":["elemTag"]},{"name":"val Fractional: Fractional","description":"scala","location":"api/scala.html","searchKeys":["Fractional"]},{"name":"given AnnotatedTypeMethods","description":"scala.quoted.Quotes$reflectModule$AnnotatedTypeMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["AnnotatedTypeMethods"]},{"name":"def apply(i: Int): Double","description":"scala.collection.immutable.ArraySeq$$ofDouble","location":"api/scala/collection/immutable/ArraySeq$$ofDouble.html","searchKeys":["apply"]},{"name":"def _10: T10","description":"scala.Product12","location":"api/scala/Product12.html","searchKeys":["_10"]},{"name":"val x$27: FromExpr[T5]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["x$27"]},{"name":"class Positioner(encoder: Position)","description":"scala.io.Source$Positioner","location":"api/scala/io/Source$Positioner.html","searchKeys":["Positioner"]},{"name":"def cond: Term","description":"scala.quoted.Quotes$reflectModule$WhileMethods","location":"api/scala/quoted/Quotes$reflectModule$WhileMethods.html","searchKeys":["cond"]},{"name":"object SortedMap extends Delegate[[K, V] =>> SortedMap[K, V]]","description":"scala.collection.immutable.SortedMap$","location":"api/scala/collection/immutable/SortedMap$.html","searchKeys":["SortedMap"]},{"name":"def array_clone(xs: AnyRef): AnyRef","description":"scala.runtime.ScalaRunTime$","location":"api/scala/runtime/ScalaRunTime$.html","searchKeys":["array_clone"]},{"name":"val NegativeInfinity: -Infinity","description":"scala.Double$","location":"api/scala/Double$.html","searchKeys":["NegativeInfinity"]},{"name":"def pop(): A","description":"scala.collection.mutable.Stack","location":"api/scala/collection/mutable/Stack.html","searchKeys":["pop"]},{"name":"def unapply(x: AndType): (TypeRepr, TypeRepr)","description":"scala.quoted.Quotes$reflectModule$AndTypeModule","location":"api/scala/quoted/Quotes$reflectModule$AndTypeModule.html","searchKeys":["unapply"]},{"name":"def stableSort[K](a: Array[K])(evidence$3: Ordering[K]): Unit","description":"scala.util.Sorting$","location":"api/scala/util/Sorting$.html","searchKeys":["stableSort"]},{"name":"def toDouble(x: BigDecimal): Double","description":"scala.math.Numeric$$BigDecimalIsConflicted","location":"api/scala/math/Numeric$$BigDecimalIsConflicted.html","searchKeys":["toDouble"]},{"name":"def zipAll[A1 >: A, B](that: Iterable[B], thisElem: A1, thatElem: B): CC[(A1, B)]","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["zipAll"]},{"name":"def subtractExact(x: Long, y: Long): Long","description":"scala.math","location":"api/scala/math.html","searchKeys":["subtractExact"]},{"name":"def iterator: Iterator[B]","description":"scala.collection.View$$ScanLeft","location":"api/scala/collection/View$$ScanLeft.html","searchKeys":["iterator"]},{"name":"def next(): Char","description":"scala.io.Source","location":"api/scala/io/Source.html","searchKeys":["next"]},{"name":"def glob(patternChunks: Seq[String], input: String): Option[Seq[String]]","description":"scala.StringContext$","location":"api/scala/StringContext$.html","searchKeys":["glob"]},{"name":"given TypeSelectTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeSelectTypeTest"]},{"name":"def =:=(that: TypeRepr): Boolean","description":"scala.quoted.Quotes$reflectModule$TypeReprMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html","searchKeys":["=:="]},{"name":"def getAnnotation(annotSym: Symbol): Option[Term]","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["getAnnotation"]},{"name":"class Stack[A] extends ArrayDeque[A] with IndexedSeqOps[A, [A] =>> Stack[A], Stack[A]] with StrictOptimizedSeqOps[A, [A] =>> Stack[A], Stack[A]] with IterableFactoryDefaults[A, [A] =>> Stack[A]] with ArrayDequeOps[A, [A] =>> Stack[A], Stack[A]] with Cloneable[Stack[A]] with DefaultSerializable","description":"scala.collection.mutable.Stack","location":"api/scala/collection/mutable/Stack.html","searchKeys":["Stack"]},{"name":"def filterInPlace(p: A => Boolean): ListBuffer[A]","description":"scala.collection.mutable.ListBuffer","location":"api/scala/collection/mutable/ListBuffer.html","searchKeys":["filterInPlace"]},{"name":"val longStreamShape: StreamShape[Long, LongStream, LongStepper]","description":"scala.collection.convert.StreamExtensions$$StreamShape$","location":"api/scala/collection/convert/StreamExtensions$$StreamShape$.html","searchKeys":["longStreamShape"]},{"name":"val x$28: FromExpr[T11]","description":"scala.quoted.FromExpr$$Tuple17FromExpr","location":"api/scala/quoted/FromExpr$$Tuple17FromExpr.html","searchKeys":["x$28"]},{"name":"def array_length(xs: AnyRef): Int","description":"scala.runtime.ScalaRunTime$","location":"api/scala/runtime/ScalaRunTime$.html","searchKeys":["array_length"]},{"name":"def firstKey: Int","description":"scala.collection.immutable.IntMap","location":"api/scala/collection/immutable/IntMap.html","searchKeys":["firstKey"]},{"name":"def compare(x: Value, y: Value): Int","description":"scala.Enumeration$ValueOrdering$","location":"api/scala/Enumeration$ValueOrdering$.html","searchKeys":["compare"]},{"name":"val StringBuilder: StringBuilder","description":"scala","location":"api/scala.html","searchKeys":["StringBuilder"]},{"name":"def _5: T5","description":"scala.Product7","location":"api/scala/Product7.html","searchKeys":["_5"]},{"name":"Safe Initialization","description":"","location":"docs/reference/other-new-features/safe-initialization.html","searchKeys":["Safe Initialization"]},{"name":"object Long extends Equiv[Long]","description":"scala.math.Equiv$$Long$","location":"api/scala/math/Equiv$$Long$.html","searchKeys":["Long"]},{"name":"def parseString(str: String): Option[T]","description":"scala.math.Numeric","location":"api/scala/math/Numeric.html","searchKeys":["parseString"]},{"name":"def expr: Term","description":"scala.quoted.Quotes$reflectModule$TypedMethods","location":"api/scala/quoted/Quotes$reflectModule$TypedMethods.html","searchKeys":["expr"]},{"name":"def classType[T](clazz: Class[], arg1: OptManifest[], args: OptManifest[]*): ClassTag[T]","description":"scala.reflect.ClassManifestFactory$","location":"api/scala/reflect/ClassManifestFactory$.html","searchKeys":["classType"]},{"name":"def initialize(value: Double): Double","description":"scala.runtime.LazyDouble","location":"api/scala/runtime/LazyDouble.html","searchKeys":["initialize"]},{"name":"def initialize(value: Int): Int","description":"scala.runtime.LazyInt","location":"api/scala/runtime/LazyInt.html","searchKeys":["initialize"]},{"name":"def remove(elem: A): Boolean","description":"scala.collection.mutable.SetOps","location":"api/scala/collection/mutable/SetOps.html","searchKeys":["remove"]},{"name":"def orderingToOrdered[T](x: T)(ord: Ordering[T]): Ordered[T]","description":"scala.math.Ordered$","location":"api/scala/math/Ordered$.html","searchKeys":["orderingToOrdered"]},{"name":"def apply(n: Int): Char","description":"scala.collection.StringView","location":"api/scala/collection/StringView.html","searchKeys":["apply"]},{"name":"class AbstractFunction22[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, -T14, -T15, -T16, -T17, -T18, -T19, -T20, -T21, -T22, +R] extends (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22) => R","description":"scala.runtime.AbstractFunction22","location":"api/scala/runtime/AbstractFunction22.html","searchKeys":["AbstractFunction22"]},{"name":"def from[A](source: IterableOnce[A]): CC[A]","description":"scala.collection.IterableFactory","location":"api/scala/collection/IterableFactory.html","searchKeys":["from"]},{"name":"def length: Int","description":"scala.collection.immutable.ArraySeq$$ofChar","location":"api/scala/collection/immutable/ArraySeq$$ofChar.html","searchKeys":["length"]},{"name":"def transformWith[S](f: Try[T] => Future[S])(executor: ExecutionContext): Future[S]","description":"scala.concurrent.Future","location":"api/scala/concurrent/Future.html","searchKeys":["transformWith"]},{"name":"def privateWithin: Option[TypeRepr]","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["privateWithin"]},{"name":"def asJavaSeqStream: IntStream","description":"scala.collection.convert.StreamExtensions$ByteArrayHasSeqParStream","location":"api/scala/collection/convert/StreamExtensions$ByteArrayHasSeqParStream.html","searchKeys":["asJavaSeqStream"]},{"name":"val x$20: FromExpr[T9]","description":"scala.quoted.FromExpr$$Tuple11FromExpr","location":"api/scala/quoted/FromExpr$$Tuple11FromExpr.html","searchKeys":["x$20"]},{"name":"def initialized: Boolean","description":"scala.runtime.LazyByte","location":"api/scala/runtime/LazyByte.html","searchKeys":["initialized"]},{"name":"def appendedAll(suffix: String): String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["appendedAll"]},{"name":"def asJavaToDoubleFunction: ToDoubleFunction[T]","description":"scala.jdk.FunctionWrappers$$RichFunction1AsToDoubleFunction","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsToDoubleFunction.html","searchKeys":["asJavaToDoubleFunction"]},{"name":"def >=(x: Float): Boolean","description":"scala.Float","location":"api/scala/Float.html","searchKeys":[">="]},{"name":"def +(v: Value): ValueSet","description":"scala.Enumeration$Value","location":"api/scala/Enumeration$Value.html","searchKeys":["+"]},{"name":"def tails: Iterator[Array[A]]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["tails"]},{"name":"def reduceRightOption[B >: A](op: (A, B) => B): Option[B]","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["reduceRightOption"]},{"name":"def from[K, V](it: IterableOnce[(K, V)])(evidence$27: Ordering[K]): CC[K, V]","description":"scala.collection.SortedMapFactory","location":"api/scala/collection/SortedMapFactory.html","searchKeys":["from"]},{"name":"val STRINGconst: 74","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["STRINGconst"]},{"name":"def this(bytes: Array[Byte])","description":"dotty.tools.tasty.TastyHeaderUnpickler","location":"api/dotty/tools/tasty/TastyHeaderUnpickler.html","searchKeys":["this"]},{"name":"def toByte: Byte","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["toByte"]},{"name":"trait CharConstantModule","description":"scala.quoted.Quotes$reflectModule$CharConstantModule","location":"api/scala/quoted/Quotes$reflectModule$CharConstantModule.html","searchKeys":["CharConstantModule"]},{"name":"class WithFilter[A](p: A => Boolean, xs: Array[A])","description":"scala.collection.ArrayOps$$WithFilter","location":"api/scala/collection/ArrayOps$$WithFilter.html","searchKeys":["WithFilter"]},{"name":"def microsecond: FiniteDuration","description":"scala.concurrent.duration.DurationConversions","location":"api/scala/concurrent/duration/DurationConversions.html","searchKeys":["microsecond"]},{"name":"val doubleStepperShape: StepperShape[Double, DoubleStepper]","description":"scala.collection.StepperShape$","location":"api/scala/collection/StepperShape$.html","searchKeys":["doubleStepperShape"]},{"name":"object cons","description":"scala.collection.immutable.Stream$$cons$","location":"api/scala/collection/immutable/Stream$$cons$.html","searchKeys":["cons"]},{"name":"def !=(x: Short): Boolean","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["!="]},{"name":"def +(x: Long): Long","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["+"]},{"name":"def *(x: Byte): Int","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["*"]},{"name":"def get(key: Long): Option[T]","description":"scala.collection.immutable.LongMap","location":"api/scala/collection/immutable/LongMap.html","searchKeys":["get"]},{"name":"def let(owner: Symbol, name: String, rhs: Term)(body: Ident => Term): Term","description":"scala.quoted.Quotes$reflectModule$ValDefModule","location":"api/scala/quoted/Quotes$reflectModule$ValDefModule.html","searchKeys":["let"]},{"name":"def _9: T9","description":"scala.Product11","location":"api/scala/Product11.html","searchKeys":["_9"]},{"name":"object BigDecimalIsFractional extends BigDecimalIsFractional with BigDecimalOrdering","description":"scala.math.Numeric$$BigDecimalIsFractional$","location":"api/scala/math/Numeric$$BigDecimalIsFractional$.html","searchKeys":["BigDecimalIsFractional"]},{"name":"trait Map[K, +V] extends Iterable[(K, V)] with Map[K, V] with MapOps[K, V, [K, V] =>> Map[K, V], Map[K, V]] with MapFactoryDefaults[K, V, [K, V] =>> Map[K, V], [A] =>> Iterable[A]]","description":"scala.collection.immutable.Map","location":"api/scala/collection/immutable/Map.html","searchKeys":["Map"]},{"name":"def unapply(x: Expr[Right[L, R]])(using Quotes): Option[Right[L, R]]","description":"scala.quoted.FromExpr$$RightFromExpr","location":"api/scala/quoted/FromExpr$$RightFromExpr.html","searchKeys":["unapply"]},{"name":"def :\\[B](z: B)(op: (A, B) => B): B","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":[":\\"]},{"name":"def diff[B >: Char](that: Seq[B]): String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["diff"]},{"name":"def typedProductIterator[T](x: Product): Iterator[T]","description":"scala.runtime.ScalaRunTime$","location":"api/scala/runtime/ScalaRunTime$.html","searchKeys":["typedProductIterator"]},{"name":"object Names","description":"scala.runtime.LazyVals$$Names$","location":"api/scala/runtime/LazyVals$$Names$.html","searchKeys":["Names"]},{"name":"def ++[B >: A](xs: IterableOnce[B])(evidence$22: ClassTag[B]): Array[B]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["++"]},{"name":"val NANOSECONDS: TimeUnit","description":"scala.concurrent.duration","location":"api/scala/concurrent/duration.html","searchKeys":["NANOSECONDS"]},{"name":"def asScala: T => Unit","description":"scala.jdk.FunctionWrappers$$RichConsumerAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichConsumerAsFunction1.html","searchKeys":["asScala"]},{"name":"def apply(tup: EmptyTuple)(using Quotes): Expr[EmptyTuple]","description":"scala.quoted.ToExpr$$EmptyTupleToExpr$","location":"api/scala/quoted/ToExpr$$EmptyTupleToExpr$.html","searchKeys":["apply"]},{"name":"def distinct: C","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["distinct"]},{"name":"def nextPrintableChar(): Char","description":"scala.util.Random","location":"api/scala/util/Random.html","searchKeys":["nextPrintableChar"]},{"name":"given ArrayOfLongToExpr: ToExpr[Array[Long]]","description":"scala.quoted.ToExpr$$ArrayOfLongToExpr$","location":"api/scala/quoted/ToExpr$.html","searchKeys":["ArrayOfLongToExpr"]},{"name":"def compare(k0: A, k1: A): Int","description":"scala.collection.SortedOps","location":"api/scala/collection/SortedOps.html","searchKeys":["compare"]},{"name":"def hash(a: Array[T]): Int","description":"scala.util.hashing.MurmurHash3$$ArrayHashing","location":"api/scala/util/hashing/MurmurHash3$$ArrayHashing.html","searchKeys":["hash"]},{"name":"val x$25: FromExpr[T4]","description":"scala.quoted.FromExpr$$Tuple21FromExpr","location":"api/scala/quoted/FromExpr$$Tuple21FromExpr.html","searchKeys":["x$25"]},{"name":"def drop(n: Int): String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["drop"]},{"name":"def toArray[B >: A](evidence$2: ClassTag[B]): Array[B]","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["toArray"]},{"name":"def decrementExact(x: Long): Long","description":"scala.math","location":"api/scala/math.html","searchKeys":["decrementExact"]},{"name":"def failAsValue[T](exceptions: Class[]*)(value: => T): Catch[T]","description":"scala.util.control.Exception$","location":"api/scala/util/control/Exception$.html","searchKeys":["failAsValue"]},{"name":"def asJavaParStream[S <: BaseStream[, ], St <: Stepper[]](s: StreamShape[(K, V), S, St], st: StepperShape[(K, V), St], @implicitNotFound(\"parStream can only be called on maps where `stepper` returns a `Stepper with EfficientSplit`\") isEfficient: CC[K, V] <:< MapOps[K, V, Map, ] { def stepper[S <: Stepper[]](shape: StepperShape[(K, V), S]): S & EfficientSplit; ;  }): S","description":"scala.collection.convert.StreamExtensions$MapHasParKeyValueStream","location":"api/scala/collection/convert/StreamExtensions$MapHasParKeyValueStream.html","searchKeys":["asJavaParStream"]},{"name":"def iterator: Iterator[A]","description":"scala.collection.immutable.Set$$Set4","location":"api/scala/collection/immutable/Set$$Set4.html","searchKeys":["iterator"]},{"name":"def copy(original: Tree)(name: String, arg: Term): NamedArg","description":"scala.quoted.Quotes$reflectModule$NamedArgModule","location":"api/scala/quoted/Quotes$reflectModule$NamedArgModule.html","searchKeys":["copy"]},{"name":"def _hashCode(x: Product): Int","description":"scala.runtime.ScalaRunTime$","location":"api/scala/runtime/ScalaRunTime$.html","searchKeys":["_hashCode"]},{"name":"val longStepperShape: StepperShape[Long, LongStepper]","description":"scala.collection.StepperShape$","location":"api/scala/collection/StepperShape$.html","searchKeys":["longStepperShape"]},{"name":"given given_FromString_Short: FromString[Short]","description":"scala.util.CommandLineParser$$FromString$$given_FromString_Short$","location":"api/scala/util/CommandLineParser$$FromString$.html","searchKeys":["given_FromString_Short"]},{"name":"def ==(x: Byte): Boolean","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["=="]},{"name":"Using Clauses","description":"","location":"docs/reference/contextual/using-clauses.html","searchKeys":["Using Clauses"]},{"name":"def arrayManifest: ClassTag[Array[T]]","description":"scala.reflect.ClassManifestDeprecatedApis","location":"api/scala/reflect/ClassManifestDeprecatedApis.html","searchKeys":["arrayManifest"]},{"name":"def apply(x1: Int): Long","description":"scala.jdk.FunctionWrappers$$FromJavaIntToLongFunction","location":"api/scala/jdk/FunctionWrappers$$FromJavaIntToLongFunction.html","searchKeys":["apply"]},{"name":"def curried: T1 => T2 => T3 => T4 => T5 => T6 => T7 => T8 => T9 => T10 => T11 => T12 => T13 => T14 => T15 => T16 => T17 => T18 => T19 => T20 => T21 => R","description":"scala.Function21","location":"api/scala/Function21.html","searchKeys":["curried"]},{"name":"val Null: Manifest[Null]","description":"scala.reflect.ClassManifestFactory$","location":"api/scala/reflect/ClassManifestFactory$.html","searchKeys":["Null"]},{"name":"def primaryConstructor: Symbol","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["primaryConstructor"]},{"name":"val x$14: Type[T14]","description":"scala.quoted.FromExpr$$Tuple19FromExpr","location":"api/scala/quoted/FromExpr$$Tuple19FromExpr.html","searchKeys":["x$14"]},{"name":"def asJavaEnumeration: Enumeration[A]","description":"scala.collection.JavaConverters$$AsJavaEnumeration","location":"api/scala/collection/JavaConverters$$AsJavaEnumeration.html","searchKeys":["asJavaEnumeration"]},{"name":"def iterator: Iterator[A]","description":"scala.collection.Stepper","location":"api/scala/collection/Stepper.html","searchKeys":["iterator"]},{"name":"trait StreamShape[T, S <: BaseStream[, ], St <: Stepper[]]","description":"scala.collection.convert.StreamExtensions$$StreamShape","location":"api/scala/collection/convert/StreamExtensions$$StreamShape.html","searchKeys":["StreamShape"]},{"name":"val x$14: FromExpr[T6]","description":"scala.quoted.FromExpr$$Tuple8FromExpr","location":"api/scala/quoted/FromExpr$$Tuple8FromExpr.html","searchKeys":["x$14"]},{"name":"def _11: T11","description":"scala.Product15","location":"api/scala/Product15.html","searchKeys":["_11"]},{"name":"def unary_-: T","description":"scala.math.Numeric$NumericOps","location":"api/scala/math/Numeric$NumericOps.html","searchKeys":["unary_-"]},{"name":"def help(key: String): String","description":"scala.sys.SystemProperties$","location":"api/scala/sys/SystemProperties$.html","searchKeys":["help"]},{"name":"def asJavaParValueIntStream[K](m: Map[K, Integer]): IntStream","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaParValueIntStream"]},{"name":"def transformSubTrees[Tr <: Tree](trees: List[Tr])(owner: Symbol): List[Tr]","description":"scala.quoted.Quotes$reflectModule$TreeMap","location":"api/scala/quoted/Quotes$reflectModule$TreeMap.html","searchKeys":["transformSubTrees"]},{"name":"def length[T]: Int","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["length"]},{"name":"def toSet[B >: A]: Set[B]","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["toSet"]},{"name":"def _12: T12","description":"scala.Product18","location":"api/scala/Product18.html","searchKeys":["_12"]},{"name":"val x$2: Type[T2]","description":"scala.quoted.FromExpr$$Tuple7FromExpr","location":"api/scala/quoted/FromExpr$$Tuple7FromExpr.html","searchKeys":["x$2"]},{"name":"def get(timeout: Long): Option[A]","description":"scala.concurrent.SyncVar","location":"api/scala/concurrent/SyncVar.html","searchKeys":["get"]},{"name":"def <(x: Char): Boolean","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["<"]},{"name":"def addOne(elem: A): LinkedHashSet[A]","description":"scala.collection.mutable.LinkedHashSet","location":"api/scala/collection/mutable/LinkedHashSet.html","searchKeys":["addOne"]},{"name":"def /(x: Char): Int","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["/"]},{"name":"def _6: T6","description":"scala.Product10","location":"api/scala/Product10.html","searchKeys":["_6"]},{"name":"given MapToExpr[T, U]: ToExpr[Map[T, U]]","description":"scala.quoted.ToExpr$$MapToExpr","location":"api/scala/quoted/ToExpr$$MapToExpr.html","searchKeys":["MapToExpr"]},{"name":"trait SetOps[A, +CC <: ([X] =>> Any), +C <: SetOps[A, CC, C]] extends SetOps[A, CC, C]","description":"scala.collection.immutable.SetOps","location":"api/scala/collection/immutable/SetOps.html","searchKeys":["SetOps"]},{"name":"def fromFile(file: File, bufferSize: Int)(codec: Codec): BufferedSource","description":"scala.io.Source$","location":"api/scala/io/Source$.html","searchKeys":["fromFile"]},{"name":"def take(n: Int): C","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["take"]},{"name":"def unapply(x: Expr[EmptyTuple])(using Quotes): Option[EmptyTuple]","description":"scala.quoted.FromExpr$$EmptyTupleFromExpr$","location":"api/scala/quoted/FromExpr$$EmptyTupleFromExpr$.html","searchKeys":["unapply"]},{"name":"object Queue extends StrictOptimizedSeqFactory[[A] =>> Queue[A]]","description":"scala.collection.mutable.Queue$","location":"api/scala/collection/mutable/Queue$.html","searchKeys":["Queue"]},{"name":"def mkString(sep: String): String","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["mkString"]},{"name":"def >>>(x: Long): Int","description":"scala.Int","location":"api/scala/Int.html","searchKeys":[">>>"]},{"name":"trait JFunction2$mcJDI$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcJDI$sp","location":"api/scala/runtime/java8/JFunction2$mcJDI$sp.html","searchKeys":["JFunction2$mcJDI$sp"]},{"name":"def _20: T20","description":"scala.Product22","location":"api/scala/Product22.html","searchKeys":["_20"]},{"name":"trait MapOps[K, V, +CC <: ([X, Y] =>> MapOps[X, Y, CC, ]), +C <: MapOps[K, V, CC, C]] extends IterableOps[(K, V), [A] =>> Iterable[A], C] with MapOps[K, V, CC, C] with Cloneable[C] with Builder[(K, V), C] with Growable[(K, V)] with Shrinkable[K]","description":"scala.collection.mutable.MapOps","location":"api/scala/collection/mutable/MapOps.html","searchKeys":["MapOps"]},{"name":"def _3: T3","description":"scala.Product22","location":"api/scala/Product22.html","searchKeys":["_3"]},{"name":"val MaxValue: '￿'","description":"scala.Char$","location":"api/scala/Char$.html","searchKeys":["MaxValue"]},{"name":"def apply(): Int","description":"scala.jdk.FunctionWrappers$$FromJavaIntSupplier","location":"api/scala/jdk/FunctionWrappers$$FromJavaIntSupplier.html","searchKeys":["apply"]},{"name":"val orderedBy: OrderBy","description":"scala.collection.immutable.TreeSeqMap","location":"api/scala/collection/immutable/TreeSeqMap.html","searchKeys":["orderedBy"]},{"name":"def box(x: Double): Double","description":"scala.Double$","location":"api/scala/Double$.html","searchKeys":["box"]},{"name":"def setAsJavaSet[A](s: Set[A]): Set[A]","description":"scala.collection.JavaConverters$","location":"api/scala/collection/JavaConverters$.html","searchKeys":["setAsJavaSet"]},{"name":"def %(x: Short): Int","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["%"]},{"name":"val x$8: Type[T8]","description":"scala.quoted.FromExpr$$Tuple10FromExpr","location":"api/scala/quoted/FromExpr$$Tuple10FromExpr.html","searchKeys":["x$8"]},{"name":"class AbstractFunction17[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, -T14, -T15, -T16, -T17, +R] extends (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) => R","description":"scala.runtime.AbstractFunction17","location":"api/scala/runtime/AbstractFunction17.html","searchKeys":["AbstractFunction17"]},{"name":"val x$9: Type[T9]","description":"scala.quoted.FromExpr$$Tuple18FromExpr","location":"api/scala/quoted/FromExpr$$Tuple18FromExpr.html","searchKeys":["x$9"]},{"name":"def fromSpecific(it: IterableOnce[Char]): WrappedString","description":"scala.collection.immutable.WrappedString$","location":"api/scala/collection/immutable/WrappedString$.html","searchKeys":["fromSpecific"]},{"name":"def collect[V2](pf: PartialFunction[(Int, T), (Int, V2)]): IntMap[V2]","description":"scala.collection.immutable.IntMap","location":"api/scala/collection/immutable/IntMap.html","searchKeys":["collect"]},{"name":"val x$9: FromExpr[T4]","description":"scala.quoted.FromExpr$$Tuple5FromExpr","location":"api/scala/quoted/FromExpr$$Tuple5FromExpr.html","searchKeys":["x$9"]},{"name":"def length: Int","description":"scala.collection.immutable.ArraySeq$$ofDouble","location":"api/scala/collection/immutable/ArraySeq$$ofDouble.html","searchKeys":["length"]},{"name":"def asJavaSeqStream: Stream[A]","description":"scala.collection.convert.StreamExtensions$AnyArrayHasSeqParStream","location":"api/scala/collection/convert/StreamExtensions$AnyArrayHasSeqParStream.html","searchKeys":["asJavaSeqStream"]},{"name":"class RichFunction1AsLongPredicate(underlying: Long => Boolean) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichFunction1AsLongPredicate","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsLongPredicate.html","searchKeys":["RichFunction1AsLongPredicate"]},{"name":"class RichDoubleToLongFunctionAsFunction1(underlying: DoubleToLongFunction) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichDoubleToLongFunctionAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichDoubleToLongFunctionAsFunction1.html","searchKeys":["RichDoubleToLongFunctionAsFunction1"]},{"name":"val Assign: AssignModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Assign"]},{"name":"def scala$collection$immutable$IndexedSeq$$super$canEqual(that: Any): Boolean","description":"scala.collection.immutable.IndexedSeq","location":"api/scala/collection/immutable/IndexedSeq.html","searchKeys":["scala$collection$immutable$IndexedSeq$$super$canEqual"]},{"name":"def empty[A]: HashSet[A]","description":"scala.collection.mutable.HashSet$","location":"api/scala/collection/mutable/HashSet$.html","searchKeys":["empty"]},{"name":"def copy(original: Tree)(name: String, pattern: Tree): Bind","description":"scala.quoted.Quotes$reflectModule$BindModule","location":"api/scala/quoted/Quotes$reflectModule$BindModule.html","searchKeys":["copy"]},{"name":"def Tuple9[T1, T2, T3, T4, T5, T6, T7, T8, T9](eqv1: Equiv[T1], eqv2: Equiv[T2], eqv3: Equiv[T3], eqv4: Equiv[T4], eqv5: Equiv[T5], eqv6: Equiv[T6], eqv7: Equiv[T7], eqv8: Equiv[T8], eqv9: Equiv[T9]): Equiv[(T1, T2, T3, T4, T5, T6, T7, T8, T9)]","description":"scala.math.Equiv$","location":"api/scala/math/Equiv$.html","searchKeys":["Tuple9"]},{"name":"trait Function20[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, -T14, -T15, -T16, -T17, -T18, -T19, -T20, +R] extends AnyRef","description":"scala.Function20","location":"api/scala/Function20.html","searchKeys":["Function20"]},{"name":"def foreach[T](f: T => U): Unit","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["foreach"]},{"name":"def _4: T4","description":"scala.Product6","location":"api/scala/Product6.html","searchKeys":["_4"]},{"name":"trait CanEqual[-L, -R]","description":"scala.CanEqual","location":"api/scala/CanEqual.html","searchKeys":["CanEqual"]},{"name":"object cons","description":"scala.collection.immutable.LazyList$$cons$","location":"api/scala/collection/immutable/LazyList$$cons$.html","searchKeys":["cons"]},{"name":"trait JFunction2$mcJJJ$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcJJJ$sp","location":"api/scala/runtime/java8/JFunction2$mcJJJ$sp.html","searchKeys":["JFunction2$mcJJJ$sp"]},{"name":"type R","description":"scala.concurrent.duration.DurationConversions$$Classifier","location":"api/scala/concurrent/duration/DurationConversions$$Classifier.html","searchKeys":["R"]},{"name":"def now: Deadline","description":"scala.concurrent.duration.Deadline$","location":"api/scala/concurrent/duration/Deadline$.html","searchKeys":["now"]},{"name":"given AndOrTypeMethods","description":"scala.quoted.Quotes$reflectModule$AndOrTypeMethods","location":"api/scala/quoted/Quotes$reflectModule$AndOrTypeMethods.html","searchKeys":["AndOrTypeMethods"]},{"name":"def apply$mcIDJ$sp(v1: Double, v2: Long): Int","description":"scala.runtime.java8.JFunction2$mcIDJ$sp","location":"api/scala/runtime/java8/JFunction2$mcIDJ$sp.html","searchKeys":["apply$mcIDJ$sp"]},{"name":"def compare(x: Char, y: Char): Int","description":"scala.math.Ordering$$CharOrdering","location":"api/scala/math/Ordering$$CharOrdering.html","searchKeys":["compare"]},{"name":"def lastIndexOf[B >: A](elem: B, end: Int): Int","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["lastIndexOf"]},{"name":"def asScalaFromLongToDoubleFunction(jf: LongToDoubleFunction): Long => Double","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asScalaFromLongToDoubleFunction"]},{"name":"def insert(index: Int, x: Char): StringBuilder","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["insert"]},{"name":"def _1: T1","description":"scala.Product21","location":"api/scala/Product21.html","searchKeys":["_1"]},{"name":"Changes in Overload Resolution","description":"","location":"docs/reference/changed-features/overload-resolution.html","searchKeys":["Changes in Overload Resolution"]},{"name":"val TypeTree: TypeTreeModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeTree"]},{"name":"val x$33: FromExpr[T15]","description":"scala.quoted.FromExpr$$Tuple18FromExpr","location":"api/scala/quoted/FromExpr$$Tuple18FromExpr.html","searchKeys":["x$33"]},{"name":"trait ImplicitsModule","description":"scala.quoted.Quotes$reflectModule$ImplicitsModule","location":"api/scala/quoted/Quotes$reflectModule$ImplicitsModule.html","searchKeys":["ImplicitsModule"]},{"name":"def replace(k: K, oldvalue: V, newvalue: V): Boolean","description":"scala.collection.concurrent.Map","location":"api/scala/collection/concurrent/Map.html","searchKeys":["replace"]},{"name":"def close(): Unit","description":"scala.io.Source","location":"api/scala/io/Source.html","searchKeys":["close"]},{"name":"def unapply(s: String): Option[(Long, TimeUnit)]","description":"scala.concurrent.duration.Duration$","location":"api/scala/concurrent/duration/Duration$.html","searchKeys":["unapply"]},{"name":"given Tuple1FromExpr[T1](using val x$1: Type[T1], val x$2: FromExpr[T1]): FromExpr[(T1)]","description":"scala.quoted.FromExpr$$Tuple1FromExpr","location":"api/scala/quoted/FromExpr$.html","searchKeys":["Tuple1FromExpr"]},{"name":"trait Function10[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, +R] extends AnyRef","description":"scala.Function10","location":"api/scala/Function10.html","searchKeys":["Function10"]},{"name":"class TastyHeaderUnpickler(reader: TastyReader)","description":"dotty.tools.tasty.TastyHeaderUnpickler","location":"api/dotty/tools/tasty/TastyHeaderUnpickler.html","searchKeys":["TastyHeaderUnpickler"]},{"name":"def readHeader(): UUID","description":"dotty.tools.tasty.TastyHeaderUnpickler","location":"api/dotty/tools/tasty/TastyHeaderUnpickler.html","searchKeys":["readHeader"]},{"name":"def abs: T","description":"scala.runtime.ScalaNumberProxy","location":"api/scala/runtime/ScalaNumberProxy.html","searchKeys":["abs"]},{"name":"def apply$mcZJI$sp(v1: Long, v2: Int): Boolean","description":"scala.runtime.java8.JFunction2$mcZJI$sp","location":"api/scala/runtime/java8/JFunction2$mcZJI$sp.html","searchKeys":["apply$mcZJI$sp"]},{"name":"def getOrNull(key: K): V","description":"scala.collection.mutable.AnyRefMap","location":"api/scala/collection/mutable/AnyRefMap.html","searchKeys":["getOrNull"]},{"name":"def infixIntegralOps[T](x: T)(num: Integral[T]): IntegralOps","description":"scala.math.Integral$$ExtraImplicits","location":"api/scala/math/Integral$$ExtraImplicits.html","searchKeys":["infixIntegralOps"]},{"name":"def isNoSymbol: Boolean","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["isNoSymbol"]},{"name":"val x$8: FromExpr[T4]","description":"scala.quoted.FromExpr$$Tuple4FromExpr","location":"api/scala/quoted/FromExpr$$Tuple4FromExpr.html","searchKeys":["x$8"]},{"name":"class StringFormat[A](self: A) extends AnyVal","description":"scala.Predef$$StringFormat","location":"api/scala/Predef$$StringFormat.html","searchKeys":["StringFormat"]},{"name":"def times(x: T, y: T): T","description":"scala.math.Numeric","location":"api/scala/math/Numeric.html","searchKeys":["times"]},{"name":"val x$20: FromExpr[T3]","description":"scala.quoted.FromExpr$$Tuple17FromExpr","location":"api/scala/quoted/FromExpr$$Tuple17FromExpr.html","searchKeys":["x$20"]},{"name":"class TreeSet[A] extends AbstractSet[A] with SortedSet[A] with SortedSetOps[A, [A] =>> TreeSet[A], TreeSet[A]] with StrictOptimizedIterableOps[A, [A] =>> Set[A], TreeSet[A]] with StrictOptimizedSortedSetOps[A, [A] =>> TreeSet[A], TreeSet[A]] with SortedSetFactoryDefaults[A, [A] =>> TreeSet[A], [A] =>> Set[A]] with DefaultSerializable","description":"scala.collection.mutable.TreeSet","location":"api/scala/collection/mutable/TreeSet.html","searchKeys":["TreeSet"]},{"name":"val SYNTHETIC: 23","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["SYNTHETIC"]},{"name":"def copy(original: Tree)(name: String, rhs: Tree): TypeDef","description":"scala.quoted.Quotes$reflectModule$TypeDefModule","location":"api/scala/quoted/Quotes$reflectModule$TypeDefModule.html","searchKeys":["copy"]},{"name":"def productArity: Int","description":"scala.runtime.TupleXXL","location":"api/scala/runtime/TupleXXL.html","searchKeys":["productArity"]},{"name":"def newBuilder[A](evidence$1: Ordering[A]): Builder[A, PriorityQueue[A]]","description":"scala.collection.mutable.PriorityQueue$","location":"api/scala/collection/mutable/PriorityQueue$.html","searchKeys":["newBuilder"]},{"name":"class TypeBox[-L <: U, +U]","description":"scala.runtime.TypeBox","location":"api/scala/runtime/TypeBox.html","searchKeys":["TypeBox"]},{"name":"object StdIn extends StdIn","description":"scala.io.StdIn$","location":"api/scala/io/StdIn$.html","searchKeys":["StdIn"]},{"name":"val Undefined: Infinite","description":"scala.concurrent.duration.Duration$","location":"api/scala/concurrent/duration/Duration$.html","searchKeys":["Undefined"]},{"name":"trait StrictOptimizedMapOps[K, +V, +CC <: ([_$1, _$2] =>> IterableOps[, AnyConstr, ]), +C] extends MapOps[K, V, CC, C] with StrictOptimizedIterableOps[(K, V), [A] =>> Iterable[A], C]","description":"scala.collection.StrictOptimizedMapOps","location":"api/scala/collection/StrictOptimizedMapOps.html","searchKeys":["StrictOptimizedMapOps"]},{"name":"type NullPointerException = NullPointerException","description":"scala","location":"api/scala.html","searchKeys":["NullPointerException"]},{"name":"val x$9: FromExpr[T2]","description":"scala.quoted.FromExpr$$Tuple7FromExpr","location":"api/scala/quoted/FromExpr$$Tuple7FromExpr.html","searchKeys":["x$9"]},{"name":"def unapply(x: Any): Option[T]","description":"scala.reflect.ClassTag","location":"api/scala/reflect/ClassTag.html","searchKeys":["unapply"]},{"name":"def unary_-: Int","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["unary_-"]},{"name":"val jShortStepperShape: StepperShape[Short, IntStepper]","description":"scala.collection.StepperShape$","location":"api/scala/collection/StepperShape$.html","searchKeys":["jShortStepperShape"]},{"name":"def elemTag: ClassTag[]","description":"scala.collection.mutable.ArraySeq$$ofUnit","location":"api/scala/collection/mutable/ArraySeq$$ofUnit.html","searchKeys":["elemTag"]},{"name":"def remove(idx: Int): A","description":"scala.collection.mutable.ListBuffer","location":"api/scala/collection/mutable/ListBuffer.html","searchKeys":["remove"]},{"name":"def dropWhile[T](p: T => Boolean): IArray[T]","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["dropWhile"]},{"name":"def reduceLeftOption[B >: A](op: (B, A) => B): Option[B]","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["reduceLeftOption"]},{"name":"def exists(p: A => Boolean): Boolean","description":"scala.Option","location":"api/scala/Option.html","searchKeys":["exists"]},{"name":"val EMPTYCLAUSE: 44","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["EMPTYCLAUSE"]},{"name":"def sortWith(lt: (A, A) => Boolean): C","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["sortWith"]},{"name":"def >(x: Double): Boolean","description":"scala.Float","location":"api/scala/Float.html","searchKeys":[">"]},{"name":"val QUALIFIED: 2","description":"dotty.tools.tasty.TastyFormat$$NameTags","location":"api/dotty/tools/tasty/TastyFormat$$NameTags.html","searchKeys":["QUALIFIED"]},{"name":"class ArrayBuilder[T] extends ReusableBuilder[T, Array[T]] with Serializable","description":"scala.collection.mutable.ArrayBuilder","location":"api/scala/collection/mutable/ArrayBuilder.html","searchKeys":["ArrayBuilder"]},{"name":"given BindMethods","description":"scala.quoted.Quotes$reflectModule$BindMethods","location":"api/scala/quoted/Quotes$reflectModule$BindMethods.html","searchKeys":["BindMethods"]},{"name":"def andFinally(body: => Unit): Catch[T]","description":"scala.util.control.Exception$$Catch","location":"api/scala/util/control/Exception$$Catch.html","searchKeys":["andFinally"]},{"name":"def toList: List[A]","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["toList"]},{"name":"class ArrayBufferView[A](val array: Array[AnyRef], val length: Int) extends AbstractIndexedSeqView[A]","description":"scala.collection.mutable.ArrayBufferView","location":"api/scala/collection/mutable/ArrayBufferView.html","searchKeys":["ArrayBufferView"]},{"name":"def asScalaBuffer[A](l: List[A]): Buffer[A]","description":"scala.collection.JavaConverters$","location":"api/scala/collection/JavaConverters$.html","searchKeys":["asScalaBuffer"]},{"name":"def this(ord: Ordering[K])","description":"scala.collection.mutable.TreeMap","location":"api/scala/collection/mutable/TreeMap.html","searchKeys":["this"]},{"name":"def fromURL(s: String, enc: String): BufferedSource","description":"scala.io.Source$","location":"api/scala/io/Source$.html","searchKeys":["fromURL"]},{"name":"trait TypeReprModule","description":"scala.quoted.Quotes$reflectModule$TypeReprModule","location":"api/scala/quoted/Quotes$reflectModule$TypeReprModule.html","searchKeys":["TypeReprModule"]},{"name":"val ltArray: ToExpr[Array[T]]","description":"scala.quoted.ToExpr$$IArrayToExpr","location":"api/scala/quoted/ToExpr$$IArrayToExpr.html","searchKeys":["ltArray"]},{"name":"def bitLength: Int","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["bitLength"]},{"name":"def _3: T3","description":"scala.Product15","location":"api/scala/Product15.html","searchKeys":["_3"]},{"name":"val buildFromString: BuildFrom[String, Char, String]","description":"scala.collection.BuildFrom$","location":"api/scala/collection/BuildFrom$.html","searchKeys":["buildFromString"]},{"name":"val x$10: Type[T10]","description":"scala.quoted.FromExpr$$Tuple21FromExpr","location":"api/scala/quoted/FromExpr$$Tuple21FromExpr.html","searchKeys":["x$10"]},{"name":"def _18: T18","description":"scala.Product21","location":"api/scala/Product21.html","searchKeys":["_18"]},{"name":"def _1: T1","description":"scala.Product7","location":"api/scala/Product7.html","searchKeys":["_1"]},{"name":"def apply[T](frac: Fractional[T]): Fractional[T]","description":"scala.math.Fractional$","location":"api/scala/math/Fractional$.html","searchKeys":["apply"]},{"name":"val GenIterable: Iterable","description":"scala.collection","location":"api/scala/collection.html","searchKeys":["GenIterable"]},{"name":"def stderr: PrintStream","description":"scala.sys.process","location":"api/scala/sys/process.html","searchKeys":["stderr"]},{"name":"val x$1: Type[T1]","description":"scala.quoted.FromExpr$$Tuple14FromExpr","location":"api/scala/quoted/FromExpr$$Tuple14FromExpr.html","searchKeys":["x$1"]},{"name":"def microsecond[C](c: C)(ev: Classifier[C]): R","description":"scala.concurrent.duration.DurationConversions","location":"api/scala/concurrent/duration/DurationConversions.html","searchKeys":["microsecond"]},{"name":"def -(x: Byte): Int","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["-"]},{"name":"class Sorted[A, B >: A] extends SeqView[A]","description":"scala.collection.SeqView$$Sorted","location":"api/scala/collection/SeqView$$Sorted.html","searchKeys":["Sorted"]},{"name":"def enrichAsScalaFromDoubleBinaryOperator(jf: DoubleBinaryOperator): RichDoubleBinaryOperatorAsFunction2","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsScalaFromDoubleBinaryOperator"]},{"name":"def apply(x1: T, x2: U): Double","description":"scala.jdk.FunctionWrappers$$FromJavaToDoubleBiFunction","location":"api/scala/jdk/FunctionWrappers$$FromJavaToDoubleBiFunction.html","searchKeys":["apply"]},{"name":"def emptyDoubleIArray: IArray[Double]","description":"scala.IArray$package$$IArray$","location":"api/scala/IArray$package$$IArray$.html","searchKeys":["emptyDoubleIArray"]},{"name":"def apply[A](x: A): Option[A]","description":"scala.Option$","location":"api/scala/Option$.html","searchKeys":["apply"]},{"name":"trait ExportModule","description":"scala.quoted.Quotes$reflectModule$ExportModule","location":"api/scala/quoted/Quotes$reflectModule$ExportModule.html","searchKeys":["ExportModule"]},{"name":"def mapValuesNow[V1](f: V => V1): AnyRefMap[K, V1]","description":"scala.collection.mutable.AnyRefMap","location":"api/scala/collection/mutable/AnyRefMap.html","searchKeys":["mapValuesNow"]},{"name":"def encode(name: String): String","description":"scala.reflect.NameTransformer$","location":"api/scala/reflect/NameTransformer$.html","searchKeys":["encode"]},{"name":"type String = String","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["String"]},{"name":"val x$4: Type[T4]","description":"scala.quoted.FromExpr$$Tuple4FromExpr","location":"api/scala/quoted/FromExpr$$Tuple4FromExpr.html","searchKeys":["x$4"]},{"name":"def scrutinee: Term","description":"scala.quoted.Quotes$reflectModule$MatchMethods","location":"api/scala/quoted/Quotes$reflectModule$MatchMethods.html","searchKeys":["scrutinee"]},{"name":"def lineStream_!(log: ProcessLogger, capacity: Integer): Stream[String]","description":"scala.sys.process.ProcessBuilder","location":"api/scala/sys/process/ProcessBuilder.html","searchKeys":["lineStream_!"]},{"name":"def tupled: (T1, T2, T3) => R","description":"scala.Function3","location":"api/scala/Function3.html","searchKeys":["tupled"]},{"name":"class LongArrayHasSeqParStream(a: Array[Long])","description":"scala.collection.convert.StreamExtensions$LongArrayHasSeqParStream","location":"api/scala/collection/convert/StreamExtensions$LongArrayHasSeqParStream.html","searchKeys":["LongArrayHasSeqParStream"]},{"name":"def unapply(x: Select): (Term, String)","description":"scala.quoted.Quotes$reflectModule$SelectModule","location":"api/scala/quoted/Quotes$reflectModule$SelectModule.html","searchKeys":["unapply"]},{"name":"def tupled: (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) => R","description":"scala.Function16","location":"api/scala/Function16.html","searchKeys":["tupled"]},{"name":"def arrayIsSeq[A0](evidence$1: ClassTag[A0]): IsSeq[Array[A0]] { type A = A0; type C = Array[A0];  }","description":"scala.collection.generic.IsSeq$","location":"api/scala/collection/generic/IsSeq$.html","searchKeys":["arrayIsSeq"]},{"name":"trait ChainingSyntax","description":"scala.util.ChainingSyntax","location":"api/scala/util/ChainingSyntax.html","searchKeys":["ChainingSyntax"]},{"name":"def update(idx: Int, newelem: T): Unit","description":"scala.collection.mutable.UnrolledBuffer$$Unrolled","location":"api/scala/collection/mutable/UnrolledBuffer$$Unrolled.html","searchKeys":["update"]},{"name":"given AppliedMethods","description":"scala.quoted.Quotes$reflectModule$AppliedMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["AppliedMethods"]},{"name":"def apply(tup: (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15))(using Quotes): Expr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)]","description":"scala.quoted.ToExpr$$Tuple15ToExpr","location":"api/scala/quoted/ToExpr$$Tuple15ToExpr.html","searchKeys":["apply"]},{"name":"val macros: macros","description":"scala.language$$experimental$","location":"api/scala/language$$experimental$.html","searchKeys":["macros"]},{"name":"def noSymbol: Symbol","description":"scala.quoted.Quotes$reflectModule$SymbolModule","location":"api/scala/quoted/Quotes$reflectModule$SymbolModule.html","searchKeys":["noSymbol"]},{"name":"def higherOrderHole[U](args: Any*): U","description":"scala.quoted.runtime.Patterns$","location":"api/scala/quoted/runtime/Patterns$.html","searchKeys":["higherOrderHole"]},{"name":"val x$1: Type[T1]","description":"scala.quoted.FromExpr$$Tuple9FromExpr","location":"api/scala/quoted/FromExpr$$Tuple9FromExpr.html","searchKeys":["x$1"]},{"name":"class AsJavaPredicate[T](sf: T => Boolean) extends Predicate[T]","description":"scala.jdk.FunctionWrappers$$AsJavaPredicate","location":"api/scala/jdk/FunctionWrappers$$AsJavaPredicate.html","searchKeys":["AsJavaPredicate"]},{"name":"Procedures","description":"","location":"docs/Procedures/index.html","searchKeys":["Procedures"]},{"name":"class FromJavaDoubleSupplier(jf: DoubleSupplier) extends () => Double","description":"scala.jdk.FunctionWrappers$$FromJavaDoubleSupplier","location":"api/scala/jdk/FunctionWrappers$$FromJavaDoubleSupplier.html","searchKeys":["FromJavaDoubleSupplier"]},{"name":"def fromUTF8(bytes: Array[Byte], offset: Int, len: Int): Array[Char]","description":"scala.io.Codec$","location":"api/scala/io/Codec$.html","searchKeys":["fromUTF8"]},{"name":"def right: RightProjection[A, B]","description":"scala.util.Either","location":"api/scala/util/Either.html","searchKeys":["right"]},{"name":"trait Product20[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16, +T17, +T18, +T19, +T20] extends Product","description":"scala.Product20","location":"api/scala/Product20.html","searchKeys":["Product20"]},{"name":"def _6: T6","description":"scala.Product16","location":"api/scala/Product16.html","searchKeys":["_6"]},{"name":"def apply(x: Unit, xs: Unit*): Array[Unit]","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["apply"]},{"name":"def *(x: Float): Float","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["*"]},{"name":"class DynamicVariable[T](init: T)","description":"scala.util.DynamicVariable","location":"api/scala/util/DynamicVariable.html","searchKeys":["DynamicVariable"]},{"name":"def multiplyExact(x: Int, y: Int): Int","description":"scala.math","location":"api/scala/math.html","searchKeys":["multiplyExact"]},{"name":"def successful[T](result: T): Promise[T]","description":"scala.concurrent.Promise$","location":"api/scala/concurrent/Promise$.html","searchKeys":["successful"]},{"name":"def ofDim[T](n1: Int, n2: Int, n3: Int, n4: Int, n5: Int)(evidence$10: ClassTag[T]): Array[Array[Array[Array[Array[T]]]]]","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["ofDim"]},{"name":"def apply(x1: Double): Unit","description":"scala.jdk.FunctionWrappers$$FromJavaDoubleConsumer","location":"api/scala/jdk/FunctionWrappers$$FromJavaDoubleConsumer.html","searchKeys":["apply"]},{"name":"def isFinite: Boolean","description":"scala.runtime.RichDouble","location":"api/scala/runtime/RichDouble.html","searchKeys":["isFinite"]},{"name":"def toPos: Position","description":"scala.quoted.Quotes$reflectModule$RenameSelectorMethods","location":"api/scala/quoted/Quotes$reflectModule$RenameSelectorMethods.html","searchKeys":["toPos"]},{"name":"type PolyType <: MethodOrPoly","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["PolyType"]},{"name":"def findPrefixOf(source: CharSequence): Option[String]","description":"scala.util.matching.Regex","location":"api/scala/util/matching/Regex.html","searchKeys":["findPrefixOf"]},{"name":"val Unapply: UnapplyModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Unapply"]},{"name":"val ConstantType: ConstantTypeModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ConstantType"]},{"name":"class AnyArrayHasSeqParStream[A <: AnyRef](a: Array[A])","description":"scala.collection.convert.StreamExtensions$AnyArrayHasSeqParStream","location":"api/scala/collection/convert/StreamExtensions$AnyArrayHasSeqParStream.html","searchKeys":["AnyArrayHasSeqParStream"]},{"name":"def lastOption: Option[A]","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["lastOption"]},{"name":"trait ClassfileAnnotation extends ConstantAnnotation","description":"scala.annotation.ClassfileAnnotation","location":"api/scala/annotation/ClassfileAnnotation.html","searchKeys":["ClassfileAnnotation"]},{"name":"def zipWithIndex: CC[(A, Int)]","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["zipWithIndex"]},{"name":"def name: String","description":"scala.quoted.Quotes$reflectModule$NamedArgMethods","location":"api/scala/quoted/Quotes$reflectModule$NamedArgMethods.html","searchKeys":["name"]},{"name":"def %(x: Long): Double","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["%"]},{"name":"class TapEach[K, +V, +U](underlying: SomeMapOps[K, V], f: (K, V) => U) extends AbstractMapView[K, V]","description":"scala.collection.MapView$$TapEach","location":"api/scala/collection/MapView$$TapEach.html","searchKeys":["TapEach"]},{"name":"Dropped: Weak Conformance","description":"","location":"docs/reference/dropped-features/weak-conformance.html","searchKeys":["Dropped: Weak Conformance"]},{"name":"val x$18: FromExpr[T9]","description":"scala.quoted.FromExpr$$Tuple9FromExpr","location":"api/scala/quoted/FromExpr$$Tuple9FromExpr.html","searchKeys":["x$18"]},{"name":"def result(): Array[Double]","description":"scala.collection.mutable.ArrayBuilder$$ofDouble","location":"api/scala/collection/mutable/ArrayBuilder$$ofDouble.html","searchKeys":["result"]},{"name":"def &(x: Long): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["&"]},{"name":"Language Versions","description":"","location":"docs/usage/language-versions.html","searchKeys":["Language Versions"]},{"name":"class IntegralOps(lhs: T) extends NumericOps","description":"scala.math.Integral$IntegralOps","location":"api/scala/math/Integral$IntegralOps.html","searchKeys":["IntegralOps"]},{"name":"def isClassConstructor: Boolean","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["isClassConstructor"]},{"name":"def _1: T1","description":"scala.Product10","location":"api/scala/Product10.html","searchKeys":["_1"]},{"name":"def empty[A]: List[A]","description":"scala.collection.immutable.List$","location":"api/scala/collection/immutable/List$.html","searchKeys":["empty"]},{"name":"def productElement(n: Int): Any","description":"scala.Product","location":"api/scala/Product.html","searchKeys":["productElement"]},{"name":"val x$24: FromExpr[T5]","description":"scala.quoted.FromExpr$$Tuple19FromExpr","location":"api/scala/quoted/FromExpr$$Tuple19FromExpr.html","searchKeys":["x$24"]},{"name":"val x$35: FromExpr[T14]","description":"scala.quoted.FromExpr$$Tuple21FromExpr","location":"api/scala/quoted/FromExpr$$Tuple21FromExpr.html","searchKeys":["x$35"]},{"name":"def <(x: Byte): Boolean","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["<"]},{"name":"object Boolean extends AnyValCompanion","description":"scala.Boolean$","location":"api/scala/Boolean$.html","searchKeys":["Boolean"]},{"name":"def minus(x: Char, y: Char): Char","description":"scala.math.Numeric$$CharIsIntegral","location":"api/scala/math/Numeric$$CharIsIntegral.html","searchKeys":["minus"]},{"name":"val inodeupdater: AtomicReferenceFieldUpdater[INodeBase[, ], MainNode[, ]]","description":"scala.collection.concurrent.TrieMap$","location":"api/scala/collection/concurrent/TrieMap$.html","searchKeys":["inodeupdater"]},{"name":"def &(x: Int): Int","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["&"]},{"name":"def withErr[T](err: OutputStream)(thunk: => T): T","description":"scala.Console$","location":"api/scala/Console$.html","searchKeys":["withErr"]},{"name":"def isCompleted: Boolean","description":"scala.concurrent.Future","location":"api/scala/concurrent/Future.html","searchKeys":["isCompleted"]},{"name":"trait AccumulatorFactoryInfo[A, C]","description":"scala.collection.convert.StreamExtensions$$AccumulatorFactoryInfo","location":"api/scala/collection/convert/StreamExtensions$$AccumulatorFactoryInfo.html","searchKeys":["AccumulatorFactoryInfo"]},{"name":"val x$3: FromExpr[T1]","description":"scala.quoted.FromExpr$$Tuple2FromExpr","location":"api/scala/quoted/FromExpr$$Tuple2FromExpr.html","searchKeys":["x$3"]},{"name":"Explicit Nulls","description":"","location":"docs/internals/explicit-nulls.html","searchKeys":["Explicit Nulls"]},{"name":"def seqViewIsSeq[CC0 <: ([X] =>> SeqView[X]), A0]: IsSeq[CC0[A0]] { type A = A0; type C = View[A0];  }","description":"scala.collection.generic.IsSeq$","location":"api/scala/collection/generic/IsSeq$.html","searchKeys":["seqViewIsSeq"]},{"name":"trait StrictOptimizedSortedSetOps[A, +CC <: ([X] =>> SortedSet[X]), +C <: SortedSetOps[A, CC, C]] extends SortedSetOps[A, CC, C] with StrictOptimizedSortedSetOps[A, CC, C] with StrictOptimizedSetOps[A, [A] =>> Set[A], C]","description":"scala.collection.immutable.StrictOptimizedSortedSetOps","location":"api/scala/collection/immutable/StrictOptimizedSortedSetOps.html","searchKeys":["StrictOptimizedSortedSetOps"]},{"name":"def isBind: Boolean","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["isBind"]},{"name":"class LazyBoolean extends Serializable","description":"scala.runtime.LazyBoolean","location":"api/scala/runtime/LazyBoolean.html","searchKeys":["LazyBoolean"]},{"name":"Other Changed Features","description":"","location":"docs/Other Changed Features/index.html","searchKeys":["Other Changed Features"]},{"name":"def intersection[R](that: LongMap[R]): LongMap[T]","description":"scala.collection.immutable.LongMap","location":"api/scala/collection/immutable/LongMap.html","searchKeys":["intersection"]},{"name":"class AnyValManifest[T <: AnyVal](val toString: String) extends Manifest[T] with Equals","description":"scala.reflect.AnyValManifest","location":"api/scala/reflect/AnyValManifest.html","searchKeys":["AnyValManifest"]},{"name":"def copyToArray[B >: A](xs: Array[B], start: Int): Int","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["copyToArray"]},{"name":"val x$13: FromExpr[T6]","description":"scala.quoted.FromExpr$$Tuple7FromExpr","location":"api/scala/quoted/FromExpr$$Tuple7FromExpr.html","searchKeys":["x$13"]},{"name":"def toInt(x: Float): Int","description":"scala.math.Numeric$$FloatIsFractional","location":"api/scala/math/Numeric$$FloatIsFractional.html","searchKeys":["toInt"]},{"name":"val Nil: Nil","description":"scala","location":"api/scala.html","searchKeys":["Nil"]},{"name":"def ???: Nothing","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["???"]},{"name":"def canEqual(that: Any): Boolean","description":"scala.collection.Set","location":"api/scala/collection/Set.html","searchKeys":["canEqual"]},{"name":"def newBuilder: StringBuilder","description":"scala.collection.mutable.StringBuilder$","location":"api/scala/collection/mutable/StringBuilder$.html","searchKeys":["newBuilder"]},{"name":"object ProcessBuilder extends ProcessBuilderImpl","description":"scala.sys.process.ProcessBuilder$","location":"api/scala/sys/process/ProcessBuilder$.html","searchKeys":["ProcessBuilder"]},{"name":"class SplicedType extends Annotation","description":"scala.quoted.runtime.SplicedType","location":"api/scala/quoted/runtime/SplicedType.html","searchKeys":["SplicedType"]},{"name":"def iterator: Iterator[Nothing]","description":"scala.collection.View$$Empty$","location":"api/scala/collection/View$$Empty$.html","searchKeys":["iterator"]},{"name":"def Enum: Flags","description":"scala.quoted.Quotes$reflectModule$FlagsModule","location":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html","searchKeys":["Enum"]},{"name":"package scala.io","description":"scala.io","location":"api/scala/io.html","searchKeys":["scala.io"]},{"name":"val VALDEF: 129","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["VALDEF"]},{"name":"given Tuple14FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14](using val x$1: Type[T1], val x$2: Type[T2], val x$3: Type[T3], val x$4: Type[T4], val x$5: Type[T5], val x$6: Type[T6], val x$7: Type[T7], val x$8: Type[T8], val x$9: Type[T9], val x$10: Type[T10], val x$11: Type[T11], val x$12: Type[T12], val x$13: Type[T13], val x$14: Type[T14], val x$15: FromExpr[T1], val x$16: FromExpr[T2], val x$17: FromExpr[T3], val x$18: FromExpr[T4], val x$19: FromExpr[T5], val x$20: FromExpr[T6], val x$21: FromExpr[T7], val x$22: FromExpr[T8], val x$23: FromExpr[T9], val x$24: FromExpr[T10], val x$25: FromExpr[T11], val x$26: FromExpr[T12], val x$27: FromExpr[T13], val x$28: FromExpr[T14]): FromExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)]","description":"scala.quoted.FromExpr$$Tuple14FromExpr","location":"api/scala/quoted/FromExpr$.html","searchKeys":["Tuple14FromExpr"]},{"name":"def patch[B >: Char](from: Int, other: IterableOnce[B], replaced: Int): IndexedSeq[B]","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["patch"]},{"name":"def apply[T](key: String)(evidence$1: Creator[T]): Prop[T]","description":"scala.sys.Prop$","location":"api/scala/sys/Prop$.html","searchKeys":["apply"]},{"name":"def run(): Process","description":"scala.sys.process.ProcessBuilder","location":"api/scala/sys/process/ProcessBuilder.html","searchKeys":["run"]},{"name":"def isInfinity: Boolean","description":"scala.runtime.RichDouble","location":"api/scala/runtime/RichDouble.html","searchKeys":["isInfinity"]},{"name":"type Literal <: Term","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Literal"]},{"name":"def productHash(x: Product): Int","description":"scala.util.hashing.MurmurHash3$","location":"api/scala/util/hashing/MurmurHash3$.html","searchKeys":["productHash"]},{"name":"def asScalaBufferConverter[A](l: List[A]): AsScala[Buffer[A]]","description":"scala.collection.JavaConverters$","location":"api/scala/collection/JavaConverters$.html","searchKeys":["asScalaBufferConverter"]},{"name":"type CaseDef <: Tree","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["CaseDef"]},{"name":"def apply(symbol: Symbol, rhs: Option[Term]): ValDef","description":"scala.quoted.Quotes$reflectModule$ValDefModule","location":"api/scala/quoted/Quotes$reflectModule$ValDefModule.html","searchKeys":["apply"]},{"name":"def selectors: List[Selector]","description":"scala.quoted.Quotes$reflectModule$ExportMethods","location":"api/scala/quoted/Quotes$reflectModule$ExportMethods.html","searchKeys":["selectors"]},{"name":"def length: Int","description":"scala.collection.mutable.ArrayBuilder","location":"api/scala/collection/mutable/ArrayBuilder.html","searchKeys":["length"]},{"name":"def fromString(s: String): String","description":"scala.util.CommandLineParser$$FromString$$given_FromString_String$","location":"api/scala/util/CommandLineParser$$FromString$$given_FromString_String$.html","searchKeys":["fromString"]},{"name":"package scala.quoted.runtime","description":"scala.quoted.runtime","location":"api/scala/quoted/runtime.html","searchKeys":["scala.quoted.runtime"]},{"name":"def getExponent(f: Float): Int","description":"scala.math","location":"api/scala/math.html","searchKeys":["getExponent"]},{"name":"def get(k: K): Option[V]","description":"scala.collection.concurrent.TrieMap","location":"api/scala/collection/concurrent/TrieMap.html","searchKeys":["get"]},{"name":"def <=(x: Double): Boolean","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["<="]},{"name":"def apply(tpe: TypeRepr): Inferred","description":"scala.quoted.Quotes$reflectModule$InferredModule","location":"api/scala/quoted/Quotes$reflectModule$InferredModule.html","searchKeys":["apply"]},{"name":"given NullConstantTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["NullConstantTypeTest"]},{"name":"def signum: Int","description":"scala.math.Numeric$NumericOps","location":"api/scala/math/Numeric$NumericOps.html","searchKeys":["signum"]},{"name":"Testing in Dotty","description":"","location":"docs/contributing/testing.html","searchKeys":["Testing in Dotty"]},{"name":"def applyAsDouble(x1: Double): Double","description":"scala.jdk.FunctionWrappers$$AsJavaDoubleUnaryOperator","location":"api/scala/jdk/FunctionWrappers$$AsJavaDoubleUnaryOperator.html","searchKeys":["applyAsDouble"]},{"name":"def gteq(other: Duration): Boolean","description":"scala.concurrent.duration.Duration","location":"api/scala/concurrent/duration/Duration.html","searchKeys":["gteq"]},{"name":"class ofUnit extends ArrayBuilder[Unit]","description":"scala.collection.mutable.ArrayBuilder$$ofUnit","location":"api/scala/collection/mutable/ArrayBuilder$$ofUnit.html","searchKeys":["ofUnit"]},{"name":"def explanation: String","description":"scala.quoted.Quotes$reflectModule$ImplicitSearchFailureMethods","location":"api/scala/quoted/Quotes$reflectModule$ImplicitSearchFailureMethods.html","searchKeys":["explanation"]},{"name":"def keysIteratorFrom(start: A): Iterator[A]","description":"scala.collection.SortedSetOps","location":"api/scala/collection/SortedSetOps.html","searchKeys":["keysIteratorFrom"]},{"name":"val x$7: Type[T7]","description":"scala.quoted.FromExpr$$Tuple13FromExpr","location":"api/scala/quoted/FromExpr$$Tuple13FromExpr.html","searchKeys":["x$7"]},{"name":"def &(x: Short): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["&"]},{"name":"trait Selectable extends Selectable","description":"scala.reflect.Selectable","location":"api/scala/reflect/Selectable.html","searchKeys":["Selectable"]},{"name":"def enrichAsJavaIntConsumer[A0](sf: A0 => Unit)(evA0: A0 =:= Int): RichFunction1AsIntConsumer","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsJavaIntConsumer"]},{"name":"def <=(x: Short): Boolean","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["<="]},{"name":"def from[K <: AnyRef, V](source: IterableOnce[(K, V)]): AnyRefMap[K, V]","description":"scala.collection.mutable.AnyRefMap$","location":"api/scala/collection/mutable/AnyRefMap$.html","searchKeys":["from"]},{"name":"trait JFunction0$mcF$sp extends () => Any with Serializable","description":"scala.runtime.java8.JFunction0$mcF$sp","location":"api/scala/runtime/java8/JFunction0$mcF$sp.html","searchKeys":["JFunction0$mcF$sp"]},{"name":"given Tuple16FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16](using val x$1: Type[T1], val x$2: Type[T2], val x$3: Type[T3], val x$4: Type[T4], val x$5: Type[T5], val x$6: Type[T6], val x$7: Type[T7], val x$8: Type[T8], val x$9: Type[T9], val x$10: Type[T10], val x$11: Type[T11], val x$12: Type[T12], val x$13: Type[T13], val x$14: Type[T14], val x$15: Type[T15], val x$16: Type[T16], val x$17: FromExpr[T1], val x$18: FromExpr[T2], val x$19: FromExpr[T3], val x$20: FromExpr[T4], val x$21: FromExpr[T5], val x$22: FromExpr[T6], val x$23: FromExpr[T7], val x$24: FromExpr[T8], val x$25: FromExpr[T9], val x$26: FromExpr[T10], val x$27: FromExpr[T11], val x$28: FromExpr[T12], val x$29: FromExpr[T13], val x$30: FromExpr[T14], val x$31: FromExpr[T15], val x$32: FromExpr[T16]): FromExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)]","description":"scala.quoted.FromExpr$$Tuple16FromExpr","location":"api/scala/quoted/FromExpr$$Tuple16FromExpr.html","searchKeys":["Tuple16FromExpr"]},{"name":"def _7: T7","description":"scala.Product10","location":"api/scala/Product10.html","searchKeys":["_7"]},{"name":"def toJava: Duration","description":"scala.jdk.DurationConverters$$ScalaDurationOps","location":"api/scala/jdk/DurationConverters$$ScalaDurationOps.html","searchKeys":["toJava"]},{"name":"given MethodTypeMethods","description":"scala.quoted.Quotes$reflectModule$MethodTypeMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["MethodTypeMethods"]},{"name":"def -(x: Float): Float","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["-"]},{"name":"def isCompleted: Boolean","description":"scala.concurrent.Promise","location":"api/scala/concurrent/Promise.html","searchKeys":["isCompleted"]},{"name":"def asScala: Double => Int","description":"scala.jdk.FunctionWrappers$$RichDoubleToIntFunctionAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichDoubleToIntFunctionAsFunction1.html","searchKeys":["asScala"]},{"name":"def transpose[B](asIterable: A => Iterable[B]): CC[CC[B]]","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["transpose"]},{"name":"def ulp(x: Double): Double","description":"scala.math","location":"api/scala/math.html","searchKeys":["ulp"]},{"name":"def force: IndexedSeq[A]","description":"scala.collection.View","location":"api/scala/collection/View.html","searchKeys":["force"]},{"name":"def box(x: Char): Character","description":"scala.Char$","location":"api/scala/Char$.html","searchKeys":["box"]},{"name":"def append(cs: CharSequence): StringBuilder","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["append"]},{"name":"def toShort: Short","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["toShort"]},{"name":"def enrichAsScalaFromToDoubleFunction[T](jf: ToDoubleFunction[T]): RichToDoubleFunctionAsFunction1[T]","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsScalaFromToDoubleFunction"]},{"name":"def appliedToType(targ: TypeRepr): Term","description":"scala.quoted.Quotes$reflectModule$TermMethods","location":"api/scala/quoted/Quotes$reflectModule$TermMethods.html","searchKeys":["appliedToType"]},{"name":"def Value: Value","description":"scala.Enumeration","location":"api/scala/Enumeration.html","searchKeys":["Value"]},{"name":"def fromBitMask(elems: Array[Long]): BitSet","description":"scala.collection.mutable.BitSet$","location":"api/scala/collection/mutable/BitSet$.html","searchKeys":["fromBitMask"]},{"name":"class MutableSetHasAsJava[A](s: Set[A])","description":"scala.collection.convert.AsJavaExtensions$MutableSetHasAsJava","location":"api/scala/collection/convert/AsJavaExtensions$MutableSetHasAsJava.html","searchKeys":["MutableSetHasAsJava"]},{"name":"trait IsIterableOnce[Repr]","description":"scala.collection.generic.IsIterableOnce","location":"api/scala/collection/generic/IsIterableOnce.html","searchKeys":["IsIterableOnce"]},{"name":"def fromIArray[T](xs: IArray[T]): Tuple","description":"scala.Tuple$","location":"api/scala/Tuple$.html","searchKeys":["fromIArray"]},{"name":"def _15: T15","description":"scala.Product16","location":"api/scala/Product16.html","searchKeys":["_15"]},{"name":"def apply(x: T)(using Quotes): Expr[T]","description":"scala.quoted.ToExpr$$BooleanToExpr","location":"api/scala/quoted/ToExpr$$BooleanToExpr.html","searchKeys":["apply"]},{"name":"def ==(x: Byte): Boolean","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["=="]},{"name":"def report(pos: Int, msg: String, out: PrintStream): Unit","description":"scala.io.Source","location":"api/scala/io/Source.html","searchKeys":["report"]},{"name":"def !=(x: Int): Boolean","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["!="]},{"name":"def withFilter(p: Char => Boolean): WithFilter","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["withFilter"]},{"name":"def prependedAll[B >: Char](prefix: IterableOnce[B]): IndexedSeq[B]","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["prependedAll"]},{"name":"val unsafeArray: Array[Byte]","description":"scala.collection.immutable.ArraySeq$$ofByte","location":"api/scala/collection/immutable/ArraySeq$$ofByte.html","searchKeys":["unsafeArray"]},{"name":"val LOCAL: 22","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["LOCAL"]},{"name":"def flatMap[S](f: T => Future[S])(executor: ExecutionContext): Future[S]","description":"scala.concurrent.Future","location":"api/scala/concurrent/Future.html","searchKeys":["flatMap"]},{"name":"val x$7: Type[T7]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["x$7"]},{"name":"def erasedValue[T]: T","description":"scala.compiletime","location":"api/scala/compiletime.html","searchKeys":["erasedValue"]},{"name":"class Conversion[-T, +U] extends T => U","description":"scala.Conversion","location":"api/scala/Conversion.html","searchKeys":["Conversion"]},{"name":"def copy(original: Tree)(bound: Option[TypeTree], selector: TypeTree, cases: List[TypeCaseDef]): MatchTypeTree","description":"scala.quoted.Quotes$reflectModule$MatchTypeTreeModule","location":"api/scala/quoted/Quotes$reflectModule$MatchTypeTreeModule.html","searchKeys":["copy"]},{"name":"def filter[C](p: (El1, El2) => Boolean)(bf: BuildFrom[C1, (El1, El2), C]): C","description":"scala.collection.LazyZip2","location":"api/scala/collection/LazyZip2.html","searchKeys":["filter"]},{"name":"def negateExact(x: Long): Long","description":"scala.math","location":"api/scala/math.html","searchKeys":["negateExact"]},{"name":"def name: String","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["name"]},{"name":"class Short extends AnyVal","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["Short"]},{"name":"def foreach[U](f: (K, V) => U): Unit","description":"scala.collection.mutable.CollisionProofHashMap$$RBNode","location":"api/scala/collection/mutable/CollisionProofHashMap$$RBNode.html","searchKeys":["foreach"]},{"name":"def #<(b: ProcessBuilder): ProcessBuilder","description":"scala.sys.process.ProcessBuilder$$Sink","location":"api/scala/sys/process/ProcessBuilder$$Sink.html","searchKeys":["#<"]},{"name":"def elemTag: ClassTag[]","description":"scala.collection.mutable.ArraySeq$$ofRef","location":"api/scala/collection/mutable/ArraySeq$$ofRef.html","searchKeys":["elemTag"]},{"name":"def baseType(cls: Symbol): TypeRepr","description":"scala.quoted.Quotes$reflectModule$TypeReprMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html","searchKeys":["baseType"]},{"name":"class LazyByte extends Serializable","description":"scala.runtime.LazyByte","location":"api/scala/runtime/LazyByte.html","searchKeys":["LazyByte"]},{"name":"def empty[K, V](evidence$47: Ordering[K]): CC[K, V]","description":"scala.collection.SortedMapFactory$$Delegate","location":"api/scala/collection/SortedMapFactory$$Delegate.html","searchKeys":["empty"]},{"name":"package scala","description":"scala","location":"api/scala.html","searchKeys":["scala"]},{"name":"class AbstractIterator[+A] extends Iterator[A]","description":"scala.collection.AbstractIterator","location":"api/scala/collection/AbstractIterator.html","searchKeys":["AbstractIterator"]},{"name":"def <(x: Byte): Boolean","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["<"]},{"name":"def map[B](f: A => B): TailRec[B]","description":"scala.util.control.TailCalls$$TailRec","location":"api/scala/util/control/TailCalls$$TailRec.html","searchKeys":["map"]},{"name":"val fallbackSystemCodec: Codec","description":"scala.io.LowPriorityCodecImplicits","location":"api/scala/io/LowPriorityCodecImplicits.html","searchKeys":["fallbackSystemCodec"]},{"name":"trait Iterator[+A] extends IterableOnce[A] with IterableOnceOps[A, [A] =>> Iterator[A], Iterator[A]]","description":"scala.collection.Iterator","location":"api/scala/collection/Iterator.html","searchKeys":["Iterator"]},{"name":"def &(x: Int): Int","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["&"]},{"name":"class RichFunction2AsBiFunction[T, U, R](underlying: (T, U) => R) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichFunction2AsBiFunction","location":"api/scala/jdk/FunctionWrappers$$RichFunction2AsBiFunction.html","searchKeys":["RichFunction2AsBiFunction"]},{"name":"given NamedArgMethods","description":"scala.quoted.Quotes$reflectModule$NamedArgMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["NamedArgMethods"]},{"name":"def length: Int","description":"scala.collection.SeqView$$Drop","location":"api/scala/collection/SeqView$$Drop.html","searchKeys":["length"]},{"name":"def appended[B >: A](x: B)(evidence$8: ClassTag[B]): Array[B]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["appended"]},{"name":"def map(f: Value => Value): ValueSet","description":"scala.Enumeration$ValueSet","location":"api/scala/Enumeration$ValueSet.html","searchKeys":["map"]},{"name":"def foreach[U](f: A => U): Unit","description":"scala.collection.WithFilter","location":"api/scala/collection/WithFilter.html","searchKeys":["foreach"]},{"name":"given Tuple16FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16](using val x$1: Type[T1], val x$2: Type[T2], val x$3: Type[T3], val x$4: Type[T4], val x$5: Type[T5], val x$6: Type[T6], val x$7: Type[T7], val x$8: Type[T8], val x$9: Type[T9], val x$10: Type[T10], val x$11: Type[T11], val x$12: Type[T12], val x$13: Type[T13], val x$14: Type[T14], val x$15: Type[T15], val x$16: Type[T16], val x$17: FromExpr[T1], val x$18: FromExpr[T2], val x$19: FromExpr[T3], val x$20: FromExpr[T4], val x$21: FromExpr[T5], val x$22: FromExpr[T6], val x$23: FromExpr[T7], val x$24: FromExpr[T8], val x$25: FromExpr[T9], val x$26: FromExpr[T10], val x$27: FromExpr[T11], val x$28: FromExpr[T12], val x$29: FromExpr[T13], val x$30: FromExpr[T14], val x$31: FromExpr[T15], val x$32: FromExpr[T16]): FromExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)]","description":"scala.quoted.FromExpr$$Tuple16FromExpr","location":"api/scala/quoted/FromExpr$.html","searchKeys":["Tuple16FromExpr"]},{"name":"val x$3: Type[T3]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["x$3"]},{"name":"trait SeqFactory[+CC <: ([A] =>> SeqOps[A, [A] =>> Seq[A], Seq[A]])] extends IterableFactory[CC]","description":"scala.collection.SeqFactory","location":"api/scala/collection/SeqFactory.html","searchKeys":["SeqFactory"]},{"name":"val TRAIT: 20","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["TRAIT"]},{"name":"def lazyZip[B](that: Iterable[B]): LazyZip2[A, B, Array[A]]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["lazyZip"]},{"name":"val x$17: Type[T17]","description":"scala.quoted.FromExpr$$Tuple19FromExpr","location":"api/scala/quoted/FromExpr$$Tuple19FromExpr.html","searchKeys":["x$17"]},{"name":"def startLine: Int","description":"scala.quoted.Quotes$reflectModule$PositionMethods","location":"api/scala/quoted/Quotes$reflectModule$PositionMethods.html","searchKeys":["startLine"]},{"name":"def !=(x: Float): Boolean","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["!="]},{"name":"val jCharacterStepperShape: StepperShape[Character, IntStepper]","description":"scala.collection.StepperShape$","location":"api/scala/collection/StepperShape$.html","searchKeys":["jCharacterStepperShape"]},{"name":"def length: Int","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["length"]},{"name":"def *(that: BigInt): BigInt","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["*"]},{"name":"type TraversableOnce[+A] = IterableOnce[A]","description":"scala","location":"api/scala.html","searchKeys":["TraversableOnce"]},{"name":"def <=(x: Byte): Boolean","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["<="]},{"name":"def concat[B >: A](suffix: SomeIndexedSeqOps[B]): IndexedSeqView[B]","description":"scala.collection.IndexedSeqView","location":"api/scala/collection/IndexedSeqView.html","searchKeys":["concat"]},{"name":"class ofRef[T <: AnyRef](ct: ClassTag[T]) extends ArrayBuilder[T]","description":"scala.collection.mutable.ArrayBuilder$$ofRef","location":"api/scala/collection/mutable/ArrayBuilder$$ofRef.html","searchKeys":["ofRef"]},{"name":"def foreachKey[U](f: Int => U): Unit","description":"scala.collection.immutable.IntMap","location":"api/scala/collection/immutable/IntMap.html","searchKeys":["foreachKey"]},{"name":"type StringView = StringView","description":"scala.collection.immutable","location":"api/scala/collection/immutable.html","searchKeys":["StringView"]},{"name":"val x$22: FromExpr[T10]","description":"scala.quoted.FromExpr$$Tuple12FromExpr","location":"api/scala/quoted/FromExpr$$Tuple12FromExpr.html","searchKeys":["x$22"]},{"name":"def idPos: Position","description":"scala.quoted.Quotes$reflectModule$SuperMethods","location":"api/scala/quoted/Quotes$reflectModule$SuperMethods.html","searchKeys":["idPos"]},{"name":"def flatten[A1 >: A, B1](ev: B <:< Either[A1, B1]): Either[A1, B1]","description":"scala.util.Either","location":"api/scala/util/Either.html","searchKeys":["flatten"]},{"name":"def apply$mcZI$sp(v1: Int): Boolean","description":"scala.runtime.java8.JFunction1$mcZI$sp","location":"api/scala/runtime/java8/JFunction1$mcZI$sp.html","searchKeys":["apply$mcZI$sp"]},{"name":"def ordering: Ordering[Int]","description":"scala.collection.BitSetOps","location":"api/scala/collection/BitSetOps.html","searchKeys":["ordering"]},{"name":"def toMap[K, V](ev: A <:< (K, V)): Map[K, V]","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["toMap"]},{"name":"class WithDefault[K, V](val underlying: Map[K, V], val defaultValue: K => V) extends AbstractMap[K, V] with MapOps[K, V, [K, V] =>> Map[K, V], WithDefault[K, V]] with Serializable","description":"scala.collection.mutable.Map$$WithDefault","location":"api/scala/collection/mutable/Map$$WithDefault.html","searchKeys":["WithDefault"]},{"name":"type Typeable[T] = TypeTest[Any, T]","description":"scala.reflect.Typeable$package$","location":"api/scala/reflect.html","searchKeys":["Typeable"]},{"name":"def %(x: Float): Float","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["%"]},{"name":"def etaExpand(owner: Symbol): Term","description":"scala.quoted.Quotes$reflectModule$TermMethods","location":"api/scala/quoted/Quotes$reflectModule$TermMethods.html","searchKeys":["etaExpand"]},{"name":"def apply(withIn: Boolean, buffer: Appendable, log: Option[ProcessLogger]): ProcessIO","description":"scala.sys.process.BasicIO$","location":"api/scala/sys/process/BasicIO$.html","searchKeys":["apply"]},{"name":"def _2: T2","description":"scala.Product8","location":"api/scala/Product8.html","searchKeys":["_2"]},{"name":"val x$22: FromExpr[T4]","description":"scala.quoted.FromExpr$$Tuple18FromExpr","location":"api/scala/quoted/FromExpr$$Tuple18FromExpr.html","searchKeys":["x$22"]},{"name":"def scala$collection$SeqOps$$super$sizeCompare(otherSize: Int): Int","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["scala$collection$SeqOps$$super$sizeCompare"]},{"name":"class Appended[+A](underlying: SomeSeqOps[A], elem: A) extends Appended[A] with SeqView[A]","description":"scala.collection.SeqView$$Appended","location":"api/scala/collection/SeqView$$Appended.html","searchKeys":["Appended"]},{"name":"given FloatFromExpr","description":"scala.quoted.FromExpr$","location":"api/scala/quoted/FromExpr$.html","searchKeys":["FloatFromExpr"]},{"name":"def enrichAsJavaBooleanSupplier(sf: () => Boolean): RichFunction0AsBooleanSupplier","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsJavaBooleanSupplier"]},{"name":"def mkString: String","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["mkString"]},{"name":"given ByNameMethods","description":"scala.quoted.Quotes$reflectModule$ByNameMethods","location":"api/scala/quoted/Quotes$reflectModule$ByNameMethods.html","searchKeys":["ByNameMethods"]},{"name":"class RichFunction1AsIntFunction[R](underlying: Int => R) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichFunction1AsIntFunction","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsIntFunction.html","searchKeys":["RichFunction1AsIntFunction"]},{"name":"def ofTuple[T <: Tuple](tup: T)(evidence$1: IsMappedBy[[T] =>> Expr[T]][T], evidence$2: Type[T], Quotes): Expr[InverseMap[T, [T] =>> Expr[T]]]","description":"scala.quoted.Expr$","location":"api/scala/quoted/Expr$.html","searchKeys":["ofTuple"]},{"name":"def signum(x: Int): Int","description":"scala.math","location":"api/scala/math.html","searchKeys":["signum"]},{"name":"object Option","description":"scala.Option$","location":"api/scala/Option$.html","searchKeys":["Option"]},{"name":"object Set extends Delegate[[A] =>> Set[A]]","description":"scala.collection.Set$","location":"api/scala/collection/Set$.html","searchKeys":["Set"]},{"name":"def _4: T4","description":"scala.Product22","location":"api/scala/Product22.html","searchKeys":["_4"]},{"name":"def map[B](f: A => B): CC[B]","description":"scala.collection.WithFilter","location":"api/scala/collection/WithFilter.html","searchKeys":["map"]},{"name":"class SearchResult","description":"scala.collection.Searching$$SearchResult","location":"api/scala/collection/Searching$$SearchResult.html","searchKeys":["SearchResult"]},{"name":"def removedAll(that: IterableOnce[A]): C","description":"scala.collection.immutable.SetOps","location":"api/scala/collection/immutable/SetOps.html","searchKeys":["removedAll"]},{"name":"val x$9: Type[T9]","description":"scala.quoted.FromExpr$$Tuple21FromExpr","location":"api/scala/quoted/FromExpr$$Tuple21FromExpr.html","searchKeys":["x$9"]},{"name":"val x$8: Type[T8]","description":"scala.quoted.FromExpr$$Tuple8FromExpr","location":"api/scala/quoted/FromExpr$$Tuple8FromExpr.html","searchKeys":["x$8"]},{"name":"def apply(i: Int): BigDecimal","description":"scala.math.BigDecimal$","location":"api/scala/math/BigDecimal$.html","searchKeys":["apply"]},{"name":"def toArray[B >: A](evidence$1: ClassTag[B]): Array[B]","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["toArray"]},{"name":"type +[X <: Int, Y <: Int] <: Int","description":"scala.compiletime.ops.int$","location":"api/scala/compiletime/ops/int$.html","searchKeys":["+"]},{"name":"def _16: T16","description":"scala.Product19","location":"api/scala/Product19.html","searchKeys":["_16"]},{"name":"def <[B >: A](that: B)(evidence$2: () => B): Boolean","description":"scala.math.PartiallyOrdered","location":"api/scala/math/PartiallyOrdered.html","searchKeys":["<"]},{"name":"def >(x: Long): Boolean","description":"scala.Long","location":"api/scala/Long.html","searchKeys":[">"]},{"name":"def unapply[A](xs: LazyList[A]): Option[(A, LazyList[A])]","description":"scala.collection.immutable.LazyList$$cons$","location":"api/scala/collection/immutable/LazyList$$cons$.html","searchKeys":["unapply"]},{"name":"def toSink: ProcessBuilder","description":"scala.sys.process.ProcessBuilder$$Sink","location":"api/scala/sys/process/ProcessBuilder$$Sink.html","searchKeys":["toSink"]},{"name":"class BufferedSource(inputStream: InputStream, bufferSize: Int)(val codec: Codec) extends Source","description":"scala.io.BufferedSource","location":"api/scala/io/BufferedSource.html","searchKeys":["BufferedSource"]},{"name":"Export Clauses","description":"","location":"docs/reference/other-new-features/export.html","searchKeys":["Export Clauses"]},{"name":"val GREEN_B: \"\\033[42m\"","description":"scala.io.AnsiColor","location":"api/scala/io/AnsiColor.html","searchKeys":["GREEN_B"]},{"name":"def addOne(entry: (K, V)): AnyRefMapBuilder[K, V]","description":"scala.collection.mutable.AnyRefMap$$AnyRefMapBuilder","location":"api/scala/collection/mutable/AnyRefMap$$AnyRefMapBuilder.html","searchKeys":["addOne"]},{"name":"val value: T","description":"scala.ValueOf","location":"api/scala/ValueOf.html","searchKeys":["value"]},{"name":"class WeakHashMap[K, V] extends JMapWrapper[K, V] with JMapWrapperLike[K, V, [K, V] =>> WeakHashMap[K, V], WeakHashMap[K, V]] with MapFactoryDefaults[K, V, [K, V] =>> WeakHashMap[K, V], [A] =>> Iterable[A]]","description":"scala.collection.mutable.WeakHashMap","location":"api/scala/collection/mutable/WeakHashMap.html","searchKeys":["WeakHashMap"]},{"name":"class Tuple2[@specialized(Int, Long, Double, Char, Boolean) +T1, @specialized(Int, Long, Double, Char, Boolean) +T2](_1: T1, _2: T2) extends Product2[T1, T2]","description":"scala.Tuple2","location":"api/scala/Tuple2.html","searchKeys":["Tuple2"]},{"name":"def isValidLong: Boolean","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["isValidLong"]},{"name":"trait StreamExtensions","description":"scala.collection.convert.StreamExtensions","location":"api/scala/collection/convert/StreamExtensions.html","searchKeys":["StreamExtensions"]},{"name":"def length: Int","description":"scala.collection.mutable.ArraySeq$$ofChar","location":"api/scala/collection/mutable/ArraySeq$$ofChar.html","searchKeys":["length"]},{"name":"def findAllIn(source: CharSequence): MatchIterator","description":"scala.util.matching.Regex","location":"api/scala/util/matching/Regex.html","searchKeys":["findAllIn"]},{"name":"def exit(status: Int): Nothing","description":"scala.sys","location":"api/scala/sys.html","searchKeys":["exit"]},{"name":"def fill[T](n: Int)(elem: => T)(evidence$12: ClassTag[T]): Array[T]","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["fill"]},{"name":"def from[K, V](it: IterableOnce[(K, V)]): TreeSeqMap[K, V]","description":"scala.collection.immutable.TreeSeqMap$","location":"api/scala/collection/immutable/TreeSeqMap$.html","searchKeys":["from"]},{"name":"trait Product4[+T1, +T2, +T3, +T4] extends Product","description":"scala.Product4","location":"api/scala/Product4.html","searchKeys":["Product4"]},{"name":"trait SeqMap[K, V] extends Map[K, V] with SeqMap[K, V] with MapOps[K, V, [K, V] =>> SeqMap[K, V], SeqMap[K, V]] with MapFactoryDefaults[K, V, [K, V] =>> SeqMap[K, V], [A] =>> Iterable[A]]","description":"scala.collection.mutable.SeqMap","location":"api/scala/collection/mutable/SeqMap.html","searchKeys":["SeqMap"]},{"name":"trait IsSeq[Repr] extends IsIterable[Repr]","description":"scala.collection.generic.IsSeq","location":"api/scala/collection/generic/IsSeq.html","searchKeys":["IsSeq"]},{"name":"def >>(x: Int): Int","description":"scala.Int","location":"api/scala/Int.html","searchKeys":[">>"]},{"name":"given InlinedMethods","description":"scala.quoted.Quotes$reflectModule$InlinedMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["InlinedMethods"]},{"name":"given RightFromExpr[L, R](using val x$1: Type[L], val x$2: Type[R], val x$3: FromExpr[R]): FromExpr[Right[L, R]]","description":"scala.quoted.FromExpr$$RightFromExpr","location":"api/scala/quoted/FromExpr$$RightFromExpr.html","searchKeys":["RightFromExpr"]},{"name":"def asScalaFromLongToIntFunction(jf: LongToIntFunction): Long => Integer","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asScalaFromLongToIntFunction"]},{"name":"val x$19: FromExpr[T3]","description":"scala.quoted.FromExpr$$Tuple16FromExpr","location":"api/scala/quoted/FromExpr$$Tuple16FromExpr.html","searchKeys":["x$19"]},{"name":"def apply[A, C](elems: A*)(canAccumulate: AccumulatorFactoryShape[A, C]): C","description":"scala.jdk.Accumulator$","location":"api/scala/jdk/Accumulator$.html","searchKeys":["apply"]},{"name":"def enqueue(elem1: A, elem2: A, elems: A*): Queue[A]","description":"scala.collection.mutable.Queue","location":"api/scala/collection/mutable/Queue.html","searchKeys":["enqueue"]},{"name":"trait BigDecimalAsIfIntegral extends BigDecimalIsConflicted with Integral[BigDecimal]","description":"scala.math.Numeric$$BigDecimalAsIfIntegral","location":"api/scala/math/Numeric$$BigDecimalAsIfIntegral.html","searchKeys":["BigDecimalAsIfIntegral"]},{"name":"def padTo[B >: A](len: Int, elem: B): Iterator[B]","description":"scala.collection.Iterator","location":"api/scala/collection/Iterator.html","searchKeys":["padTo"]},{"name":"def asScala[A](e: Enumeration[A]): Iterator[A]","description":"scala.collection.convert.AsScalaConverters","location":"api/scala/collection/convert/AsScalaConverters.html","searchKeys":["asScala"]},{"name":"def max(x: Int, y: Int): Int","description":"scala.math","location":"api/scala/math.html","searchKeys":["max"]},{"name":"def !=(x: Double): Boolean","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["!="]},{"name":"def newBuilder[A](ordering: Ordering[A]): ReusableBuilder[A, TreeSet[A]]","description":"scala.collection.immutable.TreeSet$","location":"api/scala/collection/immutable/TreeSet$.html","searchKeys":["newBuilder"]},{"name":"def /(x: Long): Double","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["/"]},{"name":"def iterator: Iterator[A]","description":"scala.collection.View$$TakeRight","location":"api/scala/collection/View$$TakeRight.html","searchKeys":["iterator"]},{"name":"def from[K, V](it: IterableOnce[(K, V)]): Map[K, V]","description":"scala.collection.immutable.Map$","location":"api/scala/collection/immutable/Map$.html","searchKeys":["from"]},{"name":"def _11: T11","description":"scala.Product21","location":"api/scala/Product21.html","searchKeys":["_11"]},{"name":"def isImplicit: Boolean","description":"scala.quoted.Quotes$reflectModule$TermParamClauseMethods","location":"api/scala/quoted/Quotes$reflectModule$TermParamClauseMethods.html","searchKeys":["isImplicit"]},{"name":"class CharArrayHasSeqParStream(a: Array[Char])","description":"scala.collection.convert.StreamExtensions$CharArrayHasSeqParStream","location":"api/scala/collection/convert/StreamExtensions$CharArrayHasSeqParStream.html","searchKeys":["CharArrayHasSeqParStream"]},{"name":"given ArrayToExpr[T]: ToExpr[Array[T]]","description":"scala.quoted.ToExpr$$ArrayToExpr","location":"api/scala/quoted/ToExpr$.html","searchKeys":["ArrayToExpr"]},{"name":"class AsJavaIntSupplier(sf: () => Int) extends IntSupplier","description":"scala.jdk.FunctionWrappers$$AsJavaIntSupplier","location":"api/scala/jdk/FunctionWrappers$$AsJavaIntSupplier.html","searchKeys":["AsJavaIntSupplier"]},{"name":"class FromJavaDoubleToLongFunction(jf: DoubleToLongFunction) extends Double => Long","description":"scala.jdk.FunctionWrappers$$FromJavaDoubleToLongFunction","location":"api/scala/jdk/FunctionWrappers$$FromJavaDoubleToLongFunction.html","searchKeys":["FromJavaDoubleToLongFunction"]},{"name":"def >(size: Int): Boolean","description":"scala.collection.IterableOps$$SizeCompareOps","location":"api/scala/collection/IterableOps$$SizeCompareOps.html","searchKeys":[">"]},{"name":"def excl(elem: A): Set[A]","description":"scala.collection.immutable.Set$$Set3","location":"api/scala/collection/immutable/Set$$Set3.html","searchKeys":["excl"]},{"name":"package scala.compiletime.ops","description":"scala.compiletime.ops","location":"api/scala/compiletime/ops.html","searchKeys":["scala.compiletime.ops"]},{"name":"def enrichAsScalaFromConsumer[T](jf: Consumer[T]): RichConsumerAsFunction1[T]","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsScalaFromConsumer"]},{"name":"class FromJavaToLongFunction[T](jf: ToLongFunction[T]) extends T => Long","description":"scala.jdk.FunctionWrappers$$FromJavaToLongFunction","location":"api/scala/jdk/FunctionWrappers$$FromJavaToLongFunction.html","searchKeys":["FromJavaToLongFunction"]},{"name":"def *(x: Int): Float","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["*"]},{"name":"trait DefinitionModule","description":"scala.quoted.Quotes$reflectModule$DefinitionModule","location":"api/scala/quoted/Quotes$reflectModule$DefinitionModule.html","searchKeys":["DefinitionModule"]},{"name":"def orderingBy(orderBy: OrderBy): TreeSeqMap[K, V]","description":"scala.collection.immutable.TreeSeqMap","location":"api/scala/collection/immutable/TreeSeqMap.html","searchKeys":["orderingBy"]},{"name":"def lastOption: Option[Char]","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["lastOption"]},{"name":"def splitAt[This >: Tuple <: Tuple](n: Int): (This, n)","description":"scala.Tuple","location":"api/scala/Tuple.html","searchKeys":["splitAt"]},{"name":"def apply(bd: BigDecimal): BigDecimal","description":"scala.math.BigDecimal$","location":"api/scala/math/BigDecimal$.html","searchKeys":["apply"]},{"name":"def reportWarning(pos: Int, msg: String, out: PrintStream): Unit","description":"scala.io.Source","location":"api/scala/io/Source.html","searchKeys":["reportWarning"]},{"name":"def accept(x1: Long): Unit","description":"scala.jdk.FunctionWrappers$$AsJavaLongConsumer","location":"api/scala/jdk/FunctionWrappers$$AsJavaLongConsumer.html","searchKeys":["accept"]},{"name":"val emptyIntArray: Array[Int]","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["emptyIntArray"]},{"name":"def >(x: Short): Boolean","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":[">"]},{"name":"def modifyOrRemove[S](f: (Long, T) => Option[S]): LongMap[S]","description":"scala.collection.immutable.LongMap","location":"api/scala/collection/immutable/LongMap.html","searchKeys":["modifyOrRemove"]},{"name":"def flatten[B](asIterable: A => IterableOnce[B]): CC[B]","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["flatten"]},{"name":"def buildFromIterator[A]: BuildFrom[Iterator[], A, Iterator[A]]","description":"scala.collection.BuildFromLowPriority2","location":"api/scala/collection/BuildFromLowPriority2.html","searchKeys":["buildFromIterator"]},{"name":"class ScalaReflectionException(msg: String) extends Exception","description":"scala.ScalaReflectionException","location":"api/scala/ScalaReflectionException.html","searchKeys":["ScalaReflectionException"]},{"name":"def >=(x: Double): Boolean","description":"scala.Long","location":"api/scala/Long.html","searchKeys":[">="]},{"name":"def qualifier: TypeTree","description":"scala.quoted.Quotes$reflectModule$TypeProjectionMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeProjectionMethods.html","searchKeys":["qualifier"]},{"name":"class companionMethod extends StaticAnnotation","description":"scala.annotation.meta.companionMethod","location":"api/scala/annotation/meta/companionMethod.html","searchKeys":["companionMethod"]},{"name":"def hasStep: Boolean","description":"scala.collection.Stepper","location":"api/scala/collection/Stepper.html","searchKeys":["hasStep"]},{"name":"def sizeIs: Int","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["sizeIs"]},{"name":"val BLOCK: 140","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["BLOCK"]},{"name":"def CaseAccessor: Flags","description":"scala.quoted.Quotes$reflectModule$FlagsModule","location":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html","searchKeys":["CaseAccessor"]},{"name":"def tap[U](f: A => U): A","description":"scala.util.ChainingOps","location":"api/scala/util/ChainingOps.html","searchKeys":["tap"]},{"name":"Announcing Dotty 0.4.0-RC1","description":"","location":"blog/2017/10/16/fourth-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.4.0-RC1"]},{"name":"def append(x: Int): StringBuilder","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["append"]},{"name":"given GivenSelectorTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["GivenSelectorTypeTest"]},{"name":"given Tuple2ToExpr[T1, T2]: ToExpr[(T1, T2)]","description":"scala.quoted.ToExpr$$Tuple2ToExpr","location":"api/scala/quoted/ToExpr$.html","searchKeys":["Tuple2ToExpr"]},{"name":"def empty[K, V](evidence$2: Ordering[K]): TreeMap[K, V]","description":"scala.collection.mutable.TreeMap$","location":"api/scala/collection/mutable/TreeMap$.html","searchKeys":["empty"]},{"name":"def /(x: Long): Long","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["/"]},{"name":"def apply(i: Int): BigInt","description":"scala.math.BigInt$","location":"api/scala/math/BigInt$.html","searchKeys":["apply"]},{"name":"trait TypeIdentModule","description":"scala.quoted.Quotes$reflectModule$TypeIdentModule","location":"api/scala/quoted/Quotes$reflectModule$TypeIdentModule.html","searchKeys":["TypeIdentModule"]},{"name":"val TYPEDEF: 131","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["TYPEDEF"]},{"name":"Translation of Enums and ADTs","description":"","location":"docs/reference/enums/desugarEnums.html","searchKeys":["Translation of Enums and ADTs"]},{"name":"def asJava: List[A]","description":"scala.collection.convert.AsJavaExtensions$MutableSeqHasAsJava","location":"api/scala/collection/convert/AsJavaExtensions$MutableSeqHasAsJava.html","searchKeys":["asJava"]},{"name":"var right: RBNode[K, V]","description":"scala.collection.mutable.CollisionProofHashMap$$RBNode","location":"api/scala/collection/mutable/CollisionProofHashMap$$RBNode.html","searchKeys":["right"]},{"name":"given Tuple7ToExpr[T1, T2, T3, T4, T5, T6, T7]: ToExpr[(T1, T2, T3, T4, T5, T6, T7)]","description":"scala.quoted.ToExpr$$Tuple7ToExpr","location":"api/scala/quoted/ToExpr$$Tuple7ToExpr.html","searchKeys":["Tuple7ToExpr"]},{"name":"Dotty becomes Scala 3","description":"","location":"blog/2020/09/21/naming-schema-change.html","searchKeys":["Dotty becomes Scala 3"]},{"name":"def mapInPlace(f: T => T): Unit","description":"scala.collection.mutable.UnrolledBuffer$$Unrolled","location":"api/scala/collection/mutable/UnrolledBuffer$$Unrolled.html","searchKeys":["mapInPlace"]},{"name":"val UTF8: 1","description":"dotty.tools.tasty.TastyFormat$$NameTags","location":"api/dotty/tools/tasty/TastyFormat$$NameTags.html","searchKeys":["UTF8"]},{"name":"def toDays: Long","description":"scala.concurrent.duration.Duration","location":"api/scala/concurrent/duration/Duration.html","searchKeys":["toDays"]},{"name":"def toShort: Short","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["toShort"]},{"name":"def >=(x: Short): Boolean","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":[">="]},{"name":"def dropWhile(p: A => Boolean): Array[A]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["dropWhile"]},{"name":"def unapply(x: Expr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)])(using Quotes): Option[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)]","description":"scala.quoted.FromExpr$$Tuple16FromExpr","location":"api/scala/quoted/FromExpr$$Tuple16FromExpr.html","searchKeys":["unapply"]},{"name":"def addOne(elem: Byte): ofByte","description":"scala.collection.mutable.ArrayBuilder$$ofByte","location":"api/scala/collection/mutable/ArrayBuilder$$ofByte.html","searchKeys":["addOne"]},{"name":"def apply(): T","description":"scala.ref.ReferenceWrapper","location":"api/scala/ref/ReferenceWrapper.html","searchKeys":["apply"]},{"name":"def asJava: IntFunction[R]","description":"scala.jdk.FunctionWrappers$$RichFunction1AsIntFunction","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsIntFunction.html","searchKeys":["asJava"]},{"name":"val x$2: FromExpr[T]","description":"scala.quoted.FromExpr$$OptionFromExpr","location":"api/scala/quoted/FromExpr$$OptionFromExpr.html","searchKeys":["x$2"]},{"name":"def isMirrored: Boolean","description":"scala.runtime.RichChar","location":"api/scala/runtime/RichChar.html","searchKeys":["isMirrored"]},{"name":"def #::[B >: A](elem: B): Stream[B]","description":"scala.collection.immutable.Stream$$Deferrer","location":"api/scala/collection/immutable/Stream$$Deferrer.html","searchKeys":["#::"]},{"name":"def apply(v1: T1, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, v7: T7, v8: T8, v9: T9): R","description":"scala.Function9","location":"api/scala/Function9.html","searchKeys":["apply"]},{"name":"trait DoubleIsFractional extends Fractional[Double]","description":"scala.math.Numeric$$DoubleIsFractional","location":"api/scala/math/Numeric$$DoubleIsFractional.html","searchKeys":["DoubleIsFractional"]},{"name":"def apply[T](inline xs: T*)(using inline ct: ClassTag[T]): IArray[T]","description":"scala.IArray$package$$IArray$","location":"api/scala/IArray$package$$IArray$.html","searchKeys":["apply"]},{"name":"trait Iterable[A] extends Iterable[A] with IterableOps[A, [A] =>> Iterable[A], Iterable[A]] with IterableFactoryDefaults[A, [A] =>> Iterable[A]]","description":"scala.collection.mutable.Iterable","location":"api/scala/collection/mutable/Iterable.html","searchKeys":["Iterable"]},{"name":"def !=(x: Byte): Boolean","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["!="]},{"name":"class Ordering[+T]","description":"scala.collection.immutable.TreeSeqMap$$Ordering","location":"api/scala/collection/immutable/TreeSeqMap$$Ordering.html","searchKeys":["Ordering"]},{"name":"def ^(x: Short): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["^"]},{"name":"def ==(x: Boolean): Boolean","description":"scala.Boolean","location":"api/scala/Boolean.html","searchKeys":["=="]},{"name":"val x$33: FromExpr[T13]","description":"scala.quoted.FromExpr$$Tuple20FromExpr","location":"api/scala/quoted/FromExpr$$Tuple20FromExpr.html","searchKeys":["x$33"]},{"name":"def +(other: String): String","description":"scala.Predef$$any2stringadd","location":"api/scala/Predef$$any2stringadd.html","searchKeys":["+"]},{"name":"class RichFunction1AsLongToIntFunction(underlying: Long => Int) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichFunction1AsLongToIntFunction","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsLongToIntFunction.html","searchKeys":["RichFunction1AsLongToIntFunction"]},{"name":"def empty: BitSet","description":"scala.collection.BitSet$","location":"api/scala/collection/BitSet$.html","searchKeys":["empty"]},{"name":"def currentTime: Long","description":"scala.compat.Platform$","location":"api/scala/compat/Platform$.html","searchKeys":["currentTime"]},{"name":"def keyStepper[S <: Stepper[]](shape: StepperShape[K, S]): S","description":"scala.collection.MapOps","location":"api/scala/collection/MapOps.html","searchKeys":["keyStepper"]},{"name":"def div(x: Double, y: Double): Double","description":"scala.math.Numeric$$DoubleIsFractional","location":"api/scala/math/Numeric$$DoubleIsFractional.html","searchKeys":["div"]},{"name":"given Tuple16ToExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]: ToExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)]","description":"scala.quoted.ToExpr$$Tuple16ToExpr","location":"api/scala/quoted/ToExpr$.html","searchKeys":["Tuple16ToExpr"]},{"name":"class ofFloat(val unsafeArray: Array[Float]) extends ArraySeq[Float]","description":"scala.collection.immutable.ArraySeq$$ofFloat","location":"api/scala/collection/immutable/ArraySeq$$ofFloat.html","searchKeys":["ofFloat"]},{"name":"def tupled[T1, T2, T3, R](f: (T1, T2, T3) => R): (T1, T2, T3) => R","description":"scala.Function$","location":"api/scala/Function$.html","searchKeys":["tupled"]},{"name":"def <=(x: Float): Boolean","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["<="]},{"name":"def times(x: Byte, y: Byte): Byte","description":"scala.math.Numeric$$ByteIsIntegral","location":"api/scala/math/Numeric$$ByteIsIntegral.html","searchKeys":["times"]},{"name":"def inits: Iterator[String]","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["inits"]},{"name":"trait RangedProxy[T] extends Typed[T]","description":"scala.runtime.RangedProxy","location":"api/scala/runtime/RangedProxy.html","searchKeys":["RangedProxy"]},{"name":"object StreamUnboxer","description":"scala.collection.convert.StreamExtensions$$StreamUnboxer$","location":"api/scala/collection/convert/StreamExtensions$$StreamUnboxer$.html","searchKeys":["StreamUnboxer"]},{"name":"val ALL: -2147483648","description":"scala.annotation.elidable$","location":"api/scala/annotation/elidable$.html","searchKeys":["ALL"]},{"name":"given ClassDefMethods","description":"scala.quoted.Quotes$reflectModule$ClassDefMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ClassDefMethods"]},{"name":"def apply(expr: Term, cases: List[CaseDef], finalizer: Option[Term]): Try","description":"scala.quoted.Quotes$reflectModule$TryModule","location":"api/scala/quoted/Quotes$reflectModule$TryModule.html","searchKeys":["apply"]},{"name":"def takeRight(n: Int): String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["takeRight"]},{"name":"def apply(tup: (T1, T2, T3, T4, T5))(using Quotes): Expr[(T1, T2, T3, T4, T5)]","description":"scala.quoted.ToExpr$$Tuple5ToExpr","location":"api/scala/quoted/ToExpr$$Tuple5ToExpr.html","searchKeys":["apply"]},{"name":"given TypeLambdaTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeLambdaTypeTest"]},{"name":"val Null: Manifest[Null]","description":"scala.reflect.Manifest$","location":"api/scala/reflect/Manifest$.html","searchKeys":["Null"]},{"name":"def copy(original: Tree)(pattern: TypeTree, rhs: TypeTree): TypeCaseDef","description":"scala.quoted.Quotes$reflectModule$TypeCaseDefModule","location":"api/scala/quoted/Quotes$reflectModule$TypeCaseDefModule.html","searchKeys":["copy"]},{"name":"given LiteralMethods","description":"scala.quoted.Quotes$reflectModule$LiteralMethods","location":"api/scala/quoted/Quotes$reflectModule$LiteralMethods.html","searchKeys":["LiteralMethods"]},{"name":"def transformTrees(trees: List[Tree])(owner: Symbol): List[Tree]","description":"scala.quoted.Quotes$reflectModule$TreeMap","location":"api/scala/quoted/Quotes$reflectModule$TreeMap.html","searchKeys":["transformTrees"]},{"name":"def map[B](f: A => B): CC[B]","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["map"]},{"name":"val x$6: Type[T6]","description":"scala.quoted.FromExpr$$Tuple16FromExpr","location":"api/scala/quoted/FromExpr$$Tuple16FromExpr.html","searchKeys":["x$6"]},{"name":"def map[B](f: A => B)(@implicitNotFound ev: Ordering[B]): CC[B]","description":"scala.collection.SortedSetOps","location":"api/scala/collection/SortedSetOps.html","searchKeys":["map"]},{"name":"val x$29: FromExpr[T7]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["x$29"]},{"name":"def asScala: Future[T]","description":"scala.jdk.FutureConverters$$CompletionStageOps","location":"api/scala/jdk/FutureConverters$$CompletionStageOps.html","searchKeys":["asScala"]},{"name":"def contains(element: A): Boolean","description":"scala.collection.immutable.HashSet","location":"api/scala/collection/immutable/HashSet.html","searchKeys":["contains"]},{"name":"class Inclusive(start: Int, end: Int, step: Int) extends Range","description":"scala.collection.immutable.Range$$Inclusive","location":"api/scala/collection/immutable/Range$$Inclusive.html","searchKeys":["Inclusive"]},{"name":"def concat[B >: A](suffix: IterableOnce[B])(evidence$20: ClassTag[B]): Array[B]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["concat"]},{"name":"def this()","description":"scala.collection.concurrent.TrieMap","location":"api/scala/collection/concurrent/TrieMap.html","searchKeys":["this"]},{"name":"def namePos: Position","description":"scala.quoted.Quotes$reflectModule$SimpleSelectorMethods","location":"api/scala/quoted/Quotes$reflectModule$SimpleSelectorMethods.html","searchKeys":["namePos"]},{"name":"class DoubleStepperSpliterator(s: DoubleStepper) extends OfDouble","description":"scala.collection.DoubleStepper$$DoubleStepperSpliterator","location":"api/scala/collection/DoubleStepper$$DoubleStepperSpliterator.html","searchKeys":["DoubleStepperSpliterator"]},{"name":"class AbstractMap[K, +V] extends AbstractMap[K, V] with Map[K, V]","description":"scala.collection.immutable.AbstractMap","location":"api/scala/collection/immutable/AbstractMap.html","searchKeys":["AbstractMap"]},{"name":"val unsafeArray: Array[Long]","description":"scala.collection.immutable.ArraySeq$$ofLong","location":"api/scala/collection/immutable/ArraySeq$$ofLong.html","searchKeys":["unsafeArray"]},{"name":"def remove(@deprecatedName(\"n\", \"2.13.0\") index: Int, count: Int): Unit","description":"scala.collection.mutable.ArrayBuffer","location":"api/scala/collection/mutable/ArrayBuffer.html","searchKeys":["remove"]},{"name":"object Map extends MapFactory[[K, V] =>> Map[K, V]]","description":"scala.collection.immutable.Map$","location":"api/scala/collection/immutable/Map$.html","searchKeys":["Map"]},{"name":"def uncurried[T1, T2, R](f: T1 => T2 => R): (T1, T2) => R","description":"scala.Function$","location":"api/scala/Function$.html","searchKeys":["uncurried"]},{"name":"type /[X <: Int, Y <: Int] <: Int","description":"scala.compiletime.ops.int$","location":"api/scala/compiletime/ops/int$.html","searchKeys":["/"]},{"name":"def lengthCompare(len: Int): Int","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["lengthCompare"]},{"name":"trait ScalaNumericConversions extends ScalaNumber with ScalaNumericAnyConversions","description":"scala.math.ScalaNumericConversions","location":"api/scala/math/ScalaNumericConversions.html","searchKeys":["ScalaNumericConversions"]},{"name":"type IllegalArgumentException = IllegalArgumentException","description":"scala","location":"api/scala.html","searchKeys":["IllegalArgumentException"]},{"name":"def >=(x: Int): Boolean","description":"scala.Long","location":"api/scala/Long.html","searchKeys":[">="]},{"name":"def isEnqueued: Boolean","description":"scala.ref.ReferenceWrapper","location":"api/scala/ref/ReferenceWrapper.html","searchKeys":["isEnqueued"]},{"name":"class AsJavaLongSupplier(sf: () => Long) extends LongSupplier","description":"scala.jdk.FunctionWrappers$$AsJavaLongSupplier","location":"api/scala/jdk/FunctionWrappers$$AsJavaLongSupplier.html","searchKeys":["AsJavaLongSupplier"]},{"name":"type Negate[X <: Int] <: Int","description":"scala.compiletime.ops.int$","location":"api/scala/compiletime/ops/int$.html","searchKeys":["Negate"]},{"name":"given RefinementMethods","description":"scala.quoted.Quotes$reflectModule$RefinementMethods","location":"api/scala/quoted/Quotes$reflectModule$RefinementMethods.html","searchKeys":["RefinementMethods"]},{"name":"object boolean","description":"scala.compiletime.ops.boolean$","location":"api/scala/compiletime/ops/boolean$.html","searchKeys":["boolean"]},{"name":"def this(name: Symbol)","description":"scala.deprecatedName","location":"api/scala/deprecatedName.html","searchKeys":["this"]},{"name":"class ofFloat extends ArrayBuilder[Float]","description":"scala.collection.mutable.ArrayBuilder$$ofFloat","location":"api/scala/collection/mutable/ArrayBuilder$$ofFloat.html","searchKeys":["ofFloat"]},{"name":"val TYPEREFpkg: 65","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["TYPEREFpkg"]},{"name":"def newBuilder[A]: Builder[A, ListSet[A]]","description":"scala.collection.immutable.ListSet$","location":"api/scala/collection/immutable/ListSet$.html","searchKeys":["newBuilder"]},{"name":"def ++(xs: String): String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["++"]},{"name":"class SerializationProxy[A](acc: AnyAccumulator[A]) extends Serializable","description":"scala.jdk.AnyAccumulator$$SerializationProxy","location":"api/scala/jdk/AnyAccumulator$$SerializationProxy.html","searchKeys":["SerializationProxy"]},{"name":"val INTconst: 70","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["INTconst"]},{"name":"def ==(x: Byte): Boolean","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["=="]},{"name":"class RichToDoubleBiFunctionAsFunction2[T, U](underlying: ToDoubleBiFunction[T, U]) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichToDoubleBiFunctionAsFunction2","location":"api/scala/jdk/FunctionWrappers$$RichToDoubleBiFunctionAsFunction2.html","searchKeys":["RichToDoubleBiFunctionAsFunction2"]},{"name":"val x$8: FromExpr[T2]","description":"scala.quoted.FromExpr$$Tuple6FromExpr","location":"api/scala/quoted/FromExpr$$Tuple6FromExpr.html","searchKeys":["x$8"]},{"name":"given SuperTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["SuperTypeTest"]},{"name":"def summonAll[T <: Tuple]: Widen[T]","description":"scala.compiletime","location":"api/scala/compiletime.html","searchKeys":["summonAll"]},{"name":"def params: List[TypeDef]","description":"scala.quoted.Quotes$reflectModule$TypeParamClauseMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeParamClauseMethods.html","searchKeys":["params"]},{"name":"type C","description":"scala.collection.generic.IsIterable","location":"api/scala/collection/generic/IsIterable.html","searchKeys":["C"]},{"name":"object elidable","description":"scala.annotation.elidable$","location":"api/scala/annotation/elidable$.html","searchKeys":["elidable"]},{"name":"def fromInt(x: Int): Byte","description":"scala.math.Numeric$$ByteIsIntegral","location":"api/scala/math/Numeric$$ByteIsIntegral.html","searchKeys":["fromInt"]},{"name":"def asJavaParValueLongStream[K](m: Map[K, Long]): LongStream","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaParValueLongStream"]},{"name":"val x$17: FromExpr[T2]","description":"scala.quoted.FromExpr$$Tuple15FromExpr","location":"api/scala/quoted/FromExpr$$Tuple15FromExpr.html","searchKeys":["x$17"]},{"name":"object AccumulatorFactoryShape extends LowPriorityAccumulatorFactoryShape","description":"scala.jdk.Accumulator$$AccumulatorFactoryShape$","location":"api/scala/jdk/Accumulator$$AccumulatorFactoryShape$.html","searchKeys":["AccumulatorFactoryShape"]},{"name":"def *(x: Long): Long","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["*"]},{"name":"def asScalaFromToDoubleFunction[T](jf: ToDoubleFunction[T]): T => Double","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asScalaFromToDoubleFunction"]},{"name":"def ordinal(x: MirroredMonoType): Int","description":"scala.deriving.Mirror$$Sum","location":"api/scala/deriving/Mirror$$Sum.html","searchKeys":["ordinal"]},{"name":"def apply(x1: Long): Int","description":"scala.jdk.FunctionWrappers$$FromJavaLongToIntFunction","location":"api/scala/jdk/FunctionWrappers$$FromJavaLongToIntFunction.html","searchKeys":["apply"]},{"name":"def _8: T8","description":"scala.Product10","location":"api/scala/Product10.html","searchKeys":["_8"]},{"name":"def result(atMost: Duration)(permit: CanAwait): T","description":"scala.concurrent.Awaitable","location":"api/scala/concurrent/Awaitable.html","searchKeys":["result"]},{"name":"val MinValue: -2147483648","description":"scala.Int$","location":"api/scala/Int$.html","searchKeys":["MinValue"]},{"name":"def toHours: Long","description":"scala.concurrent.duration.FiniteDuration","location":"api/scala/concurrent/duration/FiniteDuration.html","searchKeys":["toHours"]},{"name":"given Tuple14ToExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14]: ToExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)]","description":"scala.quoted.ToExpr$$Tuple14ToExpr","location":"api/scala/quoted/ToExpr$$Tuple14ToExpr.html","searchKeys":["Tuple14ToExpr"]},{"name":"Changes in Type Inference","description":"","location":"docs/reference/changed-features/type-inference.html","searchKeys":["Changes in Type Inference"]},{"name":"def >>(n: Int): BigInt","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":[">>"]},{"name":"Getting Started: Users","description":"","location":"docs/usage/getting-started.html","searchKeys":["Getting Started: Users"]},{"name":"def tupled: (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) => R","description":"scala.Function14","location":"api/scala/Function14.html","searchKeys":["tupled"]},{"name":"given Tuple22ToExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22]: ToExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22)]","description":"scala.quoted.ToExpr$$Tuple22ToExpr","location":"api/scala/quoted/ToExpr$.html","searchKeys":["Tuple22ToExpr"]},{"name":"def |(x: Char): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["|"]},{"name":"given SimpleSelectorMethods","description":"scala.quoted.Quotes$reflectModule$SimpleSelectorMethods","location":"api/scala/quoted/Quotes$reflectModule$SimpleSelectorMethods.html","searchKeys":["SimpleSelectorMethods"]},{"name":"def addOne(elem: (K, V)): CollisionProofHashMap[K, V]","description":"scala.collection.mutable.CollisionProofHashMap","location":"api/scala/collection/mutable/CollisionProofHashMap.html","searchKeys":["addOne"]},{"name":"def asJava: IntPredicate","description":"scala.jdk.FunctionWrappers$$RichFunction1AsIntPredicate","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsIntPredicate.html","searchKeys":["asJava"]},{"name":"def apply[R, A](resource: => R)(f: R => A)(evidence$1: Releasable[R]): Try[A]","description":"scala.util.Using$","location":"api/scala/util/Using$.html","searchKeys":["apply"]},{"name":"def scala$collection$SeqOps$$super$sizeCompare(that: Iterable[]): Int","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["scala$collection$SeqOps$$super$sizeCompare"]},{"name":"def copy(original: Tree)(expr: Term, from: Symbol): Return","description":"scala.quoted.Quotes$reflectModule$ReturnModule","location":"api/scala/quoted/Quotes$reflectModule$ReturnModule.html","searchKeys":["copy"]},{"name":"def apply(x: Array[Byte]): BigInt","description":"scala.math.BigInt$","location":"api/scala/math/BigInt$.html","searchKeys":["apply"]},{"name":"def iterable AsScalaIterable[A](i: Iterable[A]): Iterable[A]","description":"scala.collection.convert.ToScalaImplicits","location":"api/scala/collection/convert/ToScalaImplicits.html","searchKeys":["iterable AsScalaIterable"]},{"name":"def tabulate[A](n1: Int, n2: Int, n3: Int, n4: Int, n5: Int)(f: (Int, Int, Int, Int, Int) => A): CC[CC[CC[CC[CC[A]]]]]","description":"scala.collection.IterableFactory","location":"api/scala/collection/IterableFactory.html","searchKeys":["tabulate"]},{"name":"val x$2: FromExpr[T1]","description":"scala.quoted.FromExpr$$Tuple1FromExpr","location":"api/scala/quoted/FromExpr$$Tuple1FromExpr.html","searchKeys":["x$2"]},{"name":"trait BigDecimalIsFractional extends BigDecimalIsConflicted with Fractional[BigDecimal]","description":"scala.math.Numeric$$BigDecimalIsFractional","location":"api/scala/math/Numeric$$BigDecimalIsFractional.html","searchKeys":["BigDecimalIsFractional"]},{"name":"def from[E](it: IterableOnce[E]): LinkedHashSet[E]","description":"scala.collection.mutable.LinkedHashSet$","location":"api/scala/collection/mutable/LinkedHashSet$.html","searchKeys":["from"]},{"name":"def apply(x: Short): ShortConstant","description":"scala.quoted.Quotes$reflectModule$ShortConstantModule","location":"api/scala/quoted/Quotes$reflectModule$ShortConstantModule.html","searchKeys":["apply"]},{"name":"trait SelectModule","description":"scala.quoted.Quotes$reflectModule$SelectModule","location":"api/scala/quoted/Quotes$reflectModule$SelectModule.html","searchKeys":["SelectModule"]},{"name":"def ordering: Ordering[K]","description":"scala.collection.mutable.SortedMap$$WithDefault","location":"api/scala/collection/mutable/SortedMap$$WithDefault.html","searchKeys":["ordering"]},{"name":"def spliterator[B >: Long]: OfLong","description":"scala.collection.LongStepper","location":"api/scala/collection/LongStepper.html","searchKeys":["spliterator"]},{"name":"def asScalaFromDoubleToLongFunction(jf: DoubleToLongFunction): Double => Long","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asScalaFromDoubleToLongFunction"]},{"name":"def unapply[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19](x: Product19[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19]): Option[Product19[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19]]","description":"scala.Product19$","location":"api/scala/Product19$.html","searchKeys":["unapply"]},{"name":"def unapply(x: Expr[Seq[T]])(using Quotes): Option[Seq[T]]","description":"scala.quoted.FromExpr$$SeqFromExpr","location":"api/scala/quoted/FromExpr$$SeqFromExpr.html","searchKeys":["unapply"]},{"name":"given TypeTreeTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeTreeTypeTest"]},{"name":"val TypeBlock: TypeBlockModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeBlock"]},{"name":"def characteristics(): Int","description":"scala.collection.LongStepper$$LongStepperSpliterator","location":"api/scala/collection/LongStepper$$LongStepperSpliterator.html","searchKeys":["characteristics"]},{"name":"val x$16: Type[T16]","description":"scala.quoted.FromExpr$$Tuple18FromExpr","location":"api/scala/quoted/FromExpr$$Tuple18FromExpr.html","searchKeys":["x$16"]},{"name":"type Head[X <: NonEmptyTuple] = X match {\n  case x *: _ => x\n}","description":"scala.Tuple$","location":"api/scala/Tuple$.html","searchKeys":["Head"]},{"name":"def asJava: BiConsumer[T, U]","description":"scala.jdk.FunctionWrappers$$RichFunction2AsBiConsumer","location":"api/scala/jdk/FunctionWrappers$$RichFunction2AsBiConsumer.html","searchKeys":["asJava"]},{"name":"def lastIndexOf(str: String, fromIndex: Int): Int","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["lastIndexOf"]},{"name":"def empty[A]: CC[A]","description":"scala.collection.SeqFactory$$Delegate","location":"api/scala/collection/SeqFactory$$Delegate.html","searchKeys":["empty"]},{"name":"trait SeqView[+A] extends SeqOps[A, [A] =>> View[A], View[A]] with View[A]","description":"scala.collection.SeqView","location":"api/scala/collection/SeqView.html","searchKeys":["SeqView"]},{"name":"def asJava: IntConsumer","description":"scala.jdk.FunctionWrappers$$RichFunction1AsIntConsumer","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsIntConsumer.html","searchKeys":["asJava"]},{"name":"def incl(elem: A): TreeSet[A]","description":"scala.collection.immutable.TreeSet","location":"api/scala/collection/immutable/TreeSet.html","searchKeys":["incl"]},{"name":"type ClassCastException = ClassCastException","description":"scala","location":"api/scala.html","searchKeys":["ClassCastException"]},{"name":"def append(x: Char): StringBuilder","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["append"]},{"name":"def this(initCapacity: Int, initValue: String)","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["this"]},{"name":"def incl(elem: A): Set[A]","description":"scala.collection.immutable.Set$$Set3","location":"api/scala/collection/immutable/Set$$Set3.html","searchKeys":["incl"]},{"name":"def asScalaFromLongFunction[R](jf: LongFunction[R]): Long => R","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asScalaFromLongFunction"]},{"name":"given BigDecimalToExpr: ToExpr[BigDecimal]","description":"scala.quoted.ToExpr$$BigDecimalToExpr$","location":"api/scala/quoted/ToExpr$.html","searchKeys":["BigDecimalToExpr"]},{"name":"def iterableFactory[V]: Factory[(Long, V), LongMap[V]]","description":"scala.collection.mutable.LongMap$","location":"api/scala/collection/mutable/LongMap$.html","searchKeys":["iterableFactory"]},{"name":"val x$3: Type[T3]","description":"scala.quoted.FromExpr$$Tuple6FromExpr","location":"api/scala/quoted/FromExpr$$Tuple6FromExpr.html","searchKeys":["x$3"]},{"name":"def asJavaToDoubleBiFunction: ToDoubleBiFunction[T, U]","description":"scala.jdk.FunctionWrappers$$RichFunction2AsToDoubleBiFunction","location":"api/scala/jdk/FunctionWrappers$$RichFunction2AsToDoubleBiFunction.html","searchKeys":["asJavaToDoubleBiFunction"]},{"name":"def standard(connectInput: Boolean): ProcessIO","description":"scala.sys.process.BasicIO$","location":"api/scala/sys/process/BasicIO$.html","searchKeys":["standard"]},{"name":"Dropped: Do-While","description":"","location":"docs/reference/dropped-features/do-while.html","searchKeys":["Dropped: Do-While"]},{"name":"def pattern: TypeRepr","description":"scala.quoted.Quotes$reflectModule$MatchCaseMethods","location":"api/scala/quoted/Quotes$reflectModule$MatchCaseMethods.html","searchKeys":["pattern"]},{"name":"type Refinement <: TypeRepr","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Refinement"]},{"name":"def newBuilder[A]: Builder[A, CC[A]]","description":"scala.collection.IterableFactory$$Delegate","location":"api/scala/collection/IterableFactory$$Delegate.html","searchKeys":["newBuilder"]},{"name":"def flatMap[B](f: Char => IterableOnce[B]): IndexedSeq[B]","description":"scala.collection.StringOps$$WithFilter","location":"api/scala/collection/StringOps$$WithFilter.html","searchKeys":["flatMap"]},{"name":"val x$31: FromExpr[T14]","description":"scala.quoted.FromExpr$$Tuple17FromExpr","location":"api/scala/quoted/FromExpr$$Tuple17FromExpr.html","searchKeys":["x$31"]},{"name":"object Double","description":"scala.math.Equiv$$Double$","location":"api/scala/math/Equiv$$Double$.html","searchKeys":["Double"]},{"name":"def apply(l: Long, mc: MathContext): BigDecimal","description":"scala.math.BigDecimal$","location":"api/scala/math/BigDecimal$.html","searchKeys":["apply"]},{"name":"def exclusive: Exclusive[T]","description":"scala.collection.immutable.NumericRange$$Inclusive","location":"api/scala/collection/immutable/NumericRange$$Inclusive.html","searchKeys":["exclusive"]},{"name":"def cosh(x: Double): Double","description":"scala.math","location":"api/scala/math.html","searchKeys":["cosh"]},{"name":"class AsJavaDoubleToLongFunction(sf: Double => Long) extends DoubleToLongFunction","description":"scala.jdk.FunctionWrappers$$AsJavaDoubleToLongFunction","location":"api/scala/jdk/FunctionWrappers$$AsJavaDoubleToLongFunction.html","searchKeys":["AsJavaDoubleToLongFunction"]},{"name":"def multiplyExact(x: Long, y: Long): Long","description":"scala.math","location":"api/scala/math.html","searchKeys":["multiplyExact"]},{"name":"def +(other: Duration): Duration","description":"scala.concurrent.duration.Duration","location":"api/scala/concurrent/duration/Duration.html","searchKeys":["+"]},{"name":"def newBuilder[K, V](evidence$3: Ordering[K]): Builder[(K, V), TreeMap[K, V]]","description":"scala.collection.mutable.TreeMap$","location":"api/scala/collection/mutable/TreeMap$.html","searchKeys":["newBuilder"]},{"name":"def this()","description":"scala.annotation.unused","location":"api/scala/annotation/unused.html","searchKeys":["this"]},{"name":"def copy(original: Tree)(constant: Constant): Literal","description":"scala.quoted.Quotes$reflectModule$LiteralModule","location":"api/scala/quoted/Quotes$reflectModule$LiteralModule.html","searchKeys":["copy"]},{"name":"def -(other: FiniteDuration): Deadline","description":"scala.concurrent.duration.Deadline","location":"api/scala/concurrent/duration/Deadline.html","searchKeys":["-"]},{"name":"def _2: T2","description":"scala.Product21","location":"api/scala/Product21.html","searchKeys":["_2"]},{"name":"trait Function7[-T1, -T2, -T3, -T4, -T5, -T6, -T7, +R] extends AnyRef","description":"scala.Function7","location":"api/scala/Function7.html","searchKeys":["Function7"]},{"name":"val x$15: FromExpr[T1]","description":"scala.quoted.FromExpr$$Tuple14FromExpr","location":"api/scala/quoted/FromExpr$$Tuple14FromExpr.html","searchKeys":["x$15"]},{"name":"def scanLeft[T](z: U)(op: (U, T) => U)(evidence$9: ClassTag[U]): IArray[U]","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["scanLeft"]},{"name":"def meth: Term","description":"scala.quoted.Quotes$reflectModule$ClosureMethods","location":"api/scala/quoted/Quotes$reflectModule$ClosureMethods.html","searchKeys":["meth"]},{"name":"class AbstractView[+A] extends AbstractIterable[A] with View[A]","description":"scala.collection.AbstractView","location":"api/scala/collection/AbstractView.html","searchKeys":["AbstractView"]},{"name":"The @threadUnsafe annotation","description":"","location":"docs/reference/other-new-features/threadUnsafe-annotation.html","searchKeys":["The @threadUnsafe annotation"]},{"name":"class noinline extends StaticAnnotation","description":"scala.noinline","location":"api/scala/noinline.html","searchKeys":["noinline"]},{"name":"def !=(x: Int): Boolean","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["!="]},{"name":"def iterate[A](start: A)(f: A => A): Stream[A]","description":"scala.collection.immutable.Stream$","location":"api/scala/collection/immutable/Stream$.html","searchKeys":["iterate"]},{"name":"object FunctionConverters extends Priority0FunctionExtensions","description":"scala.jdk.FunctionConverters$","location":"api/scala/jdk/FunctionConverters$.html","searchKeys":["FunctionConverters"]},{"name":"def fromUTF8(bytes: Array[Byte]): Array[Char]","description":"scala.io.Codec$","location":"api/scala/io/Codec$.html","searchKeys":["fromUTF8"]},{"name":"def refresh(key: K): TreeSeqMap[K, V]","description":"scala.collection.immutable.TreeSeqMap","location":"api/scala/collection/immutable/TreeSeqMap.html","searchKeys":["refresh"]},{"name":"def toJavaLongAccumulator(ia: LongAccumulator): SpecificIterableFactory[Long, LongAccumulator]","description":"scala.jdk.LongAccumulator$","location":"api/scala/jdk/LongAccumulator$.html","searchKeys":["toJavaLongAccumulator"]},{"name":"class ofDouble extends ArrayBuilder[Double]","description":"scala.collection.mutable.ArrayBuilder$$ofDouble","location":"api/scala/collection/mutable/ArrayBuilder$$ofDouble.html","searchKeys":["ofDouble"]},{"name":"type Set[A] = Set[A]","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["Set"]},{"name":"def append[S >: T](ordinal: Int, value: S): Ordering[S]","description":"scala.collection.immutable.TreeSeqMap$$Ordering","location":"api/scala/collection/immutable/TreeSeqMap$$Ordering.html","searchKeys":["append"]},{"name":"def apply(x: BigInt)(using Quotes): Expr[BigInt]","description":"scala.quoted.ToExpr$$BigIntToExpr$","location":"api/scala/quoted/ToExpr$$BigIntToExpr$.html","searchKeys":["apply"]},{"name":"def collect[K2, V2](pf: PartialFunction[(K, V), (K2, V2)])(@implicitNotFound ordering: Ordering[K2]): CollisionProofHashMap[K2, V2]","description":"scala.collection.mutable.CollisionProofHashMap","location":"api/scala/collection/mutable/CollisionProofHashMap.html","searchKeys":["collect"]},{"name":"class RightProjection[+A, +B](e: Either[A, B])","description":"scala.util.Either$$RightProjection","location":"api/scala/util/Either$$RightProjection.html","searchKeys":["RightProjection"]},{"name":"given StringContextToExpr: ToExpr[StringContext]","description":"scala.quoted.ToExpr$$StringContextToExpr$","location":"api/scala/quoted/ToExpr$.html","searchKeys":["StringContextToExpr"]},{"name":"class Infinite extends Duration","description":"scala.concurrent.duration.Duration$$Infinite","location":"api/scala/concurrent/duration/Duration$$Infinite.html","searchKeys":["Infinite"]},{"name":"given SourceFileMethods","description":"scala.quoted.Quotes$reflectModule$SourceFileMethods","location":"api/scala/quoted/Quotes$reflectModule$SourceFileMethods.html","searchKeys":["SourceFileMethods"]},{"name":"def toInt(x: BigDecimal): Int","description":"scala.math.Numeric$$BigDecimalIsConflicted","location":"api/scala/math/Numeric$$BigDecimalIsConflicted.html","searchKeys":["toInt"]},{"name":"def getLines(): Iterator[String]","description":"scala.io.Source","location":"api/scala/io/Source.html","searchKeys":["getLines"]},{"name":"def unapply(x: ThisType): Some[TypeRepr]","description":"scala.quoted.Quotes$reflectModule$ThisTypeModule","location":"api/scala/quoted/Quotes$reflectModule$ThisTypeModule.html","searchKeys":["unapply"]},{"name":"class RichLongToIntFunctionAsFunction1(underlying: LongToIntFunction) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichLongToIntFunctionAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichLongToIntFunctionAsFunction1.html","searchKeys":["RichLongToIntFunctionAsFunction1"]},{"name":"def apply$mcJJI$sp(v1: Long, v2: Int): Long","description":"scala.runtime.java8.JFunction2$mcJJI$sp","location":"api/scala/runtime/java8/JFunction2$mcJJI$sp.html","searchKeys":["apply$mcJJI$sp"]},{"name":"def apply(x: T)(using Quotes): Expr[T]","description":"scala.quoted.ToExpr$$FloatToExpr","location":"api/scala/quoted/ToExpr$$FloatToExpr.html","searchKeys":["apply"]},{"name":"def prepend(elem: A): Buffer[A]","description":"scala.collection.mutable.Buffer","location":"api/scala/collection/mutable/Buffer.html","searchKeys":["prepend"]},{"name":"given Tuple17ToExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17]: ToExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17)]","description":"scala.quoted.ToExpr$$Tuple17ToExpr","location":"api/scala/quoted/ToExpr$$Tuple17ToExpr.html","searchKeys":["Tuple17ToExpr"]},{"name":"given Tuple7ToExpr[T1, T2, T3, T4, T5, T6, T7]: ToExpr[(T1, T2, T3, T4, T5, T6, T7)]","description":"scala.quoted.ToExpr$$Tuple7ToExpr","location":"api/scala/quoted/ToExpr$.html","searchKeys":["Tuple7ToExpr"]},{"name":"val x$12: FromExpr[T6]","description":"scala.quoted.FromExpr$$Tuple6FromExpr","location":"api/scala/quoted/FromExpr$$Tuple6FromExpr.html","searchKeys":["x$12"]},{"name":"class WeakReference[+T <: AnyRef](value: T, queue: ReferenceQueue[T]) extends ReferenceWrapper[T]","description":"scala.ref.WeakReference","location":"api/scala/ref/WeakReference.html","searchKeys":["WeakReference"]},{"name":"class Map[A, B](underlying: SomeIndexedSeqOps[A], f: A => B) extends Map[A, B] with IndexedSeqView[B]","description":"scala.collection.IndexedSeqView$$Map","location":"api/scala/collection/IndexedSeqView$$Map.html","searchKeys":["Map"]},{"name":"def throwError(msg: String, expr: Expr[Any]): Nothing","description":"scala.quoted.Quotes$reflectModule$reportModule","location":"api/scala/quoted/Quotes$reflectModule$reportModule.html","searchKeys":["throwError"]},{"name":"def flatMap[V2](f: (Long, T) => IterableOnce[(Long, V2)]): LongMap[V2]","description":"scala.collection.immutable.LongMap","location":"api/scala/collection/immutable/LongMap.html","searchKeys":["flatMap"]},{"name":"def asJavaPredicate[T](sf: T => Boolean): Predicate[T]","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asJavaPredicate"]},{"name":"def decimal(l: Long): BigDecimal","description":"scala.math.BigDecimal$","location":"api/scala/math/BigDecimal$.html","searchKeys":["decimal"]},{"name":"given ThisTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ThisTypeTest"]},{"name":"def unary_-: BigDecimal","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["unary_-"]},{"name":"def _4: T4","description":"scala.Product15","location":"api/scala/Product15.html","searchKeys":["_4"]},{"name":"Changes in Compiler Plugins","description":"","location":"docs/reference/changed-features/compiler-plugins.html","searchKeys":["Changes in Compiler Plugins"]},{"name":"def toLong: Long","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["toLong"]},{"name":"val tag: ClassTag[T]","description":"scala.collection.mutable.UnrolledBuffer","location":"api/scala/collection/mutable/UnrolledBuffer.html","searchKeys":["tag"]},{"name":"type CharConstant <: Constant","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["CharConstant"]},{"name":"def sliding(size: Int, step: Int): Iterator[Array[A]]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["sliding"]},{"name":"val x$13: Type[T13]","description":"scala.quoted.FromExpr$$Tuple21FromExpr","location":"api/scala/quoted/FromExpr$$Tuple21FromExpr.html","searchKeys":["x$13"]},{"name":"def getc(): Boolean","description":"scala.io.Source$LineIterator","location":"api/scala/io/Source$LineIterator.html","searchKeys":["getc"]},{"name":"class LongMap[V] extends AbstractMap[Long, V] with MapOps[Long, V, [K, V] =>> Map[K, V], LongMap[V]] with StrictOptimizedIterableOps[(Long, V), [A] =>> Iterable[A], LongMap[V]] with Serializable","description":"scala.collection.mutable.LongMap","location":"api/scala/collection/mutable/LongMap.html","searchKeys":["LongMap"]},{"name":"type Repeated <: Term","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Repeated"]},{"name":"def array_apply(xs: AnyRef, idx: Int): Any","description":"scala.runtime.ScalaRunTime$","location":"api/scala/runtime/ScalaRunTime$.html","searchKeys":["array_apply"]},{"name":"def <=(x: Float): Boolean","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["<="]},{"name":"val Object: Manifest[Object]","description":"scala.reflect.ManifestFactory$","location":"api/scala/reflect/ManifestFactory$.html","searchKeys":["Object"]},{"name":"def withIn[T](reader: Reader)(thunk: => T): T","description":"scala.Console$","location":"api/scala/Console$.html","searchKeys":["withIn"]},{"name":"trait LongIsIntegral extends Integral[Long]","description":"scala.math.Numeric$$LongIsIntegral","location":"api/scala/math/Numeric$$LongIsIntegral.html","searchKeys":["LongIsIntegral"]},{"name":"def toChar: Char","description":"scala.math.ScalaNumericAnyConversions","location":"api/scala/math/ScalaNumericAnyConversions.html","searchKeys":["toChar"]},{"name":"def *(x: Short): Int","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["*"]},{"name":"var nerrors: Int","description":"scala.io.Source","location":"api/scala/io/Source.html","searchKeys":["nerrors"]},{"name":"given IntConstantTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["IntConstantTypeTest"]},{"name":"def unapply(constant: StringConstant): Some[String]","description":"scala.quoted.Quotes$reflectModule$StringConstantModule","location":"api/scala/quoted/Quotes$reflectModule$StringConstantModule.html","searchKeys":["unapply"]},{"name":"val x$28: FromExpr[T12]","description":"scala.quoted.FromExpr$$Tuple16FromExpr","location":"api/scala/quoted/FromExpr$$Tuple16FromExpr.html","searchKeys":["x$28"]},{"name":"def iterator: Iterator[A]","description":"scala.collection.mutable.TreeSet","location":"api/scala/collection/mutable/TreeSet.html","searchKeys":["iterator"]},{"name":"def wrapByteArray(xs: Array[Byte]): ArraySeq[Byte]","description":"scala.runtime.ScalaRunTime$","location":"api/scala/runtime/ScalaRunTime$.html","searchKeys":["wrapByteArray"]},{"name":"def withOutput(process: InputStream => Unit): ProcessIO","description":"scala.sys.process.ProcessIO","location":"api/scala/sys/process/ProcessIO.html","searchKeys":["withOutput"]},{"name":"class ofLong(val unsafeArray: Array[Long]) extends ArraySeq[Long]","description":"scala.collection.immutable.ArraySeq$$ofLong","location":"api/scala/collection/immutable/ArraySeq$$ofLong.html","searchKeys":["ofLong"]},{"name":"val end: Int","description":"scala.util.matching.Regex$$Match","location":"api/scala/util/matching/Regex$$Match.html","searchKeys":["end"]},{"name":"object TastyBuffer","description":"dotty.tools.tasty.TastyBuffer$","location":"api/dotty/tools/tasty/TastyBuffer$.html","searchKeys":["TastyBuffer"]},{"name":"val symmetricSeed: -1248659538","description":"scala.util.hashing.MurmurHash3$","location":"api/scala/util/hashing/MurmurHash3$.html","searchKeys":["symmetricSeed"]},{"name":"def toUpper: Char","description":"scala.runtime.RichChar","location":"api/scala/runtime/RichChar.html","searchKeys":["toUpper"]},{"name":"def *(x: Short): Double","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["*"]},{"name":"def unapply(x: Singleton): Some[Term]","description":"scala.quoted.Quotes$reflectModule$SingletonModule","location":"api/scala/quoted/Quotes$reflectModule$SingletonModule.html","searchKeys":["unapply"]},{"name":"val x$12: Type[T12]","description":"scala.quoted.FromExpr$$Tuple20FromExpr","location":"api/scala/quoted/FromExpr$$Tuple20FromExpr.html","searchKeys":["x$12"]},{"name":"def _2: T2","description":"scala.Product14","location":"api/scala/Product14.html","searchKeys":["_2"]},{"name":"def classType[T](prefix: Manifest[], clazz: Class[], args: Manifest[]*): Manifest[T]","description":"scala.reflect.Manifest$","location":"api/scala/reflect/Manifest$.html","searchKeys":["classType"]},{"name":"def foldLeft[B](z: B)(op: (B, A) => B): B","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["foldLeft"]},{"name":"def -(x: Float): Double","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["-"]},{"name":"def klone(): C","description":"scala.collection.mutable.ArrayDequeOps","location":"api/scala/collection/mutable/ArrayDequeOps.html","searchKeys":["klone"]},{"name":"def tryAdvance(c: Consumer[ >: A]): Boolean","description":"scala.collection.AnyStepper$$AnyStepperSpliterator","location":"api/scala/collection/AnyStepper$$AnyStepperSpliterator.html","searchKeys":["tryAdvance"]},{"name":"def iterate[T](start: T, len: Int)(f: T => T)(evidence$28: ClassTag[T]): IArray[T]","description":"scala.IArray$package$$IArray$","location":"api/scala/IArray$package$$IArray$.html","searchKeys":["iterate"]},{"name":"def unless[A](cond: Boolean)(a: => A): Option[A]","description":"scala.Option$","location":"api/scala/Option$.html","searchKeys":["unless"]},{"name":"given BigIntToExpr: ToExpr[BigInt]","description":"scala.quoted.ToExpr$$BigIntToExpr$","location":"api/scala/quoted/ToExpr$$BigIntToExpr$.html","searchKeys":["BigIntToExpr"]},{"name":"val WHITE_B: \"\\033[47m\"","description":"scala.io.AnsiColor","location":"api/scala/io/AnsiColor.html","searchKeys":["WHITE_B"]},{"name":"def ==(x: Double): Boolean","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["=="]},{"name":"val x$5: Type[T5]","description":"scala.quoted.FromExpr$$Tuple19FromExpr","location":"api/scala/quoted/FromExpr$$Tuple19FromExpr.html","searchKeys":["x$5"]},{"name":"New Control Syntax","description":"","location":"docs/reference/other-new-features/control-syntax.html","searchKeys":["New Control Syntax"]},{"name":"def stripMargin(marginChar: Char): String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["stripMargin"]},{"name":"val x$12: FromExpr[T4]","description":"scala.quoted.FromExpr$$Tuple8FromExpr","location":"api/scala/quoted/FromExpr$$Tuple8FromExpr.html","searchKeys":["x$12"]},{"name":"def >(x: Long): Boolean","description":"scala.Char","location":"api/scala/Char.html","searchKeys":[">"]},{"name":"def from[E](it: IterableOnce[E])(ordering: Ordering[E]): TreeSet[E]","description":"scala.collection.immutable.TreeSet$","location":"api/scala/collection/immutable/TreeSet$.html","searchKeys":["from"]},{"name":"def get(key: K): Option[V]","description":"scala.collection.mutable.HashMap","location":"api/scala/collection/mutable/HashMap.html","searchKeys":["get"]},{"name":"def TypeReprStructure: Printer[TypeRepr]","description":"scala.quoted.Quotes$reflectModule$PrinterModule","location":"api/scala/quoted/Quotes$reflectModule$PrinterModule.html","searchKeys":["TypeReprStructure"]},{"name":"def <=(x: Int): Boolean","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["<="]},{"name":"def toJavaOptionalDouble(o: Option[Double]): OptionalDouble","description":"scala.jdk.javaapi.OptionConverters$","location":"api/scala/jdk/javaapi/OptionConverters$.html","searchKeys":["toJavaOptionalDouble"]},{"name":"def ceil: Float","description":"scala.runtime.RichFloat","location":"api/scala/runtime/RichFloat.html","searchKeys":["ceil"]},{"name":"def rem(x: BigInt, y: BigInt): BigInt","description":"scala.math.Numeric$$BigIntIsIntegral","location":"api/scala/math/Numeric$$BigIntIsIntegral.html","searchKeys":["rem"]},{"name":"def isEmpty[T]: Boolean","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["isEmpty"]},{"name":"class AsJavaIntToLongFunction(sf: Int => Long) extends IntToLongFunction","description":"scala.jdk.FunctionWrappers$$AsJavaIntToLongFunction","location":"api/scala/jdk/FunctionWrappers$$AsJavaIntToLongFunction.html","searchKeys":["AsJavaIntToLongFunction"]},{"name":"def andThen[C](k: PartialFunction[B, C]): PartialFunction[A, C]","description":"scala.PartialFunction","location":"api/scala/PartialFunction.html","searchKeys":["andThen"]},{"name":"def _10: T10","description":"scala.Product11","location":"api/scala/Product11.html","searchKeys":["_10"]},{"name":"package scala.runtime.java8","description":"scala.runtime.java8","location":"api/scala/runtime/java8.html","searchKeys":["scala.runtime.java8"]},{"name":"val mc: MathContext","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["mc"]},{"name":"class DoubleArrayHasSeqParStream(a: Array[Double])","description":"scala.collection.convert.StreamExtensions$DoubleArrayHasSeqParStream","location":"api/scala/collection/convert/StreamExtensions$DoubleArrayHasSeqParStream.html","searchKeys":["DoubleArrayHasSeqParStream"]},{"name":"def newBuilder[K, V]: Builder[(K, V), SeqMap[K, V]]","description":"scala.collection.immutable.SeqMap$","location":"api/scala/collection/immutable/SeqMap$.html","searchKeys":["newBuilder"]},{"name":"Syntax Changes in Dotty 0.22","description":"","location":"docs/release-notes/syntax-changes-0.22.html","searchKeys":["Syntax Changes in Dotty 0.22"]},{"name":"def unapply(d: Duration): Option[(Long, TimeUnit)]","description":"scala.concurrent.duration.Duration$","location":"api/scala/concurrent/duration/Duration$.html","searchKeys":["unapply"]},{"name":"def asScalaSetConverter[A](s: Set[A]): AsScala[Set[A]]","description":"scala.collection.JavaConverters$","location":"api/scala/collection/JavaConverters$.html","searchKeys":["asScalaSetConverter"]},{"name":"object int","description":"scala.compiletime.ops.int$","location":"api/scala/compiletime/ops/int$.html","searchKeys":["int"]},{"name":"def addOne(elem: Boolean): ofBoolean","description":"scala.collection.mutable.ArrayBuilder$$ofBoolean","location":"api/scala/collection/mutable/ArrayBuilder$$ofBoolean.html","searchKeys":["addOne"]},{"name":"def compare(x: BigInt, y: BigInt): Int","description":"scala.math.Ordering$$BigIntOrdering","location":"api/scala/math/Ordering$$BigIntOrdering.html","searchKeys":["compare"]},{"name":"Context Bounds","description":"","location":"docs/reference/contextual/context-bounds.html","searchKeys":["Context Bounds"]},{"name":"def search[B >: A](elem: B, from: Int, to: Int)(ord: Ordering[B]): SearchResult","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["search"]},{"name":"def empty[A]: ListSet[A]","description":"scala.collection.immutable.ListSet$","location":"api/scala/collection/immutable/ListSet$.html","searchKeys":["empty"]},{"name":"def inclusive(start: BigInt, end: BigInt, step: BigInt): Inclusive[BigInt]","description":"scala.collection.immutable.Range$$BigInt$","location":"api/scala/collection/immutable/Range$$BigInt$.html","searchKeys":["inclusive"]},{"name":"def stableSort[K](a: Array[K], f: (K, K) => Boolean): Unit","description":"scala.util.Sorting$","location":"api/scala/util/Sorting$.html","searchKeys":["stableSort"]},{"name":"def toVector: Vector[A]","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["toVector"]},{"name":"def asJavaSeqKeyIntStreamFromShort[V](m: Map[Short, V]): IntStream","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaSeqKeyIntStreamFromShort"]},{"name":"val x$1: Type[T1]","description":"scala.quoted.FromExpr$$Tuple19FromExpr","location":"api/scala/quoted/FromExpr$$Tuple19FromExpr.html","searchKeys":["x$1"]},{"name":"def apply$mcVDJ$sp(v1: Double, v2: Long): Unit","description":"scala.runtime.java8.JFunction2$mcVDJ$sp","location":"api/scala/runtime/java8/JFunction2$mcVDJ$sp.html","searchKeys":["apply$mcVDJ$sp"]},{"name":"object LongIsIntegral extends LongIsIntegral with LongOrdering","description":"scala.math.Numeric$$LongIsIntegral$","location":"api/scala/math/Numeric$$LongIsIntegral$.html","searchKeys":["LongIsIntegral"]},{"name":"object VectorMap extends MapFactory[[K, V] =>> VectorMap[K, V]]","description":"scala.collection.immutable.VectorMap$","location":"api/scala/collection/immutable/VectorMap$.html","searchKeys":["VectorMap"]},{"name":"class getter extends StaticAnnotation","description":"scala.annotation.meta.getter","location":"api/scala/annotation/meta/getter.html","searchKeys":["getter"]},{"name":"class unused(message: String) extends StaticAnnotation","description":"scala.annotation.unused","location":"api/scala/annotation/unused.html","searchKeys":["unused"]},{"name":"trait IterableOps[+A, +CC <: ([_$1] =>> Any), +C] extends IterableOnce[A] with IterableOnceOps[A, CC, C]","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["IterableOps"]},{"name":"def applyOrElse[A1 <: A, B1 >: B](x: A1, default: A1 => B1): B1","description":"scala.PartialFunction","location":"api/scala/PartialFunction.html","searchKeys":["applyOrElse"]},{"name":"Scala 3 Syntax Summary","description":"","location":"docs/internals/syntax.html","searchKeys":["Scala 3 Syntax Summary"]},{"name":"def untupled[T1, T2, T3, T4, R](f: (T1, T2, T3, T4) => R): (T1, T2, T3, T4) => R","description":"scala.Function$","location":"api/scala/Function$.html","searchKeys":["untupled"]},{"name":"trait LambdaModule","description":"scala.quoted.Quotes$reflectModule$LambdaModule","location":"api/scala/quoted/Quotes$reflectModule$LambdaModule.html","searchKeys":["LambdaModule"]},{"name":"def paramBounds: List[TypeBounds]","description":"scala.quoted.Quotes$reflectModule$PolyTypeMethods","location":"api/scala/quoted/Quotes$reflectModule$PolyTypeMethods.html","searchKeys":["paramBounds"]},{"name":"class AnyIterableDelegate[CC <: ([_$56] =>> Any)](delegate: ClassTagIterableFactory[CC]) extends IterableFactory[CC]","description":"scala.collection.ClassTagIterableFactory$$AnyIterableDelegate","location":"api/scala/collection/ClassTagIterableFactory$$AnyIterableDelegate.html","searchKeys":["AnyIterableDelegate"]},{"name":"val x$22: FromExpr[T11]","description":"scala.quoted.FromExpr$$Tuple11FromExpr","location":"api/scala/quoted/FromExpr$$Tuple11FromExpr.html","searchKeys":["x$22"]},{"name":"type R = FiniteDuration","description":"scala.concurrent.duration.DurationConversions$$spanConvert$","location":"api/scala/concurrent/duration/DurationConversions$$spanConvert$.html","searchKeys":["R"]},{"name":"type ImplicitSearchResult <: AnyRef","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ImplicitSearchResult"]},{"name":"def copy(original: Tree)(tpt: TypeTree): New","description":"scala.quoted.Quotes$reflectModule$NewModule","location":"api/scala/quoted/Quotes$reflectModule$NewModule.html","searchKeys":["copy"]},{"name":"def _15: T15","description":"scala.Product22","location":"api/scala/Product22.html","searchKeys":["_15"]},{"name":"def enrichAsJavaToLongFunction[T](sf: T => Long): RichFunction1AsToLongFunction[T]","description":"scala.jdk.Priority1FunctionExtensions","location":"api/scala/jdk/Priority1FunctionExtensions.html","searchKeys":["enrichAsJavaToLongFunction"]},{"name":"def tryCompareTo[B >: A](that: B)(evidence$1: () => B): Option[Int]","description":"scala.math.PartiallyOrdered","location":"api/scala/math/PartiallyOrdered.html","searchKeys":["tryCompareTo"]},{"name":"val x$7: FromExpr[T2]","description":"scala.quoted.FromExpr$$Tuple5FromExpr","location":"api/scala/quoted/FromExpr$$Tuple5FromExpr.html","searchKeys":["x$7"]},{"name":"trait reportModule","description":"scala.quoted.Quotes$reflectModule$reportModule","location":"api/scala/quoted/Quotes$reflectModule$reportModule.html","searchKeys":["reportModule"]},{"name":"def reduce[B >: A](op: (B, B) => B): B","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["reduce"]},{"name":"def contains(elem: Char): Boolean","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["contains"]},{"name":"val PositiveInfinity: Infinity","description":"scala.Float$","location":"api/scala/Float$.html","searchKeys":["PositiveInfinity"]},{"name":"val writeInput: OutputStream => Unit","description":"scala.sys.process.ProcessIO","location":"api/scala/sys/process/ProcessIO.html","searchKeys":["writeInput"]},{"name":"def find(@deprecatedName(\"f\", \"2.13.3\") p: A => Boolean): Option[A]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["find"]},{"name":"given BlockMethods","description":"scala.quoted.Quotes$reflectModule$BlockMethods","location":"api/scala/quoted/Quotes$reflectModule$BlockMethods.html","searchKeys":["BlockMethods"]},{"name":"class Success[+T](value: T) extends Try[T]","description":"scala.util.Success","location":"api/scala/util/Success.html","searchKeys":["Success"]},{"name":"val x$20: FromExpr[T4]","description":"scala.quoted.FromExpr$$Tuple16FromExpr","location":"api/scala/quoted/FromExpr$$Tuple16FromExpr.html","searchKeys":["x$20"]},{"name":"def asJavaFunction[T, R](sf: T => R): Function[T, R]","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asJavaFunction"]},{"name":"def lastIndexOf(str: String): Int","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["lastIndexOf"]},{"name":"trait ZippedIterable2[+El1, +El2]","description":"scala.runtime.ZippedIterable2","location":"api/scala/runtime/ZippedIterable2.html","searchKeys":["ZippedIterable2"]},{"name":"package scala.util.control","description":"scala.util.control","location":"api/scala/util/control.html","searchKeys":["scala.util.control"]},{"name":"def newBuilder[V]: Builder[(Long, V), LongMap[V]]","description":"scala.collection.immutable.LongMap$","location":"api/scala/collection/immutable/LongMap$.html","searchKeys":["newBuilder"]},{"name":"class Delegate[CC <: ([A] =>> SeqOps[A, [A] =>> Seq[A], Seq[A]])](delegate: ClassTagSeqFactory[CC]) extends Delegate[CC] with ClassTagSeqFactory[CC]","description":"scala.collection.ClassTagSeqFactory$$Delegate","location":"api/scala/collection/ClassTagSeqFactory$$Delegate.html","searchKeys":["Delegate"]},{"name":"def asJava: BinaryOperator[T]","description":"scala.jdk.FunctionWrappers$$RichFunction2AsBinaryOperator","location":"api/scala/jdk/FunctionWrappers$$RichFunction2AsBinaryOperator.html","searchKeys":["asJava"]},{"name":"def exact(bi: BigInt): BigDecimal","description":"scala.math.BigDecimal$","location":"api/scala/math/BigDecimal$.html","searchKeys":["exact"]},{"name":"def ofArray(array: Array[AnyRef], end: Int): C","description":"scala.collection.mutable.ArrayDequeOps","location":"api/scala/collection/mutable/ArrayDequeOps.html","searchKeys":["ofArray"]},{"name":"val ConstantPrinter: Printer[Constant]","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ConstantPrinter"]},{"name":"def apply(underlying: TypeRepr): TypeRepr","description":"scala.quoted.Quotes$reflectModule$ByNameTypeModule","location":"api/scala/quoted/Quotes$reflectModule$ByNameTypeModule.html","searchKeys":["apply"]},{"name":"trait NoPrefixModule","description":"scala.quoted.Quotes$reflectModule$NoPrefixModule","location":"api/scala/quoted/Quotes$reflectModule$NoPrefixModule.html","searchKeys":["NoPrefixModule"]},{"name":"def accept(x1: T, x2: Double): Unit","description":"scala.jdk.FunctionWrappers$$AsJavaObjDoubleConsumer","location":"api/scala/jdk/FunctionWrappers$$AsJavaObjDoubleConsumer.html","searchKeys":["accept"]},{"name":"def flatMap[B, C](f: (El1, El2) => Iterable[B])(bf: BuildFrom[C1, B, C]): C","description":"scala.collection.LazyZip2","location":"api/scala/collection/LazyZip2.html","searchKeys":["flatMap"]},{"name":"def concat[B >: Char](suffix: IterableOnce[B]): IndexedSeq[B]","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["concat"]},{"name":"val DefaultBufSize: Int","description":"scala.io.Source$","location":"api/scala/io/Source$.html","searchKeys":["DefaultBufSize"]},{"name":"def unsafeFromArray[T](s: Array[T]): IArray[T]","description":"scala.IArray$package$$IArray$","location":"api/scala/IArray$package$$IArray$.html","searchKeys":["unsafeFromArray"]},{"name":"def count(f: A => Boolean): Int","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["count"]},{"name":"given EitherFromExpr[L, R](using val x$1: Type[L], val x$2: Type[R], val x$3: FromExpr[L], val x$4: FromExpr[R]): FromExpr[Either[L, R]]","description":"scala.quoted.FromExpr$$EitherFromExpr","location":"api/scala/quoted/FromExpr$.html","searchKeys":["EitherFromExpr"]},{"name":"object IndexedSeqView","description":"scala.collection.IndexedSeqView$","location":"api/scala/collection/IndexedSeqView$.html","searchKeys":["IndexedSeqView"]},{"name":"def newBuilder[A]: Builder[A, CC[A]]","description":"scala.collection.IterableFactory","location":"api/scala/collection/IterableFactory.html","searchKeys":["newBuilder"]},{"name":"def out: PrintStream","description":"scala.Console$","location":"api/scala/Console$.html","searchKeys":["out"]},{"name":"def rem(x: Int, y: Int): Int","description":"scala.math.Numeric$$IntIsIntegral","location":"api/scala/math/Numeric$$IntIsIntegral.html","searchKeys":["rem"]},{"name":"def ++[V2 >: V](xs: IterableOnce[(K, V2)]): CC[K, V2]","description":"scala.collection.MapOps","location":"api/scala/collection/MapOps.html","searchKeys":["++"]},{"name":"def newBuilder[A](initialCapacity: Int, loadFactor: Double): Builder[A, HashSet[A]]","description":"scala.collection.mutable.HashSet$","location":"api/scala/collection/mutable/HashSet$.html","searchKeys":["newBuilder"]},{"name":"def ==(x: Long): Boolean","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["=="]},{"name":"def /(x: Float): Float","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["/"]},{"name":"def derived: List[TypeTree]","description":"scala.quoted.Quotes$reflectModule$ClassDefMethods","location":"api/scala/quoted/Quotes$reflectModule$ClassDefMethods.html","searchKeys":["derived"]},{"name":"def newBuilder: Builder[Value, ValueSet]","description":"scala.Enumeration$ValueSet$","location":"api/scala/Enumeration$ValueSet$.html","searchKeys":["newBuilder"]},{"name":"val x$26: FromExpr[T7]","description":"scala.quoted.FromExpr$$Tuple19FromExpr","location":"api/scala/quoted/FromExpr$$Tuple19FromExpr.html","searchKeys":["x$26"]},{"name":"val BLACK: \"\\033[30m\"","description":"scala.io.AnsiColor","location":"api/scala/io/AnsiColor.html","searchKeys":["BLACK"]},{"name":"def addAll(s: String): StringBuilder","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["addAll"]},{"name":"def -(that: BigInt): BigInt","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["-"]},{"name":"def pairLongToDuration(p: (Long, TimeUnit)): FiniteDuration","description":"scala.concurrent.duration","location":"api/scala/concurrent/duration.html","searchKeys":["pairLongToDuration"]},{"name":"trait Numeric[T] extends Ordering[T]","description":"scala.math.Numeric","location":"api/scala/math/Numeric.html","searchKeys":["Numeric"]},{"name":"class Nothing$ extends Throwable","description":"scala.runtime.Nothing$","location":"api/scala/runtime/Nothing$.html","searchKeys":["Nothing$"]},{"name":"val x$2: Type[T2]","description":"scala.quoted.FromExpr$$Tuple12FromExpr","location":"api/scala/quoted/FromExpr$$Tuple12FromExpr.html","searchKeys":["x$2"]},{"name":"def isPackageDef: Boolean","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["isPackageDef"]},{"name":"def iterator: Iterator[Int]","description":"scala.collection.BitSetOps","location":"api/scala/collection/BitSetOps.html","searchKeys":["iterator"]},{"name":"def asScalaFromIntPredicate(jf: IntPredicate): Integer => Boolean","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asScalaFromIntPredicate"]},{"name":"def stripLineEnd: String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["stripLineEnd"]},{"name":"def iterator: Iterator[A]","description":"scala.collection.immutable.Set$$Set3","location":"api/scala/collection/immutable/Set$$Set3.html","searchKeys":["iterator"]},{"name":"def unapply(ddef: DefDef): (String, List[ParamClause], TypeTree, Option[Term])","description":"scala.quoted.Quotes$reflectModule$DefDefModule","location":"api/scala/quoted/Quotes$reflectModule$DefDefModule.html","searchKeys":["unapply"]},{"name":"def lastOption: Option[T]","description":"scala.collection.immutable.TreeSeqMap$$Ordering","location":"api/scala/collection/immutable/TreeSeqMap$$Ordering.html","searchKeys":["lastOption"]},{"name":"def <(x: Byte): Boolean","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["<"]},{"name":"object IeeeOrdering extends IeeeOrdering","description":"scala.math.Ordering$$Double$$IeeeOrdering$","location":"api/scala/math/Ordering$$Double$$IeeeOrdering$.html","searchKeys":["IeeeOrdering"]},{"name":"def headOption[T]: Option[T]","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["headOption"]},{"name":"def toFactory[K, V, CC <: ([_$22, _$23] =>> Any)](factory: MapFactory[CC]): Factory[(K, V), CC[K, V]]","description":"scala.collection.MapFactory$","location":"api/scala/collection/MapFactory$.html","searchKeys":["toFactory"]},{"name":"val x$2: FromExpr[T]","description":"scala.quoted.FromExpr$$SetFromExpr","location":"api/scala/quoted/FromExpr$$SetFromExpr.html","searchKeys":["x$2"]},{"name":"def createArray(elemClass: Class[], length: Int): AnyRef","description":"scala.compat.Platform$","location":"api/scala/compat/Platform$.html","searchKeys":["createArray"]},{"name":"def removed(key: K): ListMap[K, V]","description":"scala.collection.immutable.ListMap","location":"api/scala/collection/immutable/ListMap.html","searchKeys":["removed"]},{"name":"class MapHasAsScala[K, V](m: Map[K, V])","description":"scala.collection.convert.AsScalaExtensions$MapHasAsScala","location":"api/scala/collection/convert/AsScalaExtensions$MapHasAsScala.html","searchKeys":["MapHasAsScala"]},{"name":"def nextInt(n: Int): Int","description":"scala.util.Random","location":"api/scala/util/Random.html","searchKeys":["nextInt"]},{"name":"object TreeSet extends SortedIterableFactory[[A] =>> TreeSet[A]]","description":"scala.collection.immutable.TreeSet$","location":"api/scala/collection/immutable/TreeSet$.html","searchKeys":["TreeSet"]},{"name":"def byteswap64(v: Long): Long","description":"scala.util.hashing","location":"api/scala/util/hashing.html","searchKeys":["byteswap64"]},{"name":"def ^(x: Char): Int","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["^"]},{"name":"class Enumeration(initial: Int) extends Serializable","description":"scala.Enumeration","location":"api/scala/Enumeration.html","searchKeys":["Enumeration"]},{"name":"def +(x: Long): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["+"]},{"name":"def hours[C](c: C)(ev: Classifier[C]): R","description":"scala.concurrent.duration.DurationConversions","location":"api/scala/concurrent/duration/DurationConversions.html","searchKeys":["hours"]},{"name":"def unapply(cdef: ClassDef): (String, DefDef, List[Tree], List[TypeTree], Option[ValDef], List[Statement])","description":"scala.quoted.Quotes$reflectModule$ClassDefModule","location":"api/scala/quoted/Quotes$reflectModule$ClassDefModule.html","searchKeys":["unapply"]},{"name":"def noSuppression: Boolean","description":"scala.util.control.NoStackTrace$","location":"api/scala/util/control/NoStackTrace$.html","searchKeys":["noSuppression"]},{"name":"class FromJavaLongConsumer(jf: LongConsumer) extends Long => Unit","description":"scala.jdk.FunctionWrappers$$FromJavaLongConsumer","location":"api/scala/jdk/FunctionWrappers$$FromJavaLongConsumer.html","searchKeys":["FromJavaLongConsumer"]},{"name":"def get(key: Int): Option[T]","description":"scala.collection.immutable.IntMap","location":"api/scala/collection/immutable/IntMap.html","searchKeys":["get"]},{"name":"class EnumerationHasAsScala[A](e: Enumeration[A])","description":"scala.collection.convert.AsScalaExtensions$EnumerationHasAsScala","location":"api/scala/collection/convert/AsScalaExtensions$EnumerationHasAsScala.html","searchKeys":["EnumerationHasAsScala"]},{"name":"def isLower: Boolean","description":"scala.runtime.RichChar","location":"api/scala/runtime/RichChar.html","searchKeys":["isLower"]},{"name":"def >=(x: Char): Boolean","description":"scala.Long","location":"api/scala/Long.html","searchKeys":[">="]},{"name":"def locate(idx: Int): Unrolled[T]","description":"scala.collection.mutable.UnrolledBuffer$$Unrolled","location":"api/scala/collection/mutable/UnrolledBuffer$$Unrolled.html","searchKeys":["locate"]},{"name":"val x$2: FromExpr[T]","description":"scala.quoted.FromExpr$$SomeFromExpr","location":"api/scala/quoted/FromExpr$$SomeFromExpr.html","searchKeys":["x$2"]},{"name":"def _5: T5","description":"scala.Product6","location":"api/scala/Product6.html","searchKeys":["_5"]},{"name":"def mutableSetAsJavaSetConverter[A](s: Set[A]): AsJava[Set[A]]","description":"scala.collection.JavaConverters$","location":"api/scala/collection/JavaConverters$.html","searchKeys":["mutableSetAsJavaSetConverter"]},{"name":"def range[A](start: A, end: A)(evidence$3: Integral[A], evidence$4: ClassTag[A]): CC[A]","description":"scala.collection.ClassTagIterableFactory","location":"api/scala/collection/ClassTagIterableFactory.html","searchKeys":["range"]},{"name":"object RoundingMode extends Enumeration","description":"scala.math.BigDecimal$$RoundingMode$","location":"api/scala/math/BigDecimal$$RoundingMode$.html","searchKeys":["RoundingMode"]},{"name":"trait Set[A] extends Iterable[A] with Set[A] with SetOps[A, [A] =>> Set[A], Set[A]] with IterableFactoryDefaults[A, [A] =>> Set[A]]","description":"scala.collection.mutable.Set","location":"api/scala/collection/mutable/Set.html","searchKeys":["Set"]},{"name":"def dequeueFirst(p: A => Boolean): Option[A]","description":"scala.collection.mutable.Queue","location":"api/scala/collection/mutable/Queue.html","searchKeys":["dequeueFirst"]},{"name":"def apply(command: String): ProcessBuilder","description":"scala.sys.process.ProcessCreation","location":"api/scala/sys/process/ProcessCreation.html","searchKeys":["apply"]},{"name":"object Byte extends Equiv[Byte]","description":"scala.math.Equiv$$Byte$","location":"api/scala/math/Equiv$$Byte$.html","searchKeys":["Byte"]},{"name":"def unapply[A](s: Stream[A]): Option[(A, Stream[A])]","description":"scala.package$$#::$","location":"api/scala/package$$#::$.html","searchKeys":["unapply"]},{"name":"def insertAll(index: Int, str: Array[Char], offset: Int, len: Int): StringBuilder","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["insertAll"]},{"name":"def subsets(): Iterator[C]","description":"scala.collection.SetOps","location":"api/scala/collection/SetOps.html","searchKeys":["subsets"]},{"name":"def %(x: Float): Double","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["%"]},{"name":"val daemonizeThreads: Boolean","description":"scala.sys.process.ProcessIO","location":"api/scala/sys/process/ProcessIO.html","searchKeys":["daemonizeThreads"]},{"name":"val nothingCatcher: Catcher[Nothing]","description":"scala.util.control.Exception$","location":"api/scala/util/control/Exception$.html","searchKeys":["nothingCatcher"]},{"name":"def fromBitMask(elems: Array[Long]): ValueSet","description":"scala.Enumeration$ValueSet$","location":"api/scala/Enumeration$ValueSet$.html","searchKeys":["fromBitMask"]},{"name":"def asScala: Set[A]","description":"scala.collection.convert.AsScalaExtensions$SetHasAsScala","location":"api/scala/collection/convert/AsScalaExtensions$SetHasAsScala.html","searchKeys":["asScala"]},{"name":"def ->[B](y: B): (A, B)","description":"scala.Predef$$ArrowAssoc","location":"api/scala/Predef$$ArrowAssoc.html","searchKeys":["->"]},{"name":"def +(elem: A): C","description":"scala.collection.SetOps","location":"api/scala/collection/SetOps.html","searchKeys":["+"]},{"name":"def lookup(k: K): V","description":"scala.collection.concurrent.TrieMap","location":"api/scala/collection/concurrent/TrieMap.html","searchKeys":["lookup"]},{"name":"def toChar: Char","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["toChar"]},{"name":"def tryAdvance(c: LongConsumer): Boolean","description":"scala.collection.LongStepper$$LongStepperSpliterator","location":"api/scala/collection/LongStepper$$LongStepperSpliterator.html","searchKeys":["tryAdvance"]},{"name":"def asJava: Iterable[A]","description":"scala.collection.convert.AsJavaExtensions$IterableHasAsJava","location":"api/scala/collection/convert/AsJavaExtensions$IterableHasAsJava.html","searchKeys":["asJava"]},{"name":"def contains[A1 >: A](elem: A1): Boolean","description":"scala.Option","location":"api/scala/Option.html","searchKeys":["contains"]},{"name":"class AsJavaLongBinaryOperator(sf: (Long, Long) => Long) extends LongBinaryOperator","description":"scala.jdk.FunctionWrappers$$AsJavaLongBinaryOperator","location":"api/scala/jdk/FunctionWrappers$$AsJavaLongBinaryOperator.html","searchKeys":["AsJavaLongBinaryOperator"]},{"name":"given given_FromString_String: FromString[String]","description":"scala.util.CommandLineParser$$FromString$$given_FromString_String$","location":"api/scala/util/CommandLineParser$$FromString$$given_FromString_String$.html","searchKeys":["given_FromString_String"]},{"name":"def -=(elem: A): Shrinkable[A]","description":"scala.collection.mutable.Shrinkable","location":"api/scala/collection/mutable/Shrinkable.html","searchKeys":["-="]},{"name":"def mapInPlace(f: T => T): UnrolledBuffer[T]","description":"scala.collection.mutable.UnrolledBuffer","location":"api/scala/collection/mutable/UnrolledBuffer.html","searchKeys":["mapInPlace"]},{"name":"def enrichAsScalaFromToLongBiFunction[T, U](jf: ToLongBiFunction[T, U]): RichToLongBiFunctionAsFunction2[T, U]","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsScalaFromToLongBiFunction"]},{"name":"trait EvidenceIterableFactoryDefaults[+A, +CC <: ([x] =>> IterableOps[x, CC, CC[x]]), Ev <: ([_$12] =>> Any)] extends IterableOps[A, CC, CC[A]]","description":"scala.collection.EvidenceIterableFactoryDefaults","location":"api/scala/collection/EvidenceIterableFactoryDefaults.html","searchKeys":["EvidenceIterableFactoryDefaults"]},{"name":"def apply(url: URL): URLBuilder","description":"scala.sys.process.ProcessCreation","location":"api/scala/sys/process/ProcessCreation.html","searchKeys":["apply"]},{"name":"def wrapFloatArray(xs: Array[Float]): ArraySeq[Float]","description":"scala.runtime.ScalaRunTime$","location":"api/scala/runtime/ScalaRunTime$.html","searchKeys":["wrapFloatArray"]},{"name":"class languageFeature(feature: String, enableRequired: Boolean) extends StaticAnnotation","description":"scala.annotation.meta.languageFeature","location":"api/scala/annotation/meta/languageFeature.html","searchKeys":["languageFeature"]},{"name":"def invoke(): Unit","description":"scala.util.control.Exception$$Finally","location":"api/scala/util/control/Exception$$Finally.html","searchKeys":["invoke"]},{"name":"def _4: T4","description":"scala.Product5","location":"api/scala/Product5.html","searchKeys":["_4"]},{"name":"def _9: T9","description":"scala.Product10","location":"api/scala/Product10.html","searchKeys":["_9"]},{"name":"def continually[A](elem: => A): Stream[A]","description":"scala.collection.immutable.Stream$","location":"api/scala/collection/immutable/Stream$.html","searchKeys":["continually"]},{"name":"def apply$mcZID$sp(v1: Int, v2: Double): Boolean","description":"scala.runtime.java8.JFunction2$mcZID$sp","location":"api/scala/runtime/java8/JFunction2$mcZID$sp.html","searchKeys":["apply$mcZID$sp"]},{"name":"def toLower: Char","description":"scala.runtime.RichChar","location":"api/scala/runtime/RichChar.html","searchKeys":["toLower"]},{"name":"def apply(qualifier: Term, name: String, levels: Int): SelectOuter","description":"scala.quoted.Quotes$reflectModule$SelectOuterModule","location":"api/scala/quoted/Quotes$reflectModule$SelectOuterModule.html","searchKeys":["apply"]},{"name":"trait JFunction1$mcFD$sp extends Any => Any with Serializable","description":"scala.runtime.java8.JFunction1$mcFD$sp","location":"api/scala/runtime/java8/JFunction1$mcFD$sp.html","searchKeys":["JFunction1$mcFD$sp"]},{"name":"given ImportMethods","description":"scala.quoted.Quotes$reflectModule$ImportMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ImportMethods"]},{"name":"def expr: Term","description":"scala.quoted.Quotes$reflectModule$ImportMethods","location":"api/scala/quoted/Quotes$reflectModule$ImportMethods.html","searchKeys":["expr"]},{"name":"def toDouble: Double","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["toDouble"]},{"name":"def getAsInt(): Int","description":"scala.jdk.FunctionWrappers$$AsJavaIntSupplier","location":"api/scala/jdk/FunctionWrappers$$AsJavaIntSupplier.html","searchKeys":["getAsInt"]},{"name":"def apply(self: NonEmptyTuple, n: Int): Any","description":"scala.runtime.Tuples$","location":"api/scala/runtime/Tuples$.html","searchKeys":["apply"]},{"name":"def isContextFunctionType: Boolean","description":"scala.quoted.Quotes$reflectModule$TypeReprMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html","searchKeys":["isContextFunctionType"]},{"name":"def apply$mcZ$sp(): Boolean","description":"scala.runtime.java8.JFunction0$mcZ$sp","location":"api/scala/runtime/java8/JFunction0$mcZ$sp.html","searchKeys":["apply$mcZ$sp"]},{"name":"object BigIntIsIntegral extends BigIntIsIntegral with BigIntOrdering","description":"scala.math.Numeric$$BigIntIsIntegral$","location":"api/scala/math/Numeric$$BigIntIsIntegral$.html","searchKeys":["BigIntIsIntegral"]},{"name":"val x$8: Type[T8]","description":"scala.quoted.FromExpr$$Tuple20FromExpr","location":"api/scala/quoted/FromExpr$$Tuple20FromExpr.html","searchKeys":["x$8"]},{"name":"def scrutinee: TypeRepr","description":"scala.quoted.Quotes$reflectModule$MatchTypeMethods","location":"api/scala/quoted/Quotes$reflectModule$MatchTypeMethods.html","searchKeys":["scrutinee"]},{"name":"val ordering: Ordering[K]","description":"scala.collection.immutable.TreeMap","location":"api/scala/collection/immutable/TreeMap.html","searchKeys":["ordering"]},{"name":"def toFloat: Float","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["toFloat"]},{"name":"Overview","description":"","location":"docs/reference/metaprogramming/toc.html","searchKeys":["Overview"]},{"name":"object noAutoTupling","description":"scala.language$$noAutoTupling$","location":"api/scala/language$$noAutoTupling$.html","searchKeys":["noAutoTupling"]},{"name":"object LazyZip3","description":"scala.collection.LazyZip3$","location":"api/scala/collection/LazyZip3$.html","searchKeys":["LazyZip3"]},{"name":"trait TypeSelectModule","description":"scala.quoted.Quotes$reflectModule$TypeSelectModule","location":"api/scala/quoted/Quotes$reflectModule$TypeSelectModule.html","searchKeys":["TypeSelectModule"]},{"name":"object OpenHashMap extends MapFactory[[Key, Value] =>> OpenHashMap[Key, Value]]","description":"scala.collection.mutable.OpenHashMap$","location":"api/scala/collection/mutable/OpenHashMap$.html","searchKeys":["OpenHashMap"]},{"name":"val executionStart: Long","description":"scala.App","location":"api/scala/App.html","searchKeys":["executionStart"]},{"name":"def <<(x: Int): Int","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["<<"]},{"name":"def #:::[B >: A](prefix: Stream[B]): Stream[B]","description":"scala.collection.immutable.Stream$$Deferrer","location":"api/scala/collection/immutable/Stream$$Deferrer.html","searchKeys":["#:::"]},{"name":"def incrementExact(x: Int): Int","description":"scala.math","location":"api/scala/math.html","searchKeys":["incrementExact"]},{"name":"type TimeoutException = TimeoutException","description":"scala.concurrent","location":"api/scala/concurrent.html","searchKeys":["TimeoutException"]},{"name":"def _11: T11","description":"scala.Product14","location":"api/scala/Product14.html","searchKeys":["_11"]},{"name":"trait SignatureModule","description":"scala.quoted.Quotes$reflectModule$SignatureModule","location":"api/scala/quoted/Quotes$reflectModule$SignatureModule.html","searchKeys":["SignatureModule"]},{"name":"def from[A](it: IterableOnce[A]): CC[A]","description":"scala.collection.ClassTagIterableFactory$$AnyIterableDelegate","location":"api/scala/collection/ClassTagIterableFactory$$AnyIterableDelegate.html","searchKeys":["from"]},{"name":"class StepperHasSeqStream[A](stepper: Stepper[A])","description":"scala.collection.convert.StreamExtensions$StepperHasSeqStream","location":"api/scala/collection/convert/StreamExtensions$StepperHasSeqStream.html","searchKeys":["StepperHasSeqStream"]},{"name":"def isPosInfinity: Boolean","description":"scala.runtime.RichDouble","location":"api/scala/runtime/RichDouble.html","searchKeys":["isPosInfinity"]},{"name":"Dropped: Early Initializers","description":"","location":"docs/reference/dropped-features/early-initializers.html","searchKeys":["Dropped: Early Initializers"]},{"name":"object String extends Equiv[String]","description":"scala.math.Equiv$$String$","location":"api/scala/math/Equiv$$String$.html","searchKeys":["String"]},{"name":"class Codec(val charSet: Charset)","description":"scala.io.Codec","location":"api/scala/io/Codec.html","searchKeys":["Codec"]},{"name":"def ==(x: Char): Boolean","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["=="]},{"name":"def transform[S](s: T => S, f: Throwable => Throwable)(executor: ExecutionContext): Future[S]","description":"scala.concurrent.Future","location":"api/scala/concurrent/Future.html","searchKeys":["transform"]},{"name":"def children: List[Symbol]","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["children"]},{"name":"def iterator: Iterator[(K, V)]","description":"scala.collection.concurrent.TrieMap","location":"api/scala/collection/concurrent/TrieMap.html","searchKeys":["iterator"]},{"name":"trait TypeProjectionModule","description":"scala.quoted.Quotes$reflectModule$TypeProjectionModule","location":"api/scala/quoted/Quotes$reflectModule$TypeProjectionModule.html","searchKeys":["TypeProjectionModule"]},{"name":"val unsafeArray: Array[Char]","description":"scala.collection.immutable.ArraySeq$$ofChar","location":"api/scala/collection/immutable/ArraySeq$$ofChar.html","searchKeys":["unsafeArray"]},{"name":"def estimateSize(): Long","description":"scala.collection.LongStepper$$LongStepperSpliterator","location":"api/scala/collection/LongStepper$$LongStepperSpliterator.html","searchKeys":["estimateSize"]},{"name":"class strictfp extends StaticAnnotation","description":"scala.annotation.strictfp","location":"api/scala/annotation/strictfp.html","searchKeys":["strictfp"]},{"name":"type Serializable = Serializable","description":"scala","location":"api/scala.html","searchKeys":["Serializable"]},{"name":"def _12: T12","description":"scala.Product17","location":"api/scala/Product17.html","searchKeys":["_12"]},{"name":"def *(x: Char): Int","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["*"]},{"name":"def +(x: String): String","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["+"]},{"name":"class Range(val start: Int, val end: Int, val step: Int) extends AbstractSeq[Int] with IndexedSeq[Int] with IndexedSeqOps[Int, [A] =>> IndexedSeq[A], IndexedSeq[Int]] with StrictOptimizedSeqOps[Int, [A] =>> IndexedSeq[A], IndexedSeq[Int]] with IterableFactoryDefaults[Int, [A] =>> IndexedSeq[A]] with Serializable","description":"scala.collection.immutable.Range","location":"api/scala/collection/immutable/Range.html","searchKeys":["Range"]},{"name":"val size: Int","description":"scala.collection.immutable.TreeSeqMap","location":"api/scala/collection/immutable/TreeSeqMap.html","searchKeys":["size"]},{"name":"def <=(x: Int): Boolean","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["<="]},{"name":"type Traversable[+X] = Iterable[X]","description":"scala.collection","location":"api/scala/collection.html","searchKeys":["Traversable"]},{"name":"def copy(original: Tree)(pattern: Tree, guard: Option[Term], rhs: Term): CaseDef","description":"scala.quoted.Quotes$reflectModule$CaseDefModule","location":"api/scala/quoted/Quotes$reflectModule$CaseDefModule.html","searchKeys":["copy"]},{"name":"def evidenceIterableFactory: EvidenceIterableFactory[CC, Ev]","description":"scala.collection.EvidenceIterableFactoryDefaults","location":"api/scala/collection/EvidenceIterableFactoryDefaults.html","searchKeys":["evidenceIterableFactory"]},{"name":"trait JFunction0$mcZ$sp extends () => Any with Serializable","description":"scala.runtime.java8.JFunction0$mcZ$sp","location":"api/scala/runtime/java8/JFunction0$mcZ$sp.html","searchKeys":["JFunction0$mcZ$sp"]},{"name":"val iter: Iterator[Char]","description":"scala.io.BufferedSource","location":"api/scala/io/BufferedSource.html","searchKeys":["iter"]},{"name":"trait LowPriorityNotGiven","description":"scala.util.LowPriorityNotGiven","location":"api/scala/util/LowPriorityNotGiven.html","searchKeys":["LowPriorityNotGiven"]},{"name":"class Queue[+A] extends AbstractSeq[A] with LinearSeq[A] with LinearSeqOps[A, [A] =>> Queue[A], Queue[A]] with StrictOptimizedLinearSeqOps[A, [A] =>> Queue[A], Queue[A]] with StrictOptimizedSeqOps[A, [A] =>> Queue[A], Queue[A]] with IterableFactoryDefaults[A, [A] =>> Queue[A]] with DefaultSerializable","description":"scala.collection.immutable.Queue","location":"api/scala/collection/immutable/Queue.html","searchKeys":["Queue"]},{"name":"def take(timeout: Long): A","description":"scala.concurrent.SyncVar","location":"api/scala/concurrent/SyncVar.html","searchKeys":["take"]},{"name":"given TermParamClauseMethods","description":"scala.quoted.Quotes$reflectModule$TermParamClauseMethods","location":"api/scala/quoted/Quotes$reflectModule$TermParamClauseMethods.html","searchKeys":["TermParamClauseMethods"]},{"name":"class AbstractIterable[A] extends AbstractIterable[A] with Iterable[A]","description":"scala.collection.mutable.AbstractIterable","location":"api/scala/collection/mutable/AbstractIterable.html","searchKeys":["AbstractIterable"]},{"name":"def _20: T20","description":"scala.Product21","location":"api/scala/Product21.html","searchKeys":["_20"]},{"name":"object experimental","description":"scala.language$$experimental$","location":"api/scala/language$$experimental$.html","searchKeys":["experimental"]},{"name":"def nextAfter(start: Double, direction: Double): Double","description":"scala.math","location":"api/scala/math.html","searchKeys":["nextAfter"]},{"name":"def _3: T3","description":"scala.Product21","location":"api/scala/Product21.html","searchKeys":["_3"]},{"name":"def partitionMap[A1, A2](f: A => Either[A1, A2]): (CC[A1], CC[A2])","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["partitionMap"]},{"name":"trait StrictOptimizedSetOps[A, +CC <: ([_$1] =>> Any), +C <: SetOps[A, CC, C]] extends SetOps[A, CC, C] with StrictOptimizedIterableOps[A, CC, C]","description":"scala.collection.StrictOptimizedSetOps","location":"api/scala/collection/StrictOptimizedSetOps.html","searchKeys":["StrictOptimizedSetOps"]},{"name":"def +(x: Double): Double","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["+"]},{"name":"def from[B](it: IterableOnce[B]): HashSet[B]","description":"scala.collection.mutable.HashSet$","location":"api/scala/collection/mutable/HashSet$.html","searchKeys":["from"]},{"name":"type TypeBind <: TypeTree","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeBind"]},{"name":"def fill[A, C](n1: Int, n2: Int, n3: Int, n4: Int)(elem: => A)(canAccumulate: AccumulatorFactoryShape[A, C]): AnyAccumulator[AnyAccumulator[AnyAccumulator[C]]]","description":"scala.jdk.Accumulator$","location":"api/scala/jdk/Accumulator$.html","searchKeys":["fill"]},{"name":"val Typed: TypedModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Typed"]},{"name":"def isWhole: Boolean","description":"scala.runtime.FractionalProxy","location":"api/scala/runtime/FractionalProxy.html","searchKeys":["isWhole"]},{"name":"given ClassOfConstantTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ClassOfConstantTypeTest"]},{"name":"def seqAsJavaListConverter[A](b: Seq[A]): AsJava[List[A]]","description":"scala.collection.JavaConverters$","location":"api/scala/collection/JavaConverters$.html","searchKeys":["seqAsJavaListConverter"]},{"name":"def tapEach[U](f: A => U): C","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["tapEach"]},{"name":"val x$8: Type[T8]","description":"scala.quoted.FromExpr$$Tuple11FromExpr","location":"api/scala/quoted/FromExpr$$Tuple11FromExpr.html","searchKeys":["x$8"]},{"name":"val state: \"STATE\"","description":"scala.runtime.LazyVals$$Names$","location":"api/scala/runtime/LazyVals$$Names$.html","searchKeys":["state"]},{"name":"object StringContext","description":"scala.StringContext$","location":"api/scala/StringContext$.html","searchKeys":["StringContext"]},{"name":"class MapHasAsJava[K, V](m: Map[K, V])","description":"scala.collection.convert.AsJavaExtensions$MapHasAsJava","location":"api/scala/collection/convert/AsJavaExtensions$MapHasAsJava.html","searchKeys":["MapHasAsJava"]},{"name":"def fill[A](n1: Int, n2: Int)(elem: => A): CC[CC[A]]","description":"scala.collection.IterableFactory","location":"api/scala/collection/IterableFactory.html","searchKeys":["fill"]},{"name":"def apply(fout: String => Unit, ferr: String => Unit): ProcessLogger","description":"scala.sys.process.ProcessLogger$","location":"api/scala/sys/process/ProcessLogger$.html","searchKeys":["apply"]},{"name":"val x$22: FromExpr[T5]","description":"scala.quoted.FromExpr$$Tuple17FromExpr","location":"api/scala/quoted/FromExpr$$Tuple17FromExpr.html","searchKeys":["x$22"]},{"name":"package scala.reflect","description":"scala.reflect","location":"api/scala/reflect.html","searchKeys":["scala.reflect"]},{"name":"def removeBinding(key: K, value: V): MultiMap[K, V]","description":"scala.collection.mutable.MultiMap","location":"api/scala/collection/mutable/MultiMap.html","searchKeys":["removeBinding"]},{"name":"def iterator: Iterator[A]","description":"scala.collection.Iterator","location":"api/scala/collection/Iterator.html","searchKeys":["iterator"]},{"name":"val self: Long","description":"scala.runtime.RichLong","location":"api/scala/runtime/RichLong.html","searchKeys":["self"]},{"name":"val If: IfModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["If"]},{"name":"def Contravariant: Flags","description":"scala.quoted.Quotes$reflectModule$FlagsModule","location":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html","searchKeys":["Contravariant"]},{"name":"def byte2Byte(x: Byte): Byte","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["byte2Byte"]},{"name":"def inits: Iterator[Array[A]]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["inits"]},{"name":"def &(x: Long): Long","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["&"]},{"name":"def ProductClass: Symbol","description":"scala.quoted.Quotes$reflectModule$defnModule","location":"api/scala/quoted/Quotes$reflectModule$defnModule.html","searchKeys":["ProductClass"]},{"name":"def canEqual(that: Any): Boolean","description":"scala.collection.Map","location":"api/scala/collection/Map.html","searchKeys":["canEqual"]},{"name":"def isNaN: Boolean","description":"scala.runtime.RichFloat","location":"api/scala/runtime/RichFloat.html","searchKeys":["isNaN"]},{"name":"def classType[T](clazz: Class[]): Manifest[T]","description":"scala.reflect.Manifest$","location":"api/scala/reflect/Manifest$.html","searchKeys":["classType"]},{"name":"def isLowSurrogate: Boolean","description":"scala.runtime.RichChar","location":"api/scala/runtime/RichChar.html","searchKeys":["isLowSurrogate"]},{"name":"def withFilter(p: T => Boolean)(executor: ExecutionContext): Future[T]","description":"scala.concurrent.Future","location":"api/scala/concurrent/Future.html","searchKeys":["withFilter"]},{"name":"val INLINE: 17","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["INLINE"]},{"name":"def >=(x: Int): Boolean","description":"scala.Float","location":"api/scala/Float.html","searchKeys":[">="]},{"name":"val x$24: FromExpr[T6]","description":"scala.quoted.FromExpr$$Tuple18FromExpr","location":"api/scala/quoted/FromExpr$$Tuple18FromExpr.html","searchKeys":["x$24"]},{"name":"def apply(x: String): BigDecimal","description":"scala.math.BigDecimal$","location":"api/scala/math/BigDecimal$.html","searchKeys":["apply"]},{"name":"def main(args: Array[String]): Unit","description":"scala.App","location":"api/scala/App.html","searchKeys":["main"]},{"name":"trait SetOps[A, +CC <: ([_$1] =>> Any), +C <: SetOps[A, CC, C]] extends IterableOps[A, CC, C] with A => Boolean","description":"scala.collection.SetOps","location":"api/scala/collection/SetOps.html","searchKeys":["SetOps"]},{"name":"def dropWhileInPlace(p: A => Boolean): Buffer[A]","description":"scala.collection.mutable.Buffer","location":"api/scala/collection/mutable/Buffer.html","searchKeys":["dropWhileInPlace"]},{"name":"def exists(p: B => Boolean): Boolean","description":"scala.util.Either","location":"api/scala/util/Either.html","searchKeys":["exists"]},{"name":"val MethodType: MethodTypeModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["MethodType"]},{"name":"def unpickleExpr[T](pickled: String | List[String], typeHole: (Int, Seq[Any]) => Type[ <: AnyKind], termHole: (Int, Seq[Any], Quotes) => Expr[]): Expr[T]","description":"scala.quoted.runtime.QuoteUnpickler","location":"api/scala/quoted/runtime/QuoteUnpickler.html","searchKeys":["unpickleExpr"]},{"name":"val Repeated: RepeatedModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Repeated"]},{"name":"def newBuilder[X, Y]: Builder[(X, Y), MapView[X, Y]]","description":"scala.collection.MapViewFactory","location":"api/scala/collection/MapViewFactory.html","searchKeys":["newBuilder"]},{"name":"def apply$mcVIJ$sp(v1: Int, v2: Long): Unit","description":"scala.runtime.java8.JFunction2$mcVIJ$sp","location":"api/scala/runtime/java8/JFunction2$mcVIJ$sp.html","searchKeys":["apply$mcVIJ$sp"]},{"name":"def unapply(x: SuperType): (TypeRepr, TypeRepr)","description":"scala.quoted.Quotes$reflectModule$SuperTypeModule","location":"api/scala/quoted/Quotes$reflectModule$SuperTypeModule.html","searchKeys":["unapply"]},{"name":"def trimStart(n: Int): Unit","description":"scala.collection.mutable.Buffer","location":"api/scala/collection/mutable/Buffer.html","searchKeys":["trimStart"]},{"name":"def level: Int","description":"scala.quoted.Quotes$reflectModule$SelectOuterMethods","location":"api/scala/quoted/Quotes$reflectModule$SelectOuterMethods.html","searchKeys":["level"]},{"name":"def sliceInPlace(start: Int, end: Int): Buffer[A]","description":"scala.collection.mutable.Buffer","location":"api/scala/collection/mutable/Buffer.html","searchKeys":["sliceInPlace"]},{"name":"val DEFDEF: 130","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["DEFDEF"]},{"name":"def foreach[U](f: A => U): Unit","description":"scala.collection.IterableOps$$WithFilter","location":"api/scala/collection/IterableOps$$WithFilter.html","searchKeys":["foreach"]},{"name":"def empty[A]: Set[A]","description":"scala.collection.immutable.Set$","location":"api/scala/collection/immutable/Set$.html","searchKeys":["empty"]},{"name":"val x$2: Type[T2]","description":"scala.quoted.FromExpr$$Tuple8FromExpr","location":"api/scala/quoted/FromExpr$$Tuple8FromExpr.html","searchKeys":["x$2"]},{"name":"def -(x: Double): Double","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["-"]},{"name":"def _3: T3","description":"scala.Product4","location":"api/scala/Product4.html","searchKeys":["_3"]},{"name":"val HASDEFAULT: 31","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["HASDEFAULT"]},{"name":"def _5: T5","description":"scala.Product15","location":"api/scala/Product15.html","searchKeys":["_5"]},{"name":"def asScala: Map[String, String]","description":"scala.collection.convert.AsScalaExtensions$PropertiesHasAsScala","location":"api/scala/collection/convert/AsScalaExtensions$PropertiesHasAsScala.html","searchKeys":["asScala"]},{"name":"def update(idx: Int, elem: A): Unit","description":"scala.collection.mutable.ArrayDeque","location":"api/scala/collection/mutable/ArrayDeque.html","searchKeys":["update"]},{"name":"def to(to: A): C","description":"scala.collection.SortedOps","location":"api/scala/collection/SortedOps.html","searchKeys":["to"]},{"name":"def asScala: Iterable[A]","description":"scala.collection.convert.AsScalaExtensions$IterableHasAsScala","location":"api/scala/collection/convert/AsScalaExtensions$IterableHasAsScala.html","searchKeys":["asScala"]},{"name":"def annotation: Term","description":"scala.quoted.Quotes$reflectModule$AnnotatedMethods","location":"api/scala/quoted/Quotes$reflectModule$AnnotatedMethods.html","searchKeys":["annotation"]},{"name":"def <(x: Char): Boolean","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["<"]},{"name":"def apply(array: Array[Char])(using Quotes): Expr[Array[Char]]","description":"scala.quoted.ToExpr$$ArrayOfCharToExpr$","location":"api/scala/quoted/ToExpr$$ArrayOfCharToExpr$.html","searchKeys":["apply"]},{"name":"object Searching","description":"scala.collection.Searching$","location":"api/scala/collection/Searching$.html","searchKeys":["Searching"]},{"name":"def disable(): Unit","description":"scala.sys.BooleanProp","location":"api/scala/sys/BooleanProp.html","searchKeys":["disable"]},{"name":"val x$33: FromExpr[T16]","description":"scala.quoted.FromExpr$$Tuple17FromExpr","location":"api/scala/quoted/FromExpr$$Tuple17FromExpr.html","searchKeys":["x$33"]},{"name":"def toMillis: Long","description":"scala.concurrent.duration.Duration$$Infinite","location":"api/scala/concurrent/duration/Duration$$Infinite.html","searchKeys":["toMillis"]},{"name":"def copy(original: Tree)(expr: Term, cases: List[CaseDef], finalizer: Option[Term]): Try","description":"scala.quoted.Quotes$reflectModule$TryModule","location":"api/scala/quoted/Quotes$reflectModule$TryModule.html","searchKeys":["copy"]},{"name":"class RichLongUnaryOperatorAsFunction1(underlying: LongUnaryOperator) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichLongUnaryOperatorAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichLongUnaryOperatorAsFunction1.html","searchKeys":["RichLongUnaryOperatorAsFunction1"]},{"name":"def isValidLong: Boolean","description":"scala.runtime.RichInt","location":"api/scala/runtime/RichInt.html","searchKeys":["isValidLong"]},{"name":"def inclusive[T](start: T, end: T, step: T)(num: Integral[T]): Inclusive[T]","description":"scala.collection.immutable.NumericRange$","location":"api/scala/collection/immutable/NumericRange$.html","searchKeys":["inclusive"]},{"name":"def <(x: Double): Boolean","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["<"]},{"name":"def apply(x: Boolean, xs: Boolean*): Array[Boolean]","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["apply"]},{"name":"object LinkedHashSet extends IterableFactory[[A] =>> LinkedHashSet[A]]","description":"scala.collection.mutable.LinkedHashSet$","location":"api/scala/collection/mutable/LinkedHashSet$.html","searchKeys":["LinkedHashSet"]},{"name":"def bound: Option[TypeTree]","description":"scala.quoted.Quotes$reflectModule$MatchTypeTreeMethods","location":"api/scala/quoted/Quotes$reflectModule$MatchTypeTreeMethods.html","searchKeys":["bound"]},{"name":"type LongConstant <: Constant","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["LongConstant"]},{"name":"def removed(key: K): Map[K, V]","description":"scala.collection.immutable.Map$$Map3","location":"api/scala/collection/immutable/Map$$Map3.html","searchKeys":["removed"]},{"name":"def forall(@deprecatedName(\"f\", \"2.13.3\") p: Char => Boolean): Boolean","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["forall"]},{"name":"trait JFunction2$mcVJI$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcVJI$sp","location":"api/scala/runtime/java8/JFunction2$mcVJI$sp.html","searchKeys":["JFunction2$mcVJI$sp"]},{"name":"def ==(x: Short): Boolean","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["=="]},{"name":"def +(x: Int): Int","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["+"]},{"name":"def _9: T9","description":"scala.Product21","location":"api/scala/Product21.html","searchKeys":["_9"]},{"name":"class Duration extends Serializable with Ordered[Duration]","description":"scala.concurrent.duration.Duration","location":"api/scala/concurrent/duration/Duration.html","searchKeys":["Duration"]},{"name":"object Product17","description":"scala.Product17$","location":"api/scala/Product17$.html","searchKeys":["Product17"]},{"name":"val x$4: Type[T4]","description":"scala.quoted.FromExpr$$Tuple20FromExpr","location":"api/scala/quoted/FromExpr$$Tuple20FromExpr.html","searchKeys":["x$4"]},{"name":"def num: Integral[T]","description":"scala.runtime.IntegralProxy","location":"api/scala/runtime/IntegralProxy.html","searchKeys":["num"]},{"name":"def apply(coll: Repr): IterableOnce[A]","description":"scala.collection.generic.IsIterableOnce","location":"api/scala/collection/generic/IsIterableOnce.html","searchKeys":["apply"]},{"name":"val CEILING: Value","description":"scala.math.BigDecimal$$RoundingMode$","location":"api/scala/math/BigDecimal$$RoundingMode$.html","searchKeys":["CEILING"]},{"name":"def drop[This >: Tuple <: Tuple](n: Int): Drop[This, n]","description":"scala.Tuple","location":"api/scala/Tuple.html","searchKeys":["drop"]},{"name":"def max[B >: A](ord: Ordering[B]): A","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["max"]},{"name":"def asJava: ToDoubleFunction[T]","description":"scala.jdk.FunctionWrappers$$RichFunction1AsToDoubleFunction","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsToDoubleFunction.html","searchKeys":["asJava"]},{"name":"def fromProduct(p: Product): MirroredMonoType","description":"scala.deriving.Mirror$$Product","location":"api/scala/deriving/Mirror$$Product.html","searchKeys":["fromProduct"]},{"name":"def break(): Nothing","description":"scala.util.control.Breaks","location":"api/scala/util/control/Breaks.html","searchKeys":["break"]},{"name":"def *(x: Short): Int","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["*"]},{"name":"def toFactory[V](dummy: IntMap): Factory[(Int, V), IntMap[V]]","description":"scala.collection.immutable.IntMap$","location":"api/scala/collection/immutable/IntMap$.html","searchKeys":["toFactory"]},{"name":"def sign: BigDecimal","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["sign"]},{"name":"def lastIndexWhere(p: A => Boolean, end: Int): Int","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["lastIndexWhere"]},{"name":"def or[U >: T](pf2: Catcher[U]): Catch[U]","description":"scala.util.control.Exception$$Catch","location":"api/scala/util/control/Exception$$Catch.html","searchKeys":["or"]},{"name":"val BLACK_B: \"\\033[40m\"","description":"scala.io.AnsiColor","location":"api/scala/io/AnsiColor.html","searchKeys":["BLACK_B"]},{"name":"val size: Int","description":"scala.collection.immutable.VectorMap","location":"api/scala/collection/immutable/VectorMap.html","searchKeys":["size"]},{"name":"def removed(key: K): HashMap[K, V]","description":"scala.collection.immutable.HashMap","location":"api/scala/collection/immutable/HashMap.html","searchKeys":["removed"]},{"name":"def block[T](statements: List[Expr[Any]], expr: Expr[T])(using Quotes): Expr[T]","description":"scala.quoted.Expr$","location":"api/scala/quoted/Expr$.html","searchKeys":["block"]},{"name":"type IArray[+T] = IArray[T]","description":"scala.IArray$package$","location":"api/scala.html","searchKeys":["IArray"]},{"name":"def getLongNat(at: Addr): Long","description":"dotty.tools.tasty.TastyBuffer","location":"api/dotty/tools/tasty/TastyBuffer.html","searchKeys":["getLongNat"]},{"name":"def toChar: Char","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["toChar"]},{"name":"def this(regex: String, groupNames: String*)","description":"scala.util.matching.Regex","location":"api/scala/util/matching/Regex.html","searchKeys":["this"]},{"name":"trait StrictOptimizedSortedSetOps[A, +CC <: ([X] =>> SortedSet[X]), +C <: SortedSetOps[A, CC, C]] extends SortedSetOps[A, CC, C] with StrictOptimizedSetOps[A, [A] =>> Set[A], C]","description":"scala.collection.StrictOptimizedSortedSetOps","location":"api/scala/collection/StrictOptimizedSortedSetOps.html","searchKeys":["StrictOptimizedSortedSetOps"]},{"name":"def -=(elem1: A, elem2: A, elems: A*): Shrinkable[A]","description":"scala.collection.mutable.Shrinkable","location":"api/scala/collection/mutable/Shrinkable.html","searchKeys":["-="]},{"name":"def /(rhs: T): T","description":"scala.math.Integral$IntegralOps","location":"api/scala/math/Integral$IntegralOps.html","searchKeys":["/"]},{"name":"def asJavaSeqKeyStream[K, V](m: Map[K, V]): Stream[K]","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaSeqKeyStream"]},{"name":"def newBuilder[K, V]: Builder[(K, V), CC[K, V]]","description":"scala.collection.MapFactory","location":"api/scala/collection/MapFactory.html","searchKeys":["newBuilder"]},{"name":"def *(x: Int): Int","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["*"]},{"name":"def apply(array: Array[Int])(using Quotes): Expr[Array[Int]]","description":"scala.quoted.ToExpr$$ArrayOfIntToExpr$","location":"api/scala/quoted/ToExpr$$ArrayOfIntToExpr$.html","searchKeys":["apply"]},{"name":"trait JFunction2$mcVDI$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcVDI$sp","location":"api/scala/runtime/java8/JFunction2$mcVDI$sp.html","searchKeys":["JFunction2$mcVDI$sp"]},{"name":"def tupled: (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22) => R","description":"scala.Function22","location":"api/scala/Function22.html","searchKeys":["tupled"]},{"name":"def failed: Try[Throwable]","description":"scala.util.Try","location":"api/scala/util/Try.html","searchKeys":["failed"]},{"name":"def warning(msg: String, expr: Expr[Any]): Unit","description":"scala.quoted.Quotes$reflectModule$reportModule","location":"api/scala/quoted/Quotes$reflectModule$reportModule.html","searchKeys":["warning"]},{"name":"def length: Int","description":"scala.collection.immutable.ArraySeq$$ofFloat","location":"api/scala/collection/immutable/ArraySeq$$ofFloat.html","searchKeys":["length"]},{"name":"def declaredMethods: List[Symbol]","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["declaredMethods"]},{"name":"class RichByte(val self: Byte) extends AnyVal with ScalaWholeNumberProxy[Byte]","description":"scala.runtime.RichByte","location":"api/scala/runtime/RichByte.html","searchKeys":["RichByte"]},{"name":"def iterator: Iterator[A]","description":"scala.collection.View$$Unfold","location":"api/scala/collection/View$$Unfold.html","searchKeys":["iterator"]},{"name":"def unapply[T1, T2, T3, T4](x: Product4[T1, T2, T3, T4]): Option[Product4[T1, T2, T3, T4]]","description":"scala.Product4$","location":"api/scala/Product4$.html","searchKeys":["unapply"]},{"name":"A Classification of Proposed Language Features","description":"","location":"docs/reference/features-classification.html","searchKeys":["A Classification of Proposed Language Features"]},{"name":"def map[B, To](f: (El1, El2, El3) => B)(bf: BuildFrom[It1, B, To]): To","description":"scala.runtime.Tuple3Zipped","location":"api/scala/runtime/Tuple3Zipped.html","searchKeys":["map"]},{"name":"object StringOps","description":"scala.collection.StringOps$","location":"api/scala/collection/StringOps$.html","searchKeys":["StringOps"]},{"name":"def ^(x: Byte): Int","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["^"]},{"name":"trait Decimal[T] extends FromDigits[T]","description":"scala.util.FromDigits$$Decimal","location":"api/scala/util/FromDigits$$Decimal.html","searchKeys":["Decimal"]},{"name":"def apply$mcZJD$sp(v1: Long, v2: Double): Boolean","description":"scala.runtime.java8.JFunction2$mcZJD$sp","location":"api/scala/runtime/java8/JFunction2$mcZJD$sp.html","searchKeys":["apply$mcZJD$sp"]},{"name":"def length: Int","description":"scala.collection.mutable.ListBuffer","location":"api/scala/collection/mutable/ListBuffer.html","searchKeys":["length"]},{"name":"object Growable","description":"scala.collection.mutable.Growable$","location":"api/scala/collection/mutable/Growable$.html","searchKeys":["Growable"]},{"name":"def quot(x: BigInt, y: BigInt): BigInt","description":"scala.math.Numeric$$BigIntIsIntegral","location":"api/scala/math/Numeric$$BigIntIsIntegral.html","searchKeys":["quot"]},{"name":"val x$24: FromExpr[T4]","description":"scala.quoted.FromExpr$$Tuple20FromExpr","location":"api/scala/quoted/FromExpr$$Tuple20FromExpr.html","searchKeys":["x$24"]},{"name":"def %(x: Double): Double","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["%"]},{"name":"def withFilter(p: A => Boolean): WithFilter[A]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["withFilter"]},{"name":"def iterator: Iterator[Char]","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["iterator"]},{"name":"def >(x: Byte): Boolean","description":"scala.Short","location":"api/scala/Short.html","searchKeys":[">"]},{"name":"def ++[S >: T](that: LongMap[S]): LongMap[S]","description":"scala.collection.immutable.LongMap","location":"api/scala/collection/immutable/LongMap.html","searchKeys":["++"]},{"name":"trait OptionOrdering[T] extends Ordering[Option[T]]","description":"scala.math.Ordering$$OptionOrdering","location":"api/scala/math/Ordering$$OptionOrdering.html","searchKeys":["OptionOrdering"]},{"name":"def toList: List[A]","description":"scala.Option","location":"api/scala/Option.html","searchKeys":["toList"]},{"name":"trait TypeTreeModule","description":"scala.quoted.Quotes$reflectModule$TypeTreeModule","location":"api/scala/quoted/Quotes$reflectModule$TypeTreeModule.html","searchKeys":["TypeTreeModule"]},{"name":"val x$28: FromExpr[T13]","description":"scala.quoted.FromExpr$$Tuple15FromExpr","location":"api/scala/quoted/FromExpr$$Tuple15FromExpr.html","searchKeys":["x$28"]},{"name":"def map[V2](f: (Long, V) => (Long, V2)): LongMap[V2]","description":"scala.collection.mutable.LongMap","location":"api/scala/collection/mutable/LongMap.html","searchKeys":["map"]},{"name":"val x$13: FromExpr[T1]","description":"scala.quoted.FromExpr$$Tuple12FromExpr","location":"api/scala/quoted/FromExpr$$Tuple12FromExpr.html","searchKeys":["x$13"]},{"name":"def <(x: Int): Boolean","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["<"]},{"name":"given MapToExpr[T, U]: ToExpr[Map[T, U]]","description":"scala.quoted.ToExpr$$MapToExpr","location":"api/scala/quoted/ToExpr$.html","searchKeys":["MapToExpr"]},{"name":"def lazyLines(capacity: Integer): LazyList[String]","description":"scala.sys.process.ProcessBuilder","location":"api/scala/sys/process/ProcessBuilder.html","searchKeys":["lazyLines"]},{"name":"val TraversableOnce: IterableOnce","description":"scala.collection","location":"api/scala/collection.html","searchKeys":["TraversableOnce"]},{"name":"type ==[X, Y] <: Boolean","description":"scala.compiletime.ops.any$","location":"api/scala/compiletime/ops/any$.html","searchKeys":["=="]},{"name":"val x$20: FromExpr[T10]","description":"scala.quoted.FromExpr$$Tuple10FromExpr","location":"api/scala/quoted/FromExpr$$Tuple10FromExpr.html","searchKeys":["x$20"]},{"name":"class Concat[A](prefix: SomeIndexedSeqOps[A], suffix: SomeIndexedSeqOps[A]) extends Concat[A] with IndexedSeqView[A]","description":"scala.collection.IndexedSeqView$$Concat","location":"api/scala/collection/IndexedSeqView$$Concat.html","searchKeys":["Concat"]},{"name":"val HOURS: TimeUnit","description":"scala.concurrent.duration","location":"api/scala/concurrent/duration.html","searchKeys":["HOURS"]},{"name":"def toDouble(x: Double): Double","description":"scala.math.Numeric$$DoubleIsFractional","location":"api/scala/math/Numeric$$DoubleIsFractional.html","searchKeys":["toDouble"]},{"name":"def iterator: Iterator[(K, V)]","description":"scala.collection.immutable.TreeMap","location":"api/scala/collection/immutable/TreeMap.html","searchKeys":["iterator"]},{"name":"def javaRandomToRandom(r: Random): Random","description":"scala.util.Random$","location":"api/scala/util/Random$.html","searchKeys":["javaRandomToRandom"]},{"name":"def newBuilder[A]: Builder[A, Stack[A]]","description":"scala.collection.mutable.Stack$","location":"api/scala/collection/mutable/Stack$.html","searchKeys":["newBuilder"]},{"name":"class PhantomReference[+T <: AnyRef](value: T, queue: ReferenceQueue[T]) extends ReferenceWrapper[T]","description":"scala.ref.PhantomReference","location":"api/scala/ref/PhantomReference.html","searchKeys":["PhantomReference"]},{"name":"def newBuilder[A]: Builder[A, Set[A]]","description":"scala.collection.immutable.Set$","location":"api/scala/collection/immutable/Set$.html","searchKeys":["newBuilder"]},{"name":"def typeConstructorOf(clazz: Class[]): TypeRepr","description":"scala.quoted.Quotes$reflectModule$TypeReprModule","location":"api/scala/quoted/Quotes$reflectModule$TypeReprModule.html","searchKeys":["typeConstructorOf"]},{"name":"Announcing Dotty 0.2.0-RC1, with new optimizations, improved stability and IDE support","description":"","location":"blog/2017/07/12/second-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.2.0-RC1, with new optimizations, improved stability and IDE support"]},{"name":"def dequeueAll(p: A => Boolean): Seq[A]","description":"scala.collection.mutable.Queue","location":"api/scala/collection/mutable/Queue.html","searchKeys":["dequeueAll"]},{"name":"def fromInt(x: Int): T","description":"scala.math.Numeric","location":"api/scala/math/Numeric.html","searchKeys":["fromInt"]},{"name":"def apply(x1: T, x2: Int): Unit","description":"scala.jdk.FunctionWrappers$$FromJavaObjIntConsumer","location":"api/scala/jdk/FunctionWrappers$$FromJavaObjIntConsumer.html","searchKeys":["apply"]},{"name":"val Export: ExportModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Export"]},{"name":"def of[T <: AnyKind](using Type[T]): TypeTree","description":"scala.quoted.Quotes$reflectModule$TypeTreeModule","location":"api/scala/quoted/Quotes$reflectModule$TypeTreeModule.html","searchKeys":["of"]},{"name":"def search[B >: A](elem: B)(ord: Ordering[B]): SearchResult","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["search"]},{"name":"def /(x: Short): Float","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["/"]},{"name":"object SeqMap extends Delegate[[K, V] =>> SeqMap[K, V]]","description":"scala.collection.SeqMap$","location":"api/scala/collection/SeqMap$.html","searchKeys":["SeqMap"]},{"name":"val IntShape: Shape","description":"scala.collection.StepperShape$","location":"api/scala/collection/StepperShape$.html","searchKeys":["IntShape"]},{"name":"object LinearSeq extends Delegate[[A] =>> LinearSeq[A]]","description":"scala.collection.immutable.LinearSeq$","location":"api/scala/collection/immutable/LinearSeq$.html","searchKeys":["LinearSeq"]},{"name":"def from: Symbol","description":"scala.quoted.Quotes$reflectModule$ReturnMethods","location":"api/scala/quoted/Quotes$reflectModule$ReturnMethods.html","searchKeys":["from"]},{"name":"val NaN: NaN","description":"scala.Float$","location":"api/scala/Float$.html","searchKeys":["NaN"]},{"name":"def fromInt(x: Int): Int","description":"scala.math.Numeric$$IntIsIntegral","location":"api/scala/math/Numeric$$IntIsIntegral.html","searchKeys":["fromInt"]},{"name":"def <<(x: Long): Int","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["<<"]},{"name":"given Tuple10FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10](using val x$1: Type[T1], val x$2: Type[T2], val x$3: Type[T3], val x$4: Type[T4], val x$5: Type[T5], val x$6: Type[T6], val x$7: Type[T7], val x$8: Type[T8], val x$9: Type[T9], val x$10: Type[T10], val x$11: FromExpr[T1], val x$12: FromExpr[T2], val x$13: FromExpr[T3], val x$14: FromExpr[T4], val x$15: FromExpr[T5], val x$16: FromExpr[T6], val x$17: FromExpr[T7], val x$18: FromExpr[T8], val x$19: FromExpr[T9], val x$20: FromExpr[T10]): FromExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)]","description":"scala.quoted.FromExpr$$Tuple10FromExpr","location":"api/scala/quoted/FromExpr$.html","searchKeys":["Tuple10FromExpr"]},{"name":"def params: List[ValDef]","description":"scala.quoted.Quotes$reflectModule$TermParamClauseMethods","location":"api/scala/quoted/Quotes$reflectModule$TermParamClauseMethods.html","searchKeys":["params"]},{"name":"def abstractType[T](prefix: OptManifest[], name: String, upperbound: ClassTag[], args: OptManifest[]*): ClassTag[T]","description":"scala.reflect.ClassManifestFactory$","location":"api/scala/reflect/ClassManifestFactory$.html","searchKeys":["abstractType"]},{"name":"val fin: Option[Finally]","description":"scala.util.control.Exception$$Catch","location":"api/scala/util/control/Exception$$Catch.html","searchKeys":["fin"]},{"name":"def r: Regex","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["r"]},{"name":"def >=(x: Byte): Boolean","description":"scala.Short","location":"api/scala/Short.html","searchKeys":[">="]},{"name":"def apply(x: Byte, xs: Byte*): Array[Byte]","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["apply"]},{"name":"val x$32: FromExpr[T10]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["x$32"]},{"name":"val IntConstant: IntConstantModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["IntConstant"]},{"name":"def <=(x: Double): Boolean","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["<="]},{"name":"def append(s: String): StringBuilder","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["append"]},{"name":"val x$10: Type[T10]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["x$10"]},{"name":"def +:[B >: A](elem: B): CC[B]","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["+:"]},{"name":"def startAddr: Addr","description":"dotty.tools.tasty.TastyReader","location":"api/dotty/tools/tasty/TastyReader.html","searchKeys":["startAddr"]},{"name":"def until(end: BigDecimal): Partial[BigDecimal, Exclusive[BigDecimal]]","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["until"]},{"name":"def this(initialBufferSize: Int)","description":"scala.collection.mutable.LongMap","location":"api/scala/collection/mutable/LongMap.html","searchKeys":["this"]},{"name":"def :+(c: Char): String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":[":+"]},{"name":"class AbstractIterable[+A] extends Iterable[A]","description":"scala.collection.AbstractIterable","location":"api/scala/collection/AbstractIterable.html","searchKeys":["AbstractIterable"]},{"name":"def selector: TypeTree","description":"scala.quoted.Quotes$reflectModule$MatchTypeTreeMethods","location":"api/scala/quoted/Quotes$reflectModule$MatchTypeTreeMethods.html","searchKeys":["selector"]},{"name":"trait MultiMap[K, V] extends Map[K, Set[V]]","description":"scala.collection.mutable.MultiMap","location":"api/scala/collection/mutable/MultiMap.html","searchKeys":["MultiMap"]},{"name":"Relationship with Scala 2 Implicits","description":"","location":"docs/reference/contextual/relationship-implicits.html","searchKeys":["Relationship with Scala 2 Implicits"]},{"name":"val x$4: Type[T4]","description":"scala.quoted.FromExpr$$Tuple5FromExpr","location":"api/scala/quoted/FromExpr$$Tuple5FromExpr.html","searchKeys":["x$4"]},{"name":"class RichFunction1AsLongUnaryOperator(underlying: Long => Long) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichFunction1AsLongUnaryOperator","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsLongUnaryOperator.html","searchKeys":["RichFunction1AsLongUnaryOperator"]},{"name":"def value: Boolean","description":"scala.sys.BooleanProp","location":"api/scala/sys/BooleanProp.html","searchKeys":["value"]},{"name":"def estimateSize(): Long","description":"scala.collection.IntStepper$$IntStepperSpliterator","location":"api/scala/collection/IntStepper$$IntStepperSpliterator.html","searchKeys":["estimateSize"]},{"name":"type Throwable = Throwable","description":"scala","location":"api/scala.html","searchKeys":["Throwable"]},{"name":"class ListHasAsScala[A](l: List[A])","description":"scala.collection.convert.AsScalaExtensions$ListHasAsScala","location":"api/scala/collection/convert/AsScalaExtensions$ListHasAsScala.html","searchKeys":["ListHasAsScala"]},{"name":"def |(x: Byte): Int","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["|"]},{"name":"def apply(s: Stream[A]): S","description":"scala.collection.convert.StreamExtensions$$StreamUnboxer","location":"api/scala/collection/convert/StreamExtensions$$StreamUnboxer.html","searchKeys":["apply"]},{"name":"def handling[T](exceptions: Class[]*): By[Throwable => T, Catch[T]]","description":"scala.util.control.Exception$","location":"api/scala/util/control/Exception$.html","searchKeys":["handling"]},{"name":"type Manifest[T] = Manifest[T]","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["Manifest"]},{"name":"def stableSort[K](a: Array[K], f: (K, K) => Boolean, from: Int, until: Int): Unit","description":"scala.util.Sorting$","location":"api/scala/util/Sorting$.html","searchKeys":["stableSort"]},{"name":"val LambdaTypeTree: LambdaTypeTreeModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["LambdaTypeTree"]},{"name":"def ==(x: Int): Boolean","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["=="]},{"name":"def rhs: TypeTree","description":"scala.quoted.Quotes$reflectModule$TypeCaseDefMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeCaseDefMethods.html","searchKeys":["rhs"]},{"name":"trait SortedMapOps[K, +V, +CC <: ([X, Y] =>> Map[X, Y] & SortedMapOps[X, Y, CC, ]), +C <: SortedMapOps[K, V, CC, C]] extends MapOps[K, V, [K, V] =>> Map[K, V], C] with SortedOps[K, C]","description":"scala.collection.SortedMapOps","location":"api/scala/collection/SortedMapOps.html","searchKeys":["SortedMapOps"]},{"name":"type ByNameType <: TypeRepr","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ByNameType"]},{"name":"def asScala: Int => Unit","description":"scala.jdk.FunctionWrappers$$RichIntConsumerAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichIntConsumerAsFunction1.html","searchKeys":["asScala"]},{"name":"def >=(that: A): Boolean","description":"scala.math.Ordered","location":"api/scala/math/Ordered.html","searchKeys":[">="]},{"name":"def max(other: Duration): Duration","description":"scala.concurrent.duration.Duration","location":"api/scala/concurrent/duration/Duration.html","searchKeys":["max"]},{"name":"val empty: BitSet","description":"scala.collection.immutable.BitSet$","location":"api/scala/collection/immutable/BitSet$.html","searchKeys":["empty"]},{"name":"val x$7: Type[T7]","description":"scala.quoted.FromExpr$$Tuple14FromExpr","location":"api/scala/quoted/FromExpr$$Tuple14FromExpr.html","searchKeys":["x$7"]},{"name":"val x$6: FromExpr[T2]","description":"scala.quoted.FromExpr$$Tuple4FromExpr","location":"api/scala/quoted/FromExpr$$Tuple4FromExpr.html","searchKeys":["x$6"]},{"name":"def asJavaSupplier: Supplier[T]","description":"scala.jdk.FunctionWrappers$$RichFunction0AsSupplier","location":"api/scala/jdk/FunctionWrappers$$RichFunction0AsSupplier.html","searchKeys":["asJavaSupplier"]},{"name":"object SortedMap extends Delegate[[K, V] =>> SortedMap[K, V]]","description":"scala.collection.mutable.SortedMap$","location":"api/scala/collection/mutable/SortedMap$.html","searchKeys":["SortedMap"]},{"name":"def asJavaParStream: LongStream","description":"scala.collection.convert.StreamExtensions$LongArrayHasSeqParStream","location":"api/scala/collection/convert/StreamExtensions$LongArrayHasSeqParStream.html","searchKeys":["asJavaParStream"]},{"name":"def empty[A](evidence$2: Ordering[A]): PriorityQueue[A]","description":"scala.collection.mutable.PriorityQueue$","location":"api/scala/collection/mutable/PriorityQueue$.html","searchKeys":["empty"]},{"name":"class Tuple1[@specialized(Int, Long, Double) +T1](_1: T1) extends Product1[T1]","description":"scala.Tuple1","location":"api/scala/Tuple1.html","searchKeys":["Tuple1"]},{"name":"class Delegate[CC <: ([_$40] =>> Any), Ev <: ([_$41] =>> Any)](delegate: EvidenceIterableFactory[CC, Ev]) extends EvidenceIterableFactory[CC, Ev]","description":"scala.collection.EvidenceIterableFactory$$Delegate","location":"api/scala/collection/EvidenceIterableFactory$$Delegate.html","searchKeys":["Delegate"]},{"name":"def isSeqLikeIsIterable[Repr](isSeqLike: IsSeq[Repr]): IsIterable[Repr] { type A = A; type C = C;  }","description":"scala.collection.generic.IsIterableLowPriority","location":"api/scala/collection/generic/IsIterableLowPriority.html","searchKeys":["isSeqLikeIsIterable"]},{"name":"def and(other: => Unit): Finally","description":"scala.util.control.Exception$$Finally","location":"api/scala/util/control/Exception$$Finally.html","searchKeys":["and"]},{"name":"def empty: C","description":"scala.jdk.Accumulator$$AccumulatorFactoryShape","location":"api/scala/jdk/Accumulator$$AccumulatorFactoryShape.html","searchKeys":["empty"]},{"name":"given LiteralTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["LiteralTypeTest"]},{"name":"def drain(that: IntAccumulator): Unit","description":"scala.jdk.IntAccumulator","location":"api/scala/jdk/IntAccumulator.html","searchKeys":["drain"]},{"name":"def +(x: Double): Double","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["+"]},{"name":"def unary_-: Int","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["unary_-"]},{"name":"given Tuple19FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19](using val x$1: Type[T1], val x$2: Type[T2], val x$3: Type[T3], val x$4: Type[T4], val x$5: Type[T5], val x$6: Type[T6], val x$7: Type[T7], val x$8: Type[T8], val x$9: Type[T9], val x$10: Type[T10], val x$11: Type[T11], val x$12: Type[T12], val x$13: Type[T13], val x$14: Type[T14], val x$15: Type[T15], val x$16: Type[T16], val x$17: Type[T17], val x$18: Type[T18], val x$19: Type[T19], val x$20: FromExpr[T1], val x$21: FromExpr[T2], val x$22: FromExpr[T3], val x$23: FromExpr[T4], val x$24: FromExpr[T5], val x$25: FromExpr[T6], val x$26: FromExpr[T7], val x$27: FromExpr[T8], val x$28: FromExpr[T9], val x$29: FromExpr[T10], val x$30: FromExpr[T11], val x$31: FromExpr[T12], val x$32: FromExpr[T13], val x$33: FromExpr[T14], val x$34: FromExpr[T15], val x$35: FromExpr[T16], val x$36: FromExpr[T17], val x$37: FromExpr[T18], val x$38: FromExpr[T19]): FromExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19)]","description":"scala.quoted.FromExpr$$Tuple19FromExpr","location":"api/scala/quoted/FromExpr$$Tuple19FromExpr.html","searchKeys":["Tuple19FromExpr"]},{"name":"def parseString(str: String): Option[BigInt]","description":"scala.math.Numeric$$BigIntIsIntegral","location":"api/scala/math/Numeric$$BigIntIsIntegral.html","searchKeys":["parseString"]},{"name":"def longValue: Long","description":"scala.math.ScalaNumericAnyConversions","location":"api/scala/math/ScalaNumericAnyConversions.html","searchKeys":["longValue"]},{"name":"type TypeIdent <: TypeTree","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeIdent"]},{"name":"given AlternativesMethods","description":"scala.quoted.Quotes$reflectModule$AlternativesMethods","location":"api/scala/quoted/Quotes$reflectModule$AlternativesMethods.html","searchKeys":["AlternativesMethods"]},{"name":"def unapply(x: Closure): (Term, Option[TypeRepr])","description":"scala.quoted.Quotes$reflectModule$ClosureModule","location":"api/scala/quoted/Quotes$reflectModule$ClosureModule.html","searchKeys":["unapply"]},{"name":"def flatMap[B](f: A => IterableOnce[B]): IterableOnce[B]","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["flatMap"]},{"name":"def remove(idx: Int): T","description":"scala.collection.mutable.UnrolledBuffer","location":"api/scala/collection/mutable/UnrolledBuffer.html","searchKeys":["remove"]},{"name":"given TypedMethods","description":"scala.quoted.Quotes$reflectModule$TypedMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypedMethods"]},{"name":"val x$17: FromExpr[T3]","description":"scala.quoted.FromExpr$$Tuple14FromExpr","location":"api/scala/quoted/FromExpr$$Tuple14FromExpr.html","searchKeys":["x$17"]},{"name":"def _2: T2","description":"scala.Product7","location":"api/scala/Product7.html","searchKeys":["_2"]},{"name":"def _4: T4","description":"scala.Product21","location":"api/scala/Product21.html","searchKeys":["_4"]},{"name":"def asScalaFromIntConsumer(jf: IntConsumer): Integer => BoxedUnit","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asScalaFromIntConsumer"]},{"name":"object Set extends Delegate[[A] =>> Set[A]]","description":"scala.collection.mutable.Set$","location":"api/scala/collection/mutable/Set$.html","searchKeys":["Set"]},{"name":"given MatchCaseTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["MatchCaseTypeTest"]},{"name":"def apply(coll: Repr): SeqOps[A, [A] =>> Iterable[A], C]","description":"scala.collection.generic.IsSeq","location":"api/scala/collection/generic/IsSeq.html","searchKeys":["apply"]},{"name":"trait RepeatedModule","description":"scala.quoted.Quotes$reflectModule$RepeatedModule","location":"api/scala/quoted/Quotes$reflectModule$RepeatedModule.html","searchKeys":["RepeatedModule"]},{"name":"def isDecimalFloat: Boolean","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["isDecimalFloat"]},{"name":"val DAYS: TimeUnit","description":"scala.concurrent.duration","location":"api/scala/concurrent/duration.html","searchKeys":["DAYS"]},{"name":"def drop(n: Int): Iterator[A]","description":"scala.collection.Iterator","location":"api/scala/collection/Iterator.html","searchKeys":["drop"]},{"name":"def show[T <: AnyKind](using Type[T])(using Quotes): String","description":"scala.quoted.Type$","location":"api/scala/quoted/Type$.html","searchKeys":["show"]},{"name":"def *(x: Long): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["*"]},{"name":"def compare(x: Long, y: Long): Int","description":"scala.math.Ordering$$LongOrdering","location":"api/scala/math/Ordering$$LongOrdering.html","searchKeys":["compare"]},{"name":"def JavaStatic: Flags","description":"scala.quoted.Quotes$reflectModule$FlagsModule","location":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html","searchKeys":["JavaStatic"]},{"name":"def _15: T15","description":"scala.Product15","location":"api/scala/Product15.html","searchKeys":["_15"]},{"name":"given SimpleSelectorMethods","description":"scala.quoted.Quotes$reflectModule$SimpleSelectorMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["SimpleSelectorMethods"]},{"name":"def asJavaParKeyIntStreamFromByte[V](m: Map[Byte, V]): IntStream","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaParKeyIntStreamFromByte"]},{"name":"object Byte extends ByteOrdering","description":"scala.math.Ordering$$Byte$","location":"api/scala/math/Ordering$$Byte$.html","searchKeys":["Byte"]},{"name":"def doubleArrayOps(xs: Array[Double]): ArrayOps[Double]","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["doubleArrayOps"]},{"name":"class ofInt(val array: Array[Int]) extends ArraySeq[Int]","description":"scala.collection.mutable.ArraySeq$$ofInt","location":"api/scala/collection/mutable/ArraySeq$$ofInt.html","searchKeys":["ofInt"]},{"name":"def toLong(x: Char): Long","description":"scala.math.Numeric$$CharIsIntegral","location":"api/scala/math/Numeric$$CharIsIntegral.html","searchKeys":["toLong"]},{"name":"object AnyAccumulator extends SeqFactory[[A] =>> AnyAccumulator[A]]","description":"scala.jdk.AnyAccumulator$","location":"api/scala/jdk/AnyAccumulator$.html","searchKeys":["AnyAccumulator"]},{"name":"def toLongExact: Long","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["toLongExact"]},{"name":"val x$3: FromExpr[R]","description":"scala.quoted.FromExpr$$RightFromExpr","location":"api/scala/quoted/FromExpr$$RightFromExpr.html","searchKeys":["x$3"]},{"name":"def toScala: Option[Int]","description":"scala.jdk.OptionConverters$$RichOptionalInt","location":"api/scala/jdk/OptionConverters$$RichOptionalInt.html","searchKeys":["toScala"]},{"name":"def _16: T16","description":"scala.Product18","location":"api/scala/Product18.html","searchKeys":["_16"]},{"name":"def toJava: Optional[A]","description":"scala.jdk.OptionConverters$$RichOption","location":"api/scala/jdk/OptionConverters$$RichOption.html","searchKeys":["toJava"]},{"name":"trait IterableFactoryDefaults[+A, +CC <: ([x] =>> IterableOps[x, CC, CC[x]])] extends IterableOps[A, CC, CC[A]]","description":"scala.collection.IterableFactoryDefaults","location":"api/scala/collection/IterableFactoryDefaults.html","searchKeys":["IterableFactoryDefaults"]},{"name":"def endsWith[B >: A](that: Iterable[B]): Boolean","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["endsWith"]},{"name":"def +(x: Float): Float","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["+"]},{"name":"def asScala: Option[Int]","description":"scala.jdk.OptionConverters$$RichOptionalInt","location":"api/scala/jdk/OptionConverters$$RichOptionalInt.html","searchKeys":["asScala"]},{"name":"def toShort: Short","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["toShort"]},{"name":"def classType[T](clazz: Class[T], arg1: Manifest[], args: Manifest[]*): Manifest[T]","description":"scala.reflect.ManifestFactory$","location":"api/scala/reflect/ManifestFactory$.html","searchKeys":["classType"]},{"name":"type GenSet[X] = Set[X]","description":"scala.collection","location":"api/scala/collection.html","searchKeys":["GenSet"]},{"name":"class WithFilter[+A, +IterableCC <: ([_$1] =>> Any), +CC <: ([X] =>> SortedSet[X])](self: SortedSetOps[A, CC, ] & IterableOps[A, IterableCC, ], p: A => Boolean) extends WithFilter[A, IterableCC]","description":"scala.collection.SortedSetOps$$WithFilter","location":"api/scala/collection/SortedSetOps$$WithFilter.html","searchKeys":["WithFilter"]},{"name":"def |=(other: BitSet): BitSet","description":"scala.collection.mutable.BitSet","location":"api/scala/collection/mutable/BitSet.html","searchKeys":["|="]},{"name":"def unary_~: Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["unary_~"]},{"name":"trait PolyFunction","description":"scala.PolyFunction","location":"api/scala/PolyFunction.html","searchKeys":["PolyFunction"]},{"name":"class ofFloat(val array: Array[Float]) extends ArraySeq[Float]","description":"scala.collection.mutable.ArraySeq$$ofFloat","location":"api/scala/collection/mutable/ArraySeq$$ofFloat.html","searchKeys":["ofFloat"]},{"name":"def resultSig: String","description":"scala.quoted.Quotes$reflectModule$SignatureMethods","location":"api/scala/quoted/Quotes$reflectModule$SignatureMethods.html","searchKeys":["resultSig"]},{"name":"class LazyLong extends Serializable","description":"scala.runtime.LazyLong","location":"api/scala/runtime/LazyLong.html","searchKeys":["LazyLong"]},{"name":"def writeByte(b: Int): Unit","description":"dotty.tools.tasty.TastyBuffer","location":"api/dotty/tools/tasty/TastyBuffer.html","searchKeys":["writeByte"]},{"name":"def get: A","description":"scala.concurrent.SyncVar","location":"api/scala/concurrent/SyncVar.html","searchKeys":["get"]},{"name":"def isSpaceChar: Boolean","description":"scala.runtime.RichChar","location":"api/scala/runtime/RichChar.html","searchKeys":["isSpaceChar"]},{"name":"class Take[+A](underlying: SomeSeqOps[A], n: Int) extends Take[A] with SeqView[A]","description":"scala.collection.SeqView$$Take","location":"api/scala/collection/SeqView$$Take.html","searchKeys":["Take"]},{"name":"Named Type Arguments - More Details","description":"","location":"docs/reference/other-new-features/named-typeargs-spec.html","searchKeys":["Named Type Arguments - More Details"]},{"name":"val array: Array[Byte]","description":"scala.collection.mutable.ArraySeq$$ofByte","location":"api/scala/collection/mutable/ArraySeq$$ofByte.html","searchKeys":["array"]},{"name":"def toInt: Int","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["toInt"]},{"name":"def _1: T1","description":"scala.Product20","location":"api/scala/Product20.html","searchKeys":["_1"]},{"name":"def toFloat(x: Long): Float","description":"scala.math.Numeric$$LongIsIntegral","location":"api/scala/math/Numeric$$LongIsIntegral.html","searchKeys":["toFloat"]},{"name":"def min(that: BigInt): BigInt","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["min"]},{"name":"def _6: T6","description":"scala.Product15","location":"api/scala/Product15.html","searchKeys":["_6"]},{"name":"def foreach[U](f: A => U): Unit","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["foreach"]},{"name":"object Function1","description":"scala.Function1$","location":"api/scala/Function1$.html","searchKeys":["Function1"]},{"name":"def removed(key: Long): LongMap[T]","description":"scala.collection.immutable.LongMap","location":"api/scala/collection/immutable/LongMap.html","searchKeys":["removed"]},{"name":"def from[B](coll: IterableOnce[B]): ArrayDeque[B]","description":"scala.collection.mutable.ArrayDeque$","location":"api/scala/collection/mutable/ArrayDeque$.html","searchKeys":["from"]},{"name":"def >=(x: Double): Boolean","description":"scala.Char","location":"api/scala/Char.html","searchKeys":[">="]},{"name":"def emptyLongIArray: IArray[Long]","description":"scala.IArray$package$$IArray$","location":"api/scala/IArray$package$$IArray$.html","searchKeys":["emptyLongIArray"]},{"name":"def +(x: Byte): Int","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["+"]},{"name":"def appendAll(xs: Array[Char], offset: Int, len: Int): StringBuilder","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["appendAll"]},{"name":"def unbox(x: Object): Int","description":"scala.Int$","location":"api/scala/Int$.html","searchKeys":["unbox"]},{"name":"def apply(idx: Int): A","description":"scala.collection.SeqView$$Id","location":"api/scala/collection/SeqView$$Id.html","searchKeys":["apply"]},{"name":"def isLetterOrDigit: Boolean","description":"scala.runtime.RichChar","location":"api/scala/runtime/RichChar.html","searchKeys":["isLetterOrDigit"]},{"name":"def copyToArray[B >: A](xs: Array[B], start: Int, len: Int): Int","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["copyToArray"]},{"name":"val Signature: SignatureModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Signature"]},{"name":"val x$16: FromExpr[T7]","description":"scala.quoted.FromExpr$$Tuple9FromExpr","location":"api/scala/quoted/FromExpr$$Tuple9FromExpr.html","searchKeys":["x$16"]},{"name":"class BitSet extends AbstractSet[Int] with SortedSet[Int] with SortedSetOps[Int, [A] =>> SortedSet[A], BitSet] with StrictOptimizedSortedSetOps[Int, [A] =>> SortedSet[A], BitSet] with BitSet with BitSetOps[BitSet] with Serializable","description":"scala.collection.immutable.BitSet","location":"api/scala/collection/immutable/BitSet.html","searchKeys":["BitSet"]},{"name":"val ClassManifest: ClassManifestFactory","description":"scala.reflect","location":"api/scala/reflect.html","searchKeys":["ClassManifest"]},{"name":"def apply(tpe: TypeRepr): ClassOfConstant","description":"scala.quoted.Quotes$reflectModule$ClassOfConstantModule","location":"api/scala/quoted/Quotes$reflectModule$ClassOfConstantModule.html","searchKeys":["apply"]},{"name":"def <(x: Char): Boolean","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["<"]},{"name":"class RichFunction1AsPredicate[T](underlying: T => Boolean) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichFunction1AsPredicate","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsPredicate.html","searchKeys":["RichFunction1AsPredicate"]},{"name":"def merger: BiConsumer[IntAccumulator, IntAccumulator]","description":"scala.jdk.IntAccumulator$","location":"api/scala/jdk/IntAccumulator$.html","searchKeys":["merger"]},{"name":"class AbstractFunction0[@specialized +R] extends () => R","description":"scala.runtime.AbstractFunction0","location":"api/scala/runtime/AbstractFunction0.html","searchKeys":["AbstractFunction0"]},{"name":"object Platform","description":"scala.compat.Platform$","location":"api/scala/compat/Platform$.html","searchKeys":["Platform"]},{"name":"def scanRight[B](z: B)(op: (A, B) => B): Iterator[B]","description":"scala.collection.Iterator","location":"api/scala/collection/Iterator.html","searchKeys":["scanRight"]},{"name":"class RichFunction2AsDoubleBinaryOperator(underlying: (Double, Double) => Double) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichFunction2AsDoubleBinaryOperator","location":"api/scala/jdk/FunctionWrappers$$RichFunction2AsDoubleBinaryOperator.html","searchKeys":["RichFunction2AsDoubleBinaryOperator"]},{"name":"def sum[B >: A](num: Numeric[B]): B","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["sum"]},{"name":"def newArrayBuilder(): ArrayBuilder[T]","description":"scala.reflect.ClassManifestDeprecatedApis","location":"api/scala/reflect/ClassManifestDeprecatedApis.html","searchKeys":["newArrayBuilder"]},{"name":"def apply(x: Right[L, R])(using Quotes): Expr[Right[L, R]]","description":"scala.quoted.ToExpr$$RightToExpr","location":"api/scala/quoted/ToExpr$$RightToExpr.html","searchKeys":["apply"]},{"name":"def iterator: Iterator[(Key, Value)]","description":"scala.collection.mutable.OpenHashMap","location":"api/scala/collection/mutable/OpenHashMap.html","searchKeys":["iterator"]},{"name":"trait Batchable","description":"scala.concurrent.Batchable","location":"api/scala/concurrent/Batchable.html","searchKeys":["Batchable"]},{"name":"val emptyCharArray: Array[Char]","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["emptyCharArray"]},{"name":"type TypeSelect <: TypeTree","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeSelect"]},{"name":"def fromString(s: String): Long","description":"scala.util.CommandLineParser$$FromString$$given_FromString_Long$","location":"api/scala/util/CommandLineParser$$FromString$$given_FromString_Long$.html","searchKeys":["fromString"]},{"name":"trait Classifier[C]","description":"scala.concurrent.duration.DurationConversions$$Classifier","location":"api/scala/concurrent/duration/DurationConversions$$Classifier.html","searchKeys":["Classifier"]},{"name":"type Select <: Ref","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Select"]},{"name":"def :+[B >: A](x: B)(evidence$9: ClassTag[B]): Array[B]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":[":+"]},{"name":"def propertiesAsScalaMap(p: Properties): Map[String, String]","description":"scala.collection.JavaConverters$","location":"api/scala/collection/JavaConverters$.html","searchKeys":["propertiesAsScalaMap"]},{"name":"def pattern: Tree","description":"scala.quoted.Quotes$reflectModule$BindMethods","location":"api/scala/quoted/Quotes$reflectModule$BindMethods.html","searchKeys":["pattern"]},{"name":"trait Selectable","description":"scala.Selectable","location":"api/scala/Selectable.html","searchKeys":["Selectable"]},{"name":"def parseString(str: String): Option[Char]","description":"scala.math.Numeric$$CharIsIntegral","location":"api/scala/math/Numeric$$CharIsIntegral.html","searchKeys":["parseString"]},{"name":"val x$11: FromExpr[T4]","description":"scala.quoted.FromExpr$$Tuple7FromExpr","location":"api/scala/quoted/FromExpr$$Tuple7FromExpr.html","searchKeys":["x$11"]},{"name":"def wrapShortArray(xs: Array[Short]): ArraySeq[Short]","description":"scala.runtime.ScalaRunTime$","location":"api/scala/runtime/ScalaRunTime$.html","searchKeys":["wrapShortArray"]},{"name":"trait Function5[-T1, -T2, -T3, -T4, -T5, +R] extends AnyRef","description":"scala.Function5","location":"api/scala/Function5.html","searchKeys":["Function5"]},{"name":"class FromJavaDoubleUnaryOperator(jf: DoubleUnaryOperator) extends Double => Double","description":"scala.jdk.FunctionWrappers$$FromJavaDoubleUnaryOperator","location":"api/scala/jdk/FunctionWrappers$$FromJavaDoubleUnaryOperator.html","searchKeys":["FromJavaDoubleUnaryOperator"]},{"name":"def nanos: FiniteDuration","description":"scala.concurrent.duration.DurationConversions","location":"api/scala/concurrent/duration/DurationConversions.html","searchKeys":["nanos"]},{"name":"val APPLIEDtpt: 162","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["APPLIEDtpt"]},{"name":"given AnnotatedTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["AnnotatedTypeTest"]},{"name":"def parseString(str: String): Option[BigDecimal]","description":"scala.math.Numeric$$BigDecimalIsConflicted","location":"api/scala/math/Numeric$$BigDecimalIsConflicted.html","searchKeys":["parseString"]},{"name":"def cond: Term","description":"scala.quoted.Quotes$reflectModule$IfMethods","location":"api/scala/quoted/Quotes$reflectModule$IfMethods.html","searchKeys":["cond"]},{"name":"def asJavaParValueIntStreamFromShort[K](m: Map[K, Short]): IntStream","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaParValueIntStreamFromShort"]},{"name":"def addOne(a: A): AnyAccumulator[A]","description":"scala.jdk.AnyAccumulator","location":"api/scala/jdk/AnyAccumulator.html","searchKeys":["addOne"]},{"name":"Dropped: Auto-Application","description":"","location":"docs/reference/dropped-features/auto-apply.html","searchKeys":["Dropped: Auto-Application"]},{"name":"object Implicits extends ExtraImplicits","description":"scala.math.Integral$$Implicits$","location":"api/scala/math/Integral$$Implicits$.html","searchKeys":["Implicits"]},{"name":"val x$15: Type[T15]","description":"scala.quoted.FromExpr$$Tuple20FromExpr","location":"api/scala/quoted/FromExpr$$Tuple20FromExpr.html","searchKeys":["x$15"]},{"name":"def apply(length: Long, unit: TimeUnit): FiniteDuration","description":"scala.concurrent.duration.FiniteDuration$","location":"api/scala/concurrent/duration/FiniteDuration$.html","searchKeys":["apply"]},{"name":"def _3: T3","description":"scala.Product14","location":"api/scala/Product14.html","searchKeys":["_3"]},{"name":"def equality: Equiv[K]","description":"scala.collection.concurrent.TrieMap","location":"api/scala/collection/concurrent/TrieMap.html","searchKeys":["equality"]},{"name":"def _18: T18","description":"scala.Product20","location":"api/scala/Product20.html","searchKeys":["_18"]},{"name":"def _1: T1","description":"scala.Product6","location":"api/scala/Product6.html","searchKeys":["_1"]},{"name":"object ManifestFactory","description":"scala.reflect.ManifestFactory$","location":"api/scala/reflect/ManifestFactory$.html","searchKeys":["ManifestFactory"]},{"name":"def floor: Float","description":"scala.runtime.RichFloat","location":"api/scala/runtime/RichFloat.html","searchKeys":["floor"]},{"name":"def iterator: Iterator[A]","description":"scala.collection.View$$PadTo","location":"api/scala/collection/View$$PadTo.html","searchKeys":["iterator"]},{"name":"given FlagsMethods","description":"scala.quoted.Quotes$reflectModule$FlagsMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["FlagsMethods"]},{"name":"def copyToArray(xs: Array[Char], start: Int, len: Int): Int","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["copyToArray"]},{"name":"def unapply(x: SimpleSelector): Some[String]","description":"scala.quoted.Quotes$reflectModule$SimpleSelectorModule","location":"api/scala/quoted/Quotes$reflectModule$SimpleSelectorModule.html","searchKeys":["unapply"]},{"name":"def apply(idx: Int): T","description":"scala.collection.immutable.NumericRange","location":"api/scala/collection/immutable/NumericRange.html","searchKeys":["apply"]},{"name":"def addOne(elem: Long): ofLong","description":"scala.collection.mutable.ArrayBuilder$$ofLong","location":"api/scala/collection/mutable/ArrayBuilder$$ofLong.html","searchKeys":["addOne"]},{"name":"def chain[T](h: Hashing[T]): Hashing[T]","description":"scala.util.hashing.ByteswapHashing$","location":"api/scala/util/hashing/ByteswapHashing$.html","searchKeys":["chain"]},{"name":"val reflect: reflectModule","description":"scala.quoted.Quotes","location":"api/scala/quoted/Quotes.html","searchKeys":["reflect"]},{"name":"def unapply(constant: DoubleConstant): Some[Double]","description":"scala.quoted.Quotes$reflectModule$DoubleConstantModule","location":"api/scala/quoted/Quotes$reflectModule$DoubleConstantModule.html","searchKeys":["unapply"]},{"name":"val SEVERE: 1000","description":"scala.annotation.elidable$","location":"api/scala/annotation/elidable$.html","searchKeys":["SEVERE"]},{"name":"trait JFunction1$mcDJ$sp extends Any => Any with Serializable","description":"scala.runtime.java8.JFunction1$mcDJ$sp","location":"api/scala/runtime/java8/JFunction1$mcDJ$sp.html","searchKeys":["JFunction1$mcDJ$sp"]},{"name":"val DoubleConstant: DoubleConstantModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["DoubleConstant"]},{"name":"def curried: T1 => T2 => T3 => T4 => T5 => T6 => T7 => T8 => T9 => T10 => T11 => T12 => T13 => T14 => T15 => R","description":"scala.Function15","location":"api/scala/Function15.html","searchKeys":["curried"]},{"name":"def asJavaParKeyLongStream[V](m: Map[Long, V]): LongStream","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaParKeyLongStream"]},{"name":"type Underlying = T","description":"scala.quoted.Type","location":"api/scala/quoted/Type.html","searchKeys":["Underlying"]},{"name":"trait IndexedSeqOps[+A, +CC <: ([_$1] =>> Any), +C] extends SeqOps[A, CC, C]","description":"scala.collection.IndexedSeqOps","location":"api/scala/collection/IndexedSeqOps.html","searchKeys":["IndexedSeqOps"]},{"name":"def toTraversable: Iterable[A]","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["toTraversable"]},{"name":"def flatMap[BS, B](f: A => BS)(asIterable: BS => Iterable[B], m: ClassTag[B]): Array[B]","description":"scala.collection.ArrayOps$$WithFilter","location":"api/scala/collection/ArrayOps$$WithFilter.html","searchKeys":["flatMap"]},{"name":"def get: Nothing","description":"scala.None$","location":"api/scala/None$.html","searchKeys":["get"]},{"name":"def toBuildFrom[A, CC <: ([_$16] =>> Any)](factory: IterableFactory[CC]): BuildFrom[Any, A, CC[A]]","description":"scala.collection.IterableFactory$","location":"api/scala/collection/IterableFactory$.html","searchKeys":["toBuildFrom"]},{"name":"class IntMult(i: Int) extends AnyVal","description":"scala.concurrent.duration.package$$IntMult","location":"api/scala/concurrent/duration/package$$IntMult.html","searchKeys":["IntMult"]},{"name":"given NoneFromExpr: FromExpr[None]","description":"scala.quoted.FromExpr$$NoneFromExpr$","location":"api/scala/quoted/FromExpr$.html","searchKeys":["NoneFromExpr"]},{"name":"val x$31: FromExpr[T15]","description":"scala.quoted.FromExpr$$Tuple16FromExpr","location":"api/scala/quoted/FromExpr$$Tuple16FromExpr.html","searchKeys":["x$31"]},{"name":"def addOne(elem: (K, V)): HashMap[K, V]","description":"scala.collection.mutable.HashMap","location":"api/scala/collection/mutable/HashMap.html","searchKeys":["addOne"]},{"name":"def argString: String","description":"scala.reflect.ClassManifestDeprecatedApis","location":"api/scala/reflect/ClassManifestDeprecatedApis.html","searchKeys":["argString"]},{"name":"def apply(cls: Symbol): This","description":"scala.quoted.Quotes$reflectModule$ThisModule","location":"api/scala/quoted/Quotes$reflectModule$ThisModule.html","searchKeys":["apply"]},{"name":"class AsJavaBiFunction[T, U, R](sf: (T, U) => R) extends BiFunction[T, U, R]","description":"scala.jdk.FunctionWrappers$$AsJavaBiFunction","location":"api/scala/jdk/FunctionWrappers$$AsJavaBiFunction.html","searchKeys":["AsJavaBiFunction"]},{"name":"given StringContextFromExpr: FromExpr[StringContext]","description":"scala.quoted.FromExpr$$StringContextFromExpr$","location":"api/scala/quoted/FromExpr$.html","searchKeys":["StringContextFromExpr"]},{"name":"trait StaticAnnotation extends Annotation","description":"scala.annotation.StaticAnnotation","location":"api/scala/annotation/StaticAnnotation.html","searchKeys":["StaticAnnotation"]},{"name":"def apply(idx: Int): A","description":"scala.collection.SeqView$$Appended","location":"api/scala/collection/SeqView$$Appended.html","searchKeys":["apply"]},{"name":"def *(x: Float): Float","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["*"]},{"name":"def fromName: String","description":"scala.quoted.Quotes$reflectModule$RenameSelectorMethods","location":"api/scala/quoted/Quotes$reflectModule$RenameSelectorMethods.html","searchKeys":["fromName"]},{"name":"class SerializationProxy[A](var coll: Stream[A]) extends Serializable","description":"scala.collection.immutable.Stream$$SerializationProxy","location":"api/scala/collection/immutable/Stream$$SerializationProxy.html","searchKeys":["SerializationProxy"]},{"name":"object Product16","description":"scala.Product16$","location":"api/scala/Product16$.html","searchKeys":["Product16"]},{"name":"def toScala[C1](factory: Factory[A, C1])(info: AccumulatorFactoryInfo[A, C1]): C1","description":"scala.collection.convert.StreamExtensions$StreamHasToScala","location":"api/scala/collection/convert/StreamExtensions$StreamHasToScala.html","searchKeys":["toScala"]},{"name":"def stableSort[K](a: Seq[K])(evidence$5: ClassTag[K], evidence$6: Ordering[K]): Array[K]","description":"scala.util.Sorting$","location":"api/scala/util/Sorting$.html","searchKeys":["stableSort"]},{"name":"def clear(): Unit","description":"scala.collection.mutable.Clearable","location":"api/scala/collection/mutable/Clearable.html","searchKeys":["clear"]},{"name":"def empty[A](evidence$16: Ev[A]): CC[A]","description":"scala.collection.EvidenceIterableFactory","location":"api/scala/collection/EvidenceIterableFactory.html","searchKeys":["empty"]},{"name":"val x$15: FromExpr[T2]","description":"scala.quoted.FromExpr$$Tuple13FromExpr","location":"api/scala/quoted/FromExpr$$Tuple13FromExpr.html","searchKeys":["x$15"]},{"name":"def contains(x: Int): Boolean","description":"scala.collection.immutable.Range","location":"api/scala/collection/immutable/Range.html","searchKeys":["contains"]},{"name":"def apply$mcFF$sp(v1: Float): Float","description":"scala.runtime.java8.JFunction1$mcFF$sp","location":"api/scala/runtime/java8/JFunction1$mcFF$sp.html","searchKeys":["apply$mcFF$sp"]},{"name":"def :++[B >: A](suffix: IterableOnce[B]): CC[B]","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":[":++"]},{"name":"def lastOption: Option[A]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["lastOption"]},{"name":"def <(that: String): Boolean","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["<"]},{"name":"Backend Internals","description":"","location":"docs/internals/backend.html","searchKeys":["Backend Internals"]},{"name":"def orNull[A1 >: A](ev: Null <:< A1): A1","description":"scala.Option","location":"api/scala/Option.html","searchKeys":["orNull"]},{"name":"def asin(x: Double): Double","description":"scala.math","location":"api/scala/math.html","searchKeys":["asin"]},{"name":"def -(other: Duration): Duration","description":"scala.concurrent.duration.Duration$$Infinite","location":"api/scala/concurrent/duration/Duration$$Infinite.html","searchKeys":["-"]},{"name":"def keys: Iterable[K]","description":"scala.collection.MapOps","location":"api/scala/collection/MapOps.html","searchKeys":["keys"]},{"name":"def sizeHint(size: Int): Unit","description":"scala.collection.mutable.ArrayBuffer","location":"api/scala/collection/mutable/ArrayBuffer.html","searchKeys":["sizeHint"]},{"name":"def asJavaParStream: IntStream","description":"scala.collection.convert.StreamExtensions$StringHasSeqParStream","location":"api/scala/collection/convert/StreamExtensions$StringHasSeqParStream.html","searchKeys":["asJavaParStream"]},{"name":"def close(): Unit","description":"scala.sys.process.FileProcessLogger","location":"api/scala/sys/process/FileProcessLogger.html","searchKeys":["close"]},{"name":"def asScalaFromToIntFunction[T](jf: ToIntFunction[T]): T => Integer","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asScalaFromToIntFunction"]},{"name":"def condOpt[T, U](x: T)(pf: PartialFunction[T, U]): Option[U]","description":"scala.PartialFunction$","location":"api/scala/PartialFunction$.html","searchKeys":["condOpt"]},{"name":"def contains[T](elem: T): Boolean","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["contains"]},{"name":"def invert[El1, It1 <: ([a] =>> Iterable[a]), El2, It2 <: ([a] =>> Iterable[a]), El3, It3 <: ([a] =>> Iterable[a]), That](w1: T1 <:< It1[El1], w2: T2 <:< It2[El2], w3: T3 <:< It3[El3], bf: BuildFrom[T1, (El1, El2, El3), That]): That","description":"scala.runtime.Tuple3Zipped$$Ops","location":"api/scala/runtime/Tuple3Zipped$$Ops.html","searchKeys":["invert"]},{"name":"def -(x: Double): Double","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["-"]},{"name":"val Float: FloatManifest","description":"scala.reflect.ClassManifestFactory$","location":"api/scala/reflect/ClassManifestFactory$.html","searchKeys":["Float"]},{"name":"val x$19: FromExpr[T4]","description":"scala.quoted.FromExpr$$Tuple15FromExpr","location":"api/scala/quoted/FromExpr$$Tuple15FromExpr.html","searchKeys":["x$19"]},{"name":"def merger: BiConsumer[LongAccumulator, LongAccumulator]","description":"scala.jdk.LongAccumulator$","location":"api/scala/jdk/LongAccumulator$.html","searchKeys":["merger"]},{"name":"val Position: PositionModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Position"]},{"name":"class nowarn(value: String) extends ConstantAnnotation","description":"scala.annotation.nowarn","location":"api/scala/annotation/nowarn.html","searchKeys":["nowarn"]},{"name":"def empty[A]: CC[A]","description":"scala.collection.IterableFactory$$Delegate","location":"api/scala/collection/IterableFactory$$Delegate.html","searchKeys":["empty"]},{"name":"val x$9: Type[T9]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["x$9"]},{"name":"def micro: FiniteDuration","description":"scala.concurrent.duration.DurationConversions","location":"api/scala/concurrent/duration/DurationConversions.html","searchKeys":["micro"]},{"name":"val x$8: Type[T8]","description":"scala.quoted.FromExpr$$Tuple9FromExpr","location":"api/scala/quoted/FromExpr$$Tuple9FromExpr.html","searchKeys":["x$8"]},{"name":"given TypeApplyMethods","description":"scala.quoted.Quotes$reflectModule$TypeApplyMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeApplyMethods.html","searchKeys":["TypeApplyMethods"]},{"name":"def &(that: Set[A]): C","description":"scala.collection.SetOps","location":"api/scala/collection/SetOps.html","searchKeys":["&"]},{"name":"trait Specializable","description":"scala.Specializable","location":"api/scala/Specializable.html","searchKeys":["Specializable"]},{"name":"def slice[T](from: Int, until: Int): IArray[T]","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["slice"]},{"name":"val x$1: Type[T1]","description":"scala.quoted.FromExpr$$Tuple15FromExpr","location":"api/scala/quoted/FromExpr$$Tuple15FromExpr.html","searchKeys":["x$1"]},{"name":"def ref: Term","description":"scala.quoted.Quotes$reflectModule$SingletonMethods","location":"api/scala/quoted/Quotes$reflectModule$SingletonMethods.html","searchKeys":["ref"]},{"name":"given RenameSelectorMethods","description":"scala.quoted.Quotes$reflectModule$RenameSelectorMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["RenameSelectorMethods"]},{"name":"def asJavaToLongBiFunction[T, U](sf: (T, U) => Long): ToLongBiFunction[T, U]","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asJavaToLongBiFunction"]},{"name":"class SystemProperties extends AbstractMap[String, String]","description":"scala.sys.SystemProperties","location":"api/scala/sys/SystemProperties.html","searchKeys":["SystemProperties"]},{"name":"class FromJavaToLongBiFunction[T, U](jf: ToLongBiFunction[T, U]) extends (T, U) => Long","description":"scala.jdk.FunctionWrappers$$FromJavaToLongBiFunction","location":"api/scala/jdk/FunctionWrappers$$FromJavaToLongBiFunction.html","searchKeys":["FromJavaToLongBiFunction"]},{"name":"def +:[B >: Char](elem: B): IndexedSeq[B]","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["+:"]},{"name":"def unapply(x: TypeLambda): (List[String], List[TypeBounds], TypeRepr)","description":"scala.quoted.Quotes$reflectModule$TypeLambdaModule","location":"api/scala/quoted/Quotes$reflectModule$TypeLambdaModule.html","searchKeys":["unapply"]},{"name":"def from[E](it: IterableOnce[E]): CC[E]","description":"scala.collection.SeqFactory$$Delegate","location":"api/scala/collection/SeqFactory$$Delegate.html","searchKeys":["from"]},{"name":"val byName: Map[String, Int]","description":"scala.annotation.elidable$","location":"api/scala/annotation/elidable$.html","searchKeys":["byName"]},{"name":"def toDays: Long","description":"scala.concurrent.duration.FiniteDuration","location":"api/scala/concurrent/duration/FiniteDuration.html","searchKeys":["toDays"]},{"name":"def elems: List[Term]","description":"scala.quoted.Quotes$reflectModule$RepeatedMethods","location":"api/scala/quoted/Quotes$reflectModule$RepeatedMethods.html","searchKeys":["elems"]},{"name":"val x$5: FromExpr[T2]","description":"scala.quoted.FromExpr$$Tuple3FromExpr","location":"api/scala/quoted/FromExpr$$Tuple3FromExpr.html","searchKeys":["x$5"]},{"name":"def ++(xs: IterableOnce[A]): PriorityQueue[A]","description":"scala.collection.mutable.PriorityQueue","location":"api/scala/collection/mutable/PriorityQueue.html","searchKeys":["++"]},{"name":"object BigInt extends Equiv[BigInt]","description":"scala.math.Equiv$$BigInt$","location":"api/scala/math/Equiv$$BigInt$.html","searchKeys":["BigInt"]},{"name":"def patchInPlace(from: Int, patch: IterableOnce[A], replaced: Int): Buffer[A]","description":"scala.collection.mutable.Buffer","location":"api/scala/collection/mutable/Buffer.html","searchKeys":["patchInPlace"]},{"name":"def this(str: String)","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["this"]},{"name":"given TypeReprMethods","description":"scala.quoted.Quotes$reflectModule$TypeReprMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeReprMethods"]},{"name":"val waterlineDelim: Int","description":"scala.collection.mutable.UnrolledBuffer$","location":"api/scala/collection/mutable/UnrolledBuffer$.html","searchKeys":["waterlineDelim"]},{"name":"trait OnCompleteRunnable extends Batchable","description":"scala.concurrent.OnCompleteRunnable","location":"api/scala/concurrent/OnCompleteRunnable.html","searchKeys":["OnCompleteRunnable"]},{"name":"val x$3: FromExpr[L]","description":"scala.quoted.FromExpr$$EitherFromExpr","location":"api/scala/quoted/FromExpr$$EitherFromExpr.html","searchKeys":["x$3"]},{"name":"def flatMap(f: Int => IterableOnce[Int]): IntAccumulator","description":"scala.jdk.IntAccumulator","location":"api/scala/jdk/IntAccumulator.html","searchKeys":["flatMap"]},{"name":"val x$15: FromExpr[T7]","description":"scala.quoted.FromExpr$$Tuple8FromExpr","location":"api/scala/quoted/FromExpr$$Tuple8FromExpr.html","searchKeys":["x$15"]},{"name":"def applyAsInt(x1: Long): Int","description":"scala.jdk.FunctionWrappers$$AsJavaLongToIntFunction","location":"api/scala/jdk/FunctionWrappers$$AsJavaLongToIntFunction.html","searchKeys":["applyAsInt"]},{"name":"def copy(original: Tree)(qual: Term, mix: Option[String]): Super","description":"scala.quoted.Quotes$reflectModule$SuperModule","location":"api/scala/quoted/Quotes$reflectModule$SuperModule.html","searchKeys":["copy"]},{"name":"class AsJavaLongConsumer(sf: Long => Unit) extends LongConsumer","description":"scala.jdk.FunctionWrappers$$AsJavaLongConsumer","location":"api/scala/jdk/FunctionWrappers$$AsJavaLongConsumer.html","searchKeys":["AsJavaLongConsumer"]},{"name":"given DoubleFromExpr","description":"scala.quoted.FromExpr$","location":"api/scala/quoted/FromExpr$.html","searchKeys":["DoubleFromExpr"]},{"name":"def asJavaUnaryOperator: UnaryOperator[T]","description":"scala.jdk.FunctionWrappers$$RichFunction1AsUnaryOperator","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsUnaryOperator.html","searchKeys":["asJavaUnaryOperator"]},{"name":"val UP: Value","description":"scala.math.BigDecimal$$RoundingMode$","location":"api/scala/math/BigDecimal$$RoundingMode$.html","searchKeys":["UP"]},{"name":"def toScala: Option[A]","description":"scala.jdk.OptionConverters$$RichOptional","location":"api/scala/jdk/OptionConverters$$RichOptional.html","searchKeys":["toScala"]},{"name":"def name: String","description":"scala.quoted.Quotes$reflectModule$TypeIdentMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeIdentMethods.html","searchKeys":["name"]},{"name":"def asJava: ToIntBiFunction[T, U]","description":"scala.jdk.FunctionWrappers$$RichFunction2AsToIntBiFunction","location":"api/scala/jdk/FunctionWrappers$$RichFunction2AsToIntBiFunction.html","searchKeys":["asJava"]},{"name":"class AbstractFunction2[@specialized -T1, @specialized -T2, @specialized +R] extends (T1, T2) => R","description":"scala.runtime.AbstractFunction2","location":"api/scala/runtime/AbstractFunction2.html","searchKeys":["AbstractFunction2"]},{"name":"def %(x: Short): Int","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["%"]},{"name":"given SymbolMethods","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["SymbolMethods"]},{"name":"def mul(factor: Long): FiniteDuration","description":"scala.concurrent.duration.FiniteDuration","location":"api/scala/concurrent/duration/FiniteDuration.html","searchKeys":["mul"]},{"name":"val length: Int","description":"scala.collection.mutable.ArrayBufferView","location":"api/scala/collection/mutable/ArrayBufferView.html","searchKeys":["length"]},{"name":"type BitwiseOr[X <: Int, Y <: Int] <: Int","description":"scala.compiletime.ops.int$","location":"api/scala/compiletime/ops/int$.html","searchKeys":["BitwiseOr"]},{"name":"def apply(x1: Int): R","description":"scala.jdk.FunctionWrappers$$FromJavaIntFunction","location":"api/scala/jdk/FunctionWrappers$$FromJavaIntFunction.html","searchKeys":["apply"]},{"name":"def writeInt(x: Int): Unit","description":"dotty.tools.tasty.TastyBuffer","location":"api/dotty/tools/tasty/TastyBuffer.html","searchKeys":["writeInt"]},{"name":"def println(): Unit","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["println"]},{"name":"def charAt(index: Int): Char","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["charAt"]},{"name":"Trait Parameters","description":"","location":"docs/reference/other-new-features/trait-parameters.html","searchKeys":["Trait Parameters"]},{"name":"Worksheet mode with Dotty IDE","description":"","location":"docs/usage/worksheet-mode.html","searchKeys":["Worksheet mode with Dotty IDE"]},{"name":"def addOne(kv: (K, V)): LinkedHashMap[K, V]","description":"scala.collection.mutable.LinkedHashMap","location":"api/scala/collection/mutable/LinkedHashMap.html","searchKeys":["addOne"]},{"name":"val Null: Manifest[Null]","description":"scala.reflect.ManifestFactory$","location":"api/scala/reflect/ManifestFactory$.html","searchKeys":["Null"]},{"name":"def apply(inline x: Unit, inline xs: Unit*): IArray[Unit]","description":"scala.IArray$package$$IArray$","location":"api/scala/IArray$package$$IArray$.html","searchKeys":["apply"]},{"name":"def removed(key: K): VectorMap[K, V]","description":"scala.collection.immutable.VectorMap","location":"api/scala/collection/immutable/VectorMap.html","searchKeys":["removed"]},{"name":"def toChar: Char","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["toChar"]},{"name":"def addOne(elem: T): ofRef[T]","description":"scala.collection.mutable.ArrayBuilder$$ofRef","location":"api/scala/collection/mutable/ArrayBuilder$$ofRef.html","searchKeys":["addOne"]},{"name":"def foldTrees(x: X, trees: Iterable[Tree])(owner: Symbol): X","description":"scala.quoted.Quotes$reflectModule$TreeAccumulator","location":"api/scala/quoted/Quotes$reflectModule$TreeAccumulator.html","searchKeys":["foldTrees"]},{"name":"def asJavaDictionary: Dictionary[K, V]","description":"scala.collection.JavaConverters$$AsJavaDictionary","location":"api/scala/collection/JavaConverters$$AsJavaDictionary.html","searchKeys":["asJavaDictionary"]},{"name":"def toDouble: Double","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["toDouble"]},{"name":"def ensuring(cond: A => Boolean, msg: => Any): A","description":"scala.Predef$$Ensuring","location":"api/scala/Predef$$Ensuring.html","searchKeys":["ensuring"]},{"name":"class AsJavaConsumer[T](sf: T => Unit) extends Consumer[T]","description":"scala.jdk.FunctionWrappers$$AsJavaConsumer","location":"api/scala/jdk/FunctionWrappers$$AsJavaConsumer.html","searchKeys":["AsJavaConsumer"]},{"name":"def doubleFromDigits(digits: String): Double","description":"scala.util.FromDigits$","location":"api/scala/util/FromDigits$.html","searchKeys":["doubleFromDigits"]},{"name":"trait Product16[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16] extends Product","description":"scala.Product16","location":"api/scala/Product16.html","searchKeys":["Product16"]},{"name":"def apply[V](elems: (Long, V)*): LongMap[V]","description":"scala.collection.mutable.LongMap$","location":"api/scala/collection/mutable/LongMap$.html","searchKeys":["apply"]},{"name":"def &~=(other: BitSet): BitSet","description":"scala.collection.mutable.BitSet","location":"api/scala/collection/mutable/BitSet.html","searchKeys":["&~="]},{"name":"def mapAsJavaConcurrentMap[K, V](m: Map[K, V]): ConcurrentMap[K, V]","description":"scala.collection.JavaConverters$","location":"api/scala/collection/JavaConverters$.html","searchKeys":["mapAsJavaConcurrentMap"]},{"name":"def ArrayCharSequence(arrayOfChars: Array[Char]): ArrayCharSequence","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["ArrayCharSequence"]},{"name":"def apply(arg: TypeTree, annotation: Term): Annotated","description":"scala.quoted.Quotes$reflectModule$AnnotatedModule","location":"api/scala/quoted/Quotes$reflectModule$AnnotatedModule.html","searchKeys":["apply"]},{"name":"def annotation: Term","description":"scala.quoted.Quotes$reflectModule$AnnotatedTypeMethods","location":"api/scala/quoted/Quotes$reflectModule$AnnotatedTypeMethods.html","searchKeys":["annotation"]},{"name":"type Map[K, +V] = Map[K, V]","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["Map"]},{"name":"val x$10: FromExpr[T4]","description":"scala.quoted.FromExpr$$Tuple6FromExpr","location":"api/scala/quoted/FromExpr$$Tuple6FromExpr.html","searchKeys":["x$10"]},{"name":"object Map extends Delegate[[K, V] =>> Map[K, V]]","description":"scala.collection.mutable.Map$","location":"api/scala/collection/mutable/Map$.html","searchKeys":["Map"]},{"name":"def unapply(x: Refinement): (TypeRepr, String, TypeRepr)","description":"scala.quoted.Quotes$reflectModule$RefinementModule","location":"api/scala/quoted/Quotes$reflectModule$RefinementModule.html","searchKeys":["unapply"]},{"name":"trait JFunction2$mcVIJ$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcVIJ$sp","location":"api/scala/runtime/java8/JFunction2$mcVIJ$sp.html","searchKeys":["JFunction2$mcVIJ$sp"]},{"name":"val x$22: FromExpr[T6]","description":"scala.quoted.FromExpr$$Tuple16FromExpr","location":"api/scala/quoted/FromExpr$$Tuple16FromExpr.html","searchKeys":["x$22"]},{"name":"def apply(xs: A*): C","description":"scala.collection.SpecificIterableFactory","location":"api/scala/collection/SpecificIterableFactory.html","searchKeys":["apply"]},{"name":"def result(): Array[Byte]","description":"scala.collection.mutable.ArrayBuilder$$ofByte","location":"api/scala/collection/mutable/ArrayBuilder$$ofByte.html","searchKeys":["result"]},{"name":"object Accumulator","description":"scala.jdk.Accumulator$","location":"api/scala/jdk/Accumulator$.html","searchKeys":["Accumulator"]},{"name":"object StepperShape extends StepperShapeLowPriority1","description":"scala.collection.StepperShape$","location":"api/scala/collection/StepperShape$.html","searchKeys":["StepperShape"]},{"name":"def Inline: Flags","description":"scala.quoted.Quotes$reflectModule$FlagsModule","location":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html","searchKeys":["Inline"]},{"name":"def flatMap[B](f: A => Option[B]): Option[B]","description":"scala.Option$WithFilter","location":"api/scala/Option$WithFilter.html","searchKeys":["flatMap"]},{"name":"def require(requirement: Boolean): Unit","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["require"]},{"name":"def catchingPromiscuously[T](exceptions: Class[]*): Catch[T]","description":"scala.util.control.Exception$","location":"api/scala/util/control/Exception$.html","searchKeys":["catchingPromiscuously"]},{"name":"val BIND: 150","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["BIND"]},{"name":"trait MatchTypeModule","description":"scala.quoted.Quotes$reflectModule$MatchTypeModule","location":"api/scala/quoted/Quotes$reflectModule$MatchTypeModule.html","searchKeys":["MatchTypeModule"]},{"name":"def toJavaGeneric: Optional[Int]","description":"scala.jdk.OptionConverters$$RichOptionalInt","location":"api/scala/jdk/OptionConverters$$RichOptionalInt.html","searchKeys":["toJavaGeneric"]},{"name":"def <(x: Float): Boolean","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["<"]},{"name":"val x$26: FromExpr[T8]","description":"scala.quoted.FromExpr$$Tuple18FromExpr","location":"api/scala/quoted/FromExpr$$Tuple18FromExpr.html","searchKeys":["x$26"]},{"name":"def short2float(x: Short): Float","description":"scala.Short$","location":"api/scala/Short$.html","searchKeys":["short2float"]},{"name":"object Numeric","description":"scala.math.Numeric$","location":"api/scala/math/Numeric$.html","searchKeys":["Numeric"]},{"name":"type SomeIndexedSeqOps[A] = IndexedSeqOps[A, AnyConstr, ]","description":"scala.collection.IndexedSeqView$","location":"api/scala/collection/IndexedSeqView$.html","searchKeys":["SomeIndexedSeqOps"]},{"name":"object UnrolledBuffer extends StrictOptimizedClassTagSeqFactory[[T] =>> UnrolledBuffer[T]]","description":"scala.collection.mutable.UnrolledBuffer$","location":"api/scala/collection/mutable/UnrolledBuffer$.html","searchKeys":["UnrolledBuffer"]},{"name":"class FromJavaLongFunction[R](jf: LongFunction[R]) extends Long => R","description":"scala.jdk.FunctionWrappers$$FromJavaLongFunction","location":"api/scala/jdk/FunctionWrappers$$FromJavaLongFunction.html","searchKeys":["FromJavaLongFunction"]},{"name":"object string","description":"scala.compiletime.ops.string$","location":"api/scala/compiletime/ops/string$.html","searchKeys":["string"]},{"name":"def dequeue(): A","description":"scala.collection.mutable.Queue","location":"api/scala/collection/mutable/Queue.html","searchKeys":["dequeue"]},{"name":"def toLong(x: Long): Long","description":"scala.math.Numeric$$LongIsIntegral","location":"api/scala/math/Numeric$$LongIsIntegral.html","searchKeys":["toLong"]},{"name":"val BigDecimal: BigDecimal","description":"scala","location":"api/scala.html","searchKeys":["BigDecimal"]},{"name":"trait JFunction1$mcID$sp extends Any => Any with Serializable","description":"scala.runtime.java8.JFunction1$mcID$sp","location":"api/scala/runtime/java8/JFunction1$mcID$sp.html","searchKeys":["JFunction1$mcID$sp"]},{"name":"trait JFunction2$mcZJJ$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcZJJ$sp","location":"api/scala/runtime/java8/JFunction2$mcZJJ$sp.html","searchKeys":["JFunction2$mcZJJ$sp"]},{"name":"def toUTF8(cs: CharSequence): Array[Byte]","description":"scala.io.Codec$","location":"api/scala/io/Codec$.html","searchKeys":["toUTF8"]},{"name":"def readNameRef(): NameRef","description":"dotty.tools.tasty.TastyReader","location":"api/dotty/tools/tasty/TastyReader.html","searchKeys":["readNameRef"]},{"name":"class IterableNonGenericHasParStream[A, C <: IterableOnce[]](c: C)(ev: C <:< IterableOnce[A])","description":"scala.collection.convert.StreamExtensions$IterableNonGenericHasParStream","location":"api/scala/collection/convert/StreamExtensions$IterableNonGenericHasParStream.html","searchKeys":["IterableNonGenericHasParStream"]},{"name":"def foreach[U](f: B => U): Unit","description":"scala.util.Either","location":"api/scala/util/Either.html","searchKeys":["foreach"]},{"name":"def *(rhs: T): T","description":"scala.math.Numeric$NumericOps","location":"api/scala/math/Numeric$NumericOps.html","searchKeys":["*"]},{"name":"val x$6: Type[T6]","description":"scala.quoted.FromExpr$$Tuple17FromExpr","location":"api/scala/quoted/FromExpr$$Tuple17FromExpr.html","searchKeys":["x$6"]},{"name":"def trySplit(): IntStepper","description":"scala.collection.IntStepper","location":"api/scala/collection/IntStepper.html","searchKeys":["trySplit"]},{"name":"class ReferenceQueue[+T <: AnyRef]","description":"scala.ref.ReferenceQueue","location":"api/scala/ref/ReferenceQueue.html","searchKeys":["ReferenceQueue"]},{"name":"def incl(elem: A): Set[A]","description":"scala.collection.immutable.Set$$Set2","location":"api/scala/collection/immutable/Set$$Set2.html","searchKeys":["incl"]},{"name":"def -(key1: K, key2: K, keys: K*): C","description":"scala.collection.mutable.MapOps","location":"api/scala/collection/mutable/MapOps.html","searchKeys":["-"]},{"name":"def trySplit(): AnyStepper[A]","description":"scala.collection.AnyStepper","location":"api/scala/collection/AnyStepper.html","searchKeys":["trySplit"]},{"name":"def ==(x: Byte): Boolean","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["=="]},{"name":"def apply(expr: Term, from: Symbol): Return","description":"scala.quoted.Quotes$reflectModule$ReturnModule","location":"api/scala/quoted/Quotes$reflectModule$ReturnModule.html","searchKeys":["apply"]},{"name":"given AppliedTypeTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["AppliedTypeTypeTest"]},{"name":"def apply(x: Left[L, R])(using Quotes): Expr[Left[L, R]]","description":"scala.quoted.ToExpr$$LeftToExpr","location":"api/scala/quoted/ToExpr$$LeftToExpr.html","searchKeys":["apply"]},{"name":"def declaredTypes: List[Symbol]","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["declaredTypes"]},{"name":"object SortedIterableFactory","description":"scala.collection.SortedIterableFactory$","location":"api/scala/collection/SortedIterableFactory$.html","searchKeys":["SortedIterableFactory"]},{"name":"class AsJavaBiConsumer[T, U](sf: (T, U) => Unit) extends BiConsumer[T, U]","description":"scala.jdk.FunctionWrappers$$AsJavaBiConsumer","location":"api/scala/jdk/FunctionWrappers$$AsJavaBiConsumer.html","searchKeys":["AsJavaBiConsumer"]},{"name":"def addOne(a: Double): DoubleAccumulator","description":"scala.jdk.DoubleAccumulator","location":"api/scala/jdk/DoubleAccumulator.html","searchKeys":["addOne"]},{"name":"val x$26: FromExpr[T12]","description":"scala.quoted.FromExpr$$Tuple14FromExpr","location":"api/scala/quoted/FromExpr$$Tuple14FromExpr.html","searchKeys":["x$26"]},{"name":"def length: Int","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["length"]},{"name":"val wait4Notification: \"wait4Notification\"","description":"scala.runtime.LazyVals$$Names$","location":"api/scala/runtime/LazyVals$$Names$.html","searchKeys":["wait4Notification"]},{"name":"def +(x: String): String","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["+"]},{"name":"object Double extends AnyValCompanion","description":"scala.Double$","location":"api/scala/Double$.html","searchKeys":["Double"]},{"name":"def unapply(tree: Import): (Term, List[Selector])","description":"scala.quoted.Quotes$reflectModule$ImportModule","location":"api/scala/quoted/Quotes$reflectModule$ImportModule.html","searchKeys":["unapply"]},{"name":"def empty[T](evidence$16: ClassTag[T]): IArray[T]","description":"scala.IArray$package$$IArray$","location":"api/scala/IArray$package$$IArray$.html","searchKeys":["empty"]},{"name":"def asScalaFromDoubleConsumer(jf: DoubleConsumer): Double => BoxedUnit","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asScalaFromDoubleConsumer"]},{"name":"Universal Apply Methods","description":"","location":"docs/reference/other-new-features/creator-applications.html","searchKeys":["Universal Apply Methods"]},{"name":"given LambdaTypeMethods","description":"scala.quoted.Quotes$reflectModule$LambdaTypeMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["LambdaTypeMethods"]},{"name":"val StringView: StringView","description":"scala.collection.immutable","location":"api/scala/collection/immutable.html","searchKeys":["StringView"]},{"name":"def apply(x1: T): Boolean","description":"scala.jdk.FunctionWrappers$$FromJavaPredicate","location":"api/scala/jdk/FunctionWrappers$$FromJavaPredicate.html","searchKeys":["apply"]},{"name":"trait ClassOfConstantModule","description":"scala.quoted.Quotes$reflectModule$ClassOfConstantModule","location":"api/scala/quoted/Quotes$reflectModule$ClassOfConstantModule.html","searchKeys":["ClassOfConstantModule"]},{"name":"def filterNot(pred: A => Boolean): C","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["filterNot"]},{"name":"def newBuilder[A]: Builder[A, CC[A]]","description":"scala.collection.ClassTagIterableFactory$$AnyIterableDelegate","location":"api/scala/collection/ClassTagIterableFactory$$AnyIterableDelegate.html","searchKeys":["newBuilder"]},{"name":"def unapply(tree: LambdaTypeTree): (List[TypeDef], Tree)","description":"scala.quoted.Quotes$reflectModule$LambdaTypeTreeModule","location":"api/scala/quoted/Quotes$reflectModule$LambdaTypeTreeModule.html","searchKeys":["unapply"]},{"name":"val OBJECTCLASS: 23","description":"dotty.tools.tasty.TastyFormat$$NameTags","location":"api/dotty/tools/tasty/TastyFormat$$NameTags.html","searchKeys":["OBJECTCLASS"]},{"name":"def iterator: Iterator[Value]","description":"scala.Enumeration$ValueSet","location":"api/scala/Enumeration$ValueSet.html","searchKeys":["iterator"]},{"name":"val ValDef: ValDefModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ValDef"]},{"name":"def unary_+: Float","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["unary_+"]},{"name":"def apply(coll: Repr): IterableOps[A, [A] =>> Iterable[A], C]","description":"scala.collection.generic.IsIterable","location":"api/scala/collection/generic/IsIterable.html","searchKeys":["apply"]},{"name":"class Tuple20[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16, +T17, +T18, +T19, +T20](_1: T1, _2: T2, _3: T3, _4: T4, _5: T5, _6: T6, _7: T7, _8: T8, _9: T9, _10: T10, _11: T11, _12: T12, _13: T13, _14: T14, _15: T15, _16: T16, _17: T17, _18: T18, _19: T19, _20: T20) extends Product20[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20]","description":"scala.Tuple20","location":"api/scala/Tuple20.html","searchKeys":["Tuple20"]},{"name":"val x$20: FromExpr[T5]","description":"scala.quoted.FromExpr$$Tuple15FromExpr","location":"api/scala/quoted/FromExpr$$Tuple15FromExpr.html","searchKeys":["x$20"]},{"name":"def asJavaBinaryOperator[T](sf: (T, T) => T): BinaryOperator[T]","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asJavaBinaryOperator"]},{"name":"def rangeImpl(from: Option[A], until: Option[A]): TreeSet[A]","description":"scala.collection.mutable.TreeSet","location":"api/scala/collection/mutable/TreeSet.html","searchKeys":["rangeImpl"]},{"name":"def include[S >: T](ordinal: Int, value: S): Ordering[S]","description":"scala.collection.immutable.TreeSeqMap$$Ordering","location":"api/scala/collection/immutable/TreeSeqMap$$Ordering.html","searchKeys":["include"]},{"name":"object IsIterable extends IsIterableLowPriority","description":"scala.collection.generic.IsIterable$","location":"api/scala/collection/generic/IsIterable$.html","searchKeys":["IsIterable"]},{"name":"def apply(array: Array[Short])(using Quotes): Expr[Array[Short]]","description":"scala.quoted.ToExpr$$ArrayOfShortToExpr$","location":"api/scala/quoted/ToExpr$$ArrayOfShortToExpr$.html","searchKeys":["apply"]},{"name":"val OPEN: 40","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["OPEN"]},{"name":"def throwableSubtypeToCatcher[Ex <: Throwable, T](pf: PartialFunction[Ex, T])(evidence$2: ClassTag[Ex]): Catcher[T]","description":"scala.util.control.Exception$","location":"api/scala/util/control/Exception$.html","searchKeys":["throwableSubtypeToCatcher"]},{"name":"class FromJavaLongBinaryOperator(jf: LongBinaryOperator) extends (Long, Long) => Long","description":"scala.jdk.FunctionWrappers$$FromJavaLongBinaryOperator","location":"api/scala/jdk/FunctionWrappers$$FromJavaLongBinaryOperator.html","searchKeys":["FromJavaLongBinaryOperator"]},{"name":"def byteValue: Byte","description":"scala.math.ScalaNumericAnyConversions","location":"api/scala/math/ScalaNumericAnyConversions.html","searchKeys":["byteValue"]},{"name":"def ==(x: Double): Boolean","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["=="]},{"name":"var descr: String","description":"scala.io.Source","location":"api/scala/io/Source.html","searchKeys":["descr"]},{"name":"def readOnlySnapshot(): Map[K, V]","description":"scala.collection.concurrent.TrieMap","location":"api/scala/collection/concurrent/TrieMap.html","searchKeys":["readOnlySnapshot"]},{"name":"object TupleXXL","description":"scala.runtime.TupleXXL$","location":"api/scala/runtime/TupleXXL$.html","searchKeys":["TupleXXL"]},{"name":"def sign: BigInt","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["sign"]},{"name":"class AbstractFunction3[-T1, -T2, -T3, +R] extends (T1, T2, T3) => R","description":"scala.runtime.AbstractFunction3","location":"api/scala/runtime/AbstractFunction3.html","searchKeys":["AbstractFunction3"]},{"name":"def map[B](f: Char => B): IndexedSeq[B]","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["map"]},{"name":"val jLongOptionShape: OptionShape[Long, OptionalLong]","description":"scala.jdk.OptionShape$","location":"api/scala/jdk/OptionShape$.html","searchKeys":["jLongOptionShape"]},{"name":"class Reverse[A](underlying: SomeIndexedSeqOps[A]) extends Reverse[A] with IndexedSeqView[A]","description":"scala.collection.IndexedSeqView$$Reverse","location":"api/scala/collection/IndexedSeqView$$Reverse.html","searchKeys":["Reverse"]},{"name":"val x$34: FromExpr[T12]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["x$34"]},{"name":"val x$7: Type[T7]","description":"scala.quoted.FromExpr$$Tuple10FromExpr","location":"api/scala/quoted/FromExpr$$Tuple10FromExpr.html","searchKeys":["x$7"]},{"name":"def args: List[Tree]","description":"scala.quoted.Quotes$reflectModule$AppliedMethods","location":"api/scala/quoted/Quotes$reflectModule$AppliedMethods.html","searchKeys":["args"]},{"name":"def asJava: Map[K, V]","description":"scala.collection.convert.AsJavaExtensions$MapHasAsJava","location":"api/scala/collection/convert/AsJavaExtensions$MapHasAsJava.html","searchKeys":["asJava"]},{"name":"def updated[V1 >: V](key: K, value: V1): Map[K, V1]","description":"scala.collection.immutable.Map$$Map4","location":"api/scala/collection/immutable/Map$$Map4.html","searchKeys":["updated"]},{"name":"given given_FromString_Byte: FromString[Byte]","description":"scala.util.CommandLineParser$$FromString$$given_FromString_Byte$","location":"api/scala/util/CommandLineParser$$FromString$.html","searchKeys":["given_FromString_Byte"]},{"name":"val x$16: Type[T16]","description":"scala.quoted.FromExpr$$Tuple19FromExpr","location":"api/scala/quoted/FromExpr$$Tuple19FromExpr.html","searchKeys":["x$16"]},{"name":"def toInt(x: BigInt): Int","description":"scala.math.Numeric$$BigIntIsIntegral","location":"api/scala/math/Numeric$$BigIntIsIntegral.html","searchKeys":["toInt"]},{"name":"trait BigDecimalIsConflicted extends Numeric[BigDecimal]","description":"scala.math.Numeric$$BigDecimalIsConflicted","location":"api/scala/math/Numeric$$BigDecimalIsConflicted.html","searchKeys":["BigDecimalIsConflicted"]},{"name":"def apply(tup: H *: T)(using Quotes): Expr[H *: T]","description":"scala.quoted.ToExpr$$TupleConsToExpr","location":"api/scala/quoted/ToExpr$$TupleConsToExpr.html","searchKeys":["apply"]},{"name":"def %(x: Int): Double","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["%"]},{"name":"def sortBy[B](f: Char => B)(ord: Ordering[B]): String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["sortBy"]},{"name":"def StringClass: Symbol","description":"scala.quoted.Quotes$reflectModule$defnModule","location":"api/scala/quoted/Quotes$reflectModule$defnModule.html","searchKeys":["StringClass"]},{"name":"val CYAN: \"\\033[36m\"","description":"scala.io.AnsiColor","location":"api/scala/io/AnsiColor.html","searchKeys":["CYAN"]},{"name":"def <(x: Int): Boolean","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["<"]},{"name":"class AbstractFunction15[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, -T14, -T15, +R] extends (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) => R","description":"scala.runtime.AbstractFunction15","location":"api/scala/runtime/AbstractFunction15.html","searchKeys":["AbstractFunction15"]},{"name":"def lteq(x: T, y: T): Boolean","description":"scala.math.PartialOrdering","location":"api/scala/math/PartialOrdering.html","searchKeys":["lteq"]},{"name":"def &(x: Char): Int","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["&"]},{"name":"val x$3: Type[T3]","description":"scala.quoted.FromExpr$$Tuple7FromExpr","location":"api/scala/quoted/FromExpr$$Tuple7FromExpr.html","searchKeys":["x$3"]},{"name":"def flatMap[B](f: A => TailRec[B]): TailRec[B]","description":"scala.util.control.TailCalls$$TailRec","location":"api/scala/util/control/TailCalls$$TailRec.html","searchKeys":["flatMap"]},{"name":"def unsorted: Map[K, V]","description":"scala.collection.mutable.SortedMapOps","location":"api/scala/collection/mutable/SortedMapOps.html","searchKeys":["unsorted"]},{"name":"def summon[T](using inline x: T): x","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["summon"]},{"name":"def binary(d: Double, mc: MathContext): BigDecimal","description":"scala.math.BigDecimal$","location":"api/scala/math/BigDecimal$.html","searchKeys":["binary"]},{"name":"def micros[C](c: C)(ev: Classifier[C]): R","description":"scala.concurrent.duration.DurationConversions","location":"api/scala/concurrent/duration/DurationConversions.html","searchKeys":["micros"]},{"name":"def empty[A]: ArrayBuffer[A]","description":"scala.collection.mutable.ArrayBuffer$","location":"api/scala/collection/mutable/ArrayBuffer$.html","searchKeys":["empty"]},{"name":"val IMPORTED: 75","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["IMPORTED"]},{"name":"def fromString(s: String): Short","description":"scala.util.CommandLineParser$$FromString$$given_FromString_Short$","location":"api/scala/util/CommandLineParser$$FromString$$given_FromString_Short$.html","searchKeys":["fromString"]},{"name":"def plus(x: Double, y: Double): Double","description":"scala.math.Numeric$$DoubleIsFractional","location":"api/scala/math/Numeric$$DoubleIsFractional.html","searchKeys":["plus"]},{"name":"def max(that: BigDecimal): BigDecimal","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["max"]},{"name":"def apply(x1: Double): Boolean","description":"scala.jdk.FunctionWrappers$$FromJavaDoublePredicate","location":"api/scala/jdk/FunctionWrappers$$FromJavaDoublePredicate.html","searchKeys":["apply"]},{"name":"object BitSetOps","description":"scala.collection.BitSetOps$","location":"api/scala/collection/BitSetOps$.html","searchKeys":["BitSetOps"]},{"name":"val x$3: Type[T3]","description":"scala.quoted.FromExpr$$Tuple10FromExpr","location":"api/scala/quoted/FromExpr$$Tuple10FromExpr.html","searchKeys":["x$3"]},{"name":"def negate(x: Char): Char","description":"scala.math.Numeric$$CharIsIntegral","location":"api/scala/math/Numeric$$CharIsIntegral.html","searchKeys":["negate"]},{"name":"class transient extends StaticAnnotation","description":"scala.transient","location":"api/scala/transient.html","searchKeys":["transient"]},{"name":"def asJavaSeqStream[S <: BaseStream[, ], St <: Stepper[]](s: StreamShape[A, S, St], st: StepperShape[A, St]): S","description":"scala.collection.convert.StreamExtensions$IterableHasSeqStream","location":"api/scala/collection/convert/StreamExtensions$IterableHasSeqStream.html","searchKeys":["asJavaSeqStream"]},{"name":"def groupMap[K, B](key: A => K)(f: A => B)(evidence$26: ClassTag[B]): Map[K, Array[B]]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["groupMap"]},{"name":"class HashSet[A] extends AbstractSet[A] with StrictOptimizedSetOps[A, [A] =>> HashSet[A], HashSet[A]] with IterableFactoryDefaults[A, [A] =>> HashSet[A]] with DefaultSerializable","description":"scala.collection.immutable.HashSet","location":"api/scala/collection/immutable/HashSet.html","searchKeys":["HashSet"]},{"name":"def _toString(x: Product): String","description":"scala.runtime.ScalaRunTime$","location":"api/scala/runtime/ScalaRunTime$.html","searchKeys":["_toString"]},{"name":"Dropped: Class Shadowing - More Details","description":"","location":"docs/reference/dropped-features/class-shadowing-spec.html","searchKeys":["Dropped: Class Shadowing - More Details"]},{"name":"def locally[T](@deprecatedName(\"x\") x: T): T","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["locally"]},{"name":"val Symbol: SymbolModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Symbol"]},{"name":"val COVARIANT: 28","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["COVARIANT"]},{"name":"def apply[A](underlying: Iterable[A], p: A => Boolean, isFlipped: Boolean): Filter[A]","description":"scala.collection.View$$Filter$","location":"api/scala/collection/View$$Filter$.html","searchKeys":["apply"]},{"name":"def remove(idx: Int, count: Int): Unit","description":"scala.collection.mutable.Buffer","location":"api/scala/collection/mutable/Buffer.html","searchKeys":["remove"]},{"name":"def <(x: Long): Boolean","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["<"]},{"name":"def curried: T1 => T2 => T3 => T4 => T5 => T6 => T7 => T8 => T9 => R","description":"scala.Function9","location":"api/scala/Function9.html","searchKeys":["curried"]},{"name":"object ListSet extends IterableFactory[[A] =>> ListSet[A]]","description":"scala.collection.immutable.ListSet$","location":"api/scala/collection/immutable/ListSet$.html","searchKeys":["ListSet"]},{"name":"object Util","description":"dotty.tools.tasty.util.Util$","location":"api/dotty/tools/tasty/util/Util$.html","searchKeys":["Util"]},{"name":"def +(rhs: T): T","description":"scala.math.Numeric$NumericOps","location":"api/scala/math/Numeric$NumericOps.html","searchKeys":["+"]},{"name":"class AsJavaToLongFunction[T](sf: T => Long) extends ToLongFunction[T]","description":"scala.jdk.FunctionWrappers$$AsJavaToLongFunction","location":"api/scala/jdk/FunctionWrappers$$AsJavaToLongFunction.html","searchKeys":["AsJavaToLongFunction"]},{"name":"class RichInt(val self: Int) extends AnyVal with ScalaNumberProxy[Int] with RangedProxy[Int]","description":"scala.runtime.RichInt","location":"api/scala/runtime/RichInt.html","searchKeys":["RichInt"]},{"name":"def -(x: Short): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["-"]},{"name":"def withFilter(q: A => Boolean): WithFilter[A, CC]","description":"scala.collection.WithFilter","location":"api/scala/collection/WithFilter.html","searchKeys":["withFilter"]},{"name":"def _2: T2","description":"scala.Product20","location":"api/scala/Product20.html","searchKeys":["_2"]},{"name":"def intersect(that: Set[A]): C","description":"scala.collection.SetOps","location":"api/scala/collection/SetOps.html","searchKeys":["intersect"]},{"name":"def fromDigits(digits: String): T","description":"scala.util.FromDigits","location":"api/scala/util/FromDigits.html","searchKeys":["fromDigits"]},{"name":"def times(x: Int, y: Int): Int","description":"scala.math.Numeric$$IntIsIntegral","location":"api/scala/math/Numeric$$IntIsIntegral.html","searchKeys":["times"]},{"name":"def <=(x: Float): Boolean","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["<="]},{"name":"val CaseDef: CaseDefModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["CaseDef"]},{"name":"def asScala: Map[K, V]","description":"scala.collection.convert.AsScalaExtensions$MapHasAsScala","location":"api/scala/collection/convert/AsScalaExtensions$MapHasAsScala.html","searchKeys":["asScala"]},{"name":"class ImmutableKeySet extends AbstractSet[K] with GenKeySet with DefaultSerializable","description":"scala.collection.immutable.MapOps$ImmutableKeySet","location":"api/scala/collection/immutable/MapOps$ImmutableKeySet.html","searchKeys":["ImmutableKeySet"]},{"name":"class LongMapBuilder[V] extends ReusableBuilder[(Long, V), LongMap[V]]","description":"scala.collection.mutable.LongMap$$LongMapBuilder","location":"api/scala/collection/mutable/LongMap$$LongMapBuilder.html","searchKeys":["LongMapBuilder"]},{"name":"def to(end: T): ResultWithoutStep","description":"scala.runtime.RangedProxy","location":"api/scala/runtime/RangedProxy.html","searchKeys":["to"]},{"name":"object CollectionConverters extends AsJavaExtensions with AsScalaExtensions","description":"scala.jdk.CollectionConverters$","location":"api/scala/jdk/CollectionConverters$.html","searchKeys":["CollectionConverters"]},{"name":"val DEFAULTGETTER: 11","description":"dotty.tools.tasty.TastyFormat$$NameTags","location":"api/dotty/tools/tasty/TastyFormat$$NameTags.html","searchKeys":["DEFAULTGETTER"]},{"name":"def to(end: T, step: T): Inclusive[T]","description":"scala.runtime.IntegralProxy","location":"api/scala/runtime/IntegralProxy.html","searchKeys":["to"]},{"name":"def this(initSize: Int)","description":"scala.collection.mutable.BitSet","location":"api/scala/collection/mutable/BitSet.html","searchKeys":["this"]},{"name":"def toFloat: Float","description":"scala.math.ScalaNumericAnyConversions","location":"api/scala/math/ScalaNumericAnyConversions.html","searchKeys":["toFloat"]},{"name":"class RichFunction2AsLongBinaryOperator(underlying: (Long, Long) => Long) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichFunction2AsLongBinaryOperator","location":"api/scala/jdk/FunctionWrappers$$RichFunction2AsLongBinaryOperator.html","searchKeys":["RichFunction2AsLongBinaryOperator"]},{"name":"def lengthCompare(len: Int): Int","description":"scala.Array$$UnapplySeqWrapper","location":"api/scala/Array$$UnapplySeqWrapper.html","searchKeys":["lengthCompare"]},{"name":"def throwReturn(result: T): Nothing","description":"scala.util.control.NonLocalReturns$$ReturnThrowable","location":"api/scala/util/control/NonLocalReturns$$ReturnThrowable.html","searchKeys":["throwReturn"]},{"name":"def deserializeLambda(lookup: Lookup, cache: Map[String, MethodHandle], targetMethodMap: Map[String, MethodHandle], serialized: SerializedLambda): AnyRef","description":"scala.runtime.LambdaDeserializer$","location":"api/scala/runtime/LambdaDeserializer$.html","searchKeys":["deserializeLambda"]},{"name":"def exists(p: (El1, El2, El3, El4) => Boolean): Boolean","description":"scala.collection.LazyZip4","location":"api/scala/collection/LazyZip4.html","searchKeys":["exists"]},{"name":"def lazyZip[B](that: Iterable[B]): LazyZip2[Char, B, String]","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["lazyZip"]},{"name":"def lastIndexWhere(p: A => Boolean): Int","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["lastIndexWhere"]},{"name":"def insertAll(idx: Int, elems: IterableOnce[A]): Unit","description":"scala.collection.mutable.ListBuffer","location":"api/scala/collection/mutable/ListBuffer.html","searchKeys":["insertAll"]},{"name":"def indexWhere(p: Char => Boolean, from: Int): Int","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["indexWhere"]},{"name":"class NumericOps(lhs: T)","description":"scala.math.Numeric$NumericOps","location":"api/scala/math/Numeric$NumericOps.html","searchKeys":["NumericOps"]},{"name":"def constValueOpt[T]: Option[T]","description":"scala.compiletime","location":"api/scala/compiletime.html","searchKeys":["constValueOpt"]},{"name":"def isWhole: Boolean","description":"scala.runtime.ScalaWholeNumberProxy","location":"api/scala/runtime/ScalaWholeNumberProxy.html","searchKeys":["isWhole"]},{"name":"def apply$mcDDD$sp(v1: Double, v2: Double): Double","description":"scala.runtime.java8.JFunction2$mcDDD$sp","location":"api/scala/runtime/java8/JFunction2$mcDDD$sp.html","searchKeys":["apply$mcDDD$sp"]},{"name":"def flatMap[K2, V2](f: (K, V) => IterableOnce[(K2, V2)])(@implicitNotFound ordering: Ordering[K2]): CC[K2, V2]","description":"scala.collection.SortedMapOps","location":"api/scala/collection/SortedMapOps.html","searchKeys":["flatMap"]},{"name":"val TERMREF: 115","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["TERMREF"]},{"name":"def apply(symbol: Symbol, rhsFn: List[List[Tree]] => Option[Term]): DefDef","description":"scala.quoted.Quotes$reflectModule$DefDefModule","location":"api/scala/quoted/Quotes$reflectModule$DefDefModule.html","searchKeys":["apply"]},{"name":"def lengthCompare(that: Iterable[]): Int","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["lengthCompare"]},{"name":"def enrichAsJavaDoubleSupplier(sf: () => Double): RichFunction0AsDoubleSupplier","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsJavaDoubleSupplier"]},{"name":"def unboxedIntAdder: ObjIntConsumer[AnyAccumulator[Int]]","description":"scala.jdk.AnyAccumulator$","location":"api/scala/jdk/AnyAccumulator$.html","searchKeys":["unboxedIntAdder"]},{"name":"def apply(index: Int): T","description":"scala.collection.mutable.ArraySeq$$ofRef","location":"api/scala/collection/mutable/ArraySeq$$ofRef.html","searchKeys":["apply"]},{"name":"class native extends StaticAnnotation","description":"scala.native","location":"api/scala/native.html","searchKeys":["native"]},{"name":"class FromJavaIntConsumer(jf: IntConsumer) extends Int => Unit","description":"scala.jdk.FunctionWrappers$$FromJavaIntConsumer","location":"api/scala/jdk/FunctionWrappers$$FromJavaIntConsumer.html","searchKeys":["FromJavaIntConsumer"]},{"name":"val x$24: FromExpr[T7]","description":"scala.quoted.FromExpr$$Tuple17FromExpr","location":"api/scala/quoted/FromExpr$$Tuple17FromExpr.html","searchKeys":["x$24"]},{"name":"class RichFunction2AsBiPredicate[T, U](underlying: (T, U) => Boolean) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichFunction2AsBiPredicate","location":"api/scala/jdk/FunctionWrappers$$RichFunction2AsBiPredicate.html","searchKeys":["RichFunction2AsBiPredicate"]},{"name":"def reverseInPlace(): StringBuilder","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["reverseInPlace"]},{"name":"def qualifier: Term","description":"scala.quoted.Quotes$reflectModule$SelectMethods","location":"api/scala/quoted/Quotes$reflectModule$SelectMethods.html","searchKeys":["qualifier"]},{"name":"class AsJavaDictionary[K, V](m: Map[K, V])","description":"scala.collection.JavaConverters$$AsJavaDictionary","location":"api/scala/collection/JavaConverters$$AsJavaDictionary.html","searchKeys":["AsJavaDictionary"]},{"name":"val x$13: Type[T13]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["x$13"]},{"name":"type Growable[-A] = Growable[A]","description":"scala.collection.generic","location":"api/scala/collection/generic.html","searchKeys":["Growable"]},{"name":"def apply(x: Char): CharConstant","description":"scala.quoted.Quotes$reflectModule$CharConstantModule","location":"api/scala/quoted/Quotes$reflectModule$CharConstantModule.html","searchKeys":["apply"]},{"name":"def toFactory[A](dummy: Array)(evidence$1: ClassTag[A]): Factory[A, Array[A]]","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["toFactory"]},{"name":"def indexWhere(@deprecatedName(\"f\", \"2.13.3\") p: A => Boolean, from: Int): Int","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["indexWhere"]},{"name":"def apply(file: File): FileBuilder","description":"scala.sys.process.ProcessCreation","location":"api/scala/sys/process/ProcessCreation.html","searchKeys":["apply"]},{"name":"def resources[R1, R2, A](resource1: R1, resource2: => R2)(body: (R1, R2) => A)(evidence$2: Releasable[R1], evidence$3: Releasable[R2]): A","description":"scala.util.Using$","location":"api/scala/util/Using$.html","searchKeys":["resources"]},{"name":"trait JFunction2$mcFJJ$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcFJJ$sp","location":"api/scala/runtime/java8/JFunction2$mcFJJ$sp.html","searchKeys":["JFunction2$mcFJJ$sp"]},{"name":"def regex: String","description":"scala.util.matching.Regex","location":"api/scala/util/matching/Regex.html","searchKeys":["regex"]},{"name":"def arrayType[T](arg: Manifest[]): Manifest[Array[T]]","description":"scala.reflect.Manifest$","location":"api/scala/reflect/Manifest$.html","searchKeys":["arrayType"]},{"name":"trait defnModule","description":"scala.quoted.Quotes$reflectModule$defnModule","location":"api/scala/quoted/Quotes$reflectModule$defnModule.html","searchKeys":["defnModule"]},{"name":"def round: Long","description":"scala.runtime.RichDouble","location":"api/scala/runtime/RichDouble.html","searchKeys":["round"]},{"name":"def getAsLong(): Long","description":"scala.jdk.FunctionWrappers$$AsJavaLongSupplier","location":"api/scala/jdk/FunctionWrappers$$AsJavaLongSupplier.html","searchKeys":["getAsLong"]},{"name":"def get(key: Key): Option[Value]","description":"scala.collection.mutable.OpenHashMap","location":"api/scala/collection/mutable/OpenHashMap.html","searchKeys":["get"]},{"name":"val x$18: Type[T18]","description":"scala.quoted.FromExpr$$Tuple20FromExpr","location":"api/scala/quoted/FromExpr$$Tuple20FromExpr.html","searchKeys":["x$18"]},{"name":"def <(x: Byte): Boolean","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["<"]},{"name":"def asJava: LongPredicate","description":"scala.jdk.FunctionWrappers$$RichFunction1AsLongPredicate","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsLongPredicate.html","searchKeys":["asJava"]},{"name":"def subtractOne(key: K): LinkedHashMap[K, V]","description":"scala.collection.mutable.LinkedHashMap","location":"api/scala/collection/mutable/LinkedHashMap.html","searchKeys":["subtractOne"]},{"name":"def sign: T","description":"scala.math.Numeric$NumericOps","location":"api/scala/math/Numeric$NumericOps.html","searchKeys":["sign"]},{"name":"def _4: T4","description":"scala.Product14","location":"api/scala/Product14.html","searchKeys":["_4"]},{"name":"def iterator: Iterator[(Long, V)]","description":"scala.collection.mutable.LongMap","location":"api/scala/collection/mutable/LongMap.html","searchKeys":["iterator"]},{"name":"def apply(tup: (T1, T2, T3, T4, T5, T6, T7, T8, T9))(using Quotes): Expr[(T1, T2, T3, T4, T5, T6, T7, T8, T9)]","description":"scala.quoted.ToExpr$$Tuple9ToExpr","location":"api/scala/quoted/ToExpr$$Tuple9ToExpr.html","searchKeys":["apply"]},{"name":"def filter[To1, To2, To3](f: (El1, El2, El3) => Boolean)(bf1: BuildFrom[It1, El1, To1], bf2: BuildFrom[It2, El2, To2], bf3: BuildFrom[It3, El3, To3]): (To1, To2, To3)","description":"scala.runtime.Tuple3Zipped","location":"api/scala/runtime/Tuple3Zipped.html","searchKeys":["filter"]},{"name":"def copy(original: Tree)(fun: Term, args: List[TypeTree]): TypeApply","description":"scala.quoted.Quotes$reflectModule$TypeApplyModule","location":"api/scala/quoted/Quotes$reflectModule$TypeApplyModule.html","searchKeys":["copy"]},{"name":"def initialized: Boolean","description":"scala.runtime.LazyChar","location":"api/scala/runtime/LazyChar.html","searchKeys":["initialized"]},{"name":"val anyStepperShapePrototype: StepperShape[AnyRef, Stepper[AnyRef]]","description":"scala.collection.StepperShapeLowPriority2","location":"api/scala/collection/StepperShapeLowPriority2.html","searchKeys":["anyStepperShapePrototype"]},{"name":"def addr(idx: Int): Addr","description":"dotty.tools.tasty.TastyReader","location":"api/dotty/tools/tasty/TastyReader.html","searchKeys":["addr"]},{"name":"def stepper[S <: Stepper[]](shape: StepperShape[A, S]): S & EfficientSplit","description":"scala.collection.immutable.ArraySeq","location":"api/scala/collection/immutable/ArraySeq.html","searchKeys":["stepper"]},{"name":"class FromJavaLongToIntFunction(jf: LongToIntFunction) extends Long => Int","description":"scala.jdk.FunctionWrappers$$FromJavaLongToIntFunction","location":"api/scala/jdk/FunctionWrappers$$FromJavaLongToIntFunction.html","searchKeys":["FromJavaLongToIntFunction"]},{"name":"def toChar: Char","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["toChar"]},{"name":"def apply(index: Int): Short","description":"scala.collection.mutable.ArraySeq$$ofShort","location":"api/scala/collection/mutable/ArraySeq$$ofShort.html","searchKeys":["apply"]},{"name":"def update(index: Int, elem: Byte): Unit","description":"scala.collection.mutable.ArraySeq$$ofByte","location":"api/scala/collection/mutable/ArraySeq$$ofByte.html","searchKeys":["update"]},{"name":"val FLOOR: Value","description":"scala.math.BigDecimal$$RoundingMode$","location":"api/scala/math/BigDecimal$$RoundingMode$.html","searchKeys":["FLOOR"]},{"name":"val AppliedType: AppliedTypeModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["AppliedType"]},{"name":"def addOne(kv: (String, String)): SystemProperties","description":"scala.sys.SystemProperties","location":"api/scala/sys/SystemProperties.html","searchKeys":["addOne"]},{"name":"def removeHeadWhile(f: A => Boolean): Seq[A]","description":"scala.collection.mutable.ArrayDeque","location":"api/scala/collection/mutable/ArrayDeque.html","searchKeys":["removeHeadWhile"]},{"name":"val INTERNAL: 7","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["INTERNAL"]},{"name":"trait DelayedInit","description":"scala.DelayedInit","location":"api/scala/DelayedInit.html","searchKeys":["DelayedInit"]},{"name":"def update(index: Int, elem: Float): Unit","description":"scala.collection.mutable.ArraySeq$$ofFloat","location":"api/scala/collection/mutable/ArraySeq$$ofFloat.html","searchKeys":["update"]},{"name":"def apply[T <: AnyRef](value: T): SoftReference[T]","description":"scala.ref.SoftReference$","location":"api/scala/ref/SoftReference$.html","searchKeys":["apply"]},{"name":"type Split[T <: Tuple, N <: Int] = (Take[T, N], Drop[T, N])","description":"scala.Tuple$","location":"api/scala/Tuple$.html","searchKeys":["Split"]},{"name":"val x$32: FromExpr[T13]","description":"scala.quoted.FromExpr$$Tuple19FromExpr","location":"api/scala/quoted/FromExpr$$Tuple19FromExpr.html","searchKeys":["x$32"]},{"name":"given MapFromExpr[T, U](using val x$1: Type[T], val x$2: Type[U], val x$3: FromExpr[T], val x$4: FromExpr[U]): FromExpr[Map[T, U]]","description":"scala.quoted.FromExpr$$MapFromExpr","location":"api/scala/quoted/FromExpr$$MapFromExpr.html","searchKeys":["MapFromExpr"]},{"name":"val IF: 141","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["IF"]},{"name":"def <=(x: Float): Boolean","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["<="]},{"name":"object LongStepper","description":"scala.collection.LongStepper$","location":"api/scala/collection/LongStepper$.html","searchKeys":["LongStepper"]},{"name":"def currentAddr: Addr","description":"dotty.tools.tasty.TastyReader","location":"api/dotty/tools/tasty/TastyReader.html","searchKeys":["currentAddr"]},{"name":"val jIntegerStreamShape: StreamShape[Integer, IntStream, IntStepper]","description":"scala.collection.convert.StreamExtensions$$StreamShape$","location":"api/scala/collection/convert/StreamExtensions$$StreamShape$.html","searchKeys":["jIntegerStreamShape"]},{"name":"def toLong(x: Byte): Long","description":"scala.math.Numeric$$ByteIsIntegral","location":"api/scala/math/Numeric$$ByteIsIntegral.html","searchKeys":["toLong"]},{"name":"def isDone: Boolean","description":"scala.concurrent.DelayedLazyVal","location":"api/scala/concurrent/DelayedLazyVal.html","searchKeys":["isDone"]},{"name":"trait Promise[T]","description":"scala.concurrent.Promise","location":"api/scala/concurrent/Promise.html","searchKeys":["Promise"]},{"name":"def +(x: Long): Long","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["+"]},{"name":"def params: List[ValDef] | List[TypeDef]","description":"scala.quoted.Quotes$reflectModule$ParamClauseMethods","location":"api/scala/quoted/Quotes$reflectModule$ParamClauseMethods.html","searchKeys":["params"]},{"name":"def writeLongInt(x: Long): Unit","description":"dotty.tools.tasty.TastyBuffer","location":"api/dotty/tools/tasty/TastyBuffer.html","searchKeys":["writeLongInt"]},{"name":"def ==(x: Byte): Boolean","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["=="]},{"name":"def &~(that: Set[A]): C","description":"scala.collection.SetOps","location":"api/scala/collection/SetOps.html","searchKeys":["&~"]},{"name":"def isWhole: Boolean","description":"scala.runtime.RichInt","location":"api/scala/runtime/RichInt.html","searchKeys":["isWhole"]},{"name":"def +[V1 >: V](elem1: (K, V1), elem2: (K, V1), elems: (K, V1)*): CC[K, V1]","description":"scala.collection.MapOps","location":"api/scala/collection/MapOps.html","searchKeys":["+"]},{"name":"def toEither: Catch[Either[Throwable, T]]","description":"scala.util.control.Exception$$Catch","location":"api/scala/util/control/Exception$$Catch.html","searchKeys":["toEither"]},{"name":"def Private: Flags","description":"scala.quoted.Quotes$reflectModule$FlagsModule","location":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html","searchKeys":["Private"]},{"name":"def segmentLength(p: A => Boolean): Int","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["segmentLength"]},{"name":"def length: Int","description":"scala.collection.StringView","location":"api/scala/collection/StringView.html","searchKeys":["length"]},{"name":"def log10(x: Double): Double","description":"scala.math","location":"api/scala/math.html","searchKeys":["log10"]},{"name":"def size[This >: Tuple <: Tuple]: Size[This]","description":"scala.Tuple","location":"api/scala/Tuple.html","searchKeys":["size"]},{"name":"def >=(x: Char): Boolean","description":"scala.Char","location":"api/scala/Char.html","searchKeys":[">="]},{"name":"def apply(v1: T1, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, v7: T7): R","description":"scala.Function7","location":"api/scala/Function7.html","searchKeys":["apply"]},{"name":"given InlinedMethods","description":"scala.quoted.Quotes$reflectModule$InlinedMethods","location":"api/scala/quoted/Quotes$reflectModule$InlinedMethods.html","searchKeys":["InlinedMethods"]},{"name":"def id: Option[String]","description":"scala.quoted.Quotes$reflectModule$SuperMethods","location":"api/scala/quoted/Quotes$reflectModule$SuperMethods.html","searchKeys":["id"]},{"name":"def apply(qualifier: Term, name: String): TypeSelect","description":"scala.quoted.Quotes$reflectModule$TypeSelectModule","location":"api/scala/quoted/Quotes$reflectModule$TypeSelectModule.html","searchKeys":["apply"]},{"name":"object Byte extends AnyValCompanion","description":"scala.Byte$","location":"api/scala/Byte$.html","searchKeys":["Byte"]},{"name":"def asJavaIterable[A](i: Iterable[A]): Iterable[A]","description":"scala.collection.JavaConverters$","location":"api/scala/collection/JavaConverters$.html","searchKeys":["asJavaIterable"]},{"name":"trait BitSetOps[+C <: BitSet & BitSetOps[C]] extends SortedSetOps[Int, [A] =>> SortedSet[A], C]","description":"scala.collection.BitSetOps","location":"api/scala/collection/BitSetOps.html","searchKeys":["BitSetOps"]},{"name":"def asJavaEnumerationConverter[A](i: Iterator[A]): AsJavaEnumeration[A]","description":"scala.collection.JavaConverters$","location":"api/scala/collection/JavaConverters$.html","searchKeys":["asJavaEnumerationConverter"]},{"name":"class FromJavaIntBinaryOperator(jf: IntBinaryOperator) extends (Int, Int) => Int","description":"scala.jdk.FunctionWrappers$$FromJavaIntBinaryOperator","location":"api/scala/jdk/FunctionWrappers$$FromJavaIntBinaryOperator.html","searchKeys":["FromJavaIntBinaryOperator"]},{"name":"def flatMapInPlace(f: A => IterableOnce[A]): IndexedBuffer[A]","description":"scala.collection.mutable.IndexedBuffer","location":"api/scala/collection/mutable/IndexedBuffer.html","searchKeys":["flatMapInPlace"]},{"name":"def flatMap(f: Long => IterableOnce[Long]): LongAccumulator","description":"scala.jdk.LongAccumulator","location":"api/scala/jdk/LongAccumulator.html","searchKeys":["flatMap"]},{"name":"class Either[+A, +B] extends Product with Serializable","description":"scala.util.Either","location":"api/scala/util/Either.html","searchKeys":["Either"]},{"name":"def excl(elem: A): Set[A]","description":"scala.collection.immutable.Set$$Set2","location":"api/scala/collection/immutable/Set$$Set2.html","searchKeys":["excl"]},{"name":"def convert(d: FiniteDuration): Deadline","description":"scala.concurrent.duration.DurationConversions$$fromNowConvert$","location":"api/scala/concurrent/duration/DurationConversions$$fromNowConvert$.html","searchKeys":["convert"]},{"name":"val TRANSPARENT: 42","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["TRANSPARENT"]},{"name":"def copy(original: Tree)(patterns: List[Tree]): Alternatives","description":"scala.quoted.Quotes$reflectModule$AlternativesModule","location":"api/scala/quoted/Quotes$reflectModule$AlternativesModule.html","searchKeys":["copy"]},{"name":"def defaultInitialCapacity: Int","description":"scala.collection.mutable.HashSet$","location":"api/scala/collection/mutable/HashSet$.html","searchKeys":["defaultInitialCapacity"]},{"name":"trait Set[A] extends Iterable[A] with Set[A] with SetOps[A, [A] =>> Set[A], Set[A]] with IterableFactoryDefaults[A, [A] =>> Set[A]]","description":"scala.collection.immutable.Set","location":"api/scala/collection/immutable/Set.html","searchKeys":["Set"]},{"name":"class AsJavaToLongBiFunction[T, U](sf: (T, U) => Long) extends ToLongBiFunction[T, U]","description":"scala.jdk.FunctionWrappers$$AsJavaToLongBiFunction","location":"api/scala/jdk/FunctionWrappers$$AsJavaToLongBiFunction.html","searchKeys":["AsJavaToLongBiFunction"]},{"name":"def _11: T11","description":"scala.Product20","location":"api/scala/Product20.html","searchKeys":["_11"]},{"name":"def +(x: Byte): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["+"]},{"name":"trait Singleton extends Product","description":"scala.deriving.Mirror$$Singleton","location":"api/scala/deriving/Mirror$$Singleton.html","searchKeys":["Singleton"]},{"name":"val isFlipped: Boolean","description":"scala.collection.View$$Filter","location":"api/scala/collection/View$$Filter.html","searchKeys":["isFlipped"]},{"name":"def indices[T]: Range","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["indices"]},{"name":"Basic Operations with Mill","description":"","location":"docs/contributing/tools/mill.html","searchKeys":["Basic Operations with Mill"]},{"name":"type ByteConstant <: Constant","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ByteConstant"]},{"name":"given ImplicitSearchFailureMethods","description":"scala.quoted.Quotes$reflectModule$ImplicitSearchFailureMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ImplicitSearchFailureMethods"]},{"name":"def insert(idx: Int, elem: A): Unit","description":"scala.collection.mutable.Buffer","location":"api/scala/collection/mutable/Buffer.html","searchKeys":["insert"]},{"name":"def isFinite: Boolean","description":"scala.runtime.RichFloat","location":"api/scala/runtime/RichFloat.html","searchKeys":["isFinite"]},{"name":"def <(x: Char): Boolean","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["<"]},{"name":"given NilToExpr: ToExpr[Nil]","description":"scala.quoted.ToExpr$$NilToExpr$","location":"api/scala/quoted/ToExpr$$NilToExpr$.html","searchKeys":["NilToExpr"]},{"name":"def fileEncodingCodec: Codec","description":"scala.io.Codec$","location":"api/scala/io/Codec$.html","searchKeys":["fileEncodingCodec"]},{"name":"def map[B1](f: B => B1): Either[A, B1]","description":"scala.util.Either$$RightProjection","location":"api/scala/util/Either$$RightProjection.html","searchKeys":["map"]},{"name":"def sameElements[B >: A](that: IterableOnce[B]): Boolean","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["sameElements"]},{"name":"def toDouble(x: BigInt): Double","description":"scala.math.Numeric$$BigIntIsIntegral","location":"api/scala/math/Numeric$$BigIntIsIntegral.html","searchKeys":["toDouble"]},{"name":"given Tuple16ToExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]: ToExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)]","description":"scala.quoted.ToExpr$$Tuple16ToExpr","location":"api/scala/quoted/ToExpr$$Tuple16ToExpr.html","searchKeys":["Tuple16ToExpr"]},{"name":"def ==(x: Double): Boolean","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["=="]},{"name":"def scala$collection$immutable$IndexedSeq$$super$sameElements[B >: A](that: IterableOnce[B]): Boolean","description":"scala.collection.immutable.IndexedSeq","location":"api/scala/collection/immutable/IndexedSeq.html","searchKeys":["scala$collection$immutable$IndexedSeq$$super$sameElements"]},{"name":"def Float2float(x: Float): Float","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["Float2float"]},{"name":"def toDouble: Double","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["toDouble"]},{"name":"def apply(iarray: IArray[T])(using Quotes): Expr[IArray[T]]","description":"scala.quoted.ToExpr$$IArrayToExpr","location":"api/scala/quoted/ToExpr$$IArrayToExpr.html","searchKeys":["apply"]},{"name":"def paramBounds: List[TypeBounds]","description":"scala.quoted.Quotes$reflectModule$TypeLambdaMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeLambdaMethods.html","searchKeys":["paramBounds"]},{"name":"val x$28: FromExpr[T9]","description":"scala.quoted.FromExpr$$Tuple19FromExpr","location":"api/scala/quoted/FromExpr$$Tuple19FromExpr.html","searchKeys":["x$28"]},{"name":"class AbstractFunction1[@specialized -T1, @specialized +R] extends T1 => R","description":"scala.runtime.AbstractFunction1","location":"api/scala/runtime/AbstractFunction1.html","searchKeys":["AbstractFunction1"]},{"name":"def _5: T5","description":"scala.Product5","location":"api/scala/Product5.html","searchKeys":["_5"]},{"name":"def times(x: Short, y: Short): Short","description":"scala.math.Numeric$$ShortIsIntegral","location":"api/scala/math/Numeric$$ShortIsIntegral.html","searchKeys":["times"]},{"name":"Optional Braces","description":"","location":"docs/reference/other-new-features/indentation.html","searchKeys":["Optional Braces"]},{"name":"type MatchCase <: TypeRepr","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["MatchCase"]},{"name":"def opt[U >: T](body: => U): Option[U]","description":"scala.util.control.Exception$$Catch","location":"api/scala/util/control/Exception$$Catch.html","searchKeys":["opt"]},{"name":"val x$15: FromExpr[T3]","description":"scala.quoted.FromExpr$$Tuple12FromExpr","location":"api/scala/quoted/FromExpr$$Tuple12FromExpr.html","searchKeys":["x$15"]},{"name":"class Tuple22[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16, +T17, +T18, +T19, +T20, +T21, +T22](_1: T1, _2: T2, _3: T3, _4: T4, _5: T5, _6: T6, _7: T7, _8: T8, _9: T9, _10: T10, _11: T11, _12: T12, _13: T13, _14: T14, _15: T15, _16: T16, _17: T17, _18: T18, _19: T19, _20: T20, _21: T21, _22: T22) extends Product22[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22]","description":"scala.Tuple22","location":"api/scala/Tuple22.html","searchKeys":["Tuple22"]},{"name":"def prepend(elem: T): UnrolledBuffer[T]","description":"scala.collection.mutable.UnrolledBuffer","location":"api/scala/collection/mutable/UnrolledBuffer.html","searchKeys":["prepend"]},{"name":"def asJavaConsumer[T](sf: T => BoxedUnit): Consumer[T]","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asJavaConsumer"]},{"name":"val NAME_JOIN_STRING: \"$\"","description":"scala.reflect.NameTransformer$","location":"api/scala/reflect/NameTransformer$.html","searchKeys":["NAME_JOIN_STRING"]},{"name":"def div(x: T, y: T): T","description":"scala.math.Fractional","location":"api/scala/math/Fractional.html","searchKeys":["div"]},{"name":"object ArrayDeque extends StrictOptimizedSeqFactory[[A] =>> ArrayDeque[A]]","description":"scala.collection.mutable.ArrayDeque$","location":"api/scala/collection/mutable/ArrayDeque$.html","searchKeys":["ArrayDeque"]},{"name":"def copy(original: Tree)(name: String): Ident","description":"scala.quoted.Quotes$reflectModule$IdentModule","location":"api/scala/quoted/Quotes$reflectModule$IdentModule.html","searchKeys":["copy"]},{"name":"trait JFunction2$mcFDJ$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcFDJ$sp","location":"api/scala/runtime/java8/JFunction2$mcFDJ$sp.html","searchKeys":["JFunction2$mcFDJ$sp"]},{"name":"def unapply(x: EmptyTuple): true","description":"scala.Tuple$","location":"api/scala/Tuple$.html","searchKeys":["unapply"]},{"name":"def addOne(elem: Unit): ofUnit","description":"scala.collection.mutable.ArrayBuilder$$ofUnit","location":"api/scala/collection/mutable/ArrayBuilder$$ofUnit.html","searchKeys":["addOne"]},{"name":"def treatEscapes(str: String): String","description":"scala.StringContext$","location":"api/scala/StringContext$.html","searchKeys":["treatEscapes"]},{"name":"def countLong(p: Double => Boolean): Long","description":"scala.jdk.DoubleAccumulator","location":"api/scala/jdk/DoubleAccumulator.html","searchKeys":["countLong"]},{"name":"Scala 3.0.0-M3: developer's preview before RC1","description":"","location":"blog/2020/12/18/scala3-m3.html","searchKeys":["Scala 3.0.0-M3: developer's preview before RC1"]},{"name":"given Tuple21FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21](using val x$1: Type[T1], val x$2: Type[T2], val x$3: Type[T3], val x$4: Type[T4], val x$5: Type[T5], val x$6: Type[T6], val x$7: Type[T7], val x$8: Type[T8], val x$9: Type[T9], val x$10: Type[T10], val x$11: Type[T11], val x$12: Type[T12], val x$13: Type[T13], val x$14: Type[T14], val x$15: Type[T15], val x$16: Type[T16], val x$17: Type[T17], val x$18: Type[T18], val x$19: Type[T19], val x$20: Type[T20], val x$21: Type[T21], val x$22: FromExpr[T1], val x$23: FromExpr[T2], val x$24: FromExpr[T3], val x$25: FromExpr[T4], val x$26: FromExpr[T5], val x$27: FromExpr[T6], val x$28: FromExpr[T7], val x$29: FromExpr[T8], val x$30: FromExpr[T9], val x$31: FromExpr[T10], val x$32: FromExpr[T11], val x$33: FromExpr[T12], val x$34: FromExpr[T13], val x$35: FromExpr[T14], val x$36: FromExpr[T15], val x$37: FromExpr[T16], val x$38: FromExpr[T17], val x$39: FromExpr[T18], val x$40: FromExpr[T19], val x$41: FromExpr[T20], val x$42: FromExpr[T21]): FromExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21)]","description":"scala.quoted.FromExpr$$Tuple21FromExpr","location":"api/scala/quoted/FromExpr$.html","searchKeys":["Tuple21FromExpr"]},{"name":"def unboxedLongAdder: ObjLongConsumer[AnyAccumulator[Long]]","description":"scala.jdk.AnyAccumulator$","location":"api/scala/jdk/AnyAccumulator$.html","searchKeys":["unboxedLongAdder"]},{"name":"object Future","description":"scala.concurrent.Future$","location":"api/scala/concurrent/Future$.html","searchKeys":["Future"]},{"name":"trait Mirror","description":"scala.deriving.Mirror","location":"api/scala/deriving/Mirror.html","searchKeys":["Mirror"]},{"name":"def addOne(elem: T): UnrolledBuffer[T]","description":"scala.collection.mutable.UnrolledBuffer","location":"api/scala/collection/mutable/UnrolledBuffer.html","searchKeys":["addOne"]},{"name":"def ++=:(elems: IterableOnce[A]): Buffer[A]","description":"scala.collection.mutable.Buffer","location":"api/scala/collection/mutable/Buffer.html","searchKeys":["++=:"]},{"name":"trait LowPriorityAccumulatorFactoryShape","description":"scala.jdk.Accumulator$$LowPriorityAccumulatorFactoryShape","location":"api/scala/jdk/Accumulator$$LowPriorityAccumulatorFactoryShape.html","searchKeys":["LowPriorityAccumulatorFactoryShape"]},{"name":"val PARAMtype: 172","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["PARAMtype"]},{"name":"def unapply(x: GivenSelector): Some[Option[TypeTree]]","description":"scala.quoted.Quotes$reflectModule$GivenSelectorModule","location":"api/scala/quoted/Quotes$reflectModule$GivenSelectorModule.html","searchKeys":["unapply"]},{"name":"class AsJavaFunction[T, R](sf: T => R) extends Function[T, R]","description":"scala.jdk.FunctionWrappers$$AsJavaFunction","location":"api/scala/jdk/FunctionWrappers$$AsJavaFunction.html","searchKeys":["AsJavaFunction"]},{"name":"def withFilter(q: A => Boolean): WithFilter[A, CC]","description":"scala.collection.IterableOps$$WithFilter","location":"api/scala/collection/IterableOps$$WithFilter.html","searchKeys":["withFilter"]},{"name":"def _4: T4","description":"scala.Product4","location":"api/scala/Product4.html","searchKeys":["_4"]},{"name":"def addAll(xs: Array[ <: T], offset: Int, length: Int): ArrayBuilder[T]","description":"scala.collection.mutable.ArrayBuilder","location":"api/scala/collection/mutable/ArrayBuilder.html","searchKeys":["addAll"]},{"name":"def iterator: Iterator[B]","description":"scala.collection.View$$Collect","location":"api/scala/collection/View$$Collect.html","searchKeys":["iterator"]},{"name":"def newBuilder[A]: Builder[A, ArrayDeque[A]]","description":"scala.collection.mutable.ArrayDeque$","location":"api/scala/collection/mutable/ArrayDeque$.html","searchKeys":["newBuilder"]},{"name":"def !=(x: Float): Boolean","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["!="]},{"name":"Using Dotty with cbt","description":"","location":"docs/usage/cbt-projects.html","searchKeys":["Using Dotty with cbt"]},{"name":"type ClassOfConstant <: Constant","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ClassOfConstant"]},{"name":"def isEmpty: Boolean","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["isEmpty"]},{"name":"class RichDoublePredicateAsFunction1(underlying: DoublePredicate) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichDoublePredicateAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichDoublePredicateAsFunction1.html","searchKeys":["RichDoublePredicateAsFunction1"]},{"name":"def %(x: Char): Double","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["%"]},{"name":"def declaredField(name: String): Symbol","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["declaredField"]},{"name":"val TypeIdent: TypeIdentModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeIdent"]},{"name":"def asJavaParDoubleStreamFromFloat(cc: IterableOnce[Float]): DoubleStream","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaParDoubleStreamFromFloat"]},{"name":"def iterator: Iterator[(K, V)]","description":"scala.collection.MapView$$FilterKeys","location":"api/scala/collection/MapView$$FilterKeys.html","searchKeys":["iterator"]},{"name":"def newBuilder[T](t: ClassTag[T]): ArrayBuilder[T]","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["newBuilder"]},{"name":"def toArray[B >: A](evidence$27: ClassTag[B]): Array[B]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["toArray"]},{"name":"def fromInt(x: Int): BigDecimal","description":"scala.math.Numeric$$BigDecimalIsConflicted","location":"api/scala/math/Numeric$$BigDecimalIsConflicted.html","searchKeys":["fromInt"]},{"name":"def filterInPlace(p: (K, V) => Boolean): MapOps[K, V, CC, C]","description":"scala.collection.mutable.MapOps","location":"api/scala/collection/mutable/MapOps.html","searchKeys":["filterInPlace"]},{"name":"def unapply(x: Expr[Nil])(using Quotes): Option[Nil]","description":"scala.quoted.FromExpr$$NilFromExpr$","location":"api/scala/quoted/FromExpr$$NilFromExpr$.html","searchKeys":["unapply"]},{"name":"def enrichAsScalaFromToIntFunction[T](jf: ToIntFunction[T]): RichToIntFunctionAsFunction1[T]","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsScalaFromToIntFunction"]},{"name":"def insert(index: Int, x: Byte): StringBuilder","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["insert"]},{"name":"trait JFunction2$mcDJD$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcDJD$sp","location":"api/scala/runtime/java8/JFunction2$mcDJD$sp.html","searchKeys":["JFunction2$mcDJD$sp"]},{"name":"trait EnumValue extends Product with Serializable","description":"scala.runtime.EnumValue","location":"api/scala/runtime/EnumValue.html","searchKeys":["EnumValue"]},{"name":"def asJava: LongBinaryOperator","description":"scala.jdk.FunctionWrappers$$RichFunction2AsLongBinaryOperator","location":"api/scala/jdk/FunctionWrappers$$RichFunction2AsLongBinaryOperator.html","searchKeys":["asJava"]},{"name":"given ConstantMethods","description":"scala.quoted.Quotes$reflectModule$ConstantMethods","location":"api/scala/quoted/Quotes$reflectModule$ConstantMethods.html","searchKeys":["ConstantMethods"]},{"name":"object DurationConversions","description":"scala.concurrent.duration.DurationConversions$","location":"api/scala/concurrent/duration/DurationConversions$.html","searchKeys":["DurationConversions"]},{"name":"def companionClass: Symbol","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["companionClass"]},{"name":"given AndOrTypeMethods","description":"scala.quoted.Quotes$reflectModule$AndOrTypeMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["AndOrTypeMethods"]},{"name":"trait JFunction1$mcDD$sp extends Any => Any with Serializable","description":"scala.runtime.java8.JFunction1$mcDD$sp","location":"api/scala/runtime/java8/JFunction1$mcDD$sp.html","searchKeys":["JFunction1$mcDD$sp"]},{"name":"def keysIteratorFrom(start: K): Iterator[K]","description":"scala.collection.mutable.SortedMap$$WithDefault","location":"api/scala/collection/mutable/SortedMap$$WithDefault.html","searchKeys":["keysIteratorFrom"]},{"name":"def tuple2ToZippedOps[T1, T2](x: (T1, T2)): Ops[T1, T2]","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["tuple2ToZippedOps"]},{"name":"def sizeIs: SizeCompareOps","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["sizeIs"]},{"name":"def _11: T11","description":"scala.Product13","location":"api/scala/Product13.html","searchKeys":["_11"]},{"name":"object BigDecimal","description":"scala.collection.immutable.Range$$BigDecimal$","location":"api/scala/collection/immutable/Range$$BigDecimal$.html","searchKeys":["BigDecimal"]},{"name":"def --(xs: IterableOnce[A]): Repr","description":"scala.collection.generic.Subtractable","location":"api/scala/collection/generic/Subtractable.html","searchKeys":["--"]},{"name":"def apply(v1: T1, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, v7: T7, v8: T8, v9: T9, v10: T10, v11: T11, v12: T12, v13: T13, v14: T14, v15: T15): R","description":"scala.Function15","location":"api/scala/Function15.html","searchKeys":["apply"]},{"name":"def out(s: => String): Unit","description":"scala.sys.process.FileProcessLogger","location":"api/scala/sys/process/FileProcessLogger.html","searchKeys":["out"]},{"name":"trait ExtraImplicits","description":"scala.math.Integral$$ExtraImplicits","location":"api/scala/math/Integral$$ExtraImplicits.html","searchKeys":["ExtraImplicits"]},{"name":"def asJava: Supplier[T]","description":"scala.jdk.FunctionWrappers$$RichFunction0AsSupplier","location":"api/scala/jdk/FunctionWrappers$$RichFunction0AsSupplier.html","searchKeys":["asJava"]},{"name":"def Value(i: Int): Value","description":"scala.Enumeration","location":"api/scala/Enumeration.html","searchKeys":["Value"]},{"name":"val x$28: FromExpr[T14]","description":"scala.quoted.FromExpr$$Tuple14FromExpr","location":"api/scala/quoted/FromExpr$$Tuple14FromExpr.html","searchKeys":["x$28"]},{"name":"def intValue: Int","description":"scala.math.ScalaNumericAnyConversions","location":"api/scala/math/ScalaNumericAnyConversions.html","searchKeys":["intValue"]},{"name":"def asJavaToDoubleBiFunction[T, U](sf: (T, U) => Double): ToDoubleBiFunction[T, U]","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asJavaToDoubleBiFunction"]},{"name":"def flatMap[K2, V2](f: (K, V) => IterableOnce[(K2, V2)]): CC[K2, V2]","description":"scala.collection.MapOps$$WithFilter","location":"api/scala/collection/MapOps$$WithFilter.html","searchKeys":["flatMap"]},{"name":"def apply(index: Int): Boolean","description":"scala.collection.mutable.ArraySeq$$ofBoolean","location":"api/scala/collection/mutable/ArraySeq$$ofBoolean.html","searchKeys":["apply"]},{"name":"def or[U >: T](other: Catch[U]): Catch[U]","description":"scala.util.control.Exception$$Catch","location":"api/scala/util/control/Exception$$Catch.html","searchKeys":["or"]},{"name":"val ordering: Ordering[A]","description":"scala.collection.mutable.TreeSet","location":"api/scala/collection/mutable/TreeSet.html","searchKeys":["ordering"]},{"name":"val higherKinds: higherKinds","description":"scala.language$","location":"api/scala/language$.html","searchKeys":["higherKinds"]},{"name":"given NamedTypeMethods","description":"scala.quoted.Quotes$reflectModule$NamedTypeMethods","location":"api/scala/quoted/Quotes$reflectModule$NamedTypeMethods.html","searchKeys":["NamedTypeMethods"]},{"name":"def _7: T7","description":"scala.Product19","location":"api/scala/Product19.html","searchKeys":["_7"]},{"name":"def &(x: Byte): Int","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["&"]},{"name":"def collect[K2 <: AnyRef, V2](pf: PartialFunction[(K, V), (K2, V2)])(dummy: DummyImplicit): AnyRefMap[K2, V2]","description":"scala.collection.mutable.AnyRefMap","location":"api/scala/collection/mutable/AnyRefMap.html","searchKeys":["collect"]},{"name":"def unapply(x: Expr[Either[L, R]])(using Quotes): Option[Either[L, R]]","description":"scala.quoted.FromExpr$$EitherFromExpr","location":"api/scala/quoted/FromExpr$$EitherFromExpr.html","searchKeys":["unapply"]},{"name":"def apply(tup: (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10))(using Quotes): Expr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)]","description":"scala.quoted.ToExpr$$Tuple10ToExpr","location":"api/scala/quoted/ToExpr$$Tuple10ToExpr.html","searchKeys":["apply"]},{"name":"def %(x: Float): Float","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["%"]},{"name":"def onComplete[U](f: Try[T] => U)(executor: ExecutionContext): Unit","description":"scala.concurrent.Future","location":"api/scala/concurrent/Future.html","searchKeys":["onComplete"]},{"name":"class WithFilter[+A, +CC <: ([_$11] =>> Any)](self: IterableOps[A, CC, ], p: A => Boolean) extends WithFilter[A, CC] with Serializable","description":"scala.collection.IterableOps$$WithFilter","location":"api/scala/collection/IterableOps$$WithFilter.html","searchKeys":["WithFilter"]},{"name":"class ofBoolean extends ArrayBuilder[Boolean]","description":"scala.collection.mutable.ArrayBuilder$$ofBoolean","location":"api/scala/collection/mutable/ArrayBuilder$$ofBoolean.html","searchKeys":["ofBoolean"]},{"name":"val AllNumeric: Group[(Byte, Short, Int, Long, Char, Float, Double)]","description":"scala.Specializable$","location":"api/scala/Specializable$.html","searchKeys":["AllNumeric"]},{"name":"By-Name Context Parameters","description":"","location":"docs/reference/contextual/by-name-context-parameters.html","searchKeys":["By-Name Context Parameters"]},{"name":"def copyToArray[B >: A](xs: Array[B]): Int","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["copyToArray"]},{"name":"def minBy[B](f: A => B)(cmp: Ordering[B]): A","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["minBy"]},{"name":"def seqHash(xs: Seq[]): Int","description":"scala.util.hashing.MurmurHash3$","location":"api/scala/util/hashing/MurmurHash3$.html","searchKeys":["seqHash"]},{"name":"class =:=[From, To] extends From <:< To with Serializable","description":"scala.=:=","location":"api/scala/=:=.html","searchKeys":["=:="]},{"name":"def apply[T <: Object](n: Int): T","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["apply"]},{"name":"def _1: T1","description":"scala.Product19","location":"api/scala/Product19.html","searchKeys":["_1"]},{"name":"def Infix: Flags","description":"scala.quoted.Quotes$reflectModule$FlagsModule","location":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html","searchKeys":["Infix"]},{"name":"def map[F <: ([_$2] =>> Any)](self: Tuple, f: [t] => (x$1: t) => F[t]): Tuple","description":"scala.runtime.Tuples$","location":"api/scala/runtime/Tuples$.html","searchKeys":["map"]},{"name":"def apply(aliases: List[TypeDef], tpt: TypeTree): TypeBlock","description":"scala.quoted.Quotes$reflectModule$TypeBlockModule","location":"api/scala/quoted/Quotes$reflectModule$TypeBlockModule.html","searchKeys":["apply"]},{"name":"def apply(length: Long, unit: String): FiniteDuration","description":"scala.concurrent.duration.Duration$","location":"api/scala/concurrent/duration/Duration$.html","searchKeys":["apply"]},{"name":"def enrichAsScalaFromFunction[T, R](jf: Function[T, R]): RichFunctionAsFunction1[T, R]","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsScalaFromFunction"]},{"name":"def readUncompressedLong(): Long","description":"dotty.tools.tasty.TastyReader","location":"api/dotty/tools/tasty/TastyReader.html","searchKeys":["readUncompressedLong"]},{"name":"def +(x: Float): Float","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["+"]},{"name":"trait Tuple extends Product","description":"scala.Tuple","location":"api/scala/Tuple.html","searchKeys":["Tuple"]},{"name":"val x$19: FromExpr[T5]","description":"scala.quoted.FromExpr$$Tuple14FromExpr","location":"api/scala/quoted/FromExpr$$Tuple14FromExpr.html","searchKeys":["x$19"]},{"name":"class UnwrapOp(value: WrappedString) extends AnyVal","description":"scala.collection.immutable.WrappedString$$UnwrapOp","location":"api/scala/collection/immutable/WrappedString$$UnwrapOp.html","searchKeys":["UnwrapOp"]},{"name":"def toOctalString: String","description":"scala.runtime.RichInt","location":"api/scala/runtime/RichInt.html","searchKeys":["toOctalString"]},{"name":"def retain(p: A => Boolean): Unit","description":"scala.collection.mutable.SetOps","location":"api/scala/collection/mutable/SetOps.html","searchKeys":["retain"]},{"name":"trait JFunction2$mcZDJ$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcZDJ$sp","location":"api/scala/runtime/java8/JFunction2$mcZDJ$sp.html","searchKeys":["JFunction2$mcZDJ$sp"]},{"name":"given NoneToExpr: ToExpr[None]","description":"scala.quoted.ToExpr$$NoneToExpr$","location":"api/scala/quoted/ToExpr$$NoneToExpr$.html","searchKeys":["NoneToExpr"]},{"name":"val x$32: FromExpr[T11]","description":"scala.quoted.FromExpr$$Tuple21FromExpr","location":"api/scala/quoted/FromExpr$$Tuple21FromExpr.html","searchKeys":["x$32"]},{"name":"def empty[K, V](evidence$26: Ordering[K]): CC[K, V]","description":"scala.collection.SortedMapFactory","location":"api/scala/collection/SortedMapFactory.html","searchKeys":["empty"]},{"name":"def <(size: Int): Boolean","description":"scala.collection.IterableOps$$SizeCompareOps","location":"api/scala/collection/IterableOps$$SizeCompareOps.html","searchKeys":["<"]},{"name":"class ArrayCharSequence(arrayOfChars: Array[Char]) extends CharSequence","description":"scala.Predef$$ArrayCharSequence","location":"api/scala/Predef$$ArrayCharSequence.html","searchKeys":["ArrayCharSequence"]},{"name":"Getting Started","description":"","location":"docs/contributing/getting-started.html","searchKeys":["Getting Started"]},{"name":"class MapValues[K, +V, +W](underlying: SomeMapOps[K, V], f: V => W) extends AbstractMapView[K, W]","description":"scala.collection.MapView$$MapValues","location":"api/scala/collection/MapView$$MapValues.html","searchKeys":["MapValues"]},{"name":"val SHORTconst: 68","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["SHORTconst"]},{"name":"Opaque Type Aliases: More Details","description":"","location":"docs/reference/other-new-features/opaques-details.html","searchKeys":["Opaque Type Aliases: More Details"]},{"name":"object Product9","description":"scala.Product9$","location":"api/scala/Product9$.html","searchKeys":["Product9"]},{"name":"def toStream: Stream[A]","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["toStream"]},{"name":"object String extends StringOrdering","description":"scala.math.Ordering$$String$","location":"api/scala/math/Ordering$$String$.html","searchKeys":["String"]},{"name":"def isFailure: Boolean","description":"scala.util.Try","location":"api/scala/util/Try.html","searchKeys":["isFailure"]},{"name":"trait Equiv[T] extends Serializable","description":"scala.math.Equiv","location":"api/scala/math/Equiv.html","searchKeys":["Equiv"]},{"name":"def to(end: BigDecimal, step: BigDecimal): Inclusive[BigDecimal]","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["to"]},{"name":"def asScalaFromDoubleToIntFunction(jf: DoubleToIntFunction): Double => Integer","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asScalaFromDoubleToIntFunction"]},{"name":"given TypedMethods","description":"scala.quoted.Quotes$reflectModule$TypedMethods","location":"api/scala/quoted/Quotes$reflectModule$TypedMethods.html","searchKeys":["TypedMethods"]},{"name":"val Unit: UnitManifest","description":"scala.reflect.ClassManifestFactory$","location":"api/scala/reflect/ClassManifestFactory$.html","searchKeys":["Unit"]},{"name":"def writeAddr(addr: Addr): Unit","description":"dotty.tools.tasty.TastyBuffer","location":"api/dotty/tools/tasty/TastyBuffer.html","searchKeys":["writeAddr"]},{"name":"def start(i: Int): Int","description":"scala.util.matching.Regex$$Match","location":"api/scala/util/matching/Regex$$Match.html","searchKeys":["start"]},{"name":"def unapply(x: Expr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)])(using Quotes): Option[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)]","description":"scala.quoted.FromExpr$$Tuple12FromExpr","location":"api/scala/quoted/FromExpr$$Tuple12FromExpr.html","searchKeys":["unapply"]},{"name":"val x$2: Type[T2]","description":"scala.quoted.FromExpr$$Tuple13FromExpr","location":"api/scala/quoted/FromExpr$$Tuple13FromExpr.html","searchKeys":["x$2"]},{"name":"def copy(original: Tree)(pid: Ref, stats: List[Tree]): PackageClause","description":"scala.quoted.Quotes$reflectModule$PackageClauseModule","location":"api/scala/quoted/Quotes$reflectModule$PackageClauseModule.html","searchKeys":["copy"]},{"name":"def filterKeys(p: K => Boolean): MapView[K, V]","description":"scala.collection.MapOps","location":"api/scala/collection/MapOps.html","searchKeys":["filterKeys"]},{"name":"def concat(that: IterableOnce[A]): C","description":"scala.collection.SetOps","location":"api/scala/collection/SetOps.html","searchKeys":["concat"]},{"name":"def error(msg: String, pos: Position): Unit","description":"scala.quoted.Quotes$reflectModule$reportModule","location":"api/scala/quoted/Quotes$reflectModule$reportModule.html","searchKeys":["error"]},{"name":"def toBitMask: Array[Long]","description":"scala.Enumeration$ValueSet","location":"api/scala/Enumeration$ValueSet.html","searchKeys":["toBitMask"]},{"name":"def take(n: Int): C","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["take"]},{"name":"class RichShort(val self: Short) extends AnyVal with ScalaWholeNumberProxy[Short]","description":"scala.runtime.RichShort","location":"api/scala/runtime/RichShort.html","searchKeys":["RichShort"]},{"name":"def asJavaToIntBiFunction: ToIntBiFunction[T, U]","description":"scala.jdk.FunctionWrappers$$RichFunction2AsToIntBiFunction","location":"api/scala/jdk/FunctionWrappers$$RichFunction2AsToIntBiFunction.html","searchKeys":["asJavaToIntBiFunction"]},{"name":"val x$19: Type[T19]","description":"scala.quoted.FromExpr$$Tuple19FromExpr","location":"api/scala/quoted/FromExpr$$Tuple19FromExpr.html","searchKeys":["x$19"]},{"name":"class RichObjIntConsumerAsFunction2[T](underlying: ObjIntConsumer[T]) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichObjIntConsumerAsFunction2","location":"api/scala/jdk/FunctionWrappers$$RichObjIntConsumerAsFunction2.html","searchKeys":["RichObjIntConsumerAsFunction2"]},{"name":"def maxBy[B](f: A => B)(cmp: Ordering[B]): A","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["maxBy"]},{"name":"given IArrayToExpr[T](evidence$5: Type[T], val ltArray: ToExpr[Array[T]]): ToExpr[IArray[T]]","description":"scala.quoted.ToExpr$$IArrayToExpr","location":"api/scala/quoted/ToExpr$.html","searchKeys":["IArrayToExpr"]},{"name":"def apply(v1: T1, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, v7: T7, v8: T8, v9: T9, v10: T10, v11: T11): R","description":"scala.Function11","location":"api/scala/Function11.html","searchKeys":["apply"]},{"name":"def lazyZip2ToIterable[El1, El2](zipped2: LazyZip2[El1, El2, ]): View[(El1, El2)]","description":"scala.collection.LazyZip2$","location":"api/scala/collection/LazyZip2$.html","searchKeys":["lazyZip2ToIterable"]},{"name":"class Fill[A](n: Int)(elem: => A) extends AbstractView[A]","description":"scala.collection.View$$Fill","location":"api/scala/collection/View$$Fill.html","searchKeys":["Fill"]},{"name":"def appendAll(xs: IterableOnce[A]): Buffer[A]","description":"scala.collection.mutable.Buffer","location":"api/scala/collection/mutable/Buffer.html","searchKeys":["appendAll"]},{"name":"object 3.0","description":"scala.language$$3.0$","location":"api/scala/language$$3/0$.html","searchKeys":["3.0"]},{"name":"val x$14: FromExpr[T7]","description":"scala.quoted.FromExpr$$Tuple7FromExpr","location":"api/scala/quoted/FromExpr$$Tuple7FromExpr.html","searchKeys":["x$14"]},{"name":"val floatStreamShape: StreamShape[Float, DoubleStream, DoubleStepper]","description":"scala.collection.convert.StreamExtensions$$StreamShape$","location":"api/scala/collection/convert/StreamExtensions$$StreamShape$.html","searchKeys":["floatStreamShape"]},{"name":"def apply(i: Int): A","description":"scala.collection.immutable.ArraySeq","location":"api/scala/collection/immutable/ArraySeq.html","searchKeys":["apply"]},{"name":"def initialize(value: Byte): Byte","description":"scala.runtime.LazyByte","location":"api/scala/runtime/LazyByte.html","searchKeys":["initialize"]},{"name":"def _3: T3","description":"scala.Product3","location":"api/scala/Product3.html","searchKeys":["_3"]},{"name":"type SuperType <: TypeRepr","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["SuperType"]},{"name":"def _5: T5","description":"scala.Product14","location":"api/scala/Product14.html","searchKeys":["_5"]},{"name":"object Int","description":"scala.collection.immutable.Range$$Int$","location":"api/scala/collection/immutable/Range$$Int$.html","searchKeys":["Int"]},{"name":"def until(until: A): C","description":"scala.collection.SortedOps","location":"api/scala/collection/SortedOps.html","searchKeys":["until"]},{"name":"class Tuple18[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16, +T17, +T18](_1: T1, _2: T2, _3: T3, _4: T4, _5: T5, _6: T6, _7: T7, _8: T8, _9: T9, _10: T10, _11: T11, _12: T12, _13: T13, _14: T14, _15: T15, _16: T16, _17: T17, _18: T18) extends Product18[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18]","description":"scala.Tuple18","location":"api/scala/Tuple18.html","searchKeys":["Tuple18"]},{"name":"def apply(x: Boolean): BooleanConstant","description":"scala.quoted.Quotes$reflectModule$BooleanConstantModule","location":"api/scala/quoted/Quotes$reflectModule$BooleanConstantModule.html","searchKeys":["apply"]},{"name":"given DefDefMethods","description":"scala.quoted.Quotes$reflectModule$DefDefMethods","location":"api/scala/quoted/Quotes$reflectModule$DefDefMethods.html","searchKeys":["DefDefMethods"]},{"name":"def toArray(self: Tuple): Array[Object]","description":"scala.runtime.Tuples$","location":"api/scala/runtime/Tuples$.html","searchKeys":["toArray"]},{"name":"given DivergingImplicitTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["DivergingImplicitTypeTest"]},{"name":"val x$13: FromExpr[T2]","description":"scala.quoted.FromExpr$$Tuple11FromExpr","location":"api/scala/quoted/FromExpr$$Tuple11FromExpr.html","searchKeys":["x$13"]},{"name":"val STATIC: 18","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["STATIC"]},{"name":"def completeWith(other: Future[T]): Promise[T]","description":"scala.concurrent.Promise","location":"api/scala/concurrent/Promise.html","searchKeys":["completeWith"]},{"name":"val x$41: FromExpr[T20]","description":"scala.quoted.FromExpr$$Tuple21FromExpr","location":"api/scala/quoted/FromExpr$$Tuple21FromExpr.html","searchKeys":["x$41"]},{"name":"def _12: T12","description":"scala.Product16","location":"api/scala/Product16.html","searchKeys":["_12"]},{"name":"def collect(pf: PartialFunction[Int, Int]): C","description":"scala.collection.BitSetOps","location":"api/scala/collection/BitSetOps.html","searchKeys":["collect"]},{"name":"trait Function17[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, -T14, -T15, -T16, -T17, +R] extends AnyRef","description":"scala.Function17","location":"api/scala/Function17.html","searchKeys":["Function17"]},{"name":"val PARAMsetter: 38","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["PARAMsetter"]},{"name":"def fill[T](n1: Int, n2: Int)(elem: => T)(evidence$19: ClassTag[T]): IArray[IArray[T]]","description":"scala.IArray$package$$IArray$","location":"api/scala/IArray$package$$IArray$.html","searchKeys":["fill"]},{"name":"def copy(original: Tree)(name: String, tpt: TypeTree, rhs: Option[Term]): ValDef","description":"scala.quoted.Quotes$reflectModule$ValDefModule","location":"api/scala/quoted/Quotes$reflectModule$ValDefModule.html","searchKeys":["copy"]},{"name":"def updated[V1 >: V](key: K, value: V1): VectorMap[K, V1]","description":"scala.collection.immutable.VectorMap","location":"api/scala/collection/immutable/VectorMap.html","searchKeys":["updated"]},{"name":"object IntIsIntegral extends IntIsIntegral with IntOrdering","description":"scala.math.Numeric$$IntIsIntegral$","location":"api/scala/math/Numeric$$IntIsIntegral$.html","searchKeys":["IntIsIntegral"]},{"name":"def removed(key: K): Map[K, V]","description":"scala.collection.immutable.Map$$Map2","location":"api/scala/collection/immutable/Map$$Map2.html","searchKeys":["removed"]},{"name":"type GenIterable[+X] = Iterable[X]","description":"scala.collection","location":"api/scala/collection.html","searchKeys":["GenIterable"]},{"name":"def asJava: UnaryOperator[T]","description":"scala.jdk.FunctionWrappers$$RichFunction1AsUnaryOperator","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsUnaryOperator.html","searchKeys":["asJava"]},{"name":"val x$8: Type[T8]","description":"scala.quoted.FromExpr$$Tuple12FromExpr","location":"api/scala/quoted/FromExpr$$Tuple12FromExpr.html","searchKeys":["x$8"]},{"name":"def apply(x: T)(using Quotes): Expr[T]","description":"scala.quoted.ToExpr$$ClassToExpr","location":"api/scala/quoted/ToExpr$$ClassToExpr.html","searchKeys":["apply"]},{"name":"def /(x: Long): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["/"]},{"name":"def _9: T9","description":"scala.Product20","location":"api/scala/Product20.html","searchKeys":["_9"]},{"name":"def tupled: (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) => R","description":"scala.Function20","location":"api/scala/Function20.html","searchKeys":["tupled"]},{"name":"def value: Long","description":"scala.runtime.LazyLong","location":"api/scala/runtime/LazyLong.html","searchKeys":["value"]},{"name":"def compare(x: BigDecimal, y: BigDecimal): Int","description":"scala.math.Ordering$$BigDecimalOrdering","location":"api/scala/math/Ordering$$BigDecimalOrdering.html","searchKeys":["compare"]},{"name":"val x$28: FromExpr[T7]","description":"scala.quoted.FromExpr$$Tuple21FromExpr","location":"api/scala/quoted/FromExpr$$Tuple21FromExpr.html","searchKeys":["x$28"]},{"name":"trait Hashing[T] extends Serializable","description":"scala.util.hashing.Hashing","location":"api/scala/util/hashing/Hashing.html","searchKeys":["Hashing"]},{"name":"def get: A","description":"scala.Some","location":"api/scala/Some.html","searchKeys":["get"]},{"name":"trait LongStepper extends Stepper[Long]","description":"scala.collection.LongStepper","location":"api/scala/collection/LongStepper.html","searchKeys":["LongStepper"]},{"name":"def /(x: Int): Int","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["/"]},{"name":"class VectorBuilder[A] extends ReusableBuilder[A, Vector[A]]","description":"scala.collection.immutable.VectorBuilder","location":"api/scala/collection/immutable/VectorBuilder.html","searchKeys":["VectorBuilder"]},{"name":"val Int: IntManifest","description":"scala.reflect.ClassManifestFactory$","location":"api/scala/reflect/ClassManifestFactory$.html","searchKeys":["Int"]},{"name":"def from[K, V](source: IterableOnce[(K, V)]): HashMap[K, V]","description":"scala.collection.immutable.HashMap$","location":"api/scala/collection/immutable/HashMap$.html","searchKeys":["from"]},{"name":"def _20: T20","description":"scala.Product20","location":"api/scala/Product20.html","searchKeys":["_20"]},{"name":"def _3: T3","description":"scala.Product20","location":"api/scala/Product20.html","searchKeys":["_3"]},{"name":"def iterator: Iterator[A]","description":"scala.collection.LinearSeqOps","location":"api/scala/collection/LinearSeqOps.html","searchKeys":["iterator"]},{"name":"def addOne(elem: A): ArrayDeque[A]","description":"scala.collection.mutable.ArrayDeque","location":"api/scala/collection/mutable/ArrayDeque.html","searchKeys":["addOne"]},{"name":"def value: Option[Try[T]]","description":"scala.concurrent.Future","location":"api/scala/concurrent/Future.html","searchKeys":["value"]},{"name":"def quickSort(a: Array[Int]): Unit","description":"scala.util.Sorting$","location":"api/scala/util/Sorting$.html","searchKeys":["quickSort"]},{"name":"def to(end: T): Inclusive[T]","description":"scala.runtime.IntegralProxy","location":"api/scala/runtime/IntegralProxy.html","searchKeys":["to"]},{"name":"class FromJavaObjLongConsumer[T](jf: ObjLongConsumer[T]) extends (T, Long) => Unit","description":"scala.jdk.FunctionWrappers$$FromJavaObjLongConsumer","location":"api/scala/jdk/FunctionWrappers$$FromJavaObjLongConsumer.html","searchKeys":["FromJavaObjLongConsumer"]},{"name":"def unit: TimeUnit","description":"scala.concurrent.duration.Duration$$Infinite","location":"api/scala/concurrent/duration/Duration$$Infinite.html","searchKeys":["unit"]},{"name":"def fromIterator[A](it: Iterator[A]): Stream[A]","description":"scala.collection.immutable.Stream$","location":"api/scala/collection/immutable/Stream$.html","searchKeys":["fromIterator"]},{"name":"val AnyRef: Specializable","description":"scala","location":"api/scala.html","searchKeys":["AnyRef"]},{"name":"def _2: T2","description":"scala.Product13","location":"api/scala/Product13.html","searchKeys":["_2"]},{"name":"def readBytes(n: Int): Array[Byte]","description":"dotty.tools.tasty.TastyReader","location":"api/dotty/tools/tasty/TastyReader.html","searchKeys":["readBytes"]},{"name":"val dummyImplicit: DummyImplicit","description":"scala.DummyImplicit$","location":"api/scala/DummyImplicit$.html","searchKeys":["dummyImplicit"]},{"name":"given ClassToExpr[T <: Class[]]: ToExpr[T]","description":"scala.quoted.ToExpr$$ClassToExpr","location":"api/scala/quoted/ToExpr$$ClassToExpr.html","searchKeys":["ClassToExpr"]},{"name":"val iter: BufferedIterator[Char]","description":"scala.io.Source$LineIterator","location":"api/scala/io/Source$LineIterator.html","searchKeys":["iter"]},{"name":"def enrichAsScalaFromBiFunction[T, U, R](jf: BiFunction[T, U, R]): RichBiFunctionAsFunction2[T, U, R]","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsScalaFromBiFunction"]},{"name":"def asJavaSeqKeyIntStreamFromChar[V](m: Map[Character, V]): IntStream","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaSeqKeyIntStreamFromChar"]},{"name":"def newBuilder: Builder[Int, BitSet]","description":"scala.collection.immutable.BitSet$","location":"api/scala/collection/immutable/BitSet$.html","searchKeys":["newBuilder"]},{"name":"def asScala[A](i: Iterator[A]): Iterator[A]","description":"scala.collection.convert.AsScalaConverters","location":"api/scala/collection/convert/AsScalaConverters.html","searchKeys":["asScala"]},{"name":"Announcing Dotty 0.14.0-RC1 with export, immutable arrays, creator applications and more","description":"","location":"blog/2019/04/15/14th-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.14.0-RC1 with export, immutable arrays, creator applications and more"]},{"name":"class tailrec extends StaticAnnotation","description":"scala.annotation.tailrec","location":"api/scala/annotation/tailrec.html","searchKeys":["tailrec"]},{"name":"def asScala: Map[K, V]","description":"scala.collection.convert.AsScalaExtensions$ConcurrentMapHasAsScala","location":"api/scala/collection/convert/AsScalaExtensions$ConcurrentMapHasAsScala.html","searchKeys":["asScala"]},{"name":"val x$8: Type[T8]","description":"scala.quoted.FromExpr$$Tuple21FromExpr","location":"api/scala/quoted/FromExpr$$Tuple21FromExpr.html","searchKeys":["x$8"]},{"name":"given TypeBindMethods","description":"scala.quoted.Quotes$reflectModule$TypeBindMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeBindMethods.html","searchKeys":["TypeBindMethods"]},{"name":"def insertionPoint: Int","description":"scala.collection.Searching$$SearchResult","location":"api/scala/collection/Searching$$SearchResult.html","searchKeys":["insertionPoint"]},{"name":"def apply(x1: Int): Int","description":"scala.jdk.FunctionWrappers$$FromJavaIntUnaryOperator","location":"api/scala/jdk/FunctionWrappers$$FromJavaIntUnaryOperator.html","searchKeys":["apply"]},{"name":"type Ref <: Term","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Ref"]},{"name":"def map AsScalaConcurrentMap[K, V](m: ConcurrentMap[K, V]): Map[K, V]","description":"scala.collection.convert.ToScalaImplicits","location":"api/scala/collection/convert/ToScalaImplicits.html","searchKeys":["map AsScalaConcurrentMap"]},{"name":"val isEmpty: Boolean","description":"scala.collection.immutable.NumericRange","location":"api/scala/collection/immutable/NumericRange.html","searchKeys":["isEmpty"]},{"name":"val x$16: Type[T16]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["x$16"]},{"name":"type TypeCaseDef <: Tree","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeCaseDef"]},{"name":"val x$2: Type[T2]","description":"scala.quoted.FromExpr$$Tuple9FromExpr","location":"api/scala/quoted/FromExpr$$Tuple9FromExpr.html","searchKeys":["x$2"]},{"name":"def readByte(): Int","description":"dotty.tools.tasty.TastyReader","location":"api/dotty/tools/tasty/TastyReader.html","searchKeys":["readByte"]},{"name":"def failed[T](exception: Throwable): Future[T]","description":"scala.concurrent.Future$","location":"api/scala/concurrent/Future$.html","searchKeys":["failed"]},{"name":"val x$11: FromExpr[T1]","description":"scala.quoted.FromExpr$$Tuple10FromExpr","location":"api/scala/quoted/FromExpr$$Tuple10FromExpr.html","searchKeys":["x$11"]},{"name":"def from[K, V](it: IterableOnce[(K, V)]): ListMap[K, V]","description":"scala.collection.mutable.ListMap$","location":"api/scala/collection/mutable/ListMap$.html","searchKeys":["from"]},{"name":"def apply(x1: Double): Int","description":"scala.jdk.FunctionWrappers$$FromJavaDoubleToIntFunction","location":"api/scala/jdk/FunctionWrappers$$FromJavaDoubleToIntFunction.html","searchKeys":["apply"]},{"name":"def end: Int","description":"scala.util.matching.Regex$$MatchData","location":"api/scala/util/matching/Regex$$MatchData.html","searchKeys":["end"]},{"name":"def duplicate: (Iterator[A], Iterator[A])","description":"scala.collection.Iterator","location":"api/scala/collection/Iterator.html","searchKeys":["duplicate"]},{"name":"def selectors: List[Selector]","description":"scala.quoted.Quotes$reflectModule$ImportMethods","location":"api/scala/quoted/Quotes$reflectModule$ImportMethods.html","searchKeys":["selectors"]},{"name":"val x$30: FromExpr[T12]","description":"scala.quoted.FromExpr$$Tuple18FromExpr","location":"api/scala/quoted/FromExpr$$Tuple18FromExpr.html","searchKeys":["x$30"]},{"name":"class RichToIntBiFunctionAsFunction2[T, U](underlying: ToIntBiFunction[T, U]) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichToIntBiFunctionAsFunction2","location":"api/scala/jdk/FunctionWrappers$$RichToIntBiFunctionAsFunction2.html","searchKeys":["RichToIntBiFunctionAsFunction2"]},{"name":"Built-in blog","description":"","location":"docs/usage/scala3doc/blog.html","searchKeys":["Built-in blog"]},{"name":"given Tuple20ToExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20]: ToExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20)]","description":"scala.quoted.ToExpr$$Tuple20ToExpr","location":"api/scala/quoted/ToExpr$$Tuple20ToExpr.html","searchKeys":["Tuple20ToExpr"]},{"name":"val x$4: Type[T4]","description":"scala.quoted.FromExpr$$Tuple21FromExpr","location":"api/scala/quoted/FromExpr$$Tuple21FromExpr.html","searchKeys":["x$4"]},{"name":"def tabulate[A, C](n: Int)(f: Int => A)(canAccumulate: AccumulatorFactoryShape[A, C]): C","description":"scala.jdk.Accumulator$","location":"api/scala/jdk/Accumulator$.html","searchKeys":["tabulate"]},{"name":"def removed(key: K): TreeMap[K, V]","description":"scala.collection.immutable.TreeMap","location":"api/scala/collection/immutable/TreeMap.html","searchKeys":["removed"]},{"name":"trait JFunction2$mcIJJ$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcIJJ$sp","location":"api/scala/runtime/java8/JFunction2$mcIJJ$sp.html","searchKeys":["JFunction2$mcIJJ$sp"]},{"name":"def *(x: Long): Float","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["*"]},{"name":"def scanRight[B](z: B)(op: (A, B) => B): CC[B]","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["scanRight"]},{"name":"def micro[C](c: C)(ev: Classifier[C]): R","description":"scala.concurrent.duration.DurationConversions","location":"api/scala/concurrent/duration/DurationConversions.html","searchKeys":["micro"]},{"name":"val x$26: FromExpr[T6]","description":"scala.quoted.FromExpr$$Tuple20FromExpr","location":"api/scala/quoted/FromExpr$$Tuple20FromExpr.html","searchKeys":["x$26"]},{"name":"val regex: Regex","description":"scala.util.matching.Regex$$MatchIterator","location":"api/scala/util/matching/Regex$$MatchIterator.html","searchKeys":["regex"]},{"name":"def /(divisor: Duration): Double","description":"scala.concurrent.duration.FiniteDuration","location":"api/scala/concurrent/duration/FiniteDuration.html","searchKeys":["/"]},{"name":"def asJavaSeqStream: IntStream","description":"scala.collection.convert.StreamExtensions$CharArrayHasSeqParStream","location":"api/scala/collection/convert/StreamExtensions$CharArrayHasSeqParStream.html","searchKeys":["asJavaSeqStream"]},{"name":"def apply(d: Double, mc: MathContext): BigDecimal","description":"scala.math.BigDecimal$","location":"api/scala/math/BigDecimal$.html","searchKeys":["apply"]},{"name":"def _13: T13","description":"scala.Product19","location":"api/scala/Product19.html","searchKeys":["_13"]},{"name":"def _15: T15","description":"scala.Product21","location":"api/scala/Product21.html","searchKeys":["_15"]},{"name":"object Equiv extends LowPriorityEquiv","description":"scala.math.Equiv$","location":"api/scala/math/Equiv$.html","searchKeys":["Equiv"]},{"name":"def bufferAsJavaList[A](b: Buffer[A]): List[A]","description":"scala.collection.JavaConverters$","location":"api/scala/collection/JavaConverters$.html","searchKeys":["bufferAsJavaList"]},{"name":"object BooleanProp","description":"scala.sys.BooleanProp$","location":"api/scala/sys/BooleanProp$.html","searchKeys":["BooleanProp"]},{"name":"def fromFunction[A, B](f: A => B): PartialFunction[A, B]","description":"scala.PartialFunction$","location":"api/scala/PartialFunction$.html","searchKeys":["fromFunction"]},{"name":"def exact(repr: BigDecimal): BigDecimal","description":"scala.math.BigDecimal$","location":"api/scala/math/BigDecimal$.html","searchKeys":["exact"]},{"name":"val x$17: FromExpr[T4]","description":"scala.quoted.FromExpr$$Tuple13FromExpr","location":"api/scala/quoted/FromExpr$$Tuple13FromExpr.html","searchKeys":["x$17"]},{"name":"trait ExtraImplicits","description":"scala.math.Ordering$$ExtraImplicits","location":"api/scala/math/Ordering$$ExtraImplicits.html","searchKeys":["ExtraImplicits"]},{"name":"object CollisionProofHashMap extends SortedMapFactory[[K, V] =>> CollisionProofHashMap[K, V]]","description":"scala.collection.mutable.CollisionProofHashMap$","location":"api/scala/collection/mutable/CollisionProofHashMap$.html","searchKeys":["CollisionProofHashMap"]},{"name":"def apply$mcJJD$sp(v1: Long, v2: Double): Long","description":"scala.runtime.java8.JFunction2$mcJJD$sp","location":"api/scala/runtime/java8/JFunction2$mcJJD$sp.html","searchKeys":["apply$mcJJD$sp"]},{"name":"given Tuple8ToExpr[T1, T2, T3, T4, T5, T6, T7, T8]: ToExpr[(T1, T2, T3, T4, T5, T6, T7, T8)]","description":"scala.quoted.ToExpr$$Tuple8ToExpr","location":"api/scala/quoted/ToExpr$$Tuple8ToExpr.html","searchKeys":["Tuple8ToExpr"]},{"name":"def wrapLongArray(xs: Array[Long]): ArraySeq[Long]","description":"scala.runtime.ScalaRunTime$","location":"api/scala/runtime/ScalaRunTime$.html","searchKeys":["wrapLongArray"]},{"name":"def ShortClass: Symbol","description":"scala.quoted.Quotes$reflectModule$defnModule","location":"api/scala/quoted/Quotes$reflectModule$defnModule.html","searchKeys":["ShortClass"]},{"name":"val x$12: Type[T12]","description":"scala.quoted.FromExpr$$Tuple21FromExpr","location":"api/scala/quoted/FromExpr$$Tuple21FromExpr.html","searchKeys":["x$12"]},{"name":"def guard: Option[Term]","description":"scala.quoted.Quotes$reflectModule$CaseDefMethods","location":"api/scala/quoted/Quotes$reflectModule$CaseDefMethods.html","searchKeys":["guard"]},{"name":"def asScala: (T, Double) => Unit","description":"scala.jdk.FunctionWrappers$$RichObjDoubleConsumerAsFunction2","location":"api/scala/jdk/FunctionWrappers$$RichObjDoubleConsumerAsFunction2.html","searchKeys":["asScala"]},{"name":"given ImplicitSearchSuccessMethods","description":"scala.quoted.Quotes$reflectModule$ImplicitSearchSuccessMethods","location":"api/scala/quoted/Quotes$reflectModule$ImplicitSearchSuccessMethods.html","searchKeys":["ImplicitSearchSuccessMethods"]},{"name":"given LambdaTypeTreeMethods","description":"scala.quoted.Quotes$reflectModule$LambdaTypeTreeMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["LambdaTypeTreeMethods"]},{"name":"type LazyList[+A] = LazyList[A]","description":"scala","location":"api/scala.html","searchKeys":["LazyList"]},{"name":"def update(index: Int, elem: Int): Unit","description":"scala.collection.mutable.ArraySeq$$ofInt","location":"api/scala/collection/mutable/ArraySeq$$ofInt.html","searchKeys":["update"]},{"name":"def readInt(): Int","description":"dotty.tools.tasty.TastyReader","location":"api/dotty/tools/tasty/TastyReader.html","searchKeys":["readInt"]},{"name":"def &(x: Int): Int","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["&"]},{"name":"type Filter[Tup <: Tuple, P <: ([_$6] =>> Boolean)] = Tup match {\n  case EmptyTuple => EmptyTuple\n  case h *: t => P[h] match {\n  case true => h *: Filter[t, P]\n  case false => Filter[t, P]\n}\n}","description":"scala.Tuple$","location":"api/scala/Tuple$.html","searchKeys":["Filter"]},{"name":"type TypeDef <: Definition","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeDef"]},{"name":"class UnrolledBuffer[T](val tag: ClassTag[T]) extends AbstractBuffer[T] with Buffer[T] with Seq[T] with SeqOps[T, [T] =>> UnrolledBuffer[T], UnrolledBuffer[T]] with StrictOptimizedSeqOps[T, [T] =>> UnrolledBuffer[T], UnrolledBuffer[T]] with EvidenceIterableFactoryDefaults[T, [T] =>> UnrolledBuffer[T], [T] =>> ClassTag[T]] with Builder[T, UnrolledBuffer[T]] with DefaultSerializable","description":"scala.collection.mutable.UnrolledBuffer","location":"api/scala/collection/mutable/UnrolledBuffer.html","searchKeys":["UnrolledBuffer"]},{"name":"def applyAsLong(x1: Long): Long","description":"scala.jdk.FunctionWrappers$$AsJavaLongUnaryOperator","location":"api/scala/jdk/FunctionWrappers$$AsJavaLongUnaryOperator.html","searchKeys":["applyAsLong"]},{"name":"def aggregate[B](z: => B)(seqop: (B, A) => B, combop: (B, B) => B): B","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["aggregate"]},{"name":"given RepeatedTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["RepeatedTypeTest"]},{"name":"class FileProcessLogger(file: File) extends ProcessLogger with Closeable with Flushable","description":"scala.sys.process.FileProcessLogger","location":"api/scala/sys/process/FileProcessLogger.html","searchKeys":["FileProcessLogger"]},{"name":"def startColumn: Int","description":"scala.quoted.Quotes$reflectModule$PositionMethods","location":"api/scala/quoted/Quotes$reflectModule$PositionMethods.html","searchKeys":["startColumn"]},{"name":"def apply(arr: Array[T])(using Quotes): Expr[Array[T]]","description":"scala.quoted.ToExpr$$ArrayToExpr","location":"api/scala/quoted/ToExpr$$ArrayToExpr.html","searchKeys":["apply"]},{"name":"Intersection Types","description":"","location":"docs/reference/new-types/intersection-types.html","searchKeys":["Intersection Types"]},{"name":"def isValidDouble: Boolean","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["isValidDouble"]},{"name":"trait Product extends Equals","description":"scala.Product","location":"api/scala/Product.html","searchKeys":["Product"]},{"name":"val toString: String","description":"scala.reflect.AnyValManifest","location":"api/scala/reflect/AnyValManifest.html","searchKeys":["toString"]},{"name":"def /(divisor: Long): FiniteDuration","description":"scala.concurrent.duration.FiniteDuration","location":"api/scala/concurrent/duration/FiniteDuration.html","searchKeys":["/"]},{"name":"def toFactory[Ev <: ([_$32] =>> Any), A, CC <: ([_$33] =>> Any)](factory: EvidenceIterableFactory[CC, Ev])(evidence$33: Ev[A]): Factory[A, CC[A]]","description":"scala.collection.EvidenceIterableFactory$","location":"api/scala/collection/EvidenceIterableFactory$.html","searchKeys":["toFactory"]},{"name":"given MethodTypeTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["MethodTypeTypeTest"]},{"name":"class any2stringadd[A](self: A) extends AnyVal","description":"scala.Predef$$any2stringadd","location":"api/scala/Predef$$any2stringadd.html","searchKeys":["any2stringadd"]},{"name":"def _10: T10","description":"scala.Product10","location":"api/scala/Product10.html","searchKeys":["_10"]},{"name":"Intersection Types - More Details","description":"","location":"docs/reference/new-types/intersection-types-spec.html","searchKeys":["Intersection Types - More Details"]},{"name":"def iterator: Iterator[A]","description":"scala.collection.immutable.Set$$Set2","location":"api/scala/collection/immutable/Set$$Set2.html","searchKeys":["iterator"]},{"name":"def copyToArray[T](xs: Array[U], start: Int): Int","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["copyToArray"]},{"name":"def unapply(x: Expr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21)])(using Quotes): Option[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21)]","description":"scala.quoted.FromExpr$$Tuple21FromExpr","location":"api/scala/quoted/FromExpr$$Tuple21FromExpr.html","searchKeys":["unapply"]},{"name":"New Types","description":"","location":"docs/New Types/index.html","searchKeys":["New Types"]},{"name":"object FloatIsFractional extends FloatIsFractional with IeeeOrdering","description":"scala.math.Numeric$$FloatIsFractional$","location":"api/scala/math/Numeric$$FloatIsFractional$.html","searchKeys":["FloatIsFractional"]},{"name":"def toSeq: Seq[A]","description":"scala.util.Either$$LeftProjection","location":"api/scala/util/Either$$LeftProjection.html","searchKeys":["toSeq"]},{"name":"def this(clazz: Class[T])","description":"scala.throws","location":"api/scala/throws.html","searchKeys":["this"]},{"name":"def apply(): T","description":"scala.ref.Reference","location":"api/scala/ref/Reference.html","searchKeys":["apply"]},{"name":"def rhs: Option[Term]","description":"scala.quoted.Quotes$reflectModule$DefDefMethods","location":"api/scala/quoted/Quotes$reflectModule$DefDefMethods.html","searchKeys":["rhs"]},{"name":"val SETTER_SUFFIX_STRING: \"_$eq\"","description":"scala.reflect.NameTransformer$","location":"api/scala/reflect/NameTransformer$.html","searchKeys":["SETTER_SUFFIX_STRING"]},{"name":"type Of[T] = Mirror { type MirroredType = T; type MirroredMonoType = T; type MirroredElemTypes <: Tuple;  }","description":"scala.deriving.Mirror$","location":"api/scala/deriving/Mirror$.html","searchKeys":["Of"]},{"name":"def unapply(x: TermRef): (TypeRepr, String)","description":"scala.quoted.Quotes$reflectModule$TermRefModule","location":"api/scala/quoted/Quotes$reflectModule$TermRefModule.html","searchKeys":["unapply"]},{"name":"val SINGLETONtpt: 101","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["SINGLETONtpt"]},{"name":"def asScalaFromIntToLongFunction(jf: IntToLongFunction): Integer => Long","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asScalaFromIntToLongFunction"]},{"name":"def +(that: BigInt): BigInt","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["+"]},{"name":"def unapply(x: Alternatives): Some[List[Tree]]","description":"scala.quoted.Quotes$reflectModule$AlternativesModule","location":"api/scala/quoted/Quotes$reflectModule$AlternativesModule.html","searchKeys":["unapply"]},{"name":"val x$27: FromExpr[T10]","description":"scala.quoted.FromExpr$$Tuple17FromExpr","location":"api/scala/quoted/FromExpr$$Tuple17FromExpr.html","searchKeys":["x$27"]},{"name":"def newBuilder[K, V](ordering: Ordering[K]): ReusableBuilder[(K, V), TreeMap[K, V]]","description":"scala.collection.immutable.TreeMap$","location":"api/scala/collection/immutable/TreeMap$.html","searchKeys":["newBuilder"]},{"name":"def apply(pattern: Tree, guard: Option[Term], rhs: Term): CaseDef","description":"scala.quoted.Quotes$reflectModule$CaseDefModule","location":"api/scala/quoted/Quotes$reflectModule$CaseDefModule.html","searchKeys":["apply"]},{"name":"def isRight: Boolean","description":"scala.util.Either","location":"api/scala/util/Either.html","searchKeys":["isRight"]},{"name":"object TreeSeqMap extends MapFactory[[K, V] =>> TreeSeqMap[K, V]]","description":"scala.collection.immutable.TreeSeqMap$","location":"api/scala/collection/immutable/TreeSeqMap$.html","searchKeys":["TreeSeqMap"]},{"name":"def apply(x: String, radix: Int): BigInt","description":"scala.math.BigInt$","location":"api/scala/math/BigInt$.html","searchKeys":["apply"]},{"name":"def fromSpecific(it: IterableOnce[Int]): BitSet","description":"scala.collection.immutable.BitSet$","location":"api/scala/collection/immutable/BitSet$.html","searchKeys":["fromSpecific"]},{"name":"def toLong: Long","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["toLong"]},{"name":"def _2: T2","description":"scala.Product19","location":"api/scala/Product19.html","searchKeys":["_2"]},{"name":"def +(x: Long): Long","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["+"]},{"name":"def sizeCompare(that: Iterable[]): Int","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["sizeCompare"]},{"name":"trait JFunction2$mcDDD$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcDDD$sp","location":"api/scala/runtime/java8/JFunction2$mcDDD$sp.html","searchKeys":["JFunction2$mcDDD$sp"]},{"name":"val x$1: Type[T1]","description":"scala.quoted.FromExpr$$Tuple16FromExpr","location":"api/scala/quoted/FromExpr$$Tuple16FromExpr.html","searchKeys":["x$1"]},{"name":"def isEmpty: Boolean","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["isEmpty"]},{"name":"def forall(p: A => Boolean): Boolean","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["forall"]},{"name":"class RichFunction0AsDoubleSupplier(underlying: () => Double) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichFunction0AsDoubleSupplier","location":"api/scala/jdk/FunctionWrappers$$RichFunction0AsDoubleSupplier.html","searchKeys":["RichFunction0AsDoubleSupplier"]},{"name":"def memberMethod(name: String): List[Symbol]","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["memberMethod"]},{"name":"def unapply(constant: CharConstant): Some[Char]","description":"scala.quoted.Quotes$reflectModule$CharConstantModule","location":"api/scala/quoted/Quotes$reflectModule$CharConstantModule.html","searchKeys":["unapply"]},{"name":"val x$24: FromExpr[T8]","description":"scala.quoted.FromExpr$$Tuple16FromExpr","location":"api/scala/quoted/FromExpr$$Tuple16FromExpr.html","searchKeys":["x$24"]},{"name":"given TypeParamClauseMethods","description":"scala.quoted.Quotes$reflectModule$TypeParamClauseMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeParamClauseMethods.html","searchKeys":["TypeParamClauseMethods"]},{"name":"trait JFunction0$mcB$sp extends () => Any with Serializable","description":"scala.runtime.java8.JFunction0$mcB$sp","location":"api/scala/runtime/java8/JFunction0$mcB$sp.html","searchKeys":["JFunction0$mcB$sp"]},{"name":"def Value(i: Int, name: String): Value","description":"scala.Enumeration","location":"api/scala/Enumeration.html","searchKeys":["Value"]},{"name":"def this(ord: Ordering[A])","description":"scala.collection.mutable.TreeSet","location":"api/scala/collection/mutable/TreeSet.html","searchKeys":["this"]},{"name":"def Artifact: Flags","description":"scala.quoted.Quotes$reflectModule$FlagsModule","location":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html","searchKeys":["Artifact"]},{"name":"def next(): String","description":"scala.io.Source$LineIterator","location":"api/scala/io/Source$LineIterator.html","searchKeys":["next"]},{"name":"given given_FromString_Float: FromString[Float]","description":"scala.util.CommandLineParser$$FromString$$given_FromString_Float$","location":"api/scala/util/CommandLineParser$$FromString$$given_FromString_Float$.html","searchKeys":["given_FromString_Float"]},{"name":"def lengthCompare(len: Int): Int","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["lengthCompare"]},{"name":"Option-less pattern matching","description":"","location":"docs/reference/changed-features/pattern-matching.html","searchKeys":["Option-less pattern matching"]},{"name":"def round(mc: MathContext): BigDecimal","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["round"]},{"name":"val x$11: Type[T11]","description":"scala.quoted.FromExpr$$Tuple11FromExpr","location":"api/scala/quoted/FromExpr$$Tuple11FromExpr.html","searchKeys":["x$11"]},{"name":"def excl(element: A): HashSet[A]","description":"scala.collection.immutable.HashSet","location":"api/scala/collection/immutable/HashSet.html","searchKeys":["excl"]},{"name":"val YELLOW_B: \"\\033[43m\"","description":"scala.io.AnsiColor","location":"api/scala/io/AnsiColor.html","searchKeys":["YELLOW_B"]},{"name":"def flatMap[U](f: T => Try[U]): Try[U]","description":"scala.util.Try$WithFilter","location":"api/scala/util/Try$WithFilter.html","searchKeys":["flatMap"]},{"name":"def mapAsJavaMap[K, V](m: Map[K, V]): Map[K, V]","description":"scala.collection.JavaConverters$","location":"api/scala/collection/JavaConverters$.html","searchKeys":["mapAsJavaMap"]},{"name":"def apply(idx: Int): A","description":"scala.collection.SeqView$$Prepended","location":"api/scala/collection/SeqView$$Prepended.html","searchKeys":["apply"]},{"name":"class FromJavaDoubleBinaryOperator(jf: DoubleBinaryOperator) extends (Double, Double) => Double","description":"scala.jdk.FunctionWrappers$$FromJavaDoubleBinaryOperator","location":"api/scala/jdk/FunctionWrappers$$FromJavaDoubleBinaryOperator.html","searchKeys":["FromJavaDoubleBinaryOperator"]},{"name":"def splitAt(n: Int): (String, String)","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["splitAt"]},{"name":"object *:","description":"scala.*:$","location":"api/scala/*:$.html","searchKeys":["*:"]},{"name":"type ImplicitSearchFailure <: ImplicitSearchResult","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ImplicitSearchFailure"]},{"name":"def asScalaFromToIntBiFunction[T, U](jf: ToIntBiFunction[T, U]): (T, U) => Integer","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asScalaFromToIntBiFunction"]},{"name":"val bigDecimal: BigDecimal","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["bigDecimal"]},{"name":"def -(x: Int): Int","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["-"]},{"name":"val x$4: Type[T4]","description":"scala.quoted.FromExpr$$Tuple6FromExpr","location":"api/scala/quoted/FromExpr$$Tuple6FromExpr.html","searchKeys":["x$4"]},{"name":"def lastKey: A","description":"scala.collection.SortedOps","location":"api/scala/collection/SortedOps.html","searchKeys":["lastKey"]},{"name":"def -(x: Long): Double","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["-"]},{"name":"def capitalize: String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["capitalize"]},{"name":"def apply$mcDIJ$sp(v1: Int, v2: Long): Double","description":"scala.runtime.java8.JFunction2$mcDIJ$sp","location":"api/scala/runtime/java8/JFunction2$mcDIJ$sp.html","searchKeys":["apply$mcDIJ$sp"]},{"name":"def apply(tup: (T1))(using Quotes): Expr[(T1)]","description":"scala.quoted.ToExpr$$Tuple1ToExpr","location":"api/scala/quoted/ToExpr$$Tuple1ToExpr.html","searchKeys":["apply"]},{"name":"def take(n: Int): Iterator[A]","description":"scala.collection.Iterator","location":"api/scala/collection/Iterator.html","searchKeys":["take"]},{"name":"def expm1(x: Double): Double","description":"scala.math","location":"api/scala/math.html","searchKeys":["expm1"]},{"name":"def iterator: Iterator[A]","description":"scala.collection.immutable.TreeSet","location":"api/scala/collection/immutable/TreeSet.html","searchKeys":["iterator"]},{"name":"given RefinementMethods","description":"scala.quoted.Quotes$reflectModule$RefinementMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["RefinementMethods"]},{"name":"def create(s: String): Duration","description":"scala.concurrent.duration.Duration$","location":"api/scala/concurrent/duration/Duration$.html","searchKeys":["create"]},{"name":"type While <: Term","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["While"]},{"name":"def ordering: Ordering[A]","description":"scala.collection.SortedOps","location":"api/scala/collection/SortedOps.html","searchKeys":["ordering"]},{"name":"val x$37: FromExpr[T18]","description":"scala.quoted.FromExpr$$Tuple19FromExpr","location":"api/scala/quoted/FromExpr$$Tuple19FromExpr.html","searchKeys":["x$37"]},{"name":"def tryCompare(x: T, y: T): Option[Int]","description":"scala.math.PartialOrdering","location":"api/scala/math/PartialOrdering.html","searchKeys":["tryCompare"]},{"name":"def addOne(key: Long, value: V): LongMap[V]","description":"scala.collection.mutable.LongMap","location":"api/scala/collection/mutable/LongMap.html","searchKeys":["addOne"]},{"name":"def unapply[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18](x: Product18[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18]): Option[Product18[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18]]","description":"scala.Product18$","location":"api/scala/Product18$.html","searchKeys":["unapply"]},{"name":"Announcing Dotty 0.19.0-RC1 – further refinements of the syntax and the migration to 2.13.1 standard library","description":"","location":"blog/2019/09/23/19th-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.19.0-RC1 – further refinements of the syntax and the migration to 2.13.1 standard library"]},{"name":"def toBuildFrom[V](factory: LongMap): BuildFrom[Any, (Long, V), LongMap[V]]","description":"scala.collection.immutable.LongMap$","location":"api/scala/collection/immutable/LongMap$.html","searchKeys":["toBuildFrom"]},{"name":"def combinations(n: Int): Iterator[C]","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["combinations"]},{"name":"object OptionConverters","description":"scala.jdk.OptionConverters$","location":"api/scala/jdk/OptionConverters$.html","searchKeys":["OptionConverters"]},{"name":"def asJava: DoubleUnaryOperator","description":"scala.jdk.FunctionWrappers$$RichFunction1AsDoubleUnaryOperator","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsDoubleUnaryOperator.html","searchKeys":["asJava"]},{"name":"def memberTypes: List[Symbol]","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["memberTypes"]},{"name":"val x$26: FromExpr[T13]","description":"scala.quoted.FromExpr$$Tuple13FromExpr","location":"api/scala/quoted/FromExpr$$Tuple13FromExpr.html","searchKeys":["x$26"]},{"name":"def sizeLong: Long","description":"scala.jdk.Accumulator","location":"api/scala/jdk/Accumulator.html","searchKeys":["sizeLong"]},{"name":"type PartiallyOrdered[T] = PartiallyOrdered[T]","description":"scala","location":"api/scala.html","searchKeys":["PartiallyOrdered"]},{"name":"Changes in Implicit Resolution","description":"","location":"docs/reference/changed-features/implicit-resolution.html","searchKeys":["Changes in Implicit Resolution"]},{"name":"def floatValue: Float","description":"scala.math.ScalaNumericAnyConversions","location":"api/scala/math/ScalaNumericAnyConversions.html","searchKeys":["floatValue"]},{"name":"def !=(x: Char): Boolean","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["!="]},{"name":"def productHashing: Hashing[Product]","description":"scala.util.hashing.MurmurHash3$","location":"api/scala/util/hashing/MurmurHash3$.html","searchKeys":["productHashing"]},{"name":"val jFloatStepperShape: StepperShape[Float, DoubleStepper]","description":"scala.collection.StepperShape$","location":"api/scala/collection/StepperShape$.html","searchKeys":["jFloatStepperShape"]},{"name":"val GenTraversableOnce: IterableOnce","description":"scala.collection","location":"api/scala/collection.html","searchKeys":["GenTraversableOnce"]},{"name":"def /(x: Byte): Int","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["/"]},{"name":"val TYPEBOUNDStpt: 164","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["TYPEBOUNDStpt"]},{"name":"def apply(x1: Int, x2: Int): Int","description":"scala.jdk.FunctionWrappers$$FromJavaIntBinaryOperator","location":"api/scala/jdk/FunctionWrappers$$FromJavaIntBinaryOperator.html","searchKeys":["apply"]},{"name":"def fromProductTyped[P <: Product](p: P)(using m: ProductOf[P]): <none>","description":"scala.Tuple$","location":"api/scala/Tuple$.html","searchKeys":["fromProductTyped"]},{"name":"def tabulate[A, C](n1: Int, n2: Int, n3: Int)(f: (Int, Int, Int) => A)(canAccumulate: AccumulatorFactoryShape[A, C]): AnyAccumulator[AnyAccumulator[C]]","description":"scala.jdk.Accumulator$","location":"api/scala/jdk/Accumulator$.html","searchKeys":["tabulate"]},{"name":"def patterns: List[Tree]","description":"scala.quoted.Quotes$reflectModule$AlternativesMethods","location":"api/scala/quoted/Quotes$reflectModule$AlternativesMethods.html","searchKeys":["patterns"]},{"name":"trait OrTypeModule","description":"scala.quoted.Quotes$reflectModule$OrTypeModule","location":"api/scala/quoted/Quotes$reflectModule$OrTypeModule.html","searchKeys":["OrTypeModule"]},{"name":"def apply(expr: Term, selectors: List[Selector]): Import","description":"scala.quoted.Quotes$reflectModule$ImportModule","location":"api/scala/quoted/Quotes$reflectModule$ImportModule.html","searchKeys":["apply"]},{"name":"def foreach[U](f: T => U): Unit","description":"scala.util.Try","location":"api/scala/util/Try.html","searchKeys":["foreach"]},{"name":"def _8: T8","description":"scala.Product19","location":"api/scala/Product19.html","searchKeys":["_8"]},{"name":"trait Function8[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, +R] extends AnyRef","description":"scala.Function8","location":"api/scala/Function8.html","searchKeys":["Function8"]},{"name":"def enumeration asJava[A](it: Iterator[A]): Enumeration[A]","description":"scala.collection.convert.ToJavaImplicits","location":"api/scala/collection/convert/ToJavaImplicits.html","searchKeys":["enumeration asJava"]},{"name":"def _2: T2","description":"scala.Product6","location":"api/scala/Product6.html","searchKeys":["_2"]},{"name":"def isTypeParam: Boolean","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["isTypeParam"]},{"name":"trait SortedMapFactory[+CC <: ([_$57, _$58] =>> Any)] extends Serializable","description":"scala.collection.SortedMapFactory","location":"api/scala/collection/SortedMapFactory.html","searchKeys":["SortedMapFactory"]},{"name":"def partitionMap(f: Char => Either[Char, Char]): (String, String)","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["partitionMap"]},{"name":"class ArrayCharSequence(val xs: Array[Char], start: Int, end: Int) extends CharSequence","description":"scala.runtime.ArrayCharSequence","location":"api/scala/runtime/ArrayCharSequence.html","searchKeys":["ArrayCharSequence"]},{"name":"def >>>(x: Long): Int","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":[">>>"]},{"name":"given Tuple4FromExpr[T1, T2, T3, T4](using val x$1: Type[T1], val x$2: Type[T2], val x$3: Type[T3], val x$4: Type[T4], val x$5: FromExpr[T1], val x$6: FromExpr[T2], val x$7: FromExpr[T3], val x$8: FromExpr[T4]): FromExpr[(T1, T2, T3, T4)]","description":"scala.quoted.FromExpr$$Tuple4FromExpr","location":"api/scala/quoted/FromExpr$$Tuple4FromExpr.html","searchKeys":["Tuple4FromExpr"]},{"name":"val stringViewIsSeq: IsSeq[StringView] { type A = Char; type C = View[Char];  }","description":"scala.collection.generic.IsSeq$","location":"api/scala/collection/generic/IsSeq$.html","searchKeys":["stringViewIsSeq"]},{"name":"def /(x: Double): Double","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["/"]},{"name":"val FINAL: 10","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["FINAL"]},{"name":"val x$22: FromExpr[T7]","description":"scala.quoted.FromExpr$$Tuple15FromExpr","location":"api/scala/quoted/FromExpr$$Tuple15FromExpr.html","searchKeys":["x$22"]},{"name":"def >=(x: Long): Boolean","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":[">="]},{"name":"def length: Int","description":"scala.collection.SeqView$$DropRight","location":"api/scala/collection/SeqView$$DropRight.html","searchKeys":["length"]},{"name":"class LongStreamHasToScala(stream: LongStream)","description":"scala.collection.convert.StreamExtensions$LongStreamHasToScala","location":"api/scala/collection/convert/StreamExtensions$LongStreamHasToScala.html","searchKeys":["LongStreamHasToScala"]},{"name":"def >(x: Short): Boolean","description":"scala.Char","location":"api/scala/Char.html","searchKeys":[">"]},{"name":"def applyAsInt(x1: Int): Int","description":"scala.jdk.FunctionWrappers$$AsJavaIntUnaryOperator","location":"api/scala/jdk/FunctionWrappers$$AsJavaIntUnaryOperator.html","searchKeys":["applyAsInt"]},{"name":"def update(idx: Int, elem: Long): Unit","description":"scala.jdk.LongAccumulator","location":"api/scala/jdk/LongAccumulator.html","searchKeys":["update"]},{"name":"def empty[A]: Option[A]","description":"scala.Option$","location":"api/scala/Option$.html","searchKeys":["empty"]},{"name":"def _4: T4","description":"scala.Product20","location":"api/scala/Product20.html","searchKeys":["_4"]},{"name":"def apply(n: Int): Int","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["apply"]},{"name":"given DefinitionMethods","description":"scala.quoted.Quotes$reflectModule$DefinitionMethods","location":"api/scala/quoted/Quotes$reflectModule$DefinitionMethods.html","searchKeys":["DefinitionMethods"]},{"name":"def !=(x: Int): Boolean","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["!="]},{"name":"object higherKinds extends higherKinds","description":"scala.languageFeature$$higherKinds$","location":"api/scala/languageFeature$$higherKinds$.html","searchKeys":["higherKinds"]},{"name":"def >>(x: Long): Int","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":[">>"]},{"name":"class MalformedNumber(msg: String) extends FromDigitsException","description":"scala.util.FromDigits$$MalformedNumber","location":"api/scala/util/FromDigits$$MalformedNumber.html","searchKeys":["MalformedNumber"]},{"name":"def map(f: Char => Char): String","description":"scala.collection.StringOps$$WithFilter","location":"api/scala/collection/StringOps$$WithFilter.html","searchKeys":["map"]},{"name":"0.1.2 release notes","description":"","location":"docs/release-notes/0.1.2.html","searchKeys":["0.1.2 release notes"]},{"name":"def milli[C](c: C)(ev: Classifier[C]): R","description":"scala.concurrent.duration.DurationConversions","location":"api/scala/concurrent/duration/DurationConversions.html","searchKeys":["milli"]},{"name":"given PolyTypeTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["PolyTypeTypeTest"]},{"name":"def ^(x: Long): Long","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["^"]},{"name":"def asScala[A](s: Set[A]): Set[A]","description":"scala.collection.convert.AsScalaConverters","location":"api/scala/collection/convert/AsScalaConverters.html","searchKeys":["asScala"]},{"name":"def long2Long(x: Long): Long","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["long2Long"]},{"name":"def iterate[A](start: => A)(f: A => A): LazyList[A]","description":"scala.collection.immutable.LazyList$","location":"api/scala/collection/immutable/LazyList$.html","searchKeys":["iterate"]},{"name":"def permutations: Iterator[C]","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["permutations"]},{"name":"def clear(): Unit","description":"scala.collection.mutable.AnyRefMap$$AnyRefMapBuilder","location":"api/scala/collection/mutable/AnyRefMap$$AnyRefMapBuilder.html","searchKeys":["clear"]},{"name":"def map(f: Char => Char): String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["map"]},{"name":"def _16: T16","description":"scala.Product17","location":"api/scala/Product17.html","searchKeys":["_16"]},{"name":"type Configure[T] = (T => T, Boolean)","description":"scala.io.Codec","location":"api/scala/io/Codec.html","searchKeys":["Configure"]},{"name":"def box(x: Long): Long","description":"scala.Long$","location":"api/scala/Long$.html","searchKeys":["box"]},{"name":"def millisecond[C](c: C)(ev: Classifier[C]): R","description":"scala.concurrent.duration.DurationConversions","location":"api/scala/concurrent/duration/DurationConversions.html","searchKeys":["millisecond"]},{"name":"def iterator: Iterator[A]","description":"scala.collection.View$$Prepended","location":"api/scala/collection/View$$Prepended.html","searchKeys":["iterator"]},{"name":"def toBitMask: Array[Long]","description":"scala.collection.BitSetOps","location":"api/scala/collection/BitSetOps.html","searchKeys":["toBitMask"]},{"name":"def diff(that: Set[A]): C","description":"scala.collection.SetOps","location":"api/scala/collection/SetOps.html","searchKeys":["diff"]},{"name":"def +(x: Byte): Int","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["+"]},{"name":"def apply$mcDJD$sp(v1: Long, v2: Double): Double","description":"scala.runtime.java8.JFunction2$mcDJD$sp","location":"api/scala/runtime/java8/JFunction2$mcDJD$sp.html","searchKeys":["apply$mcDJD$sp"]},{"name":"val GenMap: Map","description":"scala.collection","location":"api/scala/collection.html","searchKeys":["GenMap"]},{"name":"given ApplyMethods","description":"scala.quoted.Quotes$reflectModule$ApplyMethods","location":"api/scala/quoted/Quotes$reflectModule$ApplyMethods.html","searchKeys":["ApplyMethods"]},{"name":"def from[E](it: IterableOnce[E]): Set[E]","description":"scala.collection.immutable.Set$","location":"api/scala/collection/immutable/Set$.html","searchKeys":["from"]},{"name":"given ArrayOfDoubleToExpr: ToExpr[Array[Double]]","description":"scala.quoted.ToExpr$$ArrayOfDoubleToExpr$","location":"api/scala/quoted/ToExpr$$ArrayOfDoubleToExpr$.html","searchKeys":["ArrayOfDoubleToExpr"]},{"name":"trait existentials","description":"scala.languageFeature$$existentials","location":"api/scala/languageFeature$$existentials.html","searchKeys":["existentials"]},{"name":"def enrichAsJavaToLongBiFunction[T, U](sf: (T, U) => Long): RichFunction2AsToLongBiFunction[T, U]","description":"scala.jdk.Priority2FunctionExtensions","location":"api/scala/jdk/Priority2FunctionExtensions.html","searchKeys":["enrichAsJavaToLongBiFunction"]},{"name":"def reverseBytes: Char","description":"scala.runtime.RichChar","location":"api/scala/runtime/RichChar.html","searchKeys":["reverseBytes"]},{"name":"object Short extends ShortOrdering","description":"scala.math.Ordering$$Short$","location":"api/scala/math/Ordering$$Short$.html","searchKeys":["Short"]},{"name":"val Integral: Group[(Byte, Short, Int, Long, Char)]","description":"scala.Specializable$","location":"api/scala/Specializable$.html","searchKeys":["Integral"]},{"name":"def self: Reference[ <: T]","description":"scala.ref.ReferenceWrapper","location":"api/scala/ref/ReferenceWrapper.html","searchKeys":["self"]},{"name":"def foldRight[B](z: B)(op: (A, B) => B): B","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["foldRight"]},{"name":"val x$7: Type[T7]","description":"scala.quoted.FromExpr$$Tuple15FromExpr","location":"api/scala/quoted/FromExpr$$Tuple15FromExpr.html","searchKeys":["x$7"]},{"name":"given TypeBlockMethods","description":"scala.quoted.Quotes$reflectModule$TypeBlockMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeBlockMethods"]},{"name":"def copy(original: Tree)(qualifier: Term, name: String): Select","description":"scala.quoted.Quotes$reflectModule$SelectModule","location":"api/scala/quoted/Quotes$reflectModule$SelectModule.html","searchKeys":["copy"]},{"name":"val start: T","description":"scala.collection.immutable.NumericRange","location":"api/scala/collection/immutable/NumericRange.html","searchKeys":["start"]},{"name":"def >=(x: Short): Boolean","description":"scala.Char","location":"api/scala/Char.html","searchKeys":[">="]},{"name":"def excl(elem: A): ListSet[A]","description":"scala.collection.immutable.ListSet","location":"api/scala/collection/immutable/ListSet.html","searchKeys":["excl"]},{"name":"def appliedTo(targ: TypeRepr): TypeRepr","description":"scala.quoted.Quotes$reflectModule$TypeReprMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html","searchKeys":["appliedTo"]},{"name":"def _6: T6","description":"scala.Product14","location":"api/scala/Product14.html","searchKeys":["_6"]},{"name":"given TypeBindTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeBindTypeTest"]},{"name":"def toFloat(x: BigDecimal): Float","description":"scala.math.Numeric$$BigDecimalIsConflicted","location":"api/scala/math/Numeric$$BigDecimalIsConflicted.html","searchKeys":["toFloat"]},{"name":"def toLong(x: Int): Long","description":"scala.math.Numeric$$IntIsIntegral","location":"api/scala/math/Numeric$$IntIsIntegral.html","searchKeys":["toLong"]},{"name":"def +(x: Int): Float","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["+"]},{"name":"def curried: T1 => T2 => T3 => T4 => T5 => T6 => T7 => T8 => T9 => T10 => T11 => T12 => T13 => T14 => R","description":"scala.Function14","location":"api/scala/Function14.html","searchKeys":["curried"]},{"name":"class static extends StaticAnnotation","description":"scala.annotation.static","location":"api/scala/annotation/static.html","searchKeys":["static"]},{"name":"object Product19","description":"scala.Product19$","location":"api/scala/Product19$.html","searchKeys":["Product19"]},{"name":"def -(x: Char): Int","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["-"]},{"name":"val MinValue: -9223372036854775808L","description":"scala.Long$","location":"api/scala/Long$.html","searchKeys":["MinValue"]},{"name":"def &(x: Byte): Int","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["&"]},{"name":"def double2bigDecimal(d: Double): BigDecimal","description":"scala.math.BigDecimal$","location":"api/scala/math/BigDecimal$.html","searchKeys":["double2bigDecimal"]},{"name":"val AnnotatedType: AnnotatedTypeModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["AnnotatedType"]},{"name":"def runtime: Runtime","description":"scala.sys","location":"api/scala/sys.html","searchKeys":["runtime"]},{"name":"def compose[R](k: PartialFunction[R, A]): PartialFunction[R, B]","description":"scala.PartialFunction","location":"api/scala/PartialFunction.html","searchKeys":["compose"]},{"name":"object fromNowConvert extends Classifier[fromNow]","description":"scala.concurrent.duration.DurationConversions$$fromNowConvert$","location":"api/scala/concurrent/duration/DurationConversions$$fromNowConvert$.html","searchKeys":["fromNowConvert"]},{"name":"def /(x: Float): Float","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["/"]},{"name":"def apply(l: Long): BigDecimal","description":"scala.math.BigDecimal$","location":"api/scala/math/BigDecimal$.html","searchKeys":["apply"]},{"name":"def apply(start: BigInt, end: BigInt, step: BigInt): Exclusive[BigInt]","description":"scala.collection.immutable.Range$$BigInt$","location":"api/scala/collection/immutable/Range$$BigInt$.html","searchKeys":["apply"]},{"name":"def cos(x: Double): Double","description":"scala.math","location":"api/scala/math.html","searchKeys":["cos"]},{"name":"def pos: Option[Position]","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["pos"]},{"name":"def apply(x1: Long): R","description":"scala.jdk.FunctionWrappers$$AsJavaLongFunction","location":"api/scala/jdk/FunctionWrappers$$AsJavaLongFunction.html","searchKeys":["apply"]},{"name":"def <(that: A): Boolean","description":"scala.math.Ordered","location":"api/scala/math/Ordered.html","searchKeys":["<"]},{"name":"val groupNames: Seq[String]","description":"scala.util.matching.Regex$$MatchIterator","location":"api/scala/util/matching/Regex$$MatchIterator.html","searchKeys":["groupNames"]},{"name":"val ByteShape: Shape","description":"scala.collection.StepperShape$","location":"api/scala/collection/StepperShape$.html","searchKeys":["ByteShape"]},{"name":"def +(x: Short): Double","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["+"]},{"name":"val x$31: FromExpr[T9]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["x$31"]},{"name":"object View extends IterableFactory[[A] =>> View[A]]","description":"scala.collection.View$","location":"api/scala/collection/View$.html","searchKeys":["View"]},{"name":"val UTF8: Codec","description":"scala.io.Codec$","location":"api/scala/io/Codec$.html","searchKeys":["UTF8"]},{"name":"def span(p: A => Boolean): (C, C)","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["span"]},{"name":"def ParamAccessor: Flags","description":"scala.quoted.Quotes$reflectModule$FlagsModule","location":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html","searchKeys":["ParamAccessor"]},{"name":"def showError(err: ParseError): Unit","description":"scala.util.CommandLineParser$","location":"api/scala/util/CommandLineParser$.html","searchKeys":["showError"]},{"name":"val x$9: FromExpr[T3]","description":"scala.quoted.FromExpr$$Tuple6FromExpr","location":"api/scala/quoted/FromExpr$$Tuple6FromExpr.html","searchKeys":["x$9"]},{"name":"def %(x: Char): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["%"]},{"name":"def incl(elem: K): SortedSet[K]","description":"scala.collection.immutable.SortedMapOps$ImmutableKeySortedSet","location":"api/scala/collection/immutable/SortedMapOps$ImmutableKeySortedSet.html","searchKeys":["incl"]},{"name":"def incl(elem: A): C","description":"scala.collection.immutable.SetOps","location":"api/scala/collection/immutable/SetOps.html","searchKeys":["incl"]},{"name":"trait Function22[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, -T14, -T15, -T16, -T17, -T18, -T19, -T20, -T21, -T22, +R] extends AnyRef","description":"scala.Function22","location":"api/scala/Function22.html","searchKeys":["Function22"]},{"name":"object Buffer extends Delegate[[A] =>> Buffer[A]]","description":"scala.collection.mutable.Buffer$","location":"api/scala/collection/mutable/Buffer$.html","searchKeys":["Buffer"]},{"name":"val TreePrinter: Printer[Tree]","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TreePrinter"]},{"name":"def newBuilder[V]: Builder[(Int, V), IntMap[V]]","description":"scala.collection.immutable.IntMap$","location":"api/scala/collection/immutable/IntMap$.html","searchKeys":["newBuilder"]},{"name":"def iterator: Iterator[(K, V)]","description":"scala.collection.immutable.VectorMap","location":"api/scala/collection/immutable/VectorMap.html","searchKeys":["iterator"]},{"name":"Rules for Operators","description":"","location":"docs/reference/changed-features/operators.html","searchKeys":["Rules for Operators"]},{"name":"type Entry = Entry[A]","description":"scala.collection.mutable.LinkedHashSet","location":"api/scala/collection/mutable/LinkedHashSet.html","searchKeys":["Entry"]},{"name":"def *:[H, This >: Tuple <: Tuple](x: H): H *: This","description":"scala.Tuple","location":"api/scala/Tuple.html","searchKeys":["*:"]},{"name":"def iteratorFrom(start: A): Iterator[A]","description":"scala.collection.immutable.TreeSet","location":"api/scala/collection/immutable/TreeSet.html","searchKeys":["iteratorFrom"]},{"name":"def constValue[T]: T","description":"scala.compiletime","location":"api/scala/compiletime.html","searchKeys":["constValue"]},{"name":"class Iterate[A](start: A, len: Int)(f: A => A) extends AbstractView[A]","description":"scala.collection.View$$Iterate","location":"api/scala/collection/View$$Iterate.html","searchKeys":["Iterate"]},{"name":"def >(x: Int): Boolean","description":"scala.Long","location":"api/scala/Long.html","searchKeys":[">"]},{"name":"given SeqToExpr[T]: ToExpr[Seq[T]]","description":"scala.quoted.ToExpr$$SeqToExpr","location":"api/scala/quoted/ToExpr$$SeqToExpr.html","searchKeys":["SeqToExpr"]},{"name":"trait reflectModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["reflectModule"]},{"name":"val x$18: Type[T18]","description":"scala.quoted.FromExpr$$Tuple18FromExpr","location":"api/scala/quoted/FromExpr$$Tuple18FromExpr.html","searchKeys":["x$18"]},{"name":"def _3: T3","description":"scala.Product13","location":"api/scala/Product13.html","searchKeys":["_3"]},{"name":"def _1: T1","description":"scala.Product5","location":"api/scala/Product5.html","searchKeys":["_1"]},{"name":"def long2double(x: Long): Double","description":"scala.Long$","location":"api/scala/Long$.html","searchKeys":["long2double"]},{"name":"given SingletonMethods","description":"scala.quoted.Quotes$reflectModule$SingletonMethods","location":"api/scala/quoted/Quotes$reflectModule$SingletonMethods.html","searchKeys":["SingletonMethods"]},{"name":"val x$26: FromExpr[T9]","description":"scala.quoted.FromExpr$$Tuple17FromExpr","location":"api/scala/quoted/FromExpr$$Tuple17FromExpr.html","searchKeys":["x$26"]},{"name":"val YELLOW: \"\\033[33m\"","description":"scala.io.AnsiColor","location":"api/scala/io/AnsiColor.html","searchKeys":["YELLOW"]},{"name":"def ++:[B >: A](that: IterableOnce[B]): CC[B]","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["++:"]},{"name":"def unapply(t: Throwable): Option[Throwable]","description":"scala.util.control.NonFatal$","location":"api/scala/util/control/NonFatal$.html","searchKeys":["unapply"]},{"name":"def setFlag(t: Object, offset: Long, v: Int, ord: Int): Unit","description":"scala.runtime.LazyVals$","location":"api/scala/runtime/LazyVals$.html","searchKeys":["setFlag"]},{"name":"def _19: T19","description":"scala.Product22","location":"api/scala/Product22.html","searchKeys":["_19"]},{"name":"def apply$mcDID$sp(v1: Int, v2: Double): Double","description":"scala.runtime.java8.JFunction2$mcDID$sp","location":"api/scala/runtime/java8/JFunction2$mcDID$sp.html","searchKeys":["apply$mcDID$sp"]},{"name":"def asJavaParValueDoubleStream[K](m: Map[K, Double]): DoubleStream","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaParValueDoubleStream"]},{"name":"def compare(other: Deadline): Int","description":"scala.concurrent.duration.Deadline","location":"api/scala/concurrent/duration/Deadline.html","searchKeys":["compare"]},{"name":"def continually[A](elem: => A): LazyList[A]","description":"scala.collection.immutable.LazyList$","location":"api/scala/collection/immutable/LazyList$.html","searchKeys":["continually"]},{"name":"def asJavaBinaryOperator: BinaryOperator[T]","description":"scala.jdk.FunctionWrappers$$RichFunction2AsBinaryOperator","location":"api/scala/jdk/FunctionWrappers$$RichFunction2AsBinaryOperator.html","searchKeys":["asJavaBinaryOperator"]},{"name":"def newBuilder[A]: ReusableBuilder[A, HashSet[A]]","description":"scala.collection.immutable.HashSet$","location":"api/scala/collection/immutable/HashSet$.html","searchKeys":["newBuilder"]},{"name":"def toArray: Array[Int]","description":"scala.jdk.IntAccumulator","location":"api/scala/jdk/IntAccumulator.html","searchKeys":["toArray"]},{"name":"def get(key: K): Option[V]","description":"scala.collection.mutable.TreeMap","location":"api/scala/collection/mutable/TreeMap.html","searchKeys":["get"]},{"name":"def filter[T](p: T => Boolean): IArray[T]","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["filter"]},{"name":"class DurationDouble(d: Double) extends AnyVal with DurationConversions","description":"scala.concurrent.duration.package$$DurationDouble","location":"api/scala/concurrent/duration/package$$DurationDouble.html","searchKeys":["DurationDouble"]},{"name":"def trySplit(): Spliterator[A]","description":"scala.collection.AnyStepper$$AnyStepperSpliterator","location":"api/scala/collection/AnyStepper$$AnyStepperSpliterator.html","searchKeys":["trySplit"]},{"name":"def transformValuesInPlace(f: V => V): AnyRefMap[K, V]","description":"scala.collection.mutable.AnyRefMap","location":"api/scala/collection/mutable/AnyRefMap.html","searchKeys":["transformValuesInPlace"]},{"name":"object Predef extends LowPriorityImplicits","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["Predef"]},{"name":"def foreach[U](f: (El1, El2) => U): Unit","description":"scala.runtime.Tuple2Zipped","location":"api/scala/runtime/Tuple2Zipped.html","searchKeys":["foreach"]},{"name":"def wrapDoubleArray(xs: Array[Double]): ArraySeq[Double]","description":"scala.runtime.ScalaRunTime$","location":"api/scala/runtime/ScalaRunTime$.html","searchKeys":["wrapDoubleArray"]},{"name":"def cat: ProcessBuilder","description":"scala.sys.process.ProcessBuilder$$Source","location":"api/scala/sys/process/ProcessBuilder$$Source.html","searchKeys":["cat"]},{"name":"def enrichAsJavaObjLongConsumer[T, A1](sf: (T, A1) => Unit)(evA1: A1 =:= Long): RichFunction2AsObjLongConsumer[T]","description":"scala.jdk.Priority1FunctionExtensions","location":"api/scala/jdk/Priority1FunctionExtensions.html","searchKeys":["enrichAsJavaObjLongConsumer"]},{"name":"def apply(x1: Long): Long","description":"scala.jdk.FunctionWrappers$$FromJavaLongUnaryOperator","location":"api/scala/jdk/FunctionWrappers$$FromJavaLongUnaryOperator.html","searchKeys":["apply"]},{"name":"val Left: Left","description":"scala","location":"api/scala.html","searchKeys":["Left"]},{"name":"def byte2float(x: Byte): Float","description":"scala.Byte$","location":"api/scala/Byte$.html","searchKeys":["byte2float"]},{"name":"def apply(inline x: Int, inline xs: Int*): IArray[Int]","description":"scala.IArray$package$$IArray$","location":"api/scala/IArray$package$$IArray$.html","searchKeys":["apply"]},{"name":"def asScala: T => T","description":"scala.jdk.FunctionWrappers$$RichUnaryOperatorAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichUnaryOperatorAsFunction1.html","searchKeys":["asScala"]},{"name":"def millis: FiniteDuration","description":"scala.concurrent.duration.DurationConversions","location":"api/scala/concurrent/duration/DurationConversions.html","searchKeys":["millis"]},{"name":"class ofLong extends ArrayBuilder[Long]","description":"scala.collection.mutable.ArrayBuilder$$ofLong","location":"api/scala/collection/mutable/ArrayBuilder$$ofLong.html","searchKeys":["ofLong"]},{"name":"class CollectionHasAsScala[A](c: Collection[A])","description":"scala.collection.convert.AsScalaExtensions$CollectionHasAsScala","location":"api/scala/collection/convert/AsScalaExtensions$CollectionHasAsScala.html","searchKeys":["CollectionHasAsScala"]},{"name":"def asScala: Double => Long","description":"scala.jdk.FunctionWrappers$$RichDoubleToLongFunctionAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichDoubleToLongFunctionAsFunction1.html","searchKeys":["asScala"]},{"name":"trait MapFactoryDefaults[K, +V, +CC <: ([x, y] =>> IterableOps[(x, y), [A] =>> Iterable[A], Iterable[(x, y)]]), +WithFilterCC <: ([x] =>> IterableOps[x, WithFilterCC, WithFilterCC[x]] & Iterable[x])] extends MapOps[K, V, CC, CC[K, V]] with IterableOps[(K, V), WithFilterCC, CC[K, V]]","description":"scala.collection.MapFactoryDefaults","location":"api/scala/collection/MapFactoryDefaults.html","searchKeys":["MapFactoryDefaults"]},{"name":"def apply(): T","description":"scala.jdk.FunctionWrappers$$FromJavaSupplier","location":"api/scala/jdk/FunctionWrappers$$FromJavaSupplier.html","searchKeys":["apply"]},{"name":"def -(x: Float): Float","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["-"]},{"name":"def exitValue(): Int","description":"scala.sys.process.Process","location":"api/scala/sys/process/Process.html","searchKeys":["exitValue"]},{"name":"class ofInt(val unsafeArray: Array[Int]) extends ArraySeq[Int]","description":"scala.collection.immutable.ArraySeq$$ofInt","location":"api/scala/collection/immutable/ArraySeq$$ofInt.html","searchKeys":["ofInt"]},{"name":"def initialize(value: Char): Char","description":"scala.runtime.LazyChar","location":"api/scala/runtime/LazyChar.html","searchKeys":["initialize"]},{"name":"class *:[+H, +T <: Tuple] extends NonEmptyTuple","description":"scala.*:","location":"api/scala/*:.html","searchKeys":["*:"]},{"name":"val x$11: Type[T11]","description":"scala.quoted.FromExpr$$Tuple20FromExpr","location":"api/scala/quoted/FromExpr$$Tuple20FromExpr.html","searchKeys":["x$11"]},{"name":"def apply$mcIDI$sp(v1: Double, v2: Int): Int","description":"scala.runtime.java8.JFunction2$mcIDI$sp","location":"api/scala/runtime/java8/JFunction2$mcIDI$sp.html","searchKeys":["apply$mcIDI$sp"]},{"name":"def toShort: Short","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["toShort"]},{"name":"val x$20: FromExpr[T6]","description":"scala.quoted.FromExpr$$Tuple14FromExpr","location":"api/scala/quoted/FromExpr$$Tuple14FromExpr.html","searchKeys":["x$20"]},{"name":"val self: Random","description":"scala.util.Random","location":"api/scala/util/Random.html","searchKeys":["self"]},{"name":"def apply(inline x: Double, inline xs: Double*): IArray[Double]","description":"scala.IArray$package$$IArray$","location":"api/scala/IArray$package$$IArray$.html","searchKeys":["apply"]},{"name":"def seq: Iterator[A]","description":"scala.collection.Iterator","location":"api/scala/collection/Iterator.html","searchKeys":["seq"]},{"name":"def enrichAsScalaFromDoubleConsumer(jf: DoubleConsumer): RichDoubleConsumerAsFunction1","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsScalaFromDoubleConsumer"]},{"name":"def withOut[T](out: PrintStream)(thunk: => T): T","description":"scala.Console$","location":"api/scala/Console$.html","searchKeys":["withOut"]},{"name":"def +=(key: Long, value: V): LongMap[V]","description":"scala.collection.mutable.LongMap","location":"api/scala/collection/mutable/LongMap.html","searchKeys":["+="]},{"name":"val x$39: FromExpr[T17]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["x$39"]},{"name":"def flatMap(f: Char => String): String","description":"scala.collection.StringOps$$WithFilter","location":"api/scala/collection/StringOps$$WithFilter.html","searchKeys":["flatMap"]},{"name":"def unapply[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12](x: Product12[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12]): Option[Product12[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12]]","description":"scala.Product12$","location":"api/scala/Product12$.html","searchKeys":["unapply"]},{"name":"def apply(x1: Int): Boolean","description":"scala.jdk.FunctionWrappers$$FromJavaIntPredicate","location":"api/scala/jdk/FunctionWrappers$$FromJavaIntPredicate.html","searchKeys":["apply"]},{"name":"val javaIntegerStreamUnboxer: StreamUnboxer[Integer, IntStream]","description":"scala.collection.convert.StreamExtensions$$StreamUnboxer$","location":"api/scala/collection/convert/StreamExtensions$$StreamUnboxer$.html","searchKeys":["javaIntegerStreamUnboxer"]},{"name":"def toArray: Array[Object]","description":"scala.Tuple","location":"api/scala/Tuple.html","searchKeys":["toArray"]},{"name":"def forall(p: (El1, El2) => Boolean): Boolean","description":"scala.collection.LazyZip2","location":"api/scala/collection/LazyZip2.html","searchKeys":["forall"]},{"name":"class Unfold[A, S](initial: S)(f: S => Option[(A, S)]) extends AbstractView[A]","description":"scala.collection.View$$Unfold","location":"api/scala/collection/View$$Unfold.html","searchKeys":["Unfold"]},{"name":"def asJava: DoubleToIntFunction","description":"scala.jdk.FunctionWrappers$$RichFunction1AsDoubleToIntFunction","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsDoubleToIntFunction.html","searchKeys":["asJava"]},{"name":"def copy(original: Tree)(tpt: TypeTree, args: List[Tree]): Applied","description":"scala.quoted.Quotes$reflectModule$AppliedModule","location":"api/scala/quoted/Quotes$reflectModule$AppliedModule.html","searchKeys":["copy"]},{"name":"val x$15: Type[T15]","description":"scala.quoted.FromExpr$$Tuple21FromExpr","location":"api/scala/quoted/FromExpr$$Tuple21FromExpr.html","searchKeys":["x$15"]},{"name":"def max(ord: Ordering[A]): A","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["max"]},{"name":"def checkLengths(args: Seq[Any], parts: Seq[String]): Unit","description":"scala.StringContext$","location":"api/scala/StringContext$.html","searchKeys":["checkLengths"]},{"name":"class RichFunction1AsDoubleToIntFunction(underlying: Double => Int) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichFunction1AsDoubleToIntFunction","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsDoubleToIntFunction.html","searchKeys":["RichFunction1AsDoubleToIntFunction"]},{"name":"def exists(p: (El1, El2) => Boolean): Boolean","description":"scala.collection.LazyZip2","location":"api/scala/collection/LazyZip2.html","searchKeys":["exists"]},{"name":"def unapply(x: SelectOuter): (Term, String, Int)","description":"scala.quoted.Quotes$reflectModule$SelectOuterModule","location":"api/scala/quoted/Quotes$reflectModule$SelectOuterModule.html","searchKeys":["unapply"]},{"name":"def ofSeq[T](xs: Seq[Expr[T]])(using Type[T])(using Quotes): Expr[Seq[T]]","description":"scala.quoted.Expr$","location":"api/scala/quoted/Expr$.html","searchKeys":["ofSeq"]},{"name":"given RecursiveTypeMethods","description":"scala.quoted.Quotes$reflectModule$RecursiveTypeMethods","location":"api/scala/quoted/Quotes$reflectModule$RecursiveTypeMethods.html","searchKeys":["RecursiveTypeMethods"]},{"name":"def dropRight(n: Int): Array[A]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["dropRight"]},{"name":"def +(x: String): String","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["+"]},{"name":"def apply(lhs: Term, rhs: Term): Assign","description":"scala.quoted.Quotes$reflectModule$AssignModule","location":"api/scala/quoted/Quotes$reflectModule$AssignModule.html","searchKeys":["apply"]},{"name":"def unapply(vdef: ValDef): (String, TypeTree, Option[Term])","description":"scala.quoted.Quotes$reflectModule$ValDefModule","location":"api/scala/quoted/Quotes$reflectModule$ValDefModule.html","searchKeys":["unapply"]},{"name":"def readLongInt(): Long","description":"dotty.tools.tasty.TastyReader","location":"api/dotty/tools/tasty/TastyReader.html","searchKeys":["readLongInt"]},{"name":"def traverseTreeChildren(tree: Tree)(owner: Symbol): Unit","description":"scala.quoted.Quotes$reflectModule$TreeTraverser","location":"api/scala/quoted/Quotes$reflectModule$TreeTraverser.html","searchKeys":["traverseTreeChildren"]},{"name":"trait LambdaTypeTreeModule","description":"scala.quoted.Quotes$reflectModule$LambdaTypeTreeModule","location":"api/scala/quoted/Quotes$reflectModule$LambdaTypeTreeModule.html","searchKeys":["LambdaTypeTreeModule"]},{"name":"def findFirstMatchIn(source: CharSequence): Option[Match]","description":"scala.util.matching.Regex","location":"api/scala/util/matching/Regex.html","searchKeys":["findFirstMatchIn"]},{"name":"def forall[T](p: T => Boolean): Boolean","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["forall"]},{"name":"def apply(index: Int): Float","description":"scala.collection.mutable.ArraySeq$$ofFloat","location":"api/scala/collection/mutable/ArraySeq$$ofFloat.html","searchKeys":["apply"]},{"name":"def map[B, C](f: (El1, El2, El3) => B)(bf: BuildFrom[C1, B, C]): C","description":"scala.collection.LazyZip3","location":"api/scala/collection/LazyZip3.html","searchKeys":["map"]},{"name":"trait JFunction2$mcIDJ$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcIDJ$sp","location":"api/scala/runtime/java8/JFunction2$mcIDJ$sp.html","searchKeys":["JFunction2$mcIDJ$sp"]},{"name":"def foreach[U](f: T => U): Unit","description":"scala.collection.mutable.UnrolledBuffer$$Unrolled","location":"api/scala/collection/mutable/UnrolledBuffer$$Unrolled.html","searchKeys":["foreach"]},{"name":"def *(factor: Long): FiniteDuration","description":"scala.concurrent.duration.FiniteDuration","location":"api/scala/concurrent/duration/FiniteDuration.html","searchKeys":["*"]},{"name":"def +(x: Double): Double","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["+"]},{"name":"def <<(x: Int): Int","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["<<"]},{"name":"def unapply[A](xs: Stream[A]): Option[(A, Stream[A])]","description":"scala.collection.immutable.Stream$$cons$","location":"api/scala/collection/immutable/Stream$$cons$.html","searchKeys":["unapply"]},{"name":"def baseClasses: List[Symbol]","description":"scala.quoted.Quotes$reflectModule$TypeReprMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html","searchKeys":["baseClasses"]},{"name":"def applyAsLong(x1: Double): Long","description":"scala.jdk.FunctionWrappers$$AsJavaDoubleToLongFunction","location":"api/scala/jdk/FunctionWrappers$$AsJavaDoubleToLongFunction.html","searchKeys":["applyAsLong"]},{"name":"def orElse[B >: A](alternative: => Option[B]): Option[B]","description":"scala.Option","location":"api/scala/Option.html","searchKeys":["orElse"]},{"name":"def sum(num: Numeric[A]): A","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["sum"]},{"name":"def !=(x: Double): Boolean","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["!="]},{"name":"def concatIterator(tup1: Tuple, tup2: Tuple): Iterator[Any]","description":"scala.runtime.Tuples$","location":"api/scala/runtime/Tuples$.html","searchKeys":["concatIterator"]},{"name":"given ConstantMethods","description":"scala.quoted.Quotes$reflectModule$ConstantMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ConstantMethods"]},{"name":"def isFinite: Boolean","description":"scala.concurrent.duration.Duration$$Infinite","location":"api/scala/concurrent/duration/Duration$$Infinite.html","searchKeys":["isFinite"]},{"name":"given default","description":"scala.util.LowPriorityNotGiven","location":"api/scala/util/LowPriorityNotGiven.html","searchKeys":["default"]},{"name":"def this()","description":"scala.specialized","location":"api/scala/specialized.html","searchKeys":["this"]},{"name":"val javaLongStreamUnboxer: StreamUnboxer[Long, LongStream]","description":"scala.collection.convert.StreamExtensions$$StreamUnboxer$","location":"api/scala/collection/convert/StreamExtensions$$StreamUnboxer$.html","searchKeys":["javaLongStreamUnboxer"]},{"name":"given RightToExpr[L, R]: ToExpr[Right[L, R]]","description":"scala.quoted.ToExpr$$RightToExpr","location":"api/scala/quoted/ToExpr$.html","searchKeys":["RightToExpr"]},{"name":"def lineStream_!(capacity: Integer): Stream[String]","description":"scala.sys.process.ProcessBuilder","location":"api/scala/sys/process/ProcessBuilder.html","searchKeys":["lineStream_!"]},{"name":"val x$14: FromExpr[T5]","description":"scala.quoted.FromExpr$$Tuple9FromExpr","location":"api/scala/quoted/FromExpr$$Tuple9FromExpr.html","searchKeys":["x$14"]},{"name":"type Vector[+A] = Vector[A]","description":"scala","location":"api/scala.html","searchKeys":["Vector"]},{"name":"def short2double(x: Short): Double","description":"scala.Short$","location":"api/scala/Short$.html","searchKeys":["short2double"]},{"name":"class Found(foundIndex: Int) extends SearchResult","description":"scala.collection.Searching$$Found","location":"api/scala/collection/Searching$$Found.html","searchKeys":["Found"]},{"name":"trait IsIterable[Repr] extends IsIterableOnce[Repr]","description":"scala.collection.generic.IsIterable","location":"api/scala/collection/generic/IsIterable.html","searchKeys":["IsIterable"]},{"name":"object Modification extends OrderBy","description":"scala.collection.immutable.TreeSeqMap$$OrderBy$$Modification$","location":"api/scala/collection/immutable/TreeSeqMap$$OrderBy$$Modification$.html","searchKeys":["Modification"]},{"name":"type TermRef <: NamedType","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TermRef"]},{"name":"type >>[X <: Int, Y <: Int] <: Int","description":"scala.compiletime.ops.int$","location":"api/scala/compiletime/ops/int$.html","searchKeys":[">>"]},{"name":"val ReferenceShape: Shape","description":"scala.collection.StepperShape$","location":"api/scala/collection/StepperShape$.html","searchKeys":["ReferenceShape"]},{"name":"def fromExecutorService(e: ExecutorService): ExecutionContextExecutorService","description":"scala.concurrent.ExecutionContext$","location":"api/scala/concurrent/ExecutionContext$.html","searchKeys":["fromExecutorService"]},{"name":"given RecursiveThisTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["RecursiveThisTypeTest"]},{"name":"val jLongAccumulatorFactoryShape: AccumulatorFactoryShape[Long, LongAccumulator]","description":"scala.jdk.Accumulator$$AccumulatorFactoryShape$","location":"api/scala/jdk/Accumulator$$AccumulatorFactoryShape$.html","searchKeys":["jLongAccumulatorFactoryShape"]},{"name":"def foldLeft[T](z: U)(op: (U, T) => U)(evidence$5: ClassTag[U]): U","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["foldLeft"]},{"name":"val INLINEACCESSOR: 21","description":"dotty.tools.tasty.TastyFormat$$NameTags","location":"api/dotty/tools/tasty/TastyFormat$$NameTags.html","searchKeys":["INLINEACCESSOR"]},{"name":"trait LongOrdering extends Ordering[Long]","description":"scala.math.Ordering$$LongOrdering","location":"api/scala/math/Ordering$$LongOrdering.html","searchKeys":["LongOrdering"]},{"name":"def tryAdvance(c: DoubleConsumer): Boolean","description":"scala.collection.DoubleStepper$$DoubleStepperSpliterator","location":"api/scala/collection/DoubleStepper$$DoubleStepperSpliterator.html","searchKeys":["tryAdvance"]},{"name":"val x$32: FromExpr[T14]","description":"scala.quoted.FromExpr$$Tuple18FromExpr","location":"api/scala/quoted/FromExpr$$Tuple18FromExpr.html","searchKeys":["x$32"]},{"name":"object SeqOps","description":"scala.collection.SeqOps$","location":"api/scala/collection/SeqOps$.html","searchKeys":["SeqOps"]},{"name":"def +(x: Float): Float","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["+"]},{"name":"def +(x: Int): Int","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["+"]},{"name":"trait higherKinds","description":"scala.languageFeature$$higherKinds","location":"api/scala/languageFeature$$higherKinds.html","searchKeys":["higherKinds"]},{"name":"trait NewModule","description":"scala.quoted.Quotes$reflectModule$NewModule","location":"api/scala/quoted/Quotes$reflectModule$NewModule.html","searchKeys":["NewModule"]},{"name":"def stringSeqToProcess(command: Seq[String]): ProcessBuilder","description":"scala.sys.process.ProcessImplicits","location":"api/scala/sys/process/ProcessImplicits.html","searchKeys":["stringSeqToProcess"]},{"name":"def body: Tree","description":"scala.quoted.Quotes$reflectModule$TypeBindMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeBindMethods.html","searchKeys":["body"]},{"name":"given MethodOrPolyTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["MethodOrPolyTypeTest"]},{"name":"def toDegrees: Float","description":"scala.runtime.RichFloat","location":"api/scala/runtime/RichFloat.html","searchKeys":["toDegrees"]},{"name":"def equiv(x: Byte, y: Byte): Boolean","description":"scala.math.Equiv$$Byte$","location":"api/scala/math/Equiv$$Byte$.html","searchKeys":["equiv"]},{"name":"given ClosureTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ClosureTypeTest"]},{"name":"val TYPEREFdirect: 63","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["TYPEREFdirect"]},{"name":"def apply(sourceFile: SourceFile, start: Int, end: Int): Position","description":"scala.quoted.Quotes$reflectModule$PositionModule","location":"api/scala/quoted/Quotes$reflectModule$PositionModule.html","searchKeys":["apply"]},{"name":"def modInverse(m: BigInt): BigInt","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["modInverse"]},{"name":"def apply(tup: (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18))(using Quotes): Expr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18)]","description":"scala.quoted.ToExpr$$Tuple18ToExpr","location":"api/scala/quoted/ToExpr$$Tuple18ToExpr.html","searchKeys":["apply"]},{"name":"def by(x: T): U","description":"scala.collection.immutable.Range$$Partial","location":"api/scala/collection/immutable/Range$$Partial.html","searchKeys":["by"]},{"name":"def widenTermRefByName: TypeRepr","description":"scala.quoted.Quotes$reflectModule$TypeReprMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html","searchKeys":["widenTermRefByName"]},{"name":"given NamedArgMethods","description":"scala.quoted.Quotes$reflectModule$NamedArgMethods","location":"api/scala/quoted/Quotes$reflectModule$NamedArgMethods.html","searchKeys":["NamedArgMethods"]},{"name":"def groupBy[K](f: A => K): Map[K, C]","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["groupBy"]},{"name":"type RecursiveType <: TypeRepr","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["RecursiveType"]},{"name":"def equals(xs: Array[AnyRef], ys: Array[AnyRef]): Boolean","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["equals"]},{"name":"def equiv(x: Long, y: Long): Boolean","description":"scala.math.Equiv$$Long$","location":"api/scala/math/Equiv$$Long$.html","searchKeys":["equiv"]},{"name":"def !=(x: Byte): Boolean","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["!="]},{"name":"val x$6: Type[T6]","description":"scala.quoted.FromExpr$$Tuple18FromExpr","location":"api/scala/quoted/FromExpr$$Tuple18FromExpr.html","searchKeys":["x$6"]},{"name":"def sizeHint(coll: IterableOnce[], delta: Int): Unit","description":"scala.collection.mutable.Builder","location":"api/scala/collection/mutable/Builder.html","searchKeys":["sizeHint"]},{"name":"def lazyZip4ToIterable[El1, El2, El3, El4](zipped4: LazyZip4[El1, El2, El3, El4, ]): View[(El1, El2, El3, El4)]","description":"scala.collection.LazyZip4$","location":"api/scala/collection/LazyZip4$.html","searchKeys":["lazyZip4ToIterable"]},{"name":"def _12: T12","description":"scala.Product22","location":"api/scala/Product22.html","searchKeys":["_12"]},{"name":"def asJava[A](s: Seq[A]): List[A]","description":"scala.collection.convert.AsJavaConverters","location":"api/scala/collection/convert/AsJavaConverters.html","searchKeys":["asJava"]},{"name":"def next(): A","description":"scala.collection.Iterator","location":"api/scala/collection/Iterator.html","searchKeys":["next"]},{"name":"def *(x: Byte): Double","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["*"]},{"name":"def enrichAsScalaFromIntSupplier(jf: IntSupplier): RichIntSupplierAsFunction0","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsScalaFromIntSupplier"]},{"name":"def string: String","description":"scala.collection.concurrent.TrieMap","location":"api/scala/collection/concurrent/TrieMap.html","searchKeys":["string"]},{"name":"def prependAll(elems: IterableOnce[A]): Buffer[A]","description":"scala.collection.mutable.Buffer","location":"api/scala/collection/mutable/Buffer.html","searchKeys":["prependAll"]},{"name":"def initialized: Boolean","description":"scala.runtime.LazyDouble","location":"api/scala/runtime/LazyDouble.html","searchKeys":["initialized"]},{"name":"trait DefaultMap[K, +V] extends Map[K, V]","description":"scala.collection.DefaultMap","location":"api/scala/collection/DefaultMap.html","searchKeys":["DefaultMap"]},{"name":"val RENAMED: 76","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["RENAMED"]},{"name":"def incl(elem: A): Set[A]","description":"scala.collection.immutable.Set$$Set1","location":"api/scala/collection/immutable/Set$$Set1.html","searchKeys":["incl"]},{"name":"type ResultWithoutStep = Range","description":"scala.runtime.RichInt","location":"api/scala/runtime/RichInt.html","searchKeys":["ResultWithoutStep"]},{"name":"def asJava: LongUnaryOperator","description":"scala.jdk.FunctionWrappers$$RichFunction1AsLongUnaryOperator","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsLongUnaryOperator.html","searchKeys":["asJava"]},{"name":"trait SelectorModule","description":"scala.quoted.Quotes$reflectModule$SelectorModule","location":"api/scala/quoted/Quotes$reflectModule$SelectorModule.html","searchKeys":["SelectorModule"]},{"name":"def toLong(x: Float): Long","description":"scala.math.Numeric$$FloatIsFractional","location":"api/scala/math/Numeric$$FloatIsFractional.html","searchKeys":["toLong"]},{"name":"def lengthIs: SizeCompareOps","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["lengthIs"]},{"name":"given CharFromExpr","description":"scala.quoted.FromExpr$","location":"api/scala/quoted/FromExpr$.html","searchKeys":["CharFromExpr"]},{"name":"object TailCalls","description":"scala.util.control.TailCalls$","location":"api/scala/util/control/TailCalls$.html","searchKeys":["TailCalls"]},{"name":"Escapes in interpolations","description":"","location":"docs/reference/changed-features/interpolation-escapes.html","searchKeys":["Escapes in interpolations"]},{"name":"def |(x: Int): Int","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["|"]},{"name":"def javaBigInteger2bigInt(x: BigInteger): BigInt","description":"scala.math.BigInt$","location":"api/scala/math/BigInt$.html","searchKeys":["javaBigInteger2bigInt"]},{"name":"val x$27: FromExpr[T11]","description":"scala.quoted.FromExpr$$Tuple16FromExpr","location":"api/scala/quoted/FromExpr$$Tuple16FromExpr.html","searchKeys":["x$27"]},{"name":"val x$2: Type[T2]","description":"scala.quoted.FromExpr$$Tuple18FromExpr","location":"api/scala/quoted/FromExpr$$Tuple18FromExpr.html","searchKeys":["x$2"]},{"name":"def isNegInfinity: Boolean","description":"scala.runtime.RichDouble","location":"api/scala/runtime/RichDouble.html","searchKeys":["isNegInfinity"]},{"name":"def toInt(x: Byte): Int","description":"scala.math.Numeric$$ByteIsIntegral","location":"api/scala/math/Numeric$$ByteIsIntegral.html","searchKeys":["toInt"]},{"name":"def linesWithSeparators: Iterator[String]","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["linesWithSeparators"]},{"name":"def sliding(size: Int): Iterator[C]","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["sliding"]},{"name":"def concat[V2 >: V](suffix: IterableOnce[(K, V2)]): CC[K, V2]","description":"scala.collection.MapOps","location":"api/scala/collection/MapOps.html","searchKeys":["concat"]},{"name":"trait Product21[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16, +T17, +T18, +T19, +T20, +T21] extends Product","description":"scala.Product21","location":"api/scala/Product21.html","searchKeys":["Product21"]},{"name":"def iterator: Iterator[(K, V)]","description":"scala.collection.immutable.TreeSeqMap","location":"api/scala/collection/immutable/TreeSeqMap.html","searchKeys":["iterator"]},{"name":"def this(initialSize: Int)","description":"scala.collection.mutable.ArrayDeque","location":"api/scala/collection/mutable/ArrayDeque.html","searchKeys":["this"]},{"name":"def tabulate[T](n1: Int, n2: Int, n3: Int, n4: Int)(f: (Int, Int, Int, Int) => T)(evidence$20: ClassTag[T]): Array[Array[Array[Array[T]]]]","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["tabulate"]},{"name":"val MATCHCASEtype: 192","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["MATCHCASEtype"]},{"name":"type Traversable[+A] = Iterable[A]","description":"scala","location":"api/scala.html","searchKeys":["Traversable"]},{"name":"def enrichAsJavaDoublePredicate[A0](sf: A0 => Boolean)(evA0: A0 =:= Double): RichFunction1AsDoublePredicate","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsJavaDoublePredicate"]},{"name":"def anyValClass[T <: AnyVal](value: T)(evidence$1: ClassTag[T]): Class[T]","description":"scala.runtime.ScalaRunTime$","location":"api/scala/runtime/ScalaRunTime$.html","searchKeys":["anyValClass"]},{"name":"def copy(original: Tree)(call: Option[Tree], bindings: List[Definition], expansion: Term): Inlined","description":"scala.quoted.Quotes$reflectModule$InlinedModule","location":"api/scala/quoted/Quotes$reflectModule$InlinedModule.html","searchKeys":["copy"]},{"name":"given MatchTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["MatchTypeTest"]},{"name":"def ++(that: IterableOnce[A]): C","description":"scala.collection.SetOps","location":"api/scala/collection/SetOps.html","searchKeys":["++"]},{"name":"trait IsIterableLowPriority","description":"scala.collection.generic.IsIterableLowPriority","location":"api/scala/collection/generic/IsIterableLowPriority.html","searchKeys":["IsIterableLowPriority"]},{"name":"def permutations: Iterator[Array[A]]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["permutations"]},{"name":"trait JFunction1$mcJJ$sp extends Any => Any with Serializable","description":"scala.runtime.java8.JFunction1$mcJJ$sp","location":"api/scala/runtime/java8/JFunction1$mcJJ$sp.html","searchKeys":["JFunction1$mcJJ$sp"]},{"name":"def ==(x: Double): Boolean","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["=="]},{"name":"given ThisTypeTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ThisTypeTypeTest"]},{"name":"val Tree: TreeModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Tree"]},{"name":"def toArray[T]: Array[T]","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["toArray"]},{"name":"val firstLengthTreeTag: 128","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["firstLengthTreeTag"]},{"name":"def updated[B >: A](index: Int, elem: B): CC[B]","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["updated"]},{"name":"val RETURN: 144","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["RETURN"]},{"name":"def reduceRight[B >: A](op: (A, B) => B): B","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["reduceRight"]},{"name":"object Product5","description":"scala.Product5$","location":"api/scala/Product5$.html","searchKeys":["Product5"]},{"name":"type UnitConstant <: Constant","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["UnitConstant"]},{"name":"trait OmitSelectorModule","description":"scala.quoted.Quotes$reflectModule$OmitSelectorModule","location":"api/scala/quoted/Quotes$reflectModule$OmitSelectorModule.html","searchKeys":["OmitSelectorModule"]},{"name":"def unapply(x: Expr[(T1, T2, T3, T4, T5, T6)])(using Quotes): Option[(T1, T2, T3, T4, T5, T6)]","description":"scala.quoted.FromExpr$$Tuple6FromExpr","location":"api/scala/quoted/FromExpr$$Tuple6FromExpr.html","searchKeys":["unapply"]},{"name":"def concat[B >: A](xs: => IterableOnce[B]): Iterator[B]","description":"scala.collection.Iterator","location":"api/scala/collection/Iterator.html","searchKeys":["concat"]},{"name":"class DoubleStreamHasToScala(stream: DoubleStream)","description":"scala.collection.convert.StreamExtensions$DoubleStreamHasToScala","location":"api/scala/collection/convert/StreamExtensions$DoubleStreamHasToScala.html","searchKeys":["DoubleStreamHasToScala"]},{"name":"def apply$mcFJI$sp(v1: Long, v2: Int): Float","description":"scala.runtime.java8.JFunction2$mcFJI$sp","location":"api/scala/runtime/java8/JFunction2$mcFJI$sp.html","searchKeys":["apply$mcFJI$sp"]},{"name":"def copy(original: Tree)(tparams: List[TypeDef], body: Tree): LambdaTypeTree","description":"scala.quoted.Quotes$reflectModule$LambdaTypeTreeModule","location":"api/scala/quoted/Quotes$reflectModule$LambdaTypeTreeModule.html","searchKeys":["copy"]},{"name":"object Groups","description":"scala.util.matching.Regex$$Groups$","location":"api/scala/util/matching/Regex$$Groups$.html","searchKeys":["Groups"]},{"name":"def apply$mcFIJ$sp(v1: Int, v2: Long): Float","description":"scala.runtime.java8.JFunction2$mcFIJ$sp","location":"api/scala/runtime/java8/JFunction2$mcFIJ$sp.html","searchKeys":["apply$mcFIJ$sp"]},{"name":"def apply(tup: (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21))(using Quotes): Expr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21)]","description":"scala.quoted.ToExpr$$Tuple21ToExpr","location":"api/scala/quoted/ToExpr$$Tuple21ToExpr.html","searchKeys":["apply"]},{"name":"def excl(elem: K): SortedSet[K]","description":"scala.collection.immutable.SortedMapOps$ImmutableKeySortedSet","location":"api/scala/collection/immutable/SortedMapOps$ImmutableKeySortedSet.html","searchKeys":["excl"]},{"name":"def asScala: (Int, Int) => Int","description":"scala.jdk.FunctionWrappers$$RichIntBinaryOperatorAsFunction2","location":"api/scala/jdk/FunctionWrappers$$RichIntBinaryOperatorAsFunction2.html","searchKeys":["asScala"]},{"name":"def apply(inline x: Char, inline xs: Char*): IArray[Char]","description":"scala.IArray$package$$IArray$","location":"api/scala/IArray$package$$IArray$.html","searchKeys":["apply"]},{"name":"def contains(elem: A): Boolean","description":"scala.collection.SetOps","location":"api/scala/collection/SetOps.html","searchKeys":["contains"]},{"name":"def lineStream_!(log: ProcessLogger): Stream[String]","description":"scala.sys.process.ProcessBuilder","location":"api/scala/sys/process/ProcessBuilder.html","searchKeys":["lineStream_!"]},{"name":"type Try <: Term","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Try"]},{"name":"def valuesIterator: Iterator[V]","description":"scala.collection.MapOps","location":"api/scala/collection/MapOps.html","searchKeys":["valuesIterator"]},{"name":"def toFloat: Float","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["toFloat"]},{"name":"def warning(msg: String, pos: Position): Unit","description":"scala.quoted.Quotes$reflectModule$reportModule","location":"api/scala/quoted/Quotes$reflectModule$reportModule.html","searchKeys":["warning"]},{"name":"def groupCount: Int","description":"scala.util.matching.Regex$$Match","location":"api/scala/util/matching/Regex$$Match.html","searchKeys":["groupCount"]},{"name":"def ofDim[T](n1: Int, n2: Int, n3: Int)(evidence$8: ClassTag[T]): Array[Array[Array[T]]]","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["ofDim"]},{"name":"def joinRight[A1 >: A, B1 >: B, C](ev: B1 <:< Either[A1, C]): Either[A1, C]","description":"scala.util.Either","location":"api/scala/util/Either.html","searchKeys":["joinRight"]},{"name":"def curried: T1 => T2 => T3 => T4 => T5 => T6 => T7 => T8 => T9 => T10 => T11 => T12 => T13 => T14 => T15 => T16 => T17 => T18 => R","description":"scala.Function18","location":"api/scala/Function18.html","searchKeys":["curried"]},{"name":"def ensureAccessible[T <: AccessibleObject](m: T): T","description":"scala.reflect","location":"api/scala/reflect.html","searchKeys":["ensureAccessible"]},{"name":"def tail: C","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["tail"]},{"name":"trait Integral[T] extends Numeric[T]","description":"scala.math.Integral","location":"api/scala/math/Integral.html","searchKeys":["Integral"]},{"name":"class RichFunction2AsToDoubleBiFunction[T, U](underlying: (T, U) => Double) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichFunction2AsToDoubleBiFunction","location":"api/scala/jdk/FunctionWrappers$$RichFunction2AsToDoubleBiFunction.html","searchKeys":["RichFunction2AsToDoubleBiFunction"]},{"name":"def genericArrayOps[T](xs: Array[T]): ArrayOps[T]","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["genericArrayOps"]},{"name":"def toDoubleOption: Option[Double]","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["toDoubleOption"]},{"name":"def toHexString: String","description":"scala.runtime.RichLong","location":"api/scala/runtime/RichLong.html","searchKeys":["toHexString"]},{"name":"def buffer[T](f: => T): T","description":"scala.sys.process.ProcessLogger","location":"api/scala/sys/process/ProcessLogger.html","searchKeys":["buffer"]},{"name":"val x$3: Type[T3]","description":"scala.quoted.FromExpr$$Tuple8FromExpr","location":"api/scala/quoted/FromExpr$$Tuple8FromExpr.html","searchKeys":["x$3"]},{"name":"def updated[V1 >: V](key: K, value: V1): Map[K, V1]","description":"scala.collection.immutable.Map$$Map3","location":"api/scala/collection/immutable/Map$$Map3.html","searchKeys":["updated"]},{"name":"given SelectMethods","description":"scala.quoted.Quotes$reflectModule$SelectMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["SelectMethods"]},{"name":"def enrichAsScalaFromObjLongConsumer[T](jf: ObjLongConsumer[T]): RichObjLongConsumerAsFunction2[T]","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsScalaFromObjLongConsumer"]},{"name":"object SortedSet extends Delegate[[A] =>> SortedSet[A]]","description":"scala.collection.immutable.SortedSet$","location":"api/scala/collection/immutable/SortedSet$.html","searchKeys":["SortedSet"]},{"name":"def scala$math$Ordering$CachedReverse$$super$reverse: Ordering[T]","description":"scala.math.Ordering$$CachedReverse","location":"api/scala/math/Ordering$$CachedReverse.html","searchKeys":["scala$math$Ordering$CachedReverse$$super$reverse"]},{"name":"def asJavaObjLongConsumer[T](sf: (T, Long) => BoxedUnit): ObjLongConsumer[T]","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asJavaObjLongConsumer"]},{"name":"def booleanPropAsBoolean(b: BooleanProp): Boolean","description":"scala.sys.BooleanProp$","location":"api/scala/sys/BooleanProp$.html","searchKeys":["booleanPropAsBoolean"]},{"name":"trait ClassTag[T] extends ClassManifestDeprecatedApis[T] with Equals with Serializable","description":"scala.reflect.ClassTag","location":"api/scala/reflect/ClassTag.html","searchKeys":["ClassTag"]},{"name":"trait RefinementModule","description":"scala.quoted.Quotes$reflectModule$RefinementModule","location":"api/scala/quoted/Quotes$reflectModule$RefinementModule.html","searchKeys":["RefinementModule"]},{"name":"def asJavaSeqIntStreamFromShort(cc: IterableOnce[Short]): IntStream","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaSeqIntStreamFromShort"]},{"name":"def copyAs[A](original: Array[], newLength: Int)(ct: ClassTag[A]): Array[A]","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["copyAs"]},{"name":"def unapply(x: New): Some[TypeTree]","description":"scala.quoted.Quotes$reflectModule$NewModule","location":"api/scala/quoted/Quotes$reflectModule$NewModule.html","searchKeys":["unapply"]},{"name":"val x$13: FromExpr[T5]","description":"scala.quoted.FromExpr$$Tuple8FromExpr","location":"api/scala/quoted/FromExpr$$Tuple8FromExpr.html","searchKeys":["x$13"]},{"name":"def apply[T](int: Integral[T]): Integral[T]","description":"scala.math.Integral$","location":"api/scala/math/Integral$.html","searchKeys":["apply"]},{"name":"object derived extends CanEqual[Any, Any]","description":"scala.CanEqual$$derived$","location":"api/scala/CanEqual$$derived$.html","searchKeys":["derived"]},{"name":"object IterableFactory","description":"scala.collection.IterableFactory$","location":"api/scala/collection/IterableFactory$.html","searchKeys":["IterableFactory"]},{"name":"val GenSeq: Seq","description":"scala.collection","location":"api/scala/collection.html","searchKeys":["GenSeq"]},{"name":"class AsJavaBooleanSupplier(sf: () => Boolean) extends BooleanSupplier","description":"scala.jdk.FunctionWrappers$$AsJavaBooleanSupplier","location":"api/scala/jdk/FunctionWrappers$$AsJavaBooleanSupplier.html","searchKeys":["AsJavaBooleanSupplier"]},{"name":"object fromNow","description":"scala.concurrent.duration.package$$fromNow$","location":"api/scala/concurrent/duration/package$$fromNow$.html","searchKeys":["fromNow"]},{"name":"def scala$collection$BitSetOps$$super$max[B >: Int](ord: Ordering[B]): Int","description":"scala.collection.BitSetOps","location":"api/scala/collection/BitSetOps.html","searchKeys":["scala$collection$BitSetOps$$super$max"]},{"name":"trait Product13[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13] extends Product","description":"scala.Product13","location":"api/scala/Product13.html","searchKeys":["Product13"]},{"name":"val CONFIG: 700","description":"scala.annotation.elidable$","location":"api/scala/annotation/elidable$.html","searchKeys":["CONFIG"]},{"name":"def count(p: A => Boolean): Int","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["count"]},{"name":"trait ParamClauseModule","description":"scala.quoted.Quotes$reflectModule$ParamClauseModule","location":"api/scala/quoted/Quotes$reflectModule$ParamClauseModule.html","searchKeys":["ParamClauseModule"]},{"name":"class implicitNotFound(msg: String) extends StaticAnnotation","description":"scala.annotation.implicitNotFound","location":"api/scala/annotation/implicitNotFound.html","searchKeys":["implicitNotFound"]},{"name":"def apply[T](num: Numeric[T]): Numeric[T]","description":"scala.math.Numeric$","location":"api/scala/math/Numeric$.html","searchKeys":["apply"]},{"name":"def isAliasType: Boolean","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["isAliasType"]},{"name":"def force: LazyList[A]","description":"scala.collection.immutable.LazyList","location":"api/scala/collection/immutable/LazyList.html","searchKeys":["force"]},{"name":"Given Instances","description":"","location":"docs/reference/contextual/givens.html","searchKeys":["Given Instances"]},{"name":"def recoverWith[U >: T](pf: PartialFunction[Throwable, Future[U]])(executor: ExecutionContext): Future[U]","description":"scala.concurrent.Future","location":"api/scala/concurrent/Future.html","searchKeys":["recoverWith"]},{"name":"def apply(x: T)(using Quotes): Expr[T]","description":"scala.quoted.ToExpr$$DoubleToExpr","location":"api/scala/quoted/ToExpr$$DoubleToExpr.html","searchKeys":["apply"]},{"name":"def asScala: Long => Double","description":"scala.jdk.FunctionWrappers$$RichLongToDoubleFunctionAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichLongToDoubleFunctionAsFunction1.html","searchKeys":["asScala"]},{"name":"def asScala: (T, U) => Int","description":"scala.jdk.FunctionWrappers$$RichToIntBiFunctionAsFunction2","location":"api/scala/jdk/FunctionWrappers$$RichToIntBiFunctionAsFunction2.html","searchKeys":["asScala"]},{"name":"def isValDef: Boolean","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["isValDef"]},{"name":"def apply(tup: (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12))(using Quotes): Expr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)]","description":"scala.quoted.ToExpr$$Tuple12ToExpr","location":"api/scala/quoted/ToExpr$$Tuple12ToExpr.html","searchKeys":["apply"]},{"name":"def index(addr: Addr): Int","description":"dotty.tools.tasty.TastyReader","location":"api/dotty/tools/tasty/TastyReader.html","searchKeys":["index"]},{"name":"def >=(x: Char): Boolean","description":"scala.Int","location":"api/scala/Int.html","searchKeys":[">="]},{"name":"class companionClass extends StaticAnnotation","description":"scala.annotation.meta.companionClass","location":"api/scala/annotation/meta/companionClass.html","searchKeys":["companionClass"]},{"name":"def asJavaParStream[S <: BaseStream[, ], St <: Stepper[]](s: StreamShape[A, S, St], st: StepperShape[A, St], @implicitNotFound(\"`parStream` can only be called on collections where `stepper` returns a `Stepper with EfficientSplit`\") isEfficient: C <:< IterableOnce[A] { def stepper[S <: Stepper[]](shape: StepperShape[A, S]): S & EfficientSplit; ;  }): S","description":"scala.collection.convert.StreamExtensions$IterableNonGenericHasParStream","location":"api/scala/collection/convert/StreamExtensions$IterableNonGenericHasParStream.html","searchKeys":["asJavaParStream"]},{"name":"def min[U <: T](x: U, y: U): U","description":"scala.math.Ordering","location":"api/scala/math/Ordering.html","searchKeys":["min"]},{"name":"val MILLISECONDS: TimeUnit","description":"scala.concurrent.duration","location":"api/scala/concurrent/duration.html","searchKeys":["MILLISECONDS"]},{"name":"val x$15: FromExpr[T4]","description":"scala.quoted.FromExpr$$Tuple11FromExpr","location":"api/scala/quoted/FromExpr$$Tuple11FromExpr.html","searchKeys":["x$15"]},{"name":"def fromSpecific(coll: IterableOnce[A]): CC[A]","description":"scala.collection.IterableFactoryDefaults","location":"api/scala/collection/IterableFactoryDefaults.html","searchKeys":["fromSpecific"]},{"name":"def <=(x: Int): Boolean","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["<="]},{"name":"def iteratorFrom(start: K): Iterator[(K, V)]","description":"scala.collection.immutable.TreeMap","location":"api/scala/collection/immutable/TreeMap.html","searchKeys":["iteratorFrom"]},{"name":"def <=(x: Short): Boolean","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["<="]},{"name":"def subtractOne(elem: Int): BitSet","description":"scala.collection.mutable.BitSet","location":"api/scala/collection/mutable/BitSet.html","searchKeys":["subtractOne"]},{"name":"type TypeLambda <: LambdaType","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeLambda"]},{"name":"given RefinedMethods","description":"scala.quoted.Quotes$reflectModule$RefinedMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["RefinedMethods"]},{"name":"def apply$mcS$sp(): Short","description":"scala.runtime.java8.JFunction0$mcS$sp","location":"api/scala/runtime/java8/JFunction0$mcS$sp.html","searchKeys":["apply$mcS$sp"]},{"name":"def unapplySeq(x: TupleXXL): Option[Seq[Any]]","description":"scala.runtime.TupleXXL$","location":"api/scala/runtime/TupleXXL$.html","searchKeys":["unapplySeq"]},{"name":"val array: Array[AnyRef]","description":"scala.collection.mutable.ArrayBufferView","location":"api/scala/collection/mutable/ArrayBufferView.html","searchKeys":["array"]},{"name":"val BOUNDED: 102","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["BOUNDED"]},{"name":"def iterator: Iterator[A]","description":"scala.collection.IndexedSeqOps","location":"api/scala/collection/IndexedSeqOps.html","searchKeys":["iterator"]},{"name":"def %(x: Char): Float","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["%"]},{"name":"def asExecutionContext(exec: ExecutorService): ExecutionContextExecutorService","description":"scala.concurrent.JavaConversions$","location":"api/scala/concurrent/JavaConversions$.html","searchKeys":["asExecutionContext"]},{"name":"object Varargs","description":"scala.quoted.Varargs$","location":"api/scala/quoted/Varargs$.html","searchKeys":["Varargs"]},{"name":"val x$1: Type[T]","description":"scala.quoted.FromExpr$$SetFromExpr","location":"api/scala/quoted/FromExpr$$SetFromExpr.html","searchKeys":["x$1"]},{"name":"def isSet: Boolean","description":"scala.concurrent.SyncVar","location":"api/scala/concurrent/SyncVar.html","searchKeys":["isSet"]},{"name":"def bufferedReader(): BufferedReader","description":"scala.io.BufferedSource","location":"api/scala/io/BufferedSource.html","searchKeys":["bufferedReader"]},{"name":"val x$19: FromExpr[T6]","description":"scala.quoted.FromExpr$$Tuple13FromExpr","location":"api/scala/quoted/FromExpr$$Tuple13FromExpr.html","searchKeys":["x$19"]},{"name":"package scala.annotation.unchecked","description":"scala.annotation.unchecked","location":"api/scala/annotation/unchecked.html","searchKeys":["scala.annotation.unchecked"]},{"name":"def isInfinity: Boolean","description":"scala.runtime.RichFloat","location":"api/scala/runtime/RichFloat.html","searchKeys":["isInfinity"]},{"name":"def nanosecond: FiniteDuration","description":"scala.concurrent.duration.DurationConversions","location":"api/scala/concurrent/duration/DurationConversions.html","searchKeys":["nanosecond"]},{"name":"def tupled: (T1, T2) => R","description":"scala.Function2","location":"api/scala/Function2.html","searchKeys":["tupled"]},{"name":"def fullName: String","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["fullName"]},{"name":"def long2bigDecimal(l: Long): BigDecimal","description":"scala.math.BigDecimal$","location":"api/scala/math/BigDecimal$.html","searchKeys":["long2bigDecimal"]},{"name":"def apply(from: From): Builder[A, C]","description":"scala.collection.BuildFrom","location":"api/scala/collection/BuildFrom.html","searchKeys":["apply"]},{"name":"def !=(x: Int): Boolean","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["!="]},{"name":"def addOne(elem: Double): ofDouble","description":"scala.collection.mutable.ArrayBuilder$$ofDouble","location":"api/scala/collection/mutable/ArrayBuilder$$ofDouble.html","searchKeys":["addOne"]},{"name":"def apply(lhs: TypeRepr, rhs: TypeRepr): OrType","description":"scala.quoted.Quotes$reflectModule$OrTypeModule","location":"api/scala/quoted/Quotes$reflectModule$OrTypeModule.html","searchKeys":["apply"]},{"name":"def toByte: Byte","description":"scala.math.ScalaNumericAnyConversions","location":"api/scala/math/ScalaNumericAnyConversions.html","searchKeys":["toByte"]},{"name":"def by(newStep: T): NumericRange[T]","description":"scala.collection.immutable.NumericRange","location":"api/scala/collection/immutable/NumericRange.html","searchKeys":["by"]},{"name":"class AbstractBuffer[A] extends AbstractSeq[A] with Buffer[A]","description":"scala.collection.mutable.AbstractBuffer","location":"api/scala/collection/mutable/AbstractBuffer.html","searchKeys":["AbstractBuffer"]},{"name":"type Unapply <: Tree","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Unapply"]},{"name":"def emptyIntIArray: IArray[Int]","description":"scala.IArray$package$$IArray$","location":"api/scala/IArray$package$$IArray$.html","searchKeys":["emptyIntIArray"]},{"name":"def prependedAll[B >: A](prefix: SomeIndexedSeqOps[B]): IndexedSeqView[B]","description":"scala.collection.IndexedSeqView","location":"api/scala/collection/IndexedSeqView.html","searchKeys":["prependedAll"]},{"name":"given TermParamClauseTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TermParamClauseTypeTest"]},{"name":"def >(x: Short): Boolean","description":"scala.Int","location":"api/scala/Int.html","searchKeys":[">"]},{"name":"trait JFunction2$mcJJD$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcJJD$sp","location":"api/scala/runtime/java8/JFunction2$mcJJD$sp.html","searchKeys":["JFunction2$mcJJD$sp"]},{"name":"val x$32: FromExpr[T12]","description":"scala.quoted.FromExpr$$Tuple20FromExpr","location":"api/scala/quoted/FromExpr$$Tuple20FromExpr.html","searchKeys":["x$32"]},{"name":"def range(start: Int, end: Int): IArray[Int]","description":"scala.IArray$package$$IArray$","location":"api/scala/IArray$package$$IArray$.html","searchKeys":["range"]},{"name":"class ChainingOps[A](self: A) extends AnyVal","description":"scala.util.ChainingOps","location":"api/scala/util/ChainingOps.html","searchKeys":["ChainingOps"]},{"name":"def keysIterator: Iterator[K]","description":"scala.collection.MapOps","location":"api/scala/collection/MapOps.html","searchKeys":["keysIterator"]},{"name":"def unapply(x: Repeated): (List[Term], TypeTree)","description":"scala.quoted.Quotes$reflectModule$RepeatedModule","location":"api/scala/quoted/Quotes$reflectModule$RepeatedModule.html","searchKeys":["unapply"]},{"name":"def enrichAsJavaFunction[T, R](sf: T => R): RichFunction1AsFunction[T, R]","description":"scala.jdk.Priority2FunctionExtensions","location":"api/scala/jdk/Priority2FunctionExtensions.html","searchKeys":["enrichAsJavaFunction"]},{"name":"val x$18: Type[T18]","description":"scala.quoted.FromExpr$$Tuple21FromExpr","location":"api/scala/quoted/FromExpr$$Tuple21FromExpr.html","searchKeys":["x$18"]},{"name":"val WARNING: 900","description":"scala.annotation.elidable$","location":"api/scala/annotation/elidable$.html","searchKeys":["WARNING"]},{"name":"def reduce[T, R >: T](futures: IterableOnce[Future[T]])(op: (R, T) => R)(executor: ExecutionContext): Future[R]","description":"scala.concurrent.Future$","location":"api/scala/concurrent/Future$.html","searchKeys":["reduce"]},{"name":"Version numbers","description":"","location":"docs/usage/version-numbers.html","searchKeys":["Version numbers"]},{"name":"def remove(k: K, v: V): Boolean","description":"scala.collection.concurrent.Map","location":"api/scala/collection/concurrent/Map.html","searchKeys":["remove"]},{"name":"def tpt: TypeTree","description":"scala.quoted.Quotes$reflectModule$NewMethods","location":"api/scala/quoted/Quotes$reflectModule$NewMethods.html","searchKeys":["tpt"]},{"name":"given MatchCaseMethods","description":"scala.quoted.Quotes$reflectModule$MatchCaseMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["MatchCaseMethods"]},{"name":"def _4: T4","description":"scala.Product13","location":"api/scala/Product13.html","searchKeys":["_4"]},{"name":"class ArraySeq[T] extends AbstractSeq[T] with IndexedSeq[T] with IndexedSeqOps[T, [T] =>> ArraySeq[T], ArraySeq[T]] with StrictOptimizedSeqOps[T, [T] =>> ArraySeq[T], ArraySeq[T]] with Serializable","description":"scala.collection.mutable.ArraySeq","location":"api/scala/collection/mutable/ArraySeq.html","searchKeys":["ArraySeq"]},{"name":"def asScalaFromObjIntConsumer[T](jf: ObjIntConsumer[T]): (T, Integer) => BoxedUnit","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asScalaFromObjIntConsumer"]},{"name":"class RichIntBinaryOperatorAsFunction2(underlying: IntBinaryOperator) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichIntBinaryOperatorAsFunction2","location":"api/scala/jdk/FunctionWrappers$$RichIntBinaryOperatorAsFunction2.html","searchKeys":["RichIntBinaryOperatorAsFunction2"]},{"name":"val BigInt: BigInt","description":"scala","location":"api/scala.html","searchKeys":["BigInt"]},{"name":"val x$3: Type[T3]","description":"scala.quoted.FromExpr$$Tuple11FromExpr","location":"api/scala/quoted/FromExpr$$Tuple11FromExpr.html","searchKeys":["x$3"]},{"name":"def %(x: Long): Long","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["%"]},{"name":"def +(other: FiniteDuration): Deadline","description":"scala.concurrent.duration.Deadline","location":"api/scala/concurrent/duration/Deadline.html","searchKeys":["+"]},{"name":"def unapply(x: While): (Term, Term)","description":"scala.quoted.Quotes$reflectModule$WhileModule","location":"api/scala/quoted/Quotes$reflectModule$WhileModule.html","searchKeys":["unapply"]},{"name":"def apply(d: Double): BigDecimal","description":"scala.math.BigDecimal$","location":"api/scala/math/BigDecimal$.html","searchKeys":["apply"]},{"name":"def on[U](f: U => T): Ordering[U]","description":"scala.math.Ordering","location":"api/scala/math/Ordering.html","searchKeys":["on"]},{"name":"def <=(x: Char): Boolean","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["<="]},{"name":"def firstKey: K","description":"scala.collection.SortedMapOps","location":"api/scala/collection/SortedMapOps.html","searchKeys":["firstKey"]},{"name":"val MACRO: 33","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["MACRO"]},{"name":"def apply(params: List[ValDef]): TermParamClause","description":"scala.quoted.Quotes$reflectModule$TermParamClauseModule","location":"api/scala/quoted/Quotes$reflectModule$TermParamClauseModule.html","searchKeys":["apply"]},{"name":"object Long","description":"scala.collection.immutable.Range$$Long$","location":"api/scala/collection/immutable/Range$$Long$.html","searchKeys":["Long"]},{"name":"def flatMap[V2](f: (Int, T) => IterableOnce[(Int, V2)]): IntMap[V2]","description":"scala.collection.immutable.IntMap","location":"api/scala/collection/immutable/IntMap.html","searchKeys":["flatMap"]},{"name":"given LeftToExpr[L, R]: ToExpr[Left[L, R]]","description":"scala.quoted.ToExpr$$LeftToExpr","location":"api/scala/quoted/ToExpr$.html","searchKeys":["LeftToExpr"]},{"name":"def anyAccumulatorFactoryInfo[A]: AccumulatorFactoryInfo[A, AnyAccumulator[A]]","description":"scala.collection.convert.StreamExtensions$$AccumulatorFactoryInfo$","location":"api/scala/collection/convert/StreamExtensions$$AccumulatorFactoryInfo$.html","searchKeys":["anyAccumulatorFactoryInfo"]},{"name":"def reduceOption(f: (A, A) => A): Option[A]","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["reduceOption"]},{"name":"def iterator: Iterator[A]","description":"scala.collection.View$$Concat","location":"api/scala/collection/View$$Concat.html","searchKeys":["iterator"]},{"name":"def tupled[T1, T2, R](f: (T1, T2) => R): (T1, T2) => R","description":"scala.Function$","location":"api/scala/Function$.html","searchKeys":["tupled"]},{"name":"def firstKey: A","description":"scala.collection.SortedSetOps","location":"api/scala/collection/SortedSetOps.html","searchKeys":["firstKey"]},{"name":"val x$13: FromExpr[T3]","description":"scala.quoted.FromExpr$$Tuple10FromExpr","location":"api/scala/quoted/FromExpr$$Tuple10FromExpr.html","searchKeys":["x$13"]},{"name":"def parseString[T](str: String, n: Int)(using fs: FromString[T]): T","description":"scala.util.CommandLineParser$","location":"api/scala/util/CommandLineParser$.html","searchKeys":["parseString"]},{"name":"Workflow","description":"","location":"docs/contributing/workflow.html","searchKeys":["Workflow"]},{"name":"type TypeParamClause <: ParamClause","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeParamClause"]},{"name":"def apply(v1: T1, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, v7: T7, v8: T8, v9: T9, v10: T10, v11: T11, v12: T12, v13: T13, v14: T14, v15: T15, v16: T16, v17: T17, v18: T18, v19: T19, v20: T20, v21: T21): R","description":"scala.Function21","location":"api/scala/Function21.html","searchKeys":["apply"]},{"name":"def stdout: PrintStream","description":"scala.sys.process","location":"api/scala/sys/process.html","searchKeys":["stdout"]},{"name":"trait JFunction2$mcFID$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcFID$sp","location":"api/scala/runtime/java8/JFunction2$mcFID$sp.html","searchKeys":["JFunction2$mcFID$sp"]},{"name":"type SomeMapOps[K, +V] = MapOps[K, V, SomeIterableConstr, ]","description":"scala.collection.MapView$","location":"api/scala/collection/MapView$.html","searchKeys":["SomeMapOps"]},{"name":"def update(i: Int, x: T): Unit","description":"scala.Array","location":"api/scala/Array.html","searchKeys":["update"]},{"name":"def toSeq: Seq[A]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["toSeq"]},{"name":"def cat(file: Source, files: Source*): ProcessBuilder","description":"scala.sys.process.ProcessCreation","location":"api/scala/sys/process/ProcessCreation.html","searchKeys":["cat"]},{"name":"val TERMREFin: 174","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["TERMREFin"]},{"name":"def hasNext: Boolean","description":"scala.collection.Iterator$GroupedIterator","location":"api/scala/collection/Iterator$GroupedIterator.html","searchKeys":["hasNext"]},{"name":"def map AsScala[K, V](m: Map[K, V]): Map[K, V]","description":"scala.collection.convert.ToScalaImplicits","location":"api/scala/collection/convert/ToScalaImplicits.html","searchKeys":["map AsScala"]},{"name":"def mutableSeqAsJavaList[A](s: Seq[A]): List[A]","description":"scala.collection.JavaConverters$","location":"api/scala/collection/JavaConverters$.html","searchKeys":["mutableSeqAsJavaList"]},{"name":"trait FractionalProxy[T] extends ScalaNumberProxy[T]","description":"scala.runtime.FractionalProxy","location":"api/scala/runtime/FractionalProxy.html","searchKeys":["FractionalProxy"]},{"name":"val MaxValue: 127","description":"scala.Byte$","location":"api/scala/Byte$.html","searchKeys":["MaxValue"]},{"name":"def accept(x1: T): Unit","description":"scala.jdk.FunctionWrappers$$AsJavaConsumer","location":"api/scala/jdk/FunctionWrappers$$AsJavaConsumer.html","searchKeys":["accept"]},{"name":"val x$14: Type[T14]","description":"scala.quoted.FromExpr$$Tuple20FromExpr","location":"api/scala/quoted/FromExpr$$Tuple20FromExpr.html","searchKeys":["x$14"]},{"name":"Automatic Eta Expansion - More Details","description":"","location":"docs/reference/changed-features/eta-expansion-spec.html","searchKeys":["Automatic Eta Expansion - More Details"]},{"name":"class ValueOf[T](val value: T) extends AnyVal","description":"scala.ValueOf","location":"api/scala/ValueOf.html","searchKeys":["ValueOf"]},{"name":"def addOne(elem: (K, V)): WithDefault[K, V]","description":"scala.collection.mutable.Map$$WithDefault","location":"api/scala/collection/mutable/Map$$WithDefault.html","searchKeys":["addOne"]},{"name":"def clear(): Unit","description":"scala.collection.mutable.PriorityQueue","location":"api/scala/collection/mutable/PriorityQueue.html","searchKeys":["clear"]},{"name":"trait JFunction2$mcZID$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcZID$sp","location":"api/scala/runtime/java8/JFunction2$mcZID$sp.html","searchKeys":["JFunction2$mcZID$sp"]},{"name":"def withErr[T](err: PrintStream)(thunk: => T): T","description":"scala.Console$","location":"api/scala/Console$.html","searchKeys":["withErr"]},{"name":"def relativeTo(base: Addr): Addr","description":"dotty.tools.tasty.TastyBuffer$$Addr","location":"api/dotty/tools/tasty/TastyBuffer$$Addr.html","searchKeys":["relativeTo"]},{"name":"val x$28: FromExpr[T8]","description":"scala.quoted.FromExpr$$Tuple20FromExpr","location":"api/scala/quoted/FromExpr$$Tuple20FromExpr.html","searchKeys":["x$28"]},{"name":"def apply(x1: T, x2: U): Long","description":"scala.jdk.FunctionWrappers$$FromJavaToLongBiFunction","location":"api/scala/jdk/FunctionWrappers$$FromJavaToLongBiFunction.html","searchKeys":["apply"]},{"name":"def to[C1](factory: Factory[A, C1]): C1","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["to"]},{"name":"given ByNameTypeTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ByNameTypeTypeTest"]},{"name":"trait AsJavaExtensions","description":"scala.collection.convert.AsJavaExtensions","location":"api/scala/collection/convert/AsJavaExtensions.html","searchKeys":["AsJavaExtensions"]},{"name":"val TYPEPARAM: 133","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["TYPEPARAM"]},{"name":"Announcing Dotty 0.13.0-RC1 with Spark support, top level definitions and redesigned implicits","description":"","location":"blog/2019/03/05/13th-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.13.0-RC1 with Spark support, top level definitions and redesigned implicits"]},{"name":"val x$10: Type[T10]","description":"scala.quoted.FromExpr$$Tuple10FromExpr","location":"api/scala/quoted/FromExpr$$Tuple10FromExpr.html","searchKeys":["x$10"]},{"name":"def standardInterpolator(process: String => String, args: Seq[Any], parts: Seq[String]): String","description":"scala.StringContext$","location":"api/scala/StringContext$.html","searchKeys":["standardInterpolator"]},{"name":"val jShortStreamShape: StreamShape[Short, IntStream, IntStepper]","description":"scala.collection.convert.StreamExtensions$$StreamShape$","location":"api/scala/collection/convert/StreamExtensions$$StreamShape$.html","searchKeys":["jShortStreamShape"]},{"name":"def mapFactory: MapFactory[[K, V] =>> Map[K, V]]","description":"scala.collection.Map","location":"api/scala/collection/Map.html","searchKeys":["mapFactory"]},{"name":"val Return: Group[(Int, Long, Float, Double, Boolean, Unit)]","description":"scala.Specializable$","location":"api/scala/Specializable$.html","searchKeys":["Return"]},{"name":"given Tuple6FromExpr[T1, T2, T3, T4, T5, T6](using val x$1: Type[T1], val x$2: Type[T2], val x$3: Type[T3], val x$4: Type[T4], val x$5: Type[T5], val x$6: Type[T6], val x$7: FromExpr[T1], val x$8: FromExpr[T2], val x$9: FromExpr[T3], val x$10: FromExpr[T4], val x$11: FromExpr[T5], val x$12: FromExpr[T6]): FromExpr[(T1, T2, T3, T4, T5, T6)]","description":"scala.quoted.FromExpr$$Tuple6FromExpr","location":"api/scala/quoted/FromExpr$.html","searchKeys":["Tuple6FromExpr"]},{"name":"def /(divisor: Double): Duration","description":"scala.concurrent.duration.FiniteDuration","location":"api/scala/concurrent/duration/FiniteDuration.html","searchKeys":["/"]},{"name":"def mapHash(xs: Map[, ]): Int","description":"scala.util.hashing.MurmurHash3$","location":"api/scala/util/hashing/MurmurHash3$.html","searchKeys":["mapHash"]},{"name":"def transformCaseDefs(trees: List[CaseDef])(owner: Symbol): List[CaseDef]","description":"scala.quoted.Quotes$reflectModule$TreeMap","location":"api/scala/quoted/Quotes$reflectModule$TreeMap.html","searchKeys":["transformCaseDefs"]},{"name":"type StackOverflowError = StackOverflowError","description":"scala.compat.Platform$","location":"api/scala/compat/Platform$.html","searchKeys":["StackOverflowError"]},{"name":"def apply(qual: TypeRepr, name: String): TermRef","description":"scala.quoted.Quotes$reflectModule$TermRefModule","location":"api/scala/quoted/Quotes$reflectModule$TermRefModule.html","searchKeys":["apply"]},{"name":"given InlinedTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["InlinedTypeTest"]},{"name":"def fill[T](n1: Int, n2: Int, n3: Int, n4: Int, n5: Int)(elem: => T)(evidence$22: ClassTag[T]): IArray[IArray[IArray[IArray[IArray[T]]]]]","description":"scala.IArray$package$$IArray$","location":"api/scala/IArray$package$$IArray$.html","searchKeys":["fill"]},{"name":"def wildcardType[T](lowerBound: Manifest[], upperBound: Manifest[]): Manifest[T]","description":"scala.reflect.ManifestFactory$","location":"api/scala/reflect/ManifestFactory$.html","searchKeys":["wildcardType"]},{"name":"def &(x: Short): Int","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["&"]},{"name":"def classType[T](clazz: Class[]): Manifest[T]","description":"scala.reflect.ManifestFactory$","location":"api/scala/reflect/ManifestFactory$.html","searchKeys":["classType"]},{"name":"def <=(x: Char): Boolean","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["<="]},{"name":"def reverseIterator: Iterator[Char]","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["reverseIterator"]},{"name":"def fromString(s: String): Boolean","description":"scala.util.CommandLineParser$$FromString$$given_FromString_Boolean$","location":"api/scala/util/CommandLineParser$$FromString$$given_FromString_Boolean$.html","searchKeys":["fromString"]},{"name":"def toByte: Byte","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["toByte"]},{"name":"def constValueTuple[T <: Tuple]: Widen[T]","description":"scala.compiletime","location":"api/scala/compiletime.html","searchKeys":["constValueTuple"]},{"name":"def apply(pid: Ref, stats: List[Tree]): PackageClause","description":"scala.quoted.Quotes$reflectModule$PackageClauseModule","location":"api/scala/quoted/Quotes$reflectModule$PackageClauseModule.html","searchKeys":["apply"]},{"name":"def iterator: Iterator[(A, B)]","description":"scala.collection.View$$Zip","location":"api/scala/collection/View$$Zip.html","searchKeys":["iterator"]},{"name":"trait StepperShapeLowPriority1 extends StepperShapeLowPriority2","description":"scala.collection.StepperShapeLowPriority1","location":"api/scala/collection/StepperShapeLowPriority1.html","searchKeys":["StepperShapeLowPriority1"]},{"name":"class Match(val source: CharSequence, val matcher: Matcher, val groupNames: Seq[String]) extends MatchData","description":"scala.util.matching.Regex$$Match","location":"api/scala/util/matching/Regex$$Match.html","searchKeys":["Match"]},{"name":"class Ops[T1, T2, T3](x: (T1, T2, T3)) extends AnyVal","description":"scala.runtime.Tuple3Zipped$$Ops","location":"api/scala/runtime/Tuple3Zipped$$Ops.html","searchKeys":["Ops"]},{"name":"val Int: IntManifest","description":"scala.reflect.Manifest$","location":"api/scala/reflect/Manifest$.html","searchKeys":["Int"]},{"name":"def excl(elem: A): Set[A]","description":"scala.collection.immutable.Set$$Set1","location":"api/scala/collection/immutable/Set$$Set1.html","searchKeys":["excl"]},{"name":"def *(x: Int): Int","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["*"]},{"name":"def asJavaParCodePointStream: IntStream","description":"scala.collection.convert.StreamExtensions$StringHasSeqParStream","location":"api/scala/collection/convert/StreamExtensions$StringHasSeqParStream.html","searchKeys":["asJavaParCodePointStream"]},{"name":"def Option[T](eqv: Equiv[T]): Equiv[Option[T]]","description":"scala.math.Equiv$","location":"api/scala/math/Equiv$.html","searchKeys":["Option"]},{"name":"def getNumericValue: Int","description":"scala.runtime.RichChar","location":"api/scala/runtime/RichChar.html","searchKeys":["getNumericValue"]},{"name":"val StringOps: StringOps","description":"scala.collection.immutable","location":"api/scala/collection/immutable.html","searchKeys":["StringOps"]},{"name":"def asJavaParStream: DoubleStream","description":"scala.collection.convert.StreamExtensions$FloatArrayHasSeqParStream","location":"api/scala/collection/convert/StreamExtensions$FloatArrayHasSeqParStream.html","searchKeys":["asJavaParStream"]},{"name":"def zipped[El1, It1 <: Iterable[El1], El2, It2 <: Iterable[El2], El3, It3 <: Iterable[El3]](w1: T1 => IterableOps[El1, Iterable, It1] & It1, w2: T2 => IterableOps[El2, Iterable, It2] & It2, w3: T3 => IterableOps[El3, Iterable, It3] & It3): Tuple3Zipped[El1, It1, El2, It2, El3, It3]","description":"scala.runtime.Tuple3Zipped$$Ops","location":"api/scala/runtime/Tuple3Zipped$$Ops.html","searchKeys":["zipped"]},{"name":"def mapAsScalaMap[A, B](m: Map[A, B]): Map[A, B]","description":"scala.collection.JavaConverters$","location":"api/scala/collection/JavaConverters$.html","searchKeys":["mapAsScalaMap"]},{"name":"object NonLocalReturns","description":"scala.util.control.NonLocalReturns$","location":"api/scala/util/control/NonLocalReturns$.html","searchKeys":["NonLocalReturns"]},{"name":"def nonEmpty[T]: Boolean","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["nonEmpty"]},{"name":"def foldRight[B](z: B)(op: (A, B) => B): B","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["foldRight"]},{"name":"def write(data: A): Unit","description":"scala.concurrent.SyncChannel","location":"api/scala/concurrent/SyncChannel.html","searchKeys":["write"]},{"name":"class LazyZip3[+El1, +El2, +El3, C1]","description":"scala.collection.LazyZip3","location":"api/scala/collection/LazyZip3.html","searchKeys":["LazyZip3"]},{"name":"def get(key: K): Option[V]","description":"scala.collection.MapView$$FilterKeys","location":"api/scala/collection/MapView$$FilterKeys.html","searchKeys":["get"]},{"name":"def !!<: String","description":"scala.sys.process.ProcessBuilder","location":"api/scala/sys/process/ProcessBuilder.html","searchKeys":["!!<"]},{"name":"def +(x: String): String","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["+"]},{"name":"def count[T](start: T, end: T, step: T, isInclusive: Boolean)(num: Integral[T]): Int","description":"scala.collection.immutable.NumericRange$","location":"api/scala/collection/immutable/NumericRange$.html","searchKeys":["count"]},{"name":"def apply(i: Int): A","description":"scala.jdk.AnyAccumulator","location":"api/scala/jdk/AnyAccumulator.html","searchKeys":["apply"]},{"name":"def >=(x: Int): Boolean","description":"scala.Double","location":"api/scala/Double.html","searchKeys":[">="]},{"name":"def mul(factor: Double): Duration","description":"scala.concurrent.duration.Duration","location":"api/scala/concurrent/duration/Duration.html","searchKeys":["mul"]},{"name":"given ByteConstantTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ByteConstantTypeTest"]},{"name":"def apply(): R","description":"scala.Function0","location":"api/scala/Function0.html","searchKeys":["apply"]},{"name":"def tupled: (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) => R","description":"scala.Function18","location":"api/scala/Function18.html","searchKeys":["tupled"]},{"name":"Scala 3.0.0-M1 is here","description":"","location":"blog/2020/11/09/scala3-m1.html","searchKeys":["Scala 3.0.0-M1 is here"]},{"name":"given ConstantTypeMethods","description":"scala.quoted.Quotes$reflectModule$ConstantTypeMethods","location":"api/scala/quoted/Quotes$reflectModule$ConstantTypeMethods.html","searchKeys":["ConstantTypeMethods"]},{"name":"def isValidLong: Boolean","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["isValidLong"]},{"name":"def classType[T](clazz: Class[T], arg1: Manifest[], args: Manifest[]*): Manifest[T]","description":"scala.reflect.Manifest$","location":"api/scala/reflect/Manifest$.html","searchKeys":["classType"]},{"name":"def until(end: BigDecimal, step: BigDecimal): Exclusive[BigDecimal]","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["until"]},{"name":"def <<(x: Long): Int","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["<<"]},{"name":"val Closure: ClosureModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Closure"]},{"name":"class BigInt(val bigInteger: BigInteger) extends ScalaNumber with ScalaNumericConversions with Serializable with Ordered[BigInt]","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["BigInt"]},{"name":"class MatchIterator(val source: CharSequence, val regex: Regex, val groupNames: Seq[String]) extends AbstractIterator[String] with Iterator[String] with MatchData","description":"scala.util.matching.Regex$$MatchIterator","location":"api/scala/util/matching/Regex$$MatchIterator.html","searchKeys":["MatchIterator"]},{"name":"def body: Term","description":"scala.quoted.Quotes$reflectModule$WhileMethods","location":"api/scala/quoted/Quotes$reflectModule$WhileMethods.html","searchKeys":["body"]},{"name":"def byName[T](x: => T): T","description":"scala.compiletime","location":"api/scala/compiletime.html","searchKeys":["byName"]},{"name":"def efficientStepper[S <: Stepper[]](shape: StepperShape[A, S]): S & EfficientSplit","description":"scala.jdk.AnyAccumulator","location":"api/scala/jdk/AnyAccumulator.html","searchKeys":["efficientStepper"]},{"name":"object WeakHashMap extends MapFactory[[K, V] =>> WeakHashMap[K, V]]","description":"scala.collection.mutable.WeakHashMap$","location":"api/scala/collection/mutable/WeakHashMap$.html","searchKeys":["WeakHashMap"]},{"name":"package scala.compiletime.testing","description":"scala.compiletime.testing","location":"api/scala/compiletime/testing.html","searchKeys":["scala.compiletime.testing"]},{"name":"def <=(x: Int): Boolean","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["<="]},{"name":"val conversion: Repr => IterableOps[A, [A] =>> Iterable[A], C]","description":"scala.collection.generic.IsIterable","location":"api/scala/collection/generic/IsIterable.html","searchKeys":["conversion"]},{"name":"def takeWhile[T](p: T => Boolean): IArray[T]","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["takeWhile"]},{"name":"def append(x: Boolean): StringBuilder","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["append"]},{"name":"def toEither: Either[Throwable, T]","description":"scala.util.Try","location":"api/scala/util/Try.html","searchKeys":["toEither"]},{"name":"given MethodTypeMethods","description":"scala.quoted.Quotes$reflectModule$MethodTypeMethods","location":"api/scala/quoted/Quotes$reflectModule$MethodTypeMethods.html","searchKeys":["MethodTypeMethods"]},{"name":"def toBuildFrom[Ev <: ([_$36] =>> Any), A, CC <: ([_$37] =>> Any)](factory: EvidenceIterableFactory[CC, Ev])(evidence$35: Ev[A]): BuildFrom[Any, A, CC[A]]","description":"scala.collection.EvidenceIterableFactory$","location":"api/scala/collection/EvidenceIterableFactory$.html","searchKeys":["toBuildFrom"]},{"name":"def mkString(start: String, sep: String, end: String): String","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["mkString"]},{"name":"def make[T](evidence$1: ClassTag[T]): ArrayBuilder[T]","description":"scala.collection.mutable.ArrayBuilder$","location":"api/scala/collection/mutable/ArrayBuilder$.html","searchKeys":["make"]},{"name":"class Inclusive[T](start: T, end: T, step: T)(num: Integral[T]) extends NumericRange[T]","description":"scala.collection.immutable.NumericRange$$Inclusive","location":"api/scala/collection/immutable/NumericRange$$Inclusive.html","searchKeys":["Inclusive"]},{"name":"def withFilter(q: T => Boolean): WithFilter","description":"scala.util.Try$WithFilter","location":"api/scala/util/Try$WithFilter.html","searchKeys":["withFilter"]},{"name":"def apply(i: Int): Unit","description":"scala.collection.immutable.ArraySeq$$ofUnit","location":"api/scala/collection/immutable/ArraySeq$$ofUnit.html","searchKeys":["apply"]},{"name":"def zip[B](that: IterableOnce[B]): Iterator[(A, B)]","description":"scala.collection.Iterator","location":"api/scala/collection/Iterator.html","searchKeys":["zip"]},{"name":"object IeeeEquiv extends IeeeEquiv","description":"scala.math.Equiv$$Float$$IeeeEquiv$","location":"api/scala/math/Equiv$$Float$$IeeeEquiv$.html","searchKeys":["IeeeEquiv"]},{"name":"def concat[This <: Tuple, That <: Tuple](self: This, that: That): Tuple","description":"scala.runtime.Tuples$","location":"api/scala/runtime/Tuples$.html","searchKeys":["concat"]},{"name":"def toBuildFrom[V](factory: LongMap): BuildFrom[Any, (Long, V), LongMap[V]]","description":"scala.collection.mutable.LongMap$","location":"api/scala/collection/mutable/LongMap$.html","searchKeys":["toBuildFrom"]},{"name":"def boxedAdder: BiConsumer[DoubleAccumulator, Double]","description":"scala.jdk.DoubleAccumulator$","location":"api/scala/jdk/DoubleAccumulator$.html","searchKeys":["boxedAdder"]},{"name":"def update(index: Int, elem: Long): Unit","description":"scala.collection.mutable.ArraySeq$$ofLong","location":"api/scala/collection/mutable/ArraySeq$$ofLong.html","searchKeys":["update"]},{"name":"Using Dotty with sbt","description":"","location":"docs/usage/sbt-projects.html","searchKeys":["Using Dotty with sbt"]},{"name":"val x$30: FromExpr[T13]","description":"scala.quoted.FromExpr$$Tuple17FromExpr","location":"api/scala/quoted/FromExpr$$Tuple17FromExpr.html","searchKeys":["x$30"]},{"name":"val Vector: Vector","description":"scala","location":"api/scala.html","searchKeys":["Vector"]},{"name":"def zip[B](that: IterableOnce[B])(@implicitNotFound ev: Ordering[(A, B)]): CC[(A, B)]","description":"scala.collection.SortedSetOps","location":"api/scala/collection/SortedSetOps.html","searchKeys":["zip"]},{"name":"def day[C](c: C)(ev: Classifier[C]): R","description":"scala.concurrent.duration.DurationConversions","location":"api/scala/concurrent/duration/DurationConversions.html","searchKeys":["day"]},{"name":"def apply$mcIJI$sp(v1: Long, v2: Int): Int","description":"scala.runtime.java8.JFunction2$mcIJI$sp","location":"api/scala/runtime/java8/JFunction2$mcIJI$sp.html","searchKeys":["apply$mcIJI$sp"]},{"name":"def >(x: Int): Boolean","description":"scala.Double","location":"api/scala/Double.html","searchKeys":[">"]},{"name":"val TermParamClause: TermParamClauseModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TermParamClause"]},{"name":"def enqueue(elem: A): Queue[A]","description":"scala.collection.mutable.Queue","location":"api/scala/collection/mutable/Queue.html","searchKeys":["enqueue"]},{"name":"def between(minInclusive: Long, maxExclusive: Long): Long","description":"scala.util.Random","location":"api/scala/util/Random.html","searchKeys":["between"]},{"name":"val x$17: FromExpr[T5]","description":"scala.quoted.FromExpr$$Tuple12FromExpr","location":"api/scala/quoted/FromExpr$$Tuple12FromExpr.html","searchKeys":["x$17"]},{"name":"def asJavaSeqStream: DoubleStream","description":"scala.collection.convert.StreamExtensions$FloatArrayHasSeqParStream","location":"api/scala/collection/convert/StreamExtensions$FloatArrayHasSeqParStream.html","searchKeys":["asJavaSeqStream"]},{"name":"type If <: Term","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["If"]},{"name":"object StringBuilder","description":"scala.collection.mutable.StringBuilder$","location":"api/scala/collection/mutable/StringBuilder$.html","searchKeys":["StringBuilder"]},{"name":"object WrappedString extends SpecificIterableFactory[Char, WrappedString]","description":"scala.collection.immutable.WrappedString$","location":"api/scala/collection/immutable/WrappedString$.html","searchKeys":["WrappedString"]},{"name":"val TypeParamClause: TypeParamClauseModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeParamClause"]},{"name":"def /(x: Long): Long","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["/"]},{"name":"val x$9: Type[T9]","description":"scala.quoted.FromExpr$$Tuple10FromExpr","location":"api/scala/quoted/FromExpr$$Tuple10FromExpr.html","searchKeys":["x$9"]},{"name":"def failed[T](exception: Throwable): Promise[T]","description":"scala.concurrent.Promise$","location":"api/scala/concurrent/Promise$.html","searchKeys":["failed"]},{"name":"given ClassTagToExpr[T]: ToExpr[ClassTag[T]]","description":"scala.quoted.ToExpr$$ClassTagToExpr","location":"api/scala/quoted/ToExpr$.html","searchKeys":["ClassTagToExpr"]},{"name":"given NamedArgTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["NamedArgTypeTest"]},{"name":"def value: T","description":"scala.runtime.LazyRef","location":"api/scala/runtime/LazyRef.html","searchKeys":["value"]},{"name":"trait StringConstantModule","description":"scala.quoted.Quotes$reflectModule$StringConstantModule","location":"api/scala/quoted/Quotes$reflectModule$StringConstantModule.html","searchKeys":["StringConstantModule"]},{"name":"def _9: T9","description":"scala.Product19","location":"api/scala/Product19.html","searchKeys":["_9"]},{"name":"def from[K, V](it: IterableOnce[(K, V)]): HashMap[K, V]","description":"scala.collection.mutable.HashMap$","location":"api/scala/collection/mutable/HashMap$.html","searchKeys":["from"]},{"name":"def toStdOut: InputStream => Unit","description":"scala.sys.process.BasicIO$","location":"api/scala/sys/process/BasicIO$.html","searchKeys":["toStdOut"]},{"name":"val x$9: FromExpr[T1]","description":"scala.quoted.FromExpr$$Tuple8FromExpr","location":"api/scala/quoted/FromExpr$$Tuple8FromExpr.html","searchKeys":["x$9"]},{"name":"val INVISIBLE: \"\\033[8m\"","description":"scala.io.AnsiColor","location":"api/scala/io/AnsiColor.html","searchKeys":["INVISIBLE"]},{"name":"def flatMap[B](f: A => IterableOnce[B]): CC[B]","description":"scala.collection.IterableOps$$WithFilter","location":"api/scala/collection/IterableOps$$WithFilter.html","searchKeys":["flatMap"]},{"name":"def isEmpty: Boolean","description":"scala.Option","location":"api/scala/Option.html","searchKeys":["isEmpty"]},{"name":"val jDoubleAccumulatorFactoryShape: AccumulatorFactoryShape[Double, DoubleAccumulator]","description":"scala.jdk.Accumulator$$AccumulatorFactoryShape$","location":"api/scala/jdk/Accumulator$$AccumulatorFactoryShape$.html","searchKeys":["jDoubleAccumulatorFactoryShape"]},{"name":"def toFloat(x: Byte): Float","description":"scala.math.Numeric$$ByteIsIntegral","location":"api/scala/math/Numeric$$ByteIsIntegral.html","searchKeys":["toFloat"]},{"name":"def asScalaFromLongBinaryOperator(jf: LongBinaryOperator): (Long, Long) => Long","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asScalaFromLongBinaryOperator"]},{"name":"def let(owner: Symbol, terms: List[Term])(body: List[Ident] => Term): Term","description":"scala.quoted.Quotes$reflectModule$ValDefModule","location":"api/scala/quoted/Quotes$reflectModule$ValDefModule.html","searchKeys":["let"]},{"name":"def andThen[U](pf: PartialFunction[Try[T], U])(executor: ExecutionContext): Future[T]","description":"scala.concurrent.Future","location":"api/scala/concurrent/Future.html","searchKeys":["andThen"]},{"name":"object LinearSeq extends Delegate[[A] =>> LinearSeq[A]]","description":"scala.collection.LinearSeq$","location":"api/scala/collection/LinearSeq$.html","searchKeys":["LinearSeq"]},{"name":"def intArrayOps(xs: Array[Int]): ArrayOps[Int]","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["intArrayOps"]},{"name":"def indexOfSlice[B >: A](that: Seq[B], from: Int): Int","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["indexOfSlice"]},{"name":"val x$1: Type[T1]","description":"scala.quoted.FromExpr$$Tuple1FromExpr","location":"api/scala/quoted/FromExpr$$Tuple1FromExpr.html","searchKeys":["x$1"]},{"name":"def compare(a: Duration, b: Duration): Int","description":"scala.concurrent.duration.Duration$$DurationIsOrdered$","location":"api/scala/concurrent/duration/Duration$$DurationIsOrdered$.html","searchKeys":["compare"]},{"name":"def asScala: (Double, Double) => Double","description":"scala.jdk.FunctionWrappers$$RichDoubleBinaryOperatorAsFunction2","location":"api/scala/jdk/FunctionWrappers$$RichDoubleBinaryOperatorAsFunction2.html","searchKeys":["asScala"]},{"name":"class LongStepperSpliterator(s: LongStepper) extends OfLong","description":"scala.collection.LongStepper$$LongStepperSpliterator","location":"api/scala/collection/LongStepper$$LongStepperSpliterator.html","searchKeys":["LongStepperSpliterator"]},{"name":"type Position <: AnyRef","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Position"]},{"name":"def _8: T8","description":"scala.Product9","location":"api/scala/Product9.html","searchKeys":["_8"]},{"name":"def rhs: Term","description":"scala.quoted.Quotes$reflectModule$CaseDefMethods","location":"api/scala/quoted/Quotes$reflectModule$CaseDefMethods.html","searchKeys":["rhs"]},{"name":"def accept(x1: Double): Unit","description":"scala.jdk.FunctionWrappers$$AsJavaDoubleConsumer","location":"api/scala/jdk/FunctionWrappers$$AsJavaDoubleConsumer.html","searchKeys":["accept"]},{"name":"def /(x: Short): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["/"]},{"name":"def name: String","description":"scala.quoted.Quotes$reflectModule$NamedTypeMethods","location":"api/scala/quoted/Quotes$reflectModule$NamedTypeMethods.html","searchKeys":["name"]},{"name":"val x$25: FromExpr[T10]","description":"scala.quoted.FromExpr$$Tuple15FromExpr","location":"api/scala/quoted/FromExpr$$Tuple15FromExpr.html","searchKeys":["x$25"]},{"name":"def clear(): Unit","description":"scala.collection.mutable.LongMap$$LongMapBuilder","location":"api/scala/collection/mutable/LongMap$$LongMapBuilder.html","searchKeys":["clear"]},{"name":"def newBuilder[A](evidence$22: Ev[A]): Builder[A, CC[A]]","description":"scala.collection.EvidenceIterableFactory","location":"api/scala/collection/EvidenceIterableFactory.html","searchKeys":["newBuilder"]},{"name":"type %[X <: Int, Y <: Int] <: Int","description":"scala.compiletime.ops.int$","location":"api/scala/compiletime/ops/int$.html","searchKeys":["%"]},{"name":"package scala.util","description":"scala.util","location":"api/scala/util.html","searchKeys":["scala.util"]},{"name":"def returnTpt: TypeTree","description":"scala.quoted.Quotes$reflectModule$DefDefMethods","location":"api/scala/quoted/Quotes$reflectModule$DefDefMethods.html","searchKeys":["returnTpt"]},{"name":"def apply(x1: T, x2: U): Unit","description":"scala.jdk.FunctionWrappers$$FromJavaBiConsumer","location":"api/scala/jdk/FunctionWrappers$$FromJavaBiConsumer.html","searchKeys":["apply"]},{"name":"def fill[A](n1: Int, n2: Int, n3: Int)(elem: => A): CC[CC[CC[A]]]","description":"scala.collection.IterableFactory","location":"api/scala/collection/IterableFactory.html","searchKeys":["fill"]},{"name":"def copyToBuffer[B >: A](dest: Buffer[B]): Unit","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["copyToBuffer"]},{"name":"object Product6","description":"scala.Product6$","location":"api/scala/Product6$.html","searchKeys":["Product6"]},{"name":"def manifest[T](m: Manifest[T]): Manifest[T]","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["manifest"]},{"name":"def _7: T7","description":"scala.Product18","location":"api/scala/Product18.html","searchKeys":["_7"]},{"name":"def grouped[B >: A](size: Int): GroupedIterator[B]","description":"scala.collection.Iterator","location":"api/scala/collection/Iterator.html","searchKeys":["grouped"]},{"name":"def lazyLines_!(capacity: Integer): LazyList[String]","description":"scala.sys.process.ProcessBuilder","location":"api/scala/sys/process/ProcessBuilder.html","searchKeys":["lazyLines_!"]},{"name":"def -(x: Double): Double","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["-"]},{"name":"object Seq extends Delegate[[A] =>> Seq[A]]","description":"scala.collection.mutable.Seq$","location":"api/scala/collection/mutable/Seq$.html","searchKeys":["Seq"]},{"name":"def get(key: K): Option[V]","description":"scala.collection.immutable.ListMap","location":"api/scala/collection/immutable/ListMap.html","searchKeys":["get"]},{"name":"def iterator: Iterator[(Long, T)]","description":"scala.collection.immutable.LongMap","location":"api/scala/collection/immutable/LongMap.html","searchKeys":["iterator"]},{"name":"given TypeBlockTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeBlockTypeTest"]},{"name":"def addOne(key: K, value: V): AnyRefMap[K, V]","description":"scala.collection.mutable.AnyRefMap","location":"api/scala/collection/mutable/AnyRefMap.html","searchKeys":["addOne"]},{"name":"def -(x: Float): Float","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["-"]},{"name":"def range(start: Int, end: Int, step: Int): Array[Int]","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["range"]},{"name":"Programmatic Structural Types - More Details","description":"","location":"docs/reference/changed-features/structural-types-spec.html","searchKeys":["Programmatic Structural Types - More Details"]},{"name":"def abstractType[T](prefix: OptManifest[], name: String, clazz: Class[], args: OptManifest[]*): ClassTag[T]","description":"scala.reflect.ClassManifestFactory$","location":"api/scala/reflect/ClassManifestFactory$.html","searchKeys":["abstractType"]},{"name":"class Shape extends AnyVal","description":"scala.collection.StepperShape$$Shape","location":"api/scala/collection/StepperShape$$Shape.html","searchKeys":["Shape"]},{"name":"def longValue: Long","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["longValue"]},{"name":"class specialized(group: SpecializedGroup) extends StaticAnnotation","description":"scala.specialized","location":"api/scala/specialized.html","searchKeys":["specialized"]},{"name":"def withFilter(p: T => Boolean): WithFilter","description":"scala.util.Try","location":"api/scala/util/Try.html","searchKeys":["withFilter"]},{"name":"def !=(x: Long): Boolean","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["!="]},{"name":"val x$39: FromExpr[T18]","description":"scala.quoted.FromExpr$$Tuple21FromExpr","location":"api/scala/quoted/FromExpr$$Tuple21FromExpr.html","searchKeys":["x$39"]},{"name":"def skipNat(at: Addr): Addr","description":"dotty.tools.tasty.TastyBuffer","location":"api/dotty/tools/tasty/TastyBuffer.html","searchKeys":["skipNat"]},{"name":"def apply(): Double","description":"scala.jdk.FunctionWrappers$$FromJavaDoubleSupplier","location":"api/scala/jdk/FunctionWrappers$$FromJavaDoubleSupplier.html","searchKeys":["apply"]},{"name":"val x$2: Type[T2]","description":"scala.quoted.FromExpr$$Tuple14FromExpr","location":"api/scala/quoted/FromExpr$$Tuple14FromExpr.html","searchKeys":["x$2"]},{"name":"object Unit extends AnyValCompanion","description":"scala.Unit$","location":"api/scala/Unit$.html","searchKeys":["Unit"]},{"name":"object Codec extends LowPriorityCodecImplicits","description":"scala.io.Codec$","location":"api/scala/io/Codec$.html","searchKeys":["Codec"]},{"name":"type UnsupportedOperationException = UnsupportedOperationException","description":"scala","location":"api/scala.html","searchKeys":["UnsupportedOperationException"]},{"name":"val BYNAMEtype: 93","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["BYNAMEtype"]},{"name":"def toFloat(x: Char): Float","description":"scala.math.Numeric$$CharIsIntegral","location":"api/scala/math/Numeric$$CharIsIntegral.html","searchKeys":["toFloat"]},{"name":"def isAtEnd: Boolean","description":"dotty.tools.tasty.TastyHeaderUnpickler","location":"api/dotty/tools/tasty/TastyHeaderUnpickler.html","searchKeys":["isAtEnd"]},{"name":"val LOCAL_SUFFIX_STRING: \" \"","description":"scala.reflect.NameTransformer$","location":"api/scala/reflect/NameTransformer$.html","searchKeys":["LOCAL_SUFFIX_STRING"]},{"name":"def toArray[T](xs: Seq[T]): Array[AnyRef]","description":"scala.runtime.ScalaRunTime$","location":"api/scala/runtime/ScalaRunTime$.html","searchKeys":["toArray"]},{"name":"def getOrElse[B1 >: B](or: => B1): B1","description":"scala.util.Either$$RightProjection","location":"api/scala/util/Either$$RightProjection.html","searchKeys":["getOrElse"]},{"name":"def allThreads(): IndexedSeq[Thread]","description":"scala.sys","location":"api/scala/sys.html","searchKeys":["allThreads"]},{"name":"def >=(x: Double): Boolean","description":"scala.Int","location":"api/scala/Int.html","searchKeys":[">="]},{"name":"def get(key: K): Option[V]","description":"scala.collection.immutable.VectorMap","location":"api/scala/collection/immutable/VectorMap.html","searchKeys":["get"]},{"name":"def :+[B >: Char](elem: B): IndexedSeq[B]","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":[":+"]},{"name":"package scala.collection.generic","description":"scala.collection.generic","location":"api/scala/collection/generic.html","searchKeys":["scala.collection.generic"]},{"name":"def tabulate[A, C](n1: Int, n2: Int, n3: Int, n4: Int, n5: Int)(f: (Int, Int, Int, Int, Int) => A)(canAccumulate: AccumulatorFactoryShape[A, C]): AnyAccumulator[AnyAccumulator[AnyAccumulator[AnyAccumulator[C]]]]","description":"scala.jdk.Accumulator$","location":"api/scala/jdk/Accumulator$.html","searchKeys":["tabulate"]},{"name":"class WithFilter(p: Char => Boolean, s: String)","description":"scala.collection.StringOps$$WithFilter","location":"api/scala/collection/StringOps$$WithFilter.html","searchKeys":["WithFilter"]},{"name":"def dropRight(n: Int): C","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["dropRight"]},{"name":"object <:<","description":"scala.<:<$","location":"api/scala/<:<$.html","searchKeys":["<:<"]},{"name":"object Implicits extends ExtraImplicits","description":"scala.math.Ordering$$Implicits$","location":"api/scala/math/Ordering$$Implicits$.html","searchKeys":["Implicits"]},{"name":"given Tuple9ToExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9]: ToExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9)]","description":"scala.quoted.ToExpr$$Tuple9ToExpr","location":"api/scala/quoted/ToExpr$.html","searchKeys":["Tuple9ToExpr"]},{"name":"def setHash(xs: Set[]): Int","description":"scala.util.hashing.MurmurHash3$","location":"api/scala/util/hashing/MurmurHash3$.html","searchKeys":["setHash"]},{"name":"def filter(p: A => Boolean): C","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["filter"]},{"name":"def fromZip[V](keys: Iterable[Long], values: Iterable[V]): LongMap[V]","description":"scala.collection.mutable.LongMap$","location":"api/scala/collection/mutable/LongMap$.html","searchKeys":["fromZip"]},{"name":"object Proxy","description":"scala.Proxy$","location":"api/scala/Proxy$.html","searchKeys":["Proxy"]},{"name":"given NoneFromExpr: FromExpr[None]","description":"scala.quoted.FromExpr$$NoneFromExpr$","location":"api/scala/quoted/FromExpr$$NoneFromExpr$.html","searchKeys":["NoneFromExpr"]},{"name":"given Tuple10ToExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]: ToExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)]","description":"scala.quoted.ToExpr$$Tuple10ToExpr","location":"api/scala/quoted/ToExpr$.html","searchKeys":["Tuple10ToExpr"]},{"name":"def toByte: Byte","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["toByte"]},{"name":"class FromJavaDoubleFunction[R](jf: DoubleFunction[R]) extends Double => R","description":"scala.jdk.FunctionWrappers$$FromJavaDoubleFunction","location":"api/scala/jdk/FunctionWrappers$$FromJavaDoubleFunction.html","searchKeys":["FromJavaDoubleFunction"]},{"name":"val emptyBooleanArray: Array[Boolean]","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["emptyBooleanArray"]},{"name":"class Expr[+T]","description":"scala.quoted.Expr","location":"api/scala/quoted/Expr.html","searchKeys":["Expr"]},{"name":"def isOpaqueAlias: Boolean","description":"scala.quoted.Quotes$reflectModule$TypeRefMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeRefMethods.html","searchKeys":["isOpaqueAlias"]},{"name":"def dictionaryAsScalaMapConverter[K, V](p: Dictionary[K, V]): AsScala[Map[K, V]]","description":"scala.collection.JavaConverters$","location":"api/scala/collection/JavaConverters$.html","searchKeys":["dictionaryAsScalaMapConverter"]},{"name":"def flatMap[B](f: A => IterableOnce[B]): Iterator[B]","description":"scala.collection.Iterator","location":"api/scala/collection/Iterator.html","searchKeys":["flatMap"]},{"name":"def %(x: Double): Double","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["%"]},{"name":"def patchInPlace(from: Int, patch: IterableOnce[A], replaced: Int): ListBuffer[A]","description":"scala.collection.mutable.ListBuffer","location":"api/scala/collection/mutable/ListBuffer.html","searchKeys":["patchInPlace"]},{"name":"def unapply(x: TypeParamClause): Some[List[TypeDef]]","description":"scala.quoted.Quotes$reflectModule$TypeParamClauseModule","location":"api/scala/quoted/Quotes$reflectModule$TypeParamClauseModule.html","searchKeys":["unapply"]},{"name":"def _5: T5","description":"scala.Product13","location":"api/scala/Product13.html","searchKeys":["_5"]},{"name":"class Float extends AnyVal","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["Float"]},{"name":"def addString(b: StringBuilder, sep: String): StringBuilder","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["addString"]},{"name":"trait FloatIsFractional extends Fractional[Float]","description":"scala.math.Numeric$$FloatIsFractional","location":"api/scala/math/Numeric$$FloatIsFractional.html","searchKeys":["FloatIsFractional"]},{"name":"def -(key: K): C","description":"scala.collection.mutable.MapOps","location":"api/scala/collection/mutable/MapOps.html","searchKeys":["-"]},{"name":"def apply(): EmptyTuple","description":"scala.Tuple$","location":"api/scala/Tuple$.html","searchKeys":["apply"]},{"name":"def remove(timeout: Long): Option[Reference[T]]","description":"scala.ref.ReferenceQueue","location":"api/scala/ref/ReferenceQueue.html","searchKeys":["remove"]},{"name":"val x$32: FromExpr[T15]","description":"scala.quoted.FromExpr$$Tuple17FromExpr","location":"api/scala/quoted/FromExpr$$Tuple17FromExpr.html","searchKeys":["x$32"]},{"name":"object ImplicitConversions extends ToScalaImplicits with ToJavaImplicits","description":"scala.collection.convert.ImplicitConversions$","location":"api/scala/collection/convert/ImplicitConversions$.html","searchKeys":["ImplicitConversions"]},{"name":"def _12: T12","description":"scala.Product15","location":"api/scala/Product15.html","searchKeys":["_12"]},{"name":"given TermMethods","description":"scala.quoted.Quotes$reflectModule$TermMethods","location":"api/scala/quoted/Quotes$reflectModule$TermMethods.html","searchKeys":["TermMethods"]},{"name":"def >(x: Double): Boolean","description":"scala.Int","location":"api/scala/Int.html","searchKeys":[">"]},{"name":"def unapply(x: Match): (Term, List[CaseDef])","description":"scala.quoted.Quotes$reflectModule$MatchModule","location":"api/scala/quoted/Quotes$reflectModule$MatchModule.html","searchKeys":["unapply"]},{"name":"def toJava(duration: FiniteDuration): Duration","description":"scala.jdk.javaapi.DurationConverters$","location":"api/scala/jdk/javaapi/DurationConverters$.html","searchKeys":["toJava"]},{"name":"def asScala: () => T","description":"scala.jdk.FunctionWrappers$$RichSupplierAsFunction0","location":"api/scala/jdk/FunctionWrappers$$RichSupplierAsFunction0.html","searchKeys":["asScala"]},{"name":"def toBinaryString: String","description":"scala.runtime.RichInt","location":"api/scala/runtime/RichInt.html","searchKeys":["toBinaryString"]},{"name":"def apply(n: Int): Long","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["apply"]},{"name":"Tests for Debuggability","description":"","location":"docs/contributing/debug-tests.html","searchKeys":["Tests for Debuggability"]},{"name":"def asJavaIterableConverter[A](i: Iterable[A]): AsJava[Iterable[A]]","description":"scala.collection.JavaConverters$","location":"api/scala/collection/JavaConverters$.html","searchKeys":["asJavaIterableConverter"]},{"name":"def apply(start: Int, end: Int, step: Int): Exclusive","description":"scala.collection.immutable.Range$","location":"api/scala/collection/immutable/Range$.html","searchKeys":["apply"]},{"name":"def subSequence(start: Int, end: Int): CharSequence","description":"scala.Predef$$SeqCharSequence","location":"api/scala/Predef$$SeqCharSequence.html","searchKeys":["subSequence"]},{"name":"def removed(key: K): Map[K, V]","description":"scala.collection.immutable.Map$$Map1","location":"api/scala/collection/immutable/Map$$Map1.html","searchKeys":["removed"]},{"name":"class ShutdownHookThread extends Thread","description":"scala.sys.ShutdownHookThread","location":"api/scala/sys/ShutdownHookThread.html","searchKeys":["ShutdownHookThread"]},{"name":"def recover[U >: T](pf: PartialFunction[Throwable, U])(executor: ExecutionContext): Future[U]","description":"scala.concurrent.Future","location":"api/scala/concurrent/Future.html","searchKeys":["recover"]},{"name":"def foreach[U](f: A => U): Unit","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["foreach"]},{"name":"def <=(x: Double): Boolean","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["<="]},{"name":"def waterlineDenom: Int","description":"scala.collection.mutable.UnrolledBuffer$","location":"api/scala/collection/mutable/UnrolledBuffer$.html","searchKeys":["waterlineDenom"]},{"name":"def underlying: TypeRepr","description":"scala.quoted.Quotes$reflectModule$ByNameTypeMethods","location":"api/scala/quoted/Quotes$reflectModule$ByNameTypeMethods.html","searchKeys":["underlying"]},{"name":"def this(obj: Any)","description":"scala.UninitializedFieldError","location":"api/scala/UninitializedFieldError.html","searchKeys":["this"]},{"name":"val noTraceSuppression: BooleanProp","description":"scala.sys.SystemProperties$","location":"api/scala/sys/SystemProperties$.html","searchKeys":["noTraceSuppression"]},{"name":"def toFloat: Float","description":"scala.math.Numeric$NumericOps","location":"api/scala/math/Numeric$NumericOps.html","searchKeys":["toFloat"]},{"name":"Wildcard Arguments in Types","description":"","location":"docs/reference/changed-features/wildcards.html","searchKeys":["Wildcard Arguments in Types"]},{"name":"val x$8: FromExpr[T1]","description":"scala.quoted.FromExpr$$Tuple7FromExpr","location":"api/scala/quoted/FromExpr$$Tuple7FromExpr.html","searchKeys":["x$8"]},{"name":"class fromAbove extends Annotation","description":"scala.quoted.runtime.Patterns$$fromAbove","location":"api/scala/quoted/runtime/Patterns$$fromAbove.html","searchKeys":["fromAbove"]},{"name":"val longAccumulatorFactoryShape: AccumulatorFactoryShape[Long, LongAccumulator]","description":"scala.jdk.Accumulator$$AccumulatorFactoryShape$","location":"api/scala/jdk/Accumulator$$AccumulatorFactoryShape$.html","searchKeys":["longAccumulatorFactoryShape"]},{"name":"def unapply[T1](x: Product1[T1]): Option[Product1[T1]]","description":"scala.Product1$","location":"api/scala/Product1$.html","searchKeys":["unapply"]},{"name":"def enrichAsJavaSupplier[T](sf: () => T): RichFunction0AsSupplier[T]","description":"scala.jdk.Priority1FunctionExtensions","location":"api/scala/jdk/Priority1FunctionExtensions.html","searchKeys":["enrichAsJavaSupplier"]},{"name":"def apply[T <: AnyRef](value: T): WeakReference[T]","description":"scala.ref.WeakReference$","location":"api/scala/ref/WeakReference$.html","searchKeys":["apply"]},{"name":"def _21: T21","description":"scala.Product22","location":"api/scala/Product22.html","searchKeys":["_21"]},{"name":"val x$22: FromExpr[T8]","description":"scala.quoted.FromExpr$$Tuple14FromExpr","location":"api/scala/quoted/FromExpr$$Tuple14FromExpr.html","searchKeys":["x$22"]},{"name":"class AsJavaObjDoubleConsumer[T](sf: (T, Double) => Unit) extends ObjDoubleConsumer[T]","description":"scala.jdk.FunctionWrappers$$AsJavaObjDoubleConsumer","location":"api/scala/jdk/FunctionWrappers$$AsJavaObjDoubleConsumer.html","searchKeys":["AsJavaObjDoubleConsumer"]},{"name":"def +:[B >: A](x: B)(evidence$11: ClassTag[B]): Array[B]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["+:"]},{"name":"given RecursiveThisMethods","description":"scala.quoted.Quotes$reflectModule$RecursiveThisMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["RecursiveThisMethods"]},{"name":"class ReturnThrowable[T] extends ControlThrowable","description":"scala.util.control.NonLocalReturns$$ReturnThrowable","location":"api/scala/util/control/NonLocalReturns$$ReturnThrowable.html","searchKeys":["ReturnThrowable"]},{"name":"given Tuple5ToExpr[T1, T2, T3, T4, T5]: ToExpr[(T1, T2, T3, T4, T5)]","description":"scala.quoted.ToExpr$$Tuple5ToExpr","location":"api/scala/quoted/ToExpr$.html","searchKeys":["Tuple5ToExpr"]},{"name":"def apply$mcJDD$sp(v1: Double, v2: Double): Long","description":"scala.runtime.java8.JFunction2$mcJDD$sp","location":"api/scala/runtime/java8/JFunction2$mcJDD$sp.html","searchKeys":["apply$mcJDD$sp"]},{"name":"class WrappedString(self: String) extends AbstractSeq[Char] with IndexedSeq[Char] with IndexedSeqOps[Char, [A] =>> IndexedSeq[A], WrappedString] with Serializable","description":"scala.collection.immutable.WrappedString","location":"api/scala/collection/immutable/WrappedString.html","searchKeys":["WrappedString"]},{"name":"def %(x: Int): Int","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["%"]},{"name":"trait Product2[@specialized(Int, Long, Double) +T1, @specialized(Int, Long, Double) +T2] extends Product","description":"scala.Product2","location":"api/scala/Product2.html","searchKeys":["Product2"]},{"name":"def empty: C","description":"scala.collection.SpecificIterableFactory","location":"api/scala/collection/SpecificIterableFactory.html","searchKeys":["empty"]},{"name":"def expr: Term","description":"scala.quoted.Quotes$reflectModule$BlockMethods","location":"api/scala/quoted/Quotes$reflectModule$BlockMethods.html","searchKeys":["expr"]},{"name":"def tpe: TypeRepr","description":"scala.quoted.Quotes$reflectModule$WildcardTypeTreeMethods","location":"api/scala/quoted/Quotes$reflectModule$WildcardTypeTreeMethods.html","searchKeys":["tpe"]},{"name":"def <(x: Byte): Boolean","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["<"]},{"name":"def MatchableClass: Symbol","description":"scala.quoted.Quotes$reflectModule$defnModule","location":"api/scala/quoted/Quotes$reflectModule$defnModule.html","searchKeys":["MatchableClass"]},{"name":"def tryBreakable[T](op: => T): TryBlock[T]","description":"scala.util.control.Breaks","location":"api/scala/util/control/Breaks.html","searchKeys":["tryBreakable"]},{"name":"object BigInt","description":"scala.collection.immutable.Range$$BigInt$","location":"api/scala/collection/immutable/Range$$BigInt$.html","searchKeys":["BigInt"]},{"name":"def _2: T2","description":"scala.Product12","location":"api/scala/Product12.html","searchKeys":["_2"]},{"name":"def enrichAsJavaDoubleToIntFunction[A0](sf: A0 => Int)(evA0: A0 =:= Double): RichFunction1AsDoubleToIntFunction","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsJavaDoubleToIntFunction"]},{"name":"object Ordering extends LowPriorityOrderingImplicits","description":"scala.math.Ordering$","location":"api/scala/math/Ordering$.html","searchKeys":["Ordering"]},{"name":"given SeqFromExpr[T](using val x$1: Type[T], val x$2: FromExpr[T]): FromExpr[Seq[T]]","description":"scala.quoted.FromExpr$$SeqFromExpr","location":"api/scala/quoted/FromExpr$$SeqFromExpr.html","searchKeys":["SeqFromExpr"]},{"name":"def apply(stringContext: StringContext)(using Quotes): Expr[StringContext]","description":"scala.quoted.ToExpr$$StringContextToExpr$","location":"api/scala/quoted/ToExpr$$StringContextToExpr$.html","searchKeys":["apply"]},{"name":"def max(that: T): T","description":"scala.runtime.ScalaNumberProxy","location":"api/scala/runtime/ScalaNumberProxy.html","searchKeys":["max"]},{"name":"def map[T](f: T => U)(evidence$7: ClassTag[U]): IArray[U]","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["map"]},{"name":"def iterator: Iterator[(K, V)]","description":"scala.collection.MapView$$Filter","location":"api/scala/collection/MapView$$Filter.html","searchKeys":["iterator"]},{"name":"def toInt: Int","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["toInt"]},{"name":"def popWhile(f: A => Boolean): Seq[A]","description":"scala.collection.mutable.Stack","location":"api/scala/collection/mutable/Stack.html","searchKeys":["popWhile"]},{"name":"class FromJavaIntToLongFunction(jf: IntToLongFunction) extends Int => Long","description":"scala.jdk.FunctionWrappers$$FromJavaIntToLongFunction","location":"api/scala/jdk/FunctionWrappers$$FromJavaIntToLongFunction.html","searchKeys":["FromJavaIntToLongFunction"]},{"name":"class IntMap[+T] extends AbstractMap[Int, T] with StrictOptimizedMapOps[Int, T, [K, V] =>> Map[K, V], IntMap[T]] with Serializable","description":"scala.collection.immutable.IntMap","location":"api/scala/collection/immutable/IntMap.html","searchKeys":["IntMap"]},{"name":"val GIVEN: 37","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["GIVEN"]},{"name":"def from[B](coll: IterableOnce[B]): List[B]","description":"scala.collection.immutable.List$","location":"api/scala/collection/immutable/List$.html","searchKeys":["from"]},{"name":"def !(log: ProcessLogger): Int","description":"scala.sys.process.ProcessBuilder","location":"api/scala/sys/process/ProcessBuilder.html","searchKeys":["!"]},{"name":"def +(x: Double): Double","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["+"]},{"name":"given given_FromString_Int: FromString[Int]","description":"scala.util.CommandLineParser$$FromString$$given_FromString_Int$","location":"api/scala/util/CommandLineParser$$FromString$.html","searchKeys":["given_FromString_Int"]},{"name":"def nextBytes(n: Int): Array[Byte]","description":"scala.util.Random","location":"api/scala/util/Random.html","searchKeys":["nextBytes"]},{"name":"def *(factor: Double): Duration","description":"scala.concurrent.duration.FiniteDuration","location":"api/scala/concurrent/duration/FiniteDuration.html","searchKeys":["*"]},{"name":"def >[B >: A](that: B)(evidence$3: () => B): Boolean","description":"scala.math.PartiallyOrdered","location":"api/scala/math/PartiallyOrdered.html","searchKeys":[">"]},{"name":"var value: V","description":"scala.collection.mutable.CollisionProofHashMap$$RBNode","location":"api/scala/collection/mutable/CollisionProofHashMap$$RBNode.html","searchKeys":["value"]},{"name":"def patchInPlace(from: Int, patch: IterableOnce[A], replaced: Int): IndexedBuffer[A]","description":"scala.collection.mutable.IndexedBuffer","location":"api/scala/collection/mutable/IndexedBuffer.html","searchKeys":["patchInPlace"]},{"name":"val x$4: Type[T4]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["x$4"]},{"name":"val AnyVal: ClassTag[AnyVal]","description":"scala.reflect.ClassTag$","location":"api/scala/reflect/ClassTag$.html","searchKeys":["AnyVal"]},{"name":"def toNanos: Long","description":"scala.concurrent.duration.Duration","location":"api/scala/concurrent/duration/Duration.html","searchKeys":["toNanos"]},{"name":"def characteristics: Int","description":"scala.collection.Stepper","location":"api/scala/collection/Stepper.html","searchKeys":["characteristics"]},{"name":"given ArrayOfIntToExpr: ToExpr[Array[Int]]","description":"scala.quoted.ToExpr$$ArrayOfIntToExpr$","location":"api/scala/quoted/ToExpr$$ArrayOfIntToExpr$.html","searchKeys":["ArrayOfIntToExpr"]},{"name":"def zip[U](that: Future[U]): Future[(T, U)]","description":"scala.concurrent.Future","location":"api/scala/concurrent/Future.html","searchKeys":["zip"]},{"name":"def replaceSomeIn(target: CharSequence, replacer: Match => Option[String]): String","description":"scala.util.matching.Regex","location":"api/scala/util/matching/Regex.html","searchKeys":["replaceSomeIn"]},{"name":"def ^(x: Short): Int","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["^"]},{"name":"def asScalaFromIntUnaryOperator(jf: IntUnaryOperator): Integer => Integer","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asScalaFromIntUnaryOperator"]},{"name":"def fold[A1 >: Char](z: A1)(op: (A1, A1) => A1): A1","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["fold"]},{"name":"def <<(x: Long): Int","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["<<"]},{"name":"def nextInt(): Int","description":"scala.util.Random","location":"api/scala/util/Random.html","searchKeys":["nextInt"]},{"name":"def apply(stats: List[Statement], expr: Term): Block","description":"scala.quoted.Quotes$reflectModule$BlockModule","location":"api/scala/quoted/Quotes$reflectModule$BlockModule.html","searchKeys":["apply"]},{"name":"val NoManifest: NoManifest","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["NoManifest"]},{"name":"class RichLongSupplierAsFunction0(underlying: LongSupplier) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichLongSupplierAsFunction0","location":"api/scala/jdk/FunctionWrappers$$RichLongSupplierAsFunction0.html","searchKeys":["RichLongSupplierAsFunction0"]},{"name":"type BigDecimal = BigDecimal","description":"scala","location":"api/scala.html","searchKeys":["BigDecimal"]},{"name":"class AsJavaIntPredicate(sf: Int => Boolean) extends IntPredicate","description":"scala.jdk.FunctionWrappers$$AsJavaIntPredicate","location":"api/scala/jdk/FunctionWrappers$$AsJavaIntPredicate.html","searchKeys":["AsJavaIntPredicate"]},{"name":"def dictionary asJava[K, V](m: Map[K, V]): Dictionary[K, V]","description":"scala.collection.convert.ToJavaImplicits","location":"api/scala/collection/convert/ToJavaImplicits.html","searchKeys":["dictionary asJava"]},{"name":"val Traversable: Iterable","description":"scala.collection.mutable","location":"api/scala/collection/mutable.html","searchKeys":["Traversable"]},{"name":"def excl(elem: Int): BitSet","description":"scala.collection.immutable.BitSet","location":"api/scala/collection/immutable/BitSet.html","searchKeys":["excl"]},{"name":"type Ordered[T] = Ordered[T]","description":"scala","location":"api/scala.html","searchKeys":["Ordered"]},{"name":"val x$8: Type[T8]","description":"scala.quoted.FromExpr$$Tuple13FromExpr","location":"api/scala/quoted/FromExpr$$Tuple13FromExpr.html","searchKeys":["x$8"]},{"name":"def CharClass: Symbol","description":"scala.quoted.Quotes$reflectModule$defnModule","location":"api/scala/quoted/Quotes$reflectModule$defnModule.html","searchKeys":["CharClass"]},{"name":"class ArrayDeque[A] extends AbstractBuffer[A] with IndexedBuffer[A] with IndexedSeqOps[A, [A] =>> ArrayDeque[A], ArrayDeque[A]] with StrictOptimizedSeqOps[A, [A] =>> ArrayDeque[A], ArrayDeque[A]] with IterableFactoryDefaults[A, [A] =>> ArrayDeque[A]] with ArrayDequeOps[A, [A] =>> ArrayDeque[A], ArrayDeque[A]] with Cloneable[ArrayDeque[A]] with DefaultSerializable","description":"scala.collection.mutable.ArrayDeque","location":"api/scala/collection/mutable/ArrayDeque.html","searchKeys":["ArrayDeque"]},{"name":"def unapply(tree: Export): (Term, List[Selector])","description":"scala.quoted.Quotes$reflectModule$ExportModule","location":"api/scala/quoted/Quotes$reflectModule$ExportModule.html","searchKeys":["unapply"]},{"name":"def quot(that: BigDecimal): BigDecimal","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["quot"]},{"name":"def <=(x: Byte): Boolean","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["<="]},{"name":"def initialized: Boolean","description":"scala.runtime.LazyShort","location":"api/scala/runtime/LazyShort.html","searchKeys":["initialized"]},{"name":"def <=(x: Long): Boolean","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["<="]},{"name":"trait EfficientSplit","description":"scala.collection.Stepper$$EfficientSplit","location":"api/scala/collection/Stepper$$EfficientSplit.html","searchKeys":["EfficientSplit"]},{"name":"trait JFunction2$mcJDD$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcJDD$sp","location":"api/scala/runtime/java8/JFunction2$mcJDD$sp.html","searchKeys":["JFunction2$mcJDD$sp"]},{"name":"def _13: T13","description":"scala.Product18","location":"api/scala/Product18.html","searchKeys":["_13"]},{"name":"def newBuilder[A]: Builder[A, Queue[A]]","description":"scala.collection.immutable.Queue$","location":"api/scala/collection/immutable/Queue$.html","searchKeys":["newBuilder"]},{"name":"def recThis: RecursiveThis","description":"scala.quoted.Quotes$reflectModule$RecursiveTypeMethods","location":"api/scala/quoted/Quotes$reflectModule$RecursiveTypeMethods.html","searchKeys":["recThis"]},{"name":"Contexts","description":"","location":"docs/internals/contexts.html","searchKeys":["Contexts"]},{"name":"def _15: T15","description":"scala.Product20","location":"api/scala/Product20.html","searchKeys":["_15"]},{"name":"type OptManifest[T] = OptManifest[T]","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["OptManifest"]},{"name":"val jCharacterStreamShape: StreamShape[Character, IntStream, IntStepper]","description":"scala.collection.convert.StreamExtensions$$StreamShape$","location":"api/scala/collection/convert/StreamExtensions$$StreamShape$.html","searchKeys":["jCharacterStreamShape"]},{"name":"def dequeue: (A, Queue[A])","description":"scala.collection.immutable.Queue","location":"api/scala/collection/immutable/Queue.html","searchKeys":["dequeue"]},{"name":"def asScalaFromToLongBiFunction[T, U](jf: ToLongBiFunction[T, U]): (T, U) => Long","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asScalaFromToLongBiFunction"]},{"name":"def second[C](c: C)(ev: Classifier[C]): R","description":"scala.concurrent.duration.DurationConversions","location":"api/scala/concurrent/duration/DurationConversions.html","searchKeys":["second"]},{"name":"given EitherToExpr[L, R]: ToExpr[Either[L, R]]","description":"scala.quoted.ToExpr$$EitherToExpr","location":"api/scala/quoted/ToExpr$.html","searchKeys":["EitherToExpr"]},{"name":"def addOne(elem: A): ArrayBuffer[A]","description":"scala.collection.mutable.ArrayBuffer","location":"api/scala/collection/mutable/ArrayBuffer.html","searchKeys":["addOne"]},{"name":"val x$9: Type[T9]","description":"scala.quoted.FromExpr$$Tuple9FromExpr","location":"api/scala/quoted/FromExpr$$Tuple9FromExpr.html","searchKeys":["x$9"]},{"name":"def >(x: Byte): Boolean","description":"scala.Float","location":"api/scala/Float.html","searchKeys":[">"]},{"name":"def length: Int","description":"scala.collection.LinearSeqOps","location":"api/scala/collection/LinearSeqOps.html","searchKeys":["length"]},{"name":"val array: Array[Int]","description":"scala.collection.mutable.ArraySeq$$ofInt","location":"api/scala/collection/mutable/ArraySeq$$ofInt.html","searchKeys":["array"]},{"name":"class AbstractSeqView[+A] extends AbstractView[A] with SeqView[A]","description":"scala.collection.AbstractSeqView","location":"api/scala/collection/AbstractSeqView.html","searchKeys":["AbstractSeqView"]},{"name":"val x$20: FromExpr[T7]","description":"scala.quoted.FromExpr$$Tuple13FromExpr","location":"api/scala/quoted/FromExpr$$Tuple13FromExpr.html","searchKeys":["x$20"]},{"name":"def isSingleton: Boolean","description":"scala.quoted.Quotes$reflectModule$TypeReprMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html","searchKeys":["isSingleton"]},{"name":"def isHighSurrogate: Boolean","description":"scala.runtime.RichChar","location":"api/scala/runtime/RichChar.html","searchKeys":["isHighSurrogate"]},{"name":"trait SuperTypeModule","description":"scala.quoted.Quotes$reflectModule$SuperTypeModule","location":"api/scala/quoted/Quotes$reflectModule$SuperTypeModule.html","searchKeys":["SuperTypeModule"]},{"name":"def parseString(str: String): Option[Byte]","description":"scala.math.Numeric$$ByteIsIntegral","location":"api/scala/math/Numeric$$ByteIsIntegral.html","searchKeys":["parseString"]},{"name":"class RichIntFunctionAsFunction1[R](underlying: IntFunction[R]) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichIntFunctionAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichIntFunctionAsFunction1.html","searchKeys":["RichIntFunctionAsFunction1"]},{"name":"def +(x: Float): Float","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["+"]},{"name":"val BLUE: \"\\033[34m\"","description":"scala.io.AnsiColor","location":"api/scala/io/AnsiColor.html","searchKeys":["BLUE"]},{"name":"def apply$mcIF$sp(v1: Float): Int","description":"scala.runtime.java8.JFunction1$mcIF$sp","location":"api/scala/runtime/java8/JFunction1$mcIF$sp.html","searchKeys":["apply$mcIF$sp"]},{"name":"val x$12: Type[T12]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["x$12"]},{"name":"Implicit Conversions","description":"","location":"docs/reference/contextual/conversions.html","searchKeys":["Implicit Conversions"]},{"name":"given Tuple22FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22](using val x$1: Type[T1], val x$2: Type[T2], val x$3: Type[T3], val x$4: Type[T4], val x$5: Type[T5], val x$6: Type[T6], val x$7: Type[T7], val x$8: Type[T8], val x$9: Type[T9], val x$10: Type[T10], val x$11: Type[T11], val x$12: Type[T12], val x$13: Type[T13], val x$14: Type[T14], val x$15: Type[T15], val x$16: Type[T16], val x$17: Type[T17], val x$18: Type[T18], val x$19: Type[T19], val x$20: Type[T20], val x$21: Type[T21], val x$22: Type[T22], val x$23: FromExpr[T1], val x$24: FromExpr[T2], val x$25: FromExpr[T3], val x$26: FromExpr[T4], val x$27: FromExpr[T5], val x$28: FromExpr[T6], val x$29: FromExpr[T7], val x$30: FromExpr[T8], val x$31: FromExpr[T9], val x$32: FromExpr[T10], val x$33: FromExpr[T11], val x$34: FromExpr[T12], val x$35: FromExpr[T13], val x$36: FromExpr[T14], val x$37: FromExpr[T15], val x$38: FromExpr[T16], val x$39: FromExpr[T17], val x$40: FromExpr[T18], val x$41: FromExpr[T19], val x$42: FromExpr[T20], val x$43: FromExpr[T21], val x$44: FromExpr[T22]): FromExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22)]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$.html","searchKeys":["Tuple22FromExpr"]},{"name":"trait ProcessImplicits","description":"scala.sys.process.ProcessImplicits","location":"api/scala/sys/process/ProcessImplicits.html","searchKeys":["ProcessImplicits"]},{"name":"val x$17: Type[T17]","description":"scala.quoted.FromExpr$$Tuple20FromExpr","location":"api/scala/quoted/FromExpr$$Tuple20FromExpr.html","searchKeys":["x$17"]},{"name":"class Drop[A](underlying: SomeIndexedSeqOps[A], n: Int) extends Drop[A] with IndexedSeqView[A]","description":"scala.collection.IndexedSeqView$$Drop","location":"api/scala/collection/IndexedSeqView$$Drop.html","searchKeys":["Drop"]},{"name":"def updated[V1 >: V](key: K, value: V1): TreeSeqMap[K, V1]","description":"scala.collection.immutable.TreeSeqMap","location":"api/scala/collection/immutable/TreeSeqMap.html","searchKeys":["updated"]},{"name":"def lazyLines(log: ProcessLogger): LazyList[String]","description":"scala.sys.process.ProcessBuilder","location":"api/scala/sys/process/ProcessBuilder.html","searchKeys":["lazyLines"]},{"name":"def excl(elem: K): Set[K]","description":"scala.collection.immutable.MapOps$ImmutableKeySet","location":"api/scala/collection/immutable/MapOps$ImmutableKeySet.html","searchKeys":["excl"]},{"name":"def print(): Unit","description":"scala.collection.immutable.Stream","location":"api/scala/collection/immutable/Stream.html","searchKeys":["print"]},{"name":"Parameter Untupling - More Details","description":"","location":"docs/reference/other-new-features/parameter-untupling-spec.html","searchKeys":["Parameter Untupling - More Details"]},{"name":"def fromIterator(elems: Iterator[Any]): TupleXXL","description":"scala.runtime.TupleXXL$","location":"api/scala/runtime/TupleXXL$.html","searchKeys":["fromIterator"]},{"name":"def unorderedHashing: Hashing[IterableOnce[Any]]","description":"scala.util.hashing.MurmurHash3$","location":"api/scala/util/hashing/MurmurHash3$.html","searchKeys":["unorderedHashing"]},{"name":"def unapply[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16](x: Product16[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]): Option[Product16[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]]","description":"scala.Product16$","location":"api/scala/Product16$.html","searchKeys":["unapply"]},{"name":"def -(delta: Int): Addr","description":"dotty.tools.tasty.TastyBuffer$$Addr","location":"api/dotty/tools/tasty/TastyBuffer$$Addr.html","searchKeys":["-"]},{"name":"val Any: ClassTag[Any]","description":"scala.reflect.ClassTag$","location":"api/scala/reflect/ClassTag$.html","searchKeys":["Any"]},{"name":"def tpeOpt: Option[TypeRepr]","description":"scala.quoted.Quotes$reflectModule$ClosureMethods","location":"api/scala/quoted/Quotes$reflectModule$ClosureMethods.html","searchKeys":["tpeOpt"]},{"name":"def curried: T1 => T2 => T3 => T4 => R","description":"scala.Function4","location":"api/scala/Function4.html","searchKeys":["curried"]},{"name":"def unapply[T](x: Expr[T])(using FromExpr[T])(using Quotes): Option[T]","description":"scala.quoted.Expr$","location":"api/scala/quoted/Expr$.html","searchKeys":["unapply"]},{"name":"def size[T]: Int","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["size"]},{"name":"def asJavaParIntStream(cc: IterableOnce[Integer]): IntStream","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaParIntStream"]},{"name":"def refArrayOps[T <: AnyRef](xs: Array[T]): ArrayOps[T]","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["refArrayOps"]},{"name":"class Map4[K, +V](key1: K, value1: V, key2: K, value2: V, key3: K, value3: V, key4: K, value4: V) extends AbstractMap[K, V] with StrictOptimizedIterableOps[(K, V), [A] =>> Iterable[A], Map[K, V]] with Serializable","description":"scala.collection.immutable.Map$$Map4","location":"api/scala/collection/immutable/Map$$Map4.html","searchKeys":["Map4"]},{"name":"def contains(elem: A): Boolean","description":"scala.collection.immutable.Set$$Set4","location":"api/scala/collection/immutable/Set$$Set4.html","searchKeys":["contains"]},{"name":"val x$5: Type[T5]","description":"scala.quoted.FromExpr$$Tuple5FromExpr","location":"api/scala/quoted/FromExpr$$Tuple5FromExpr.html","searchKeys":["x$5"]},{"name":"def classSymbol: Option[Symbol]","description":"scala.quoted.Quotes$reflectModule$TypeReprMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html","searchKeys":["classSymbol"]},{"name":"trait JFunction0$mcV$sp extends () => Any with Serializable","description":"scala.runtime.java8.JFunction0$mcV$sp","location":"api/scala/runtime/java8/JFunction0$mcV$sp.html","searchKeys":["JFunction0$mcV$sp"]},{"name":"val ThisType: ThisTypeModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ThisType"]},{"name":"val jDoubleAccumulatorFactoryInfo: AccumulatorFactoryInfo[Double, IntAccumulator]","description":"scala.collection.convert.StreamExtensions$$AccumulatorFactoryInfo$","location":"api/scala/collection/convert/StreamExtensions$$AccumulatorFactoryInfo$.html","searchKeys":["jDoubleAccumulatorFactoryInfo"]},{"name":"val Nothing: Manifest[Nothing]","description":"scala.reflect.Manifest$","location":"api/scala/reflect/Manifest$.html","searchKeys":["Nothing"]},{"name":"def rangeTo(to: K): C","description":"scala.collection.SortedMapOps","location":"api/scala/collection/SortedMapOps.html","searchKeys":["rangeTo"]},{"name":"val x$12: FromExpr[T5]","description":"scala.quoted.FromExpr$$Tuple7FromExpr","location":"api/scala/quoted/FromExpr$$Tuple7FromExpr.html","searchKeys":["x$12"]},{"name":"def quoteReplacement(text: String): String","description":"scala.util.matching.Regex$","location":"api/scala/util/matching/Regex$.html","searchKeys":["quoteReplacement"]},{"name":"def +(x: Byte): Int","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["+"]},{"name":"def toObjectArray(src: AnyRef): Array[Object]","description":"scala.runtime.ScalaRunTime$","location":"api/scala/runtime/ScalaRunTime$.html","searchKeys":["toObjectArray"]},{"name":"object BigDecimal","description":"scala.math.BigDecimal$","location":"api/scala/math/BigDecimal$.html","searchKeys":["BigDecimal"]},{"name":"val Unit: UnitManifest","description":"scala.reflect.ManifestFactory$","location":"api/scala/reflect/ManifestFactory$.html","searchKeys":["Unit"]},{"name":"def >(x: Int): Boolean","description":"scala.Char","location":"api/scala/Char.html","searchKeys":[">"]},{"name":"def update(index: Int, elem: Boolean): Unit","description":"scala.collection.mutable.ArraySeq$$ofBoolean","location":"api/scala/collection/mutable/ArraySeq$$ofBoolean.html","searchKeys":["update"]},{"name":"def >=(x: Byte): Boolean","description":"scala.Float","location":"api/scala/Float.html","searchKeys":[">="]},{"name":"def iterator: Iterator[A]","description":"scala.collection.View$$Take","location":"api/scala/collection/View$$Take.html","searchKeys":["iterator"]},{"name":"def create(length: Double, unit: TimeUnit): Duration","description":"scala.concurrent.duration.Duration$","location":"api/scala/concurrent/duration/Duration$.html","searchKeys":["create"]},{"name":"def *(x: Float): Float","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["*"]},{"name":"trait BitSet extends SortedSet[Int] with BitSetOps[BitSet]","description":"scala.collection.BitSet","location":"api/scala/collection/BitSet.html","searchKeys":["BitSet"]},{"name":"Match Expressions","description":"","location":"docs/reference/changed-features/match-syntax.html","searchKeys":["Match Expressions"]},{"name":"class RichPredicateAsFunction1[T](underlying: Predicate[T]) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichPredicateAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichPredicateAsFunction1.html","searchKeys":["RichPredicateAsFunction1"]},{"name":"def update(index: Int, elem: Unit): Unit","description":"scala.collection.mutable.ArraySeq$$ofUnit","location":"api/scala/collection/mutable/ArraySeq$$ofUnit.html","searchKeys":["update"]},{"name":"def head[This >: NonEmptyTuple <: NonEmptyTuple]: Head[This]","description":"scala.NonEmptyTuple","location":"api/scala/NonEmptyTuple.html","searchKeys":["head"]},{"name":"trait URLBuilder extends Source","description":"scala.sys.process.ProcessBuilder$$URLBuilder","location":"api/scala/sys/process/ProcessBuilder$$URLBuilder.html","searchKeys":["URLBuilder"]},{"name":"def from[A](coll: IterableOnce[A]): ListBuffer[A]","description":"scala.collection.mutable.ListBuffer$","location":"api/scala/collection/mutable/ListBuffer$.html","searchKeys":["from"]},{"name":"def ==(x: Float): Boolean","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["=="]},{"name":"def unapply[T](expr: Expr[Seq[T]])(using Quotes): Option[Seq[Expr[T]]]","description":"scala.quoted.Varargs$","location":"api/scala/quoted/Varargs$.html","searchKeys":["unapply"]},{"name":"def apply(x: T): U","description":"scala.Conversion","location":"api/scala/Conversion.html","searchKeys":["apply"]},{"name":"trait ConstantAnnotation extends StaticAnnotation","description":"scala.annotation.ConstantAnnotation","location":"api/scala/annotation/ConstantAnnotation.html","searchKeys":["ConstantAnnotation"]},{"name":"def newBuilder: Builder[A, C]","description":"scala.collection.Factory","location":"api/scala/collection/Factory.html","searchKeys":["newBuilder"]},{"name":"def _11: T11","description":"scala.Product12","location":"api/scala/Product12.html","searchKeys":["_11"]},{"name":"def from[V](source: IterableOnce[(Long, V)]): LongMap[V]","description":"scala.collection.mutable.LongMap$","location":"api/scala/collection/mutable/LongMap$.html","searchKeys":["from"]},{"name":"def |(x: Char): Int","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["|"]},{"name":"def asJava[A](i: Iterable[A]): Iterable[A]","description":"scala.collection.convert.AsJavaConverters","location":"api/scala/collection/convert/AsJavaConverters.html","searchKeys":["asJava"]},{"name":"def apply(x: Int): Value","description":"scala.Enumeration","location":"api/scala/Enumeration.html","searchKeys":["apply"]},{"name":"val emptyFloatArray: Array[Float]","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["emptyFloatArray"]},{"name":"given WhileMethods","description":"scala.quoted.Quotes$reflectModule$WhileMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["WhileMethods"]},{"name":"def *(x: Char): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["*"]},{"name":"def !=(x: Float): Boolean","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["!="]},{"name":"class Single[A](a: A) extends AbstractView[A]","description":"scala.collection.View$$Single","location":"api/scala/collection/View$$Single.html","searchKeys":["Single"]},{"name":"def subtractOne(elem: A): TreeSet[A]","description":"scala.collection.mutable.TreeSet","location":"api/scala/collection/mutable/TreeSet.html","searchKeys":["subtractOne"]},{"name":"def insertAll(index: Int, xs: IterableOnce[Char]): StringBuilder","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["insertAll"]},{"name":"def from(start: Int, step: Int): Stream[Int]","description":"scala.collection.immutable.Stream$","location":"api/scala/collection/immutable/Stream$.html","searchKeys":["from"]},{"name":"given SelectOuterMethods","description":"scala.quoted.Quotes$reflectModule$SelectOuterMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["SelectOuterMethods"]},{"name":"given ArrayOfShortToExpr: ToExpr[Array[Short]]","description":"scala.quoted.ToExpr$$ArrayOfShortToExpr$","location":"api/scala/quoted/ToExpr$$ArrayOfShortToExpr$.html","searchKeys":["ArrayOfShortToExpr"]},{"name":"def /(x: Int): Int","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["/"]},{"name":"class LineIterator extends AbstractIterator[String] with Iterator[String]","description":"scala.io.Source$LineIterator","location":"api/scala/io/Source$LineIterator.html","searchKeys":["LineIterator"]},{"name":"trait ExecutionContext","description":"scala.concurrent.ExecutionContext","location":"api/scala/concurrent/ExecutionContext.html","searchKeys":["ExecutionContext"]},{"name":"trait MapOps[K, +V, +CC <: ([_$1, _$2] =>> IterableOps[, AnyConstr, ]), +C] extends IterableOps[(K, V), [A] =>> Iterable[A], C] with PartialFunction[K, V]","description":"scala.collection.MapOps","location":"api/scala/collection/MapOps.html","searchKeys":["MapOps"]},{"name":"def transformTerms(trees: List[Term])(owner: Symbol): List[Term]","description":"scala.quoted.Quotes$reflectModule$TreeMap","location":"api/scala/quoted/Quotes$reflectModule$TreeMap.html","searchKeys":["transformTerms"]},{"name":"given RenameSelectorMethods","description":"scala.quoted.Quotes$reflectModule$RenameSelectorMethods","location":"api/scala/quoted/Quotes$reflectModule$RenameSelectorMethods.html","searchKeys":["RenameSelectorMethods"]},{"name":"given Tuple12FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12](using val x$1: Type[T1], val x$2: Type[T2], val x$3: Type[T3], val x$4: Type[T4], val x$5: Type[T5], val x$6: Type[T6], val x$7: Type[T7], val x$8: Type[T8], val x$9: Type[T9], val x$10: Type[T10], val x$11: Type[T11], val x$12: Type[T12], val x$13: FromExpr[T1], val x$14: FromExpr[T2], val x$15: FromExpr[T3], val x$16: FromExpr[T4], val x$17: FromExpr[T5], val x$18: FromExpr[T6], val x$19: FromExpr[T7], val x$20: FromExpr[T8], val x$21: FromExpr[T9], val x$22: FromExpr[T10], val x$23: FromExpr[T11], val x$24: FromExpr[T12]): FromExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)]","description":"scala.quoted.FromExpr$$Tuple12FromExpr","location":"api/scala/quoted/FromExpr$.html","searchKeys":["Tuple12FromExpr"]},{"name":"def lastKey: Int","description":"scala.collection.immutable.IntMap","location":"api/scala/collection/immutable/IntMap.html","searchKeys":["lastKey"]},{"name":"def writeBytes(data: Array[Byte], n: Int): Unit","description":"dotty.tools.tasty.TastyBuffer","location":"api/dotty/tools/tasty/TastyBuffer.html","searchKeys":["writeBytes"]},{"name":"def -(key1: K, key2: K, keys: K*): Map[K, V]","description":"scala.collection.Map","location":"api/scala/collection/Map.html","searchKeys":["-"]},{"name":"def _1: T1","description":"scala.Product18","location":"api/scala/Product18.html","searchKeys":["_1"]},{"name":"def push(elem1: A, elem2: A, elems: A*): Stack[A]","description":"scala.collection.mutable.Stack","location":"api/scala/collection/mutable/Stack.html","searchKeys":["push"]},{"name":"def foreach[U](f: (El1, El2) => U): Unit","description":"scala.collection.LazyZip2","location":"api/scala/collection/LazyZip2.html","searchKeys":["foreach"]},{"name":"def abs(x: Float): Float","description":"scala.math","location":"api/scala/math.html","searchKeys":["abs"]},{"name":"class StringContext(parts: String*)","description":"scala.StringContext","location":"api/scala/StringContext.html","searchKeys":["StringContext"]},{"name":"object HashSet extends IterableFactory[[A] =>> HashSet[A]]","description":"scala.collection.immutable.HashSet$","location":"api/scala/collection/immutable/HashSet$.html","searchKeys":["HashSet"]},{"name":"def apply(x1: T): R","description":"scala.jdk.FunctionWrappers$$FromJavaFunction","location":"api/scala/jdk/FunctionWrappers$$FromJavaFunction.html","searchKeys":["apply"]},{"name":"def wrapIntArray(xs: Array[Int]): ArraySeq[Int]","description":"scala.runtime.ScalaRunTime$","location":"api/scala/runtime/ScalaRunTime$.html","searchKeys":["wrapIntArray"]},{"name":"def lineStream_!: Stream[String]","description":"scala.sys.process.ProcessBuilder","location":"api/scala/sys/process/ProcessBuilder.html","searchKeys":["lineStream_!"]},{"name":"def apply(v1: T1, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, v7: T7, v8: T8, v9: T9, v10: T10, v11: T11, v12: T12, v13: T13, v14: T14, v15: T15, v16: T16, v17: T17): R","description":"scala.Function17","location":"api/scala/Function17.html","searchKeys":["apply"]},{"name":"def to[C1](factory: Factory[A, C1]): C1","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["to"]},{"name":"def !=(x: Boolean): Boolean","description":"scala.Boolean","location":"api/scala/Boolean.html","searchKeys":["!="]},{"name":"def sign(x: T): T","description":"scala.math.Numeric","location":"api/scala/math/Numeric.html","searchKeys":["sign"]},{"name":"val x$24: FromExpr[T9]","description":"scala.quoted.FromExpr$$Tuple15FromExpr","location":"api/scala/quoted/FromExpr$$Tuple15FromExpr.html","searchKeys":["x$24"]},{"name":"def flip: To =:= From","description":"scala.=:=","location":"api/scala/=:=.html","searchKeys":["flip"]},{"name":"object Empty extends AbstractView[Nothing]","description":"scala.collection.View$$Empty$","location":"api/scala/collection/View$$Empty$.html","searchKeys":["Empty"]},{"name":"def lineStream: Stream[String]","description":"scala.sys.process.ProcessBuilder","location":"api/scala/sys/process/ProcessBuilder.html","searchKeys":["lineStream"]},{"name":"def iterator: Iterator[A]","description":"scala.collection.View$$Tabulate","location":"api/scala/collection/View$$Tabulate.html","searchKeys":["iterator"]},{"name":"def >(x: Int): Boolean","description":"scala.Int","location":"api/scala/Int.html","searchKeys":[">"]},{"name":"given Tuple13ToExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13]: ToExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)]","description":"scala.quoted.ToExpr$$Tuple13ToExpr","location":"api/scala/quoted/ToExpr$$Tuple13ToExpr.html","searchKeys":["Tuple13ToExpr"]},{"name":"def computeHash(k: K): Int","description":"scala.collection.concurrent.TrieMap","location":"api/scala/collection/concurrent/TrieMap.html","searchKeys":["computeHash"]},{"name":"object StringProp extends CreatorImpl[String]","description":"scala.sys.Prop$$StringProp$","location":"api/scala/sys/Prop$$StringProp$.html","searchKeys":["StringProp"]},{"name":"Announcing Dotty 0.27.0-RC1 - ScalaJS, performance, stability","description":"","location":"blog/2020/08/31/27th-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.27.0-RC1 - ScalaJS, performance, stability"]},{"name":"def filter(p: A => Boolean): Option[A]","description":"scala.Option","location":"api/scala/Option.html","searchKeys":["filter"]},{"name":"def <(x: Int): Boolean","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["<"]},{"name":"class RichOptionalInt(o: OptionalInt) extends AnyVal","description":"scala.jdk.OptionConverters$$RichOptionalInt","location":"api/scala/jdk/OptionConverters$$RichOptionalInt.html","searchKeys":["RichOptionalInt"]},{"name":"def append(x: Double): StringBuilder","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["append"]},{"name":"def iterator: Iterator[A]","description":"scala.jdk.AnyAccumulator","location":"api/scala/jdk/AnyAccumulator.html","searchKeys":["iterator"]},{"name":"def groupBy[K](f: Char => K): Map[K, String]","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["groupBy"]},{"name":"def ifBefore[T](end: Addr)(op: => T, default: T): T","description":"dotty.tools.tasty.TastyReader","location":"api/dotty/tools/tasty/TastyReader.html","searchKeys":["ifBefore"]},{"name":"def iterableOnceIsIterableOnce[CC0 <: ([A] =>> IterableOnce[A]), A0]: IsIterableOnce[CC0[A0]] { type A = A0;  }","description":"scala.collection.generic.IsIterableOnce$","location":"api/scala/collection/generic/IsIterableOnce$.html","searchKeys":["iterableOnceIsIterableOnce"]},{"name":"object Char extends AnyValCompanion","description":"scala.Char$","location":"api/scala/Char$.html","searchKeys":["Char"]},{"name":"def prepended[B >: A](x: B)(evidence$10: ClassTag[B]): Array[B]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["prepended"]},{"name":"def flush(): Unit","description":"scala.sys.process.FileProcessLogger","location":"api/scala/sys/process/FileProcessLogger.html","searchKeys":["flush"]},{"name":"def unapply(x: SummonFrom): Some[List[CaseDef]]","description":"scala.quoted.Quotes$reflectModule$SummonFromModule","location":"api/scala/quoted/Quotes$reflectModule$SummonFromModule.html","searchKeys":["unapply"]},{"name":"def view: IndexedSeqView[A]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["view"]},{"name":"def applyAsDouble(x1: Long): Double","description":"scala.jdk.FunctionWrappers$$AsJavaLongToDoubleFunction","location":"api/scala/jdk/FunctionWrappers$$AsJavaLongToDoubleFunction.html","searchKeys":["applyAsDouble"]},{"name":"Named Type Arguments","description":"","location":"docs/reference/other-new-features/named-typeargs.html","searchKeys":["Named Type Arguments"]},{"name":"class IterableHasAsJava[A](i: Iterable[A])","description":"scala.collection.convert.AsJavaExtensions$IterableHasAsJava","location":"api/scala/collection/convert/AsJavaExtensions$IterableHasAsJava.html","searchKeys":["IterableHasAsJava"]},{"name":"def apply(x1: T, x2: Long): Unit","description":"scala.jdk.FunctionWrappers$$FromJavaObjLongConsumer","location":"api/scala/jdk/FunctionWrappers$$FromJavaObjLongConsumer.html","searchKeys":["apply"]},{"name":"trait LinearSeq[+A] extends Seq[A] with LinearSeqOps[A, [A] =>> LinearSeq[A], LinearSeq[A]] with IterableFactoryDefaults[A, [A] =>> LinearSeq[A]]","description":"scala.collection.LinearSeq","location":"api/scala/collection/LinearSeq.html","searchKeys":["LinearSeq"]},{"name":"def fromDigits(digits: String): T","description":"scala.util.FromDigits$$WithRadix","location":"api/scala/util/FromDigits$$WithRadix.html","searchKeys":["fromDigits"]},{"name":"def toFloat(x: BigInt): Float","description":"scala.math.Numeric$$BigIntIsIntegral","location":"api/scala/math/Numeric$$BigIntIsIntegral.html","searchKeys":["toFloat"]},{"name":"val TYPEAPPLY: 137","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["TYPEAPPLY"]},{"name":"def paramSymss: List[List[Symbol]]","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["paramSymss"]},{"name":"def add(elem: A): Boolean","description":"scala.collection.mutable.SetOps","location":"api/scala/collection/mutable/SetOps.html","searchKeys":["add"]},{"name":"def apply(x: T)(using Quotes): Expr[T]","description":"scala.quoted.ToExpr$$CharToExpr","location":"api/scala/quoted/ToExpr$$CharToExpr.html","searchKeys":["apply"]},{"name":"def remove(idx: Int): A","description":"scala.collection.mutable.ArrayDeque","location":"api/scala/collection/mutable/ArrayDeque.html","searchKeys":["remove"]},{"name":"def scala$collection$SeqOps$$super$concat[B >: A](suffix: IterableOnce[B]): CC[B]","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["scala$collection$SeqOps$$super$concat"]},{"name":"def withPositioning(pos: Positioner): Source","description":"scala.io.Source","location":"api/scala/io/Source.html","searchKeys":["withPositioning"]},{"name":"class ProcessIO(val writeInput: OutputStream => Unit, val processOutput: InputStream => Unit, val processError: InputStream => Unit, val daemonizeThreads: Boolean)","description":"scala.sys.process.ProcessIO","location":"api/scala/sys/process/ProcessIO.html","searchKeys":["ProcessIO"]},{"name":"def <(x: Float): Boolean","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["<"]},{"name":"def -(other: Duration): Duration","description":"scala.concurrent.duration.FiniteDuration","location":"api/scala/concurrent/duration/FiniteDuration.html","searchKeys":["-"]},{"name":"def apply$mcII$sp(v1: Int): Int","description":"scala.runtime.java8.JFunction1$mcII$sp","location":"api/scala/runtime/java8/JFunction1$mcII$sp.html","searchKeys":["apply$mcII$sp"]},{"name":"given ParamRefMethods","description":"scala.quoted.Quotes$reflectModule$ParamRefMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ParamRefMethods"]},{"name":"def asJava: DoubleToLongFunction","description":"scala.jdk.FunctionWrappers$$RichFunction1AsDoubleToLongFunction","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsDoubleToLongFunction.html","searchKeys":["asJava"]},{"name":"def *(x: Byte): Int","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["*"]},{"name":"def release(resource: AutoCloseable): Unit","description":"scala.util.Using$$Releasable$$AutoCloseableIsReleasable$","location":"api/scala/util/Using$$Releasable$$AutoCloseableIsReleasable$.html","searchKeys":["release"]},{"name":"def isModifierTag(tag: Int): Boolean","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["isModifierTag"]},{"name":"given NoPrefixTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["NoPrefixTypeTest"]},{"name":"class FromJavaIntUnaryOperator(jf: IntUnaryOperator) extends Int => Int","description":"scala.jdk.FunctionWrappers$$FromJavaIntUnaryOperator","location":"api/scala/jdk/FunctionWrappers$$FromJavaIntUnaryOperator.html","searchKeys":["FromJavaIntUnaryOperator"]},{"name":"given IntToExpr[T <: Int]: ToExpr[T]","description":"scala.quoted.ToExpr$$IntToExpr","location":"api/scala/quoted/ToExpr$$IntToExpr.html","searchKeys":["IntToExpr"]},{"name":"def _8: T8","description":"scala.Product18","location":"api/scala/Product18.html","searchKeys":["_8"]},{"name":"def initialized: Boolean","description":"scala.runtime.LazyInt","location":"api/scala/runtime/LazyInt.html","searchKeys":["initialized"]},{"name":"val x$1: Type[L]","description":"scala.quoted.FromExpr$$EitherFromExpr","location":"api/scala/quoted/FromExpr$$EitherFromExpr.html","searchKeys":["x$1"]},{"name":"def Static: Flags","description":"scala.quoted.Quotes$reflectModule$FlagsModule","location":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html","searchKeys":["Static"]},{"name":"trait Map[K, +V] extends Iterable[(K, V)] with MapOps[K, V, [K, V] =>> Map[K, V], Map[K, V]] with MapFactoryDefaults[K, V, [K, V] =>> Map[K, V], [A] =>> Iterable[A]] with Equals","description":"scala.collection.Map","location":"api/scala/collection/Map.html","searchKeys":["Map"]},{"name":"def _2: T2","description":"scala.Product5","location":"api/scala/Product5.html","searchKeys":["_2"]},{"name":"given ArrayOfCharToExpr: ToExpr[Array[Char]]","description":"scala.quoted.ToExpr$$ArrayOfCharToExpr$","location":"api/scala/quoted/ToExpr$$ArrayOfCharToExpr$.html","searchKeys":["ArrayOfCharToExpr"]},{"name":"class RichOption[A](o: Option[A]) extends AnyVal","description":"scala.jdk.OptionConverters$$RichOption","location":"api/scala/jdk/OptionConverters$$RichOption.html","searchKeys":["RichOption"]},{"name":"val x$1: Type[T1]","description":"scala.quoted.FromExpr$$Tuple17FromExpr","location":"api/scala/quoted/FromExpr$$Tuple17FromExpr.html","searchKeys":["x$1"]},{"name":"val x$17: FromExpr[T6]","description":"scala.quoted.FromExpr$$Tuple11FromExpr","location":"api/scala/quoted/FromExpr$$Tuple11FromExpr.html","searchKeys":["x$17"]},{"name":"def ArrayClass: Symbol","description":"scala.quoted.Quotes$reflectModule$defnModule","location":"api/scala/quoted/Quotes$reflectModule$defnModule.html","searchKeys":["ArrayClass"]},{"name":"def length: Int","description":"scala.collection.SeqView$$Sorted","location":"api/scala/collection/SeqView$$Sorted.html","searchKeys":["length"]},{"name":"trait FileBuilder extends Sink with Source","description":"scala.sys.process.ProcessBuilder$$FileBuilder","location":"api/scala/sys/process/ProcessBuilder$$FileBuilder.html","searchKeys":["FileBuilder"]},{"name":"trait ShortConstantModule","description":"scala.quoted.Quotes$reflectModule$ShortConstantModule","location":"api/scala/quoted/Quotes$reflectModule$ShortConstantModule.html","searchKeys":["ShortConstantModule"]},{"name":"class AnyRefMapBuilder[K <: AnyRef, V] extends ReusableBuilder[(K, V), AnyRefMap[K, V]]","description":"scala.collection.mutable.AnyRefMap$$AnyRefMapBuilder","location":"api/scala/collection/mutable/AnyRefMap$$AnyRefMapBuilder.html","searchKeys":["AnyRefMapBuilder"]},{"name":"def &(x: Byte): Int","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["&"]},{"name":"def fold[B](ifEmpty: => B)(f: A => B): B","description":"scala.Option","location":"api/scala/Option.html","searchKeys":["fold"]},{"name":"def isEmpty: Boolean","description":"scala.Array$$UnapplySeqWrapper","location":"api/scala/Array$$UnapplySeqWrapper.html","searchKeys":["isEmpty"]},{"name":"def isWhole: Boolean","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["isWhole"]},{"name":"val Double: DoubleManifest","description":"scala.reflect.ClassTag$","location":"api/scala/reflect/ClassTag$.html","searchKeys":["Double"]},{"name":"def count(start: Int, end: Int, step: Int, isInclusive: Boolean): Int","description":"scala.collection.immutable.Range$","location":"api/scala/collection/immutable/Range$.html","searchKeys":["count"]},{"name":"given DefDefMethods","description":"scala.quoted.Quotes$reflectModule$DefDefMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["DefDefMethods"]},{"name":"given BindMethods","description":"scala.quoted.Quotes$reflectModule$BindMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["BindMethods"]},{"name":"def padTo(len: Int, elem: Char): String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["padTo"]},{"name":"def isLocalDummy: Boolean","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["isLocalDummy"]},{"name":"def equals(that: BigInt): Boolean","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["equals"]},{"name":"trait PrinterModule","description":"scala.quoted.Quotes$reflectModule$PrinterModule","location":"api/scala/quoted/Quotes$reflectModule$PrinterModule.html","searchKeys":["PrinterModule"]},{"name":"def inclusive(start: Int, end: Int, step: Int): Inclusive[Int]","description":"scala.collection.immutable.Range$$Int$","location":"api/scala/collection/immutable/Range$$Int$.html","searchKeys":["inclusive"]},{"name":"class RichToLongBiFunctionAsFunction2[T, U](underlying: ToLongBiFunction[T, U]) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichToLongBiFunctionAsFunction2","location":"api/scala/jdk/FunctionWrappers$$RichToLongBiFunctionAsFunction2.html","searchKeys":["RichToLongBiFunctionAsFunction2"]},{"name":"def augmentString(x: String): StringOps","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["augmentString"]},{"name":"def unbox(x: Object): Long","description":"scala.Long$","location":"api/scala/Long$.html","searchKeys":["unbox"]},{"name":"def clear(): Unit","description":"scala.collection.mutable.GrowableBuilder","location":"api/scala/collection/mutable/GrowableBuilder.html","searchKeys":["clear"]},{"name":"val ARTIFACT: 24","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["ARTIFACT"]},{"name":"def _16: T16","description":"scala.Product16","location":"api/scala/Product16.html","searchKeys":["_16"]},{"name":"trait ExprMatchModule","description":"scala.quoted.runtime.QuoteMatching$ExprMatchModule","location":"api/scala/quoted/runtime/QuoteMatching$ExprMatchModule.html","searchKeys":["ExprMatchModule"]},{"name":"class Tuple8[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8](_1: T1, _2: T2, _3: T3, _4: T4, _5: T5, _6: T6, _7: T7, _8: T8) extends Product8[T1, T2, T3, T4, T5, T6, T7, T8]","description":"scala.Tuple8","location":"api/scala/Tuple8.html","searchKeys":["Tuple8"]},{"name":"def _1: T1","description":"scala.Product4","location":"api/scala/Product4.html","searchKeys":["_1"]},{"name":"def /(divisor: Duration): Double","description":"scala.concurrent.duration.Duration$$Infinite","location":"api/scala/concurrent/duration/Duration$$Infinite.html","searchKeys":["/"]},{"name":"def <(x: Short): Boolean","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["<"]},{"name":"def sourceCode: Option[String]","description":"scala.quoted.Quotes$reflectModule$PositionMethods","location":"api/scala/quoted/Quotes$reflectModule$PositionMethods.html","searchKeys":["sourceCode"]},{"name":"val x$12: FromExpr[T3]","description":"scala.quoted.FromExpr$$Tuple9FromExpr","location":"api/scala/quoted/FromExpr$$Tuple9FromExpr.html","searchKeys":["x$12"]},{"name":"def drain[A1 <: A](that: AnyAccumulator[A1]): Unit","description":"scala.jdk.AnyAccumulator","location":"api/scala/jdk/AnyAccumulator.html","searchKeys":["drain"]},{"name":"def tpe: TypeBounds","description":"scala.quoted.Quotes$reflectModule$TypeBoundsTreeMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeBoundsTreeMethods.html","searchKeys":["tpe"]},{"name":"def toFactory(from: From): Factory[A, C]","description":"scala.collection.BuildFrom","location":"api/scala/collection/BuildFrom.html","searchKeys":["toFactory"]},{"name":"def unbox(x: Object): Double","description":"scala.Double$","location":"api/scala/Double$.html","searchKeys":["unbox"]},{"name":"trait BooleanConstantModule","description":"scala.quoted.Quotes$reflectModule$BooleanConstantModule","location":"api/scala/quoted/Quotes$reflectModule$BooleanConstantModule.html","searchKeys":["BooleanConstantModule"]},{"name":"val x$21: Type[T21]","description":"scala.quoted.FromExpr$$Tuple21FromExpr","location":"api/scala/quoted/FromExpr$$Tuple21FromExpr.html","searchKeys":["x$21"]},{"name":"def map[B](f: Char => B): IndexedSeq[B]","description":"scala.collection.StringOps$$WithFilter","location":"api/scala/collection/StringOps$$WithFilter.html","searchKeys":["map"]},{"name":"def top: A","description":"scala.collection.mutable.Stack","location":"api/scala/collection/mutable/Stack.html","searchKeys":["top"]},{"name":"def newBuilder(from: From): Builder[A, C]","description":"scala.collection.BuildFrom","location":"api/scala/collection/BuildFrom.html","searchKeys":["newBuilder"]},{"name":"def insert(idx: Int, elem: A): Unit","description":"scala.collection.mutable.ListBuffer","location":"api/scala/collection/mutable/ListBuffer.html","searchKeys":["insert"]},{"name":"def nextDown(f: Float): Float","description":"scala.math","location":"api/scala/math.html","searchKeys":["nextDown"]},{"name":"def drop(n: Int): C","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["drop"]},{"name":"val x$7: Type[T7]","description":"scala.quoted.FromExpr$$Tuple16FromExpr","location":"api/scala/quoted/FromExpr$$Tuple16FromExpr.html","searchKeys":["x$7"]},{"name":"def <<(x: Long): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["<<"]},{"name":"class FromJavaPredicate[T](jf: Predicate[T]) extends T => Boolean","description":"scala.jdk.FunctionWrappers$$FromJavaPredicate","location":"api/scala/jdk/FunctionWrappers$$FromJavaPredicate.html","searchKeys":["FromJavaPredicate"]},{"name":"def by(step: Int): Range","description":"scala.collection.immutable.Range","location":"api/scala/collection/immutable/Range.html","searchKeys":["by"]},{"name":"def insert(idx: Int, elem: T): Unit","description":"scala.collection.mutable.UnrolledBuffer","location":"api/scala/collection/mutable/UnrolledBuffer.html","searchKeys":["insert"]},{"name":"type BitwiseAnd[X <: Int, Y <: Int] <: Int","description":"scala.compiletime.ops.int$","location":"api/scala/compiletime/ops/int$.html","searchKeys":["BitwiseAnd"]},{"name":"def rangeTo(to: A): C","description":"scala.collection.SortedSetOps","location":"api/scala/collection/SortedSetOps.html","searchKeys":["rangeTo"]},{"name":"def asJavaDoubleSupplier(sf: () => Double): DoubleSupplier","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asJavaDoubleSupplier"]},{"name":"object Double","description":"scala.math.Ordering$$Double$","location":"api/scala/math/Ordering$$Double$.html","searchKeys":["Double"]},{"name":"def collection asJava[A](it: Iterable[A]): Collection[A]","description":"scala.collection.convert.ToJavaImplicits","location":"api/scala/collection/convert/ToJavaImplicits.html","searchKeys":["collection asJava"]},{"name":"def enrichAsScalaFromLongPredicate(jf: LongPredicate): RichLongPredicateAsFunction1","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsScalaFromLongPredicate"]},{"name":"val self: Float","description":"scala.runtime.RichFloat","location":"api/scala/runtime/RichFloat.html","searchKeys":["self"]},{"name":"def groupCount: Int","description":"scala.util.matching.Regex$$MatchIterator","location":"api/scala/util/matching/Regex$$MatchIterator.html","searchKeys":["groupCount"]},{"name":"def ScalaPackageClass: Symbol","description":"scala.quoted.Quotes$reflectModule$defnModule","location":"api/scala/quoted/Quotes$reflectModule$defnModule.html","searchKeys":["ScalaPackageClass"]},{"name":"val x$30: FromExpr[T14]","description":"scala.quoted.FromExpr$$Tuple16FromExpr","location":"api/scala/quoted/FromExpr$$Tuple16FromExpr.html","searchKeys":["x$30"]},{"name":"def scala$collection$SortedSetOps$$super$min[B >: A](ord: Ordering[B]): A","description":"scala.collection.SortedSetOps","location":"api/scala/collection/SortedSetOps.html","searchKeys":["scala$collection$SortedSetOps$$super$min"]},{"name":"def apply(xs: Nil)(using Quotes): Expr[Nil]","description":"scala.quoted.ToExpr$$NilToExpr$","location":"api/scala/quoted/ToExpr$$NilToExpr$.html","searchKeys":["apply"]},{"name":"def parseString(str: String): Option[Long]","description":"scala.math.Numeric$$LongIsIntegral","location":"api/scala/math/Numeric$$LongIsIntegral.html","searchKeys":["parseString"]},{"name":"given Tuple21ToExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21]: ToExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21)]","description":"scala.quoted.ToExpr$$Tuple21ToExpr","location":"api/scala/quoted/ToExpr$$Tuple21ToExpr.html","searchKeys":["Tuple21ToExpr"]},{"name":"def |(that: Flags): Flags","description":"scala.quoted.Quotes$reflectModule$FlagsMethods","location":"api/scala/quoted/Quotes$reflectModule$FlagsMethods.html","searchKeys":["|"]},{"name":"class ofByte extends ArrayBuilder[Byte]","description":"scala.collection.mutable.ArrayBuilder$$ofByte","location":"api/scala/collection/mutable/ArrayBuilder$$ofByte.html","searchKeys":["ofByte"]},{"name":"def _6: T6","description":"scala.Product13","location":"api/scala/Product13.html","searchKeys":["_6"]},{"name":"given ByNameMethods","description":"scala.quoted.Quotes$reflectModule$ByNameMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ByNameMethods"]},{"name":"def this()","description":"scala.collection.mutable.AnyRefMap","location":"api/scala/collection/mutable/AnyRefMap.html","searchKeys":["this"]},{"name":"val x$27: FromExpr[T12]","description":"scala.quoted.FromExpr$$Tuple15FromExpr","location":"api/scala/quoted/FromExpr$$Tuple15FromExpr.html","searchKeys":["x$27"]},{"name":"def apply(x: T)(using Quotes): Expr[T]","description":"scala.quoted.ToExpr$$LongToExpr","location":"api/scala/quoted/ToExpr$$LongToExpr.html","searchKeys":["apply"]},{"name":"object Hashing","description":"scala.util.hashing.Hashing$","location":"api/scala/util/hashing/Hashing$.html","searchKeys":["Hashing"]},{"name":"def apply$mcC$sp(): Char","description":"scala.runtime.java8.JFunction0$mcC$sp","location":"api/scala/runtime/java8/JFunction0$mcC$sp.html","searchKeys":["apply$mcC$sp"]},{"name":"given TypeRefMethods","description":"scala.quoted.Quotes$reflectModule$TypeRefMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeRefMethods"]},{"name":"object AnyRefMap","description":"scala.collection.mutable.AnyRefMap$","location":"api/scala/collection/mutable/AnyRefMap$.html","searchKeys":["AnyRefMap"]},{"name":"val jFloatStreamShape: StreamShape[Float, DoubleStream, DoubleStepper]","description":"scala.collection.convert.StreamExtensions$$StreamShape$","location":"api/scala/collection/convert/StreamExtensions$$StreamShape$.html","searchKeys":["jFloatStreamShape"]},{"name":"class AbstractMap[K, V] extends AbstractMap[K, V] with Map[K, V]","description":"scala.collection.mutable.AbstractMap","location":"api/scala/collection/mutable/AbstractMap.html","searchKeys":["AbstractMap"]},{"name":"def quot(x: Long, y: Long): Long","description":"scala.math.Numeric$$LongIsIntegral","location":"api/scala/math/Numeric$$LongIsIntegral.html","searchKeys":["quot"]},{"name":"val x$15: FromExpr[T5]","description":"scala.quoted.FromExpr$$Tuple10FromExpr","location":"api/scala/quoted/FromExpr$$Tuple10FromExpr.html","searchKeys":["x$15"]},{"name":"def >(x: Char): Boolean","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":[">"]},{"name":"def simplified: TypeRepr","description":"scala.quoted.Quotes$reflectModule$TypeReprMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html","searchKeys":["simplified"]},{"name":"object Product1","description":"scala.Product1$","location":"api/scala/Product1$.html","searchKeys":["Product1"]},{"name":"val FIELDaccessor: 26","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["FIELDaccessor"]},{"name":"given Tuple20FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20](using val x$1: Type[T1], val x$2: Type[T2], val x$3: Type[T3], val x$4: Type[T4], val x$5: Type[T5], val x$6: Type[T6], val x$7: Type[T7], val x$8: Type[T8], val x$9: Type[T9], val x$10: Type[T10], val x$11: Type[T11], val x$12: Type[T12], val x$13: Type[T13], val x$14: Type[T14], val x$15: Type[T15], val x$16: Type[T16], val x$17: Type[T17], val x$18: Type[T18], val x$19: Type[T19], val x$20: Type[T20], val x$21: FromExpr[T1], val x$22: FromExpr[T2], val x$23: FromExpr[T3], val x$24: FromExpr[T4], val x$25: FromExpr[T5], val x$26: FromExpr[T6], val x$27: FromExpr[T7], val x$28: FromExpr[T8], val x$29: FromExpr[T9], val x$30: FromExpr[T10], val x$31: FromExpr[T11], val x$32: FromExpr[T12], val x$33: FromExpr[T13], val x$34: FromExpr[T14], val x$35: FromExpr[T15], val x$36: FromExpr[T16], val x$37: FromExpr[T17], val x$38: FromExpr[T18], val x$39: FromExpr[T19], val x$40: FromExpr[T20]): FromExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20)]","description":"scala.quoted.FromExpr$$Tuple20FromExpr","location":"api/scala/quoted/FromExpr$$Tuple20FromExpr.html","searchKeys":["Tuple20FromExpr"]},{"name":"def rem(x: Long, y: Long): Long","description":"scala.math.Numeric$$LongIsIntegral","location":"api/scala/math/Numeric$$LongIsIntegral.html","searchKeys":["rem"]},{"name":"object StreamConverters extends StreamExtensions","description":"scala.jdk.StreamConverters$","location":"api/scala/jdk/StreamConverters$.html","searchKeys":["StreamConverters"]},{"name":"trait AnsiColor","description":"scala.io.AnsiColor","location":"api/scala/io/AnsiColor.html","searchKeys":["AnsiColor"]},{"name":"def wrapUnitArray(xs: Array[Unit]): ArraySeq[Unit]","description":"scala.runtime.ScalaRunTime$","location":"api/scala/runtime/ScalaRunTime$.html","searchKeys":["wrapUnitArray"]},{"name":"def indexOf[T](elem: T, from: Int): Int","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["indexOf"]},{"name":"def -(key1: K, key2: K, keys: K*): C","description":"scala.collection.immutable.MapOps","location":"api/scala/collection/immutable/MapOps.html","searchKeys":["-"]},{"name":"trait IeeeEquiv extends Equiv[Double]","description":"scala.math.Equiv$$Double$$IeeeEquiv","location":"api/scala/math/Equiv$$Double$$IeeeEquiv.html","searchKeys":["IeeeEquiv"]},{"name":"def updated[V1 >: V](key: K, value: V1): CC[K, V1]","description":"scala.collection.immutable.SortedMapOps","location":"api/scala/collection/immutable/SortedMapOps.html","searchKeys":["updated"]},{"name":"given IfMethods","description":"scala.quoted.Quotes$reflectModule$IfMethods","location":"api/scala/quoted/Quotes$reflectModule$IfMethods.html","searchKeys":["IfMethods"]},{"name":"def asJava: ToLongFunction[T]","description":"scala.jdk.FunctionWrappers$$RichFunction1AsToLongFunction","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsToLongFunction.html","searchKeys":["asJava"]},{"name":"def enrichAsJavaDoubleConsumer[A0](sf: A0 => Unit)(evA0: A0 =:= Double): RichFunction1AsDoubleConsumer","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsJavaDoubleConsumer"]},{"name":"def ++=(xs: IterableOnce[A]): Growable[A]","description":"scala.collection.mutable.Growable","location":"api/scala/collection/mutable/Growable.html","searchKeys":["++="]},{"name":"def withPadding(x: => B): GroupedIterator[B]","description":"scala.collection.Iterator$GroupedIterator","location":"api/scala/collection/Iterator$GroupedIterator.html","searchKeys":["withPadding"]},{"name":"object dynamics extends dynamics","description":"scala.languageFeature$$dynamics$","location":"api/scala/languageFeature$$dynamics$.html","searchKeys":["dynamics"]},{"name":"def compare(x: Symbol, y: Symbol): Int","description":"scala.math.Ordering$$SymbolOrdering","location":"api/scala/math/Ordering$$SymbolOrdering.html","searchKeys":["compare"]},{"name":"def ensuring(cond: Boolean, msg: => Any): A","description":"scala.Predef$$Ensuring","location":"api/scala/Predef$$Ensuring.html","searchKeys":["ensuring"]},{"name":"def prepend(elem: A): ListBuffer[A]","description":"scala.collection.mutable.ListBuffer","location":"api/scala/collection/mutable/ListBuffer.html","searchKeys":["prepend"]},{"name":"def Option[T](ord: Ordering[T]): Ordering[Option[T]]","description":"scala.math.Ordering$","location":"api/scala/math/Ordering$.html","searchKeys":["Option"]},{"name":"type Annotated <: TypeTree","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Annotated"]},{"name":"def search[Repr, A](coll: Repr)(fr: IsSeq[Repr]): SearchImpl[Repr, A]","description":"scala.collection.Searching$","location":"api/scala/collection/Searching$.html","searchKeys":["search"]},{"name":"def short2long(x: Short): Long","description":"scala.Short$","location":"api/scala/Short$.html","searchKeys":["short2long"]},{"name":"type AsComparable[A] = A => Comparable[ >: A]","description":"scala.math.LowPriorityOrderingImplicits","location":"api/scala/math/LowPriorityOrderingImplicits.html","searchKeys":["AsComparable"]},{"name":"trait Awaitable[+T]","description":"scala.concurrent.Awaitable","location":"api/scala/concurrent/Awaitable.html","searchKeys":["Awaitable"]},{"name":"def <:<(that: TypeRepr): Boolean","description":"scala.quoted.Quotes$reflectModule$TypeReprMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html","searchKeys":["<:<"]},{"name":"def _3: T3","description":"scala.Product12","location":"api/scala/Product12.html","searchKeys":["_3"]},{"name":"def isDependentFunctionType: Boolean","description":"scala.quoted.Quotes$reflectModule$TypeReprMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html","searchKeys":["isDependentFunctionType"]},{"name":"def search(tpe: TypeRepr): ImplicitSearchResult","description":"scala.quoted.Quotes$reflectModule$ImplicitsModule","location":"api/scala/quoted/Quotes$reflectModule$ImplicitsModule.html","searchKeys":["search"]},{"name":"def widenByName: TypeRepr","description":"scala.quoted.Quotes$reflectModule$TypeReprMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html","searchKeys":["widenByName"]},{"name":"def _17: T17","description":"scala.Product19","location":"api/scala/Product19.html","searchKeys":["_17"]},{"name":"def foreach[U](f: B => U): Unit","description":"scala.util.Either$$RightProjection","location":"api/scala/util/Either$$RightProjection.html","searchKeys":["foreach"]},{"name":"def _19: T19","description":"scala.Product21","location":"api/scala/Product21.html","searchKeys":["_19"]},{"name":"trait ToExpr[T]","description":"scala.quoted.ToExpr","location":"api/scala/quoted/ToExpr.html","searchKeys":["ToExpr"]},{"name":"type Return <: Term","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Return"]},{"name":"given Tuple6ToExpr[T1, T2, T3, T4, T5, T6]: ToExpr[(T1, T2, T3, T4, T5, T6)]","description":"scala.quoted.ToExpr$$Tuple6ToExpr","location":"api/scala/quoted/ToExpr$$Tuple6ToExpr.html","searchKeys":["Tuple6ToExpr"]},{"name":"def <=(x: Float): Boolean","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["<="]},{"name":"Dottydoc [Legacy]","description":"","location":"docs/usage/dottydoc.html","searchKeys":["Dottydoc [Legacy]"]},{"name":"def appended(c: Char): String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["appended"]},{"name":"def length: Int","description":"scala.collection.SeqView$$Take","location":"api/scala/collection/SeqView$$Take.html","searchKeys":["length"]},{"name":"def asJavaDoubleUnaryOperator(sf: Double => Double): DoubleUnaryOperator","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asJavaDoubleUnaryOperator"]},{"name":"def unapply(x: Expr[Some[T]])(using Quotes): Option[Some[T]]","description":"scala.quoted.FromExpr$$SomeFromExpr","location":"api/scala/quoted/FromExpr$$SomeFromExpr.html","searchKeys":["unapply"]},{"name":"def fill[T](n: Int)(elem: => T)(evidence$18: ClassTag[T]): IArray[T]","description":"scala.IArray$package$$IArray$","location":"api/scala/IArray$package$$IArray$.html","searchKeys":["fill"]},{"name":"class Char extends AnyVal","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["Char"]},{"name":"def fromIArray(xs: IArray[Object]): Tuple","description":"scala.runtime.Tuples$","location":"api/scala/runtime/Tuples$.html","searchKeys":["fromIArray"]},{"name":"given Tuple17FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17](using val x$1: Type[T1], val x$2: Type[T2], val x$3: Type[T3], val x$4: Type[T4], val x$5: Type[T5], val x$6: Type[T6], val x$7: Type[T7], val x$8: Type[T8], val x$9: Type[T9], val x$10: Type[T10], val x$11: Type[T11], val x$12: Type[T12], val x$13: Type[T13], val x$14: Type[T14], val x$15: Type[T15], val x$16: Type[T16], val x$17: Type[T17], val x$18: FromExpr[T1], val x$19: FromExpr[T2], val x$20: FromExpr[T3], val x$21: FromExpr[T4], val x$22: FromExpr[T5], val x$23: FromExpr[T6], val x$24: FromExpr[T7], val x$25: FromExpr[T8], val x$26: FromExpr[T9], val x$27: FromExpr[T10], val x$28: FromExpr[T11], val x$29: FromExpr[T12], val x$30: FromExpr[T13], val x$31: FromExpr[T14], val x$32: FromExpr[T15], val x$33: FromExpr[T16], val x$34: FromExpr[T17]): FromExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17)]","description":"scala.quoted.FromExpr$$Tuple17FromExpr","location":"api/scala/quoted/FromExpr$.html","searchKeys":["Tuple17FromExpr"]},{"name":"def end(i: Int): Int","description":"scala.util.matching.Regex$$MatchData","location":"api/scala/util/matching/Regex$$MatchData.html","searchKeys":["end"]},{"name":"def fromArray(xs: Array[Object]): Tuple","description":"scala.runtime.Tuples$","location":"api/scala/runtime/Tuples$.html","searchKeys":["fromArray"]},{"name":"def apply(ix: Long): A","description":"scala.jdk.AnyAccumulator","location":"api/scala/jdk/AnyAccumulator.html","searchKeys":["apply"]},{"name":"trait TypedModule","description":"scala.quoted.Quotes$reflectModule$TypedModule","location":"api/scala/quoted/Quotes$reflectModule$TypedModule.html","searchKeys":["TypedModule"]},{"name":"def value_=(newval: T): Unit","description":"scala.util.DynamicVariable","location":"api/scala/util/DynamicVariable.html","searchKeys":["value_="]},{"name":"def asScalaFromObjDoubleConsumer[T](jf: ObjDoubleConsumer[T]): (T, Double) => BoxedUnit","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asScalaFromObjDoubleConsumer"]},{"name":"given ReturnMethods","description":"scala.quoted.Quotes$reflectModule$ReturnMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ReturnMethods"]},{"name":"class ofByte(val array: Array[Byte]) extends ArraySeq[Byte]","description":"scala.collection.mutable.ArraySeq$$ofByte","location":"api/scala/collection/mutable/ArraySeq$$ofByte.html","searchKeys":["ofByte"]},{"name":"given given_FromString_Short: FromString[Short]","description":"scala.util.CommandLineParser$$FromString$$given_FromString_Short$","location":"api/scala/util/CommandLineParser$$FromString$$given_FromString_Short$.html","searchKeys":["given_FromString_Short"]},{"name":"def repack(): Unit","description":"scala.collection.mutable.AnyRefMap","location":"api/scala/collection/mutable/AnyRefMap.html","searchKeys":["repack"]},{"name":"def /(x: Int): Double","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["/"]},{"name":"def const[T, U](x: T)(y: U): T","description":"scala.Function$","location":"api/scala/Function$.html","searchKeys":["const"]},{"name":"given NilFromExpr: FromExpr[Nil]","description":"scala.quoted.FromExpr$$NilFromExpr$","location":"api/scala/quoted/FromExpr$.html","searchKeys":["NilFromExpr"]},{"name":"val MATCHtpt: 191","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["MATCHtpt"]},{"name":"def ==(size: Int): Boolean","description":"scala.collection.IterableOps$$SizeCompareOps","location":"api/scala/collection/IterableOps$$SizeCompareOps.html","searchKeys":["=="]},{"name":"class FloatArrayHasSeqParStream(a: Array[Float])","description":"scala.collection.convert.StreamExtensions$FloatArrayHasSeqParStream","location":"api/scala/collection/convert/StreamExtensions$FloatArrayHasSeqParStream.html","searchKeys":["FloatArrayHasSeqParStream"]},{"name":"def rangeTo(to: A): C","description":"scala.collection.SortedOps","location":"api/scala/collection/SortedOps.html","searchKeys":["rangeTo"]},{"name":"def intFromDigits(digits: String, radix: Int): Int","description":"scala.util.FromDigits$","location":"api/scala/util/FromDigits$.html","searchKeys":["intFromDigits"]},{"name":"def apply$mcDF$sp(v1: Float): Double","description":"scala.runtime.java8.JFunction1$mcDF$sp","location":"api/scala/runtime/java8/JFunction1$mcDF$sp.html","searchKeys":["apply$mcDF$sp"]},{"name":"trait Function13[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, +R] extends AnyRef","description":"scala.Function13","location":"api/scala/Function13.html","searchKeys":["Function13"]},{"name":"object language","description":"scala.language$","location":"api/scala/language$.html","searchKeys":["language"]},{"name":"def toScala(duration: Duration): FiniteDuration","description":"scala.jdk.javaapi.DurationConverters$","location":"api/scala/jdk/javaapi/DurationConverters$.html","searchKeys":["toScala"]},{"name":"type AsPartiallyOrdered[B] = B => PartiallyOrdered[B]","description":"scala.math.PartiallyOrdered","location":"api/scala/math/PartiallyOrdered.html","searchKeys":["AsPartiallyOrdered"]},{"name":"val SELFDEF: 118","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["SELFDEF"]},{"name":"def toSeq: Seq[A]","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["toSeq"]},{"name":"def this(i: Int)","description":"scala.Enumeration$Val","location":"api/scala/Enumeration$Val.html","searchKeys":["this"]},{"name":"def clear(): Unit","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["clear"]},{"name":"def tupled: (T1, T2, T3, T4, T5) => R","description":"scala.Function5","location":"api/scala/Function5.html","searchKeys":["tupled"]},{"name":"def asJava: ObjDoubleConsumer[T]","description":"scala.jdk.FunctionWrappers$$RichFunction2AsObjDoubleConsumer","location":"api/scala/jdk/FunctionWrappers$$RichFunction2AsObjDoubleConsumer.html","searchKeys":["asJava"]},{"name":"def withValue[S](newval: T)(thunk: => S): S","description":"scala.util.DynamicVariable","location":"api/scala/util/DynamicVariable.html","searchKeys":["withValue"]},{"name":"def productElementNames: Iterator[String]","description":"scala.Product","location":"api/scala/Product.html","searchKeys":["productElementNames"]},{"name":"trait JFunction1$mcJD$sp extends Any => Any with Serializable","description":"scala.runtime.java8.JFunction1$mcJD$sp","location":"api/scala/runtime/java8/JFunction1$mcJD$sp.html","searchKeys":["JFunction1$mcJD$sp"]},{"name":"def round(x: Float): Int","description":"scala.math","location":"api/scala/math.html","searchKeys":["round"]},{"name":"class OptionShape[A, O]","description":"scala.jdk.OptionShape","location":"api/scala/jdk/OptionShape.html","searchKeys":["OptionShape"]},{"name":"def <=(x: Short): Boolean","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["<="]},{"name":"def *(d: FiniteDuration): FiniteDuration","description":"scala.concurrent.duration.package$$IntMult","location":"api/scala/concurrent/duration/package$$IntMult.html","searchKeys":["*"]},{"name":"def last: A","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["last"]},{"name":"def distinct: Array[A]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["distinct"]},{"name":"def apply$mcVJI$sp(v1: Long, v2: Int): Unit","description":"scala.runtime.java8.JFunction2$mcVJI$sp","location":"api/scala/runtime/java8/JFunction2$mcVJI$sp.html","searchKeys":["apply$mcVJI$sp"]},{"name":"val jLongStepperShape: StepperShape[Long, LongStepper]","description":"scala.collection.StepperShape$","location":"api/scala/collection/StepperShape$.html","searchKeys":["jLongStepperShape"]},{"name":"def <=(x: Double): Boolean","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["<="]},{"name":"def newBuilder[A, C](canAccumulate: AccumulatorFactoryShape[A, C]): Builder[A, C]","description":"scala.jdk.Accumulator$","location":"api/scala/jdk/Accumulator$.html","searchKeys":["newBuilder"]},{"name":"val BITS_PER_LAZY_VAL: 2L","description":"scala.runtime.LazyVals$","location":"api/scala/runtime/LazyVals$.html","searchKeys":["BITS_PER_LAZY_VAL"]},{"name":"val x$19: FromExpr[T7]","description":"scala.quoted.FromExpr$$Tuple12FromExpr","location":"api/scala/quoted/FromExpr$$Tuple12FromExpr.html","searchKeys":["x$19"]},{"name":"def int2double(x: Int): Double","description":"scala.Int$","location":"api/scala/Int$.html","searchKeys":["int2double"]},{"name":"class ofLong(val array: Array[Long]) extends ArraySeq[Long]","description":"scala.collection.mutable.ArraySeq$$ofLong","location":"api/scala/collection/mutable/ArraySeq$$ofLong.html","searchKeys":["ofLong"]},{"name":"def apply(elems: List[Term], tpt: TypeTree): Repeated","description":"scala.quoted.Quotes$reflectModule$RepeatedModule","location":"api/scala/quoted/Quotes$reflectModule$RepeatedModule.html","searchKeys":["apply"]},{"name":"def unbox(x: Object): Byte","description":"scala.Byte$","location":"api/scala/Byte$.html","searchKeys":["unbox"]},{"name":"def ulp: BigDecimal","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["ulp"]},{"name":"def isFinite: Boolean","description":"scala.concurrent.duration.Duration","location":"api/scala/concurrent/duration/Duration.html","searchKeys":["isFinite"]},{"name":"def toDouble: Double","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["toDouble"]},{"name":"def systemPropertiesToCompanion(p: SystemProperties): SystemProperties","description":"scala.sys.SystemProperties$","location":"api/scala/sys/SystemProperties$.html","searchKeys":["systemPropertiesToCompanion"]},{"name":"val x$15: Type[T15]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["x$15"]},{"name":"def enrichAsJavaBiConsumer[T, U](sf: (T, U) => Unit): RichFunction2AsBiConsumer[T, U]","description":"scala.jdk.Priority2FunctionExtensions","location":"api/scala/jdk/Priority2FunctionExtensions.html","searchKeys":["enrichAsJavaBiConsumer"]},{"name":"def zipped[El1, It1 <: Iterable[El1], El2, It2 <: Iterable[El2]](w1: T1 => IterableOps[El1, Iterable, It1] & It1, w2: T2 => IterableOps[El2, Iterable, It2] & It2): Tuple2Zipped[El1, It1, El2, It2]","description":"scala.runtime.Tuple2Zipped$$Ops","location":"api/scala/runtime/Tuple2Zipped$$Ops.html","searchKeys":["zipped"]},{"name":"def plus(other: Duration): Duration","description":"scala.concurrent.duration.Duration","location":"api/scala/concurrent/duration/Duration.html","searchKeys":["plus"]},{"name":"def durationToPair(d: Duration): (Long, TimeUnit)","description":"scala.concurrent.duration","location":"api/scala/concurrent/duration.html","searchKeys":["durationToPair"]},{"name":"def char2Character(x: Char): Character","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["char2Character"]},{"name":"def destroy(): Unit","description":"scala.sys.process.Process","location":"api/scala/sys/process/Process.html","searchKeys":["destroy"]},{"name":"class Value extends Ordered[Value] with Serializable","description":"scala.Enumeration$Value","location":"api/scala/Enumeration$Value.html","searchKeys":["Value"]},{"name":"val PROTECTEDqualified: 99","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["PROTECTEDqualified"]},{"name":"def accept(x1: T, x2: Long): Unit","description":"scala.jdk.FunctionWrappers$$AsJavaObjLongConsumer","location":"api/scala/jdk/FunctionWrappers$$AsJavaObjLongConsumer.html","searchKeys":["accept"]},{"name":"def asJavaSeqStream: DoubleStream","description":"scala.collection.convert.StreamExtensions$DoubleArrayHasSeqParStream","location":"api/scala/collection/convert/StreamExtensions$DoubleArrayHasSeqParStream.html","searchKeys":["asJavaSeqStream"]},{"name":"def quot(x: Int, y: Int): Int","description":"scala.math.Numeric$$IntIsIntegral","location":"api/scala/math/Numeric$$IntIsIntegral.html","searchKeys":["quot"]},{"name":"def scala$collection$SortedSetOps$$super$max[B >: A](ord: Ordering[B]): A","description":"scala.collection.SortedSetOps","location":"api/scala/collection/SortedSetOps.html","searchKeys":["scala$collection$SortedSetOps$$super$max"]},{"name":"def <(x: Float): Boolean","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["<"]},{"name":"def productPrefix: String","description":"scala.Product","location":"api/scala/Product.html","searchKeys":["productPrefix"]},{"name":"def apply[T](start: T, end: T, step: T)(num: Integral[T]): Exclusive[T]","description":"scala.collection.immutable.NumericRange$","location":"api/scala/collection/immutable/NumericRange$.html","searchKeys":["apply"]},{"name":"class NumberTooLarge(msg: String) extends FromDigitsException","description":"scala.util.FromDigits$$NumberTooLarge","location":"api/scala/util/FromDigits$$NumberTooLarge.html","searchKeys":["NumberTooLarge"]},{"name":"def concat[A](xss: Iterable[A]*): CC[A]","description":"scala.collection.IterableFactory","location":"api/scala/collection/IterableFactory.html","searchKeys":["concat"]},{"name":"def productIterator: Iterator[Any]","description":"scala.Product","location":"api/scala/Product.html","searchKeys":["productIterator"]},{"name":"def apply(withIn: Boolean, output: String => Unit, log: Option[ProcessLogger]): ProcessIO","description":"scala.sys.process.BasicIO$","location":"api/scala/sys/process/BasicIO$.html","searchKeys":["apply"]},{"name":"def asScala: Double => Unit","description":"scala.jdk.FunctionWrappers$$RichDoubleConsumerAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichDoubleConsumerAsFunction1.html","searchKeys":["asScala"]},{"name":"def groupMapReduce[K, B](key: A => K)(f: A => B)(reduce: (B, B) => B): Map[K, B]","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["groupMapReduce"]},{"name":"def toDouble: Double","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["toDouble"]},{"name":"type Traversable[X] = Iterable[X]","description":"scala.collection.mutable","location":"api/scala/collection/mutable.html","searchKeys":["Traversable"]},{"name":"def times(x: Float, y: Float): Float","description":"scala.math.Numeric$$FloatIsFractional","location":"api/scala/math/Numeric$$FloatIsFractional.html","searchKeys":["times"]},{"name":"def apply(x1: Long): Boolean","description":"scala.jdk.FunctionWrappers$$FromJavaLongPredicate","location":"api/scala/jdk/FunctionWrappers$$FromJavaLongPredicate.html","searchKeys":["apply"]},{"name":"def ++[B >: A](xs: Array[ <: B])(evidence$23: ClassTag[B]): Array[B]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["++"]},{"name":"def negate(x: BigInt): BigInt","description":"scala.math.Numeric$$BigIntIsIntegral","location":"api/scala/math/Numeric$$BigIntIsIntegral.html","searchKeys":["negate"]},{"name":"def canEqual(that: Any): Boolean","description":"scala.collection.Seq","location":"api/scala/collection/Seq.html","searchKeys":["canEqual"]},{"name":"def >(that: A): Boolean","description":"scala.math.Ordered","location":"api/scala/math/Ordered.html","searchKeys":[">"]},{"name":"trait implicitConversions","description":"scala.languageFeature$$implicitConversions","location":"api/scala/languageFeature$$implicitConversions.html","searchKeys":["implicitConversions"]},{"name":"Dropped: Limit 22","description":"","location":"docs/reference/dropped-features/limit22.html","searchKeys":["Dropped: Limit 22"]},{"name":"given TypeBoundsTreeMethods","description":"scala.quoted.Quotes$reflectModule$TypeBoundsTreeMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeBoundsTreeMethods"]},{"name":"def forall(f: A => Boolean): Boolean","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["forall"]},{"name":"def toBoolean: Boolean","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["toBoolean"]},{"name":"def /(x: Double): Double","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["/"]},{"name":"def exists[T](p: T => Boolean): Boolean","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["exists"]},{"name":"trait MethodTypeModule","description":"scala.quoted.Quotes$reflectModule$MethodTypeModule","location":"api/scala/quoted/Quotes$reflectModule$MethodTypeModule.html","searchKeys":["MethodTypeModule"]},{"name":"trait IeeeOrdering extends Ordering[Float]","description":"scala.math.Ordering$$Float$$IeeeOrdering","location":"api/scala/math/Ordering$$Float$$IeeeOrdering.html","searchKeys":["IeeeOrdering"]},{"name":"def isErased: Boolean","description":"scala.quoted.Quotes$reflectModule$MethodTypeMethods","location":"api/scala/quoted/Quotes$reflectModule$MethodTypeMethods.html","searchKeys":["isErased"]},{"name":"def box(x: Unit): BoxedUnit","description":"scala.Unit$","location":"api/scala/Unit$.html","searchKeys":["box"]},{"name":"package scala.concurrent","description":"scala.concurrent","location":"api/scala/concurrent.html","searchKeys":["scala.concurrent"]},{"name":"trait JFunction2$mcDJI$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcDJI$sp","location":"api/scala/runtime/java8/JFunction2$mcDJI$sp.html","searchKeys":["JFunction2$mcDJI$sp"]},{"name":"def minus(x: Short, y: Short): Short","description":"scala.math.Numeric$$ShortIsIntegral","location":"api/scala/math/Numeric$$ShortIsIntegral.html","searchKeys":["minus"]},{"name":"def isExactFloat: Boolean","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["isExactFloat"]},{"name":"given Tuple13FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13](using val x$1: Type[T1], val x$2: Type[T2], val x$3: Type[T3], val x$4: Type[T4], val x$5: Type[T5], val x$6: Type[T6], val x$7: Type[T7], val x$8: Type[T8], val x$9: Type[T9], val x$10: Type[T10], val x$11: Type[T11], val x$12: Type[T12], val x$13: Type[T13], val x$14: FromExpr[T1], val x$15: FromExpr[T2], val x$16: FromExpr[T3], val x$17: FromExpr[T4], val x$18: FromExpr[T5], val x$19: FromExpr[T6], val x$20: FromExpr[T7], val x$21: FromExpr[T8], val x$22: FromExpr[T9], val x$23: FromExpr[T10], val x$24: FromExpr[T11], val x$25: FromExpr[T12], val x$26: FromExpr[T13]): FromExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)]","description":"scala.quoted.FromExpr$$Tuple13FromExpr","location":"api/scala/quoted/FromExpr$$Tuple13FromExpr.html","searchKeys":["Tuple13FromExpr"]},{"name":"def cbrt(x: Double): Double","description":"scala.math","location":"api/scala/math.html","searchKeys":["cbrt"]},{"name":"def ^(x: Long): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["^"]},{"name":"def swap: Either[B, A]","description":"scala.util.Either","location":"api/scala/util/Either.html","searchKeys":["swap"]},{"name":"def iteratorFrom(start: K): Iterator[(K, V)]","description":"scala.collection.mutable.SortedMap$$WithDefault","location":"api/scala/collection/mutable/SortedMap$$WithDefault.html","searchKeys":["iteratorFrom"]},{"name":"def fill[A](n1: Int, n2: Int)(elem: => A)(evidence$7: ClassTag[A]): CC[CC[A]]","description":"scala.collection.ClassTagIterableFactory","location":"api/scala/collection/ClassTagIterableFactory.html","searchKeys":["fill"]},{"name":"type Flags","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Flags"]},{"name":"def result(): UnrolledBuffer[T]","description":"scala.collection.mutable.UnrolledBuffer","location":"api/scala/collection/mutable/UnrolledBuffer.html","searchKeys":["result"]},{"name":"def unzip3[A1, A2, A3](asTriple: A <:< (A1, A2, A3)): (Option[A1], Option[A2], Option[A3])","description":"scala.Option","location":"api/scala/Option.html","searchKeys":["unzip3"]},{"name":"def asJava: ObjLongConsumer[T]","description":"scala.jdk.FunctionWrappers$$RichFunction2AsObjLongConsumer","location":"api/scala/jdk/FunctionWrappers$$RichFunction2AsObjLongConsumer.html","searchKeys":["asJava"]},{"name":"def copy(original: Tree)(qualifier: TypeTree, name: String): TypeProjection","description":"scala.quoted.Quotes$reflectModule$TypeProjectionModule","location":"api/scala/quoted/Quotes$reflectModule$TypeProjectionModule.html","searchKeys":["copy"]},{"name":"var nextLine: String","description":"scala.io.BufferedSource$BufferedLineIterator","location":"api/scala/io/BufferedSource$BufferedLineIterator.html","searchKeys":["nextLine"]},{"name":"val SourceFile: SourceFileModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["SourceFile"]},{"name":"val x$7: FromExpr[T1]","description":"scala.quoted.FromExpr$$Tuple6FromExpr","location":"api/scala/quoted/FromExpr$$Tuple6FromExpr.html","searchKeys":["x$7"]},{"name":"val Map: Map","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["Map"]},{"name":"def apply(v1: T1, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, v7: T7, v8: T8, v9: T9, v10: T10, v11: T11, v12: T12, v13: T13): R","description":"scala.Function13","location":"api/scala/Function13.html","searchKeys":["apply"]},{"name":"given BlockMethods","description":"scala.quoted.Quotes$reflectModule$BlockMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["BlockMethods"]},{"name":"def unapply(x: Refined): (TypeTree, List[Definition])","description":"scala.quoted.Quotes$reflectModule$RefinedModule","location":"api/scala/quoted/Quotes$reflectModule$RefinedModule.html","searchKeys":["unapply"]},{"name":"val base: Int","description":"dotty.tools.tasty.TastyReader","location":"api/dotty/tools/tasty/TastyReader.html","searchKeys":["base"]},{"name":"def toScala[A](o: Optional[A]): Option[A]","description":"scala.jdk.javaapi.OptionConverters$","location":"api/scala/jdk/javaapi/OptionConverters$.html","searchKeys":["toScala"]},{"name":"val implicitConversions: implicitConversions","description":"scala.language$","location":"api/scala/language$.html","searchKeys":["implicitConversions"]},{"name":"def writeNat(x: Int): Unit","description":"dotty.tools.tasty.TastyBuffer","location":"api/dotty/tools/tasty/TastyBuffer.html","searchKeys":["writeNat"]},{"name":"def apply(): Long","description":"scala.jdk.FunctionWrappers$$FromJavaLongSupplier","location":"api/scala/jdk/FunctionWrappers$$FromJavaLongSupplier.html","searchKeys":["apply"]},{"name":"def -(x: Float): Float","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["-"]},{"name":"def ++:[B >: A](prefix: Array[ <: B])(evidence$15: ClassTag[B]): Array[B]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["++:"]},{"name":"class AsJavaObjIntConsumer[T](sf: (T, Int) => Unit) extends ObjIntConsumer[T]","description":"scala.jdk.FunctionWrappers$$AsJavaObjIntConsumer","location":"api/scala/jdk/FunctionWrappers$$AsJavaObjIntConsumer.html","searchKeys":["AsJavaObjIntConsumer"]},{"name":"given Tuple5ToExpr[T1, T2, T3, T4, T5]: ToExpr[(T1, T2, T3, T4, T5)]","description":"scala.quoted.ToExpr$$Tuple5ToExpr","location":"api/scala/quoted/ToExpr$$Tuple5ToExpr.html","searchKeys":["Tuple5ToExpr"]},{"name":"def from[A](coll: IterableOnce[A]): Stream[A]","description":"scala.collection.immutable.Stream$","location":"api/scala/collection/immutable/Stream$.html","searchKeys":["from"]},{"name":"given ImplicitSearchSuccessMethods","description":"scala.quoted.Quotes$reflectModule$ImplicitSearchSuccessMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ImplicitSearchSuccessMethods"]},{"name":"def nonFatalCatch[T]: Catch[T]","description":"scala.util.control.Exception$","location":"api/scala/util/control/Exception$.html","searchKeys":["nonFatalCatch"]},{"name":"def asJavaToDoubleFunction[T](sf: T => Double): ToDoubleFunction[T]","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asJavaToDoubleFunction"]},{"name":"def clear(): Unit","description":"scala.collection.mutable.MapOps","location":"api/scala/collection/mutable/MapOps.html","searchKeys":["clear"]},{"name":"def knownSize: Int","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["knownSize"]},{"name":"def sortedMapFactory: SortedMapFactory[[K, V] =>> SortedMap[K, V]]","description":"scala.collection.SortedMap","location":"api/scala/collection/SortedMap.html","searchKeys":["sortedMapFactory"]},{"name":"def apply$mcJID$sp(v1: Int, v2: Double): Long","description":"scala.runtime.java8.JFunction2$mcJID$sp","location":"api/scala/runtime/java8/JFunction2$mcJID$sp.html","searchKeys":["apply$mcJID$sp"]},{"name":"def tupled[T1, T2, T3, T4, R](f: (T1, T2, T3, T4) => R): (T1, T2, T3, T4) => R","description":"scala.Function$","location":"api/scala/Function$.html","searchKeys":["tupled"]},{"name":"object Product11","description":"scala.Product11$","location":"api/scala/Product11$.html","searchKeys":["Product11"]},{"name":"val AnyVal: Manifest[AnyVal]","description":"scala.reflect.ClassManifestFactory$","location":"api/scala/reflect/ClassManifestFactory$.html","searchKeys":["AnyVal"]},{"name":"def copy(original: Tree)(qual: Option[String]): This","description":"scala.quoted.Quotes$reflectModule$ThisModule","location":"api/scala/quoted/Quotes$reflectModule$ThisModule.html","searchKeys":["copy"]},{"name":"def asScalaFromLongConsumer(jf: LongConsumer): Long => BoxedUnit","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asScalaFromLongConsumer"]},{"name":"trait AsScalaConverters","description":"scala.collection.convert.AsScalaConverters","location":"api/scala/collection/convert/AsScalaConverters.html","searchKeys":["AsScalaConverters"]},{"name":"def this(defaultEntry: Long => V)","description":"scala.collection.mutable.LongMap","location":"api/scala/collection/mutable/LongMap.html","searchKeys":["this"]},{"name":"object Specializable","description":"scala.Specializable$","location":"api/scala/Specializable$.html","searchKeys":["Specializable"]},{"name":"def to(end: BigDecimal): Partial[BigDecimal, Inclusive[BigDecimal]]","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["to"]},{"name":"def *(factor: Double): Duration","description":"scala.concurrent.duration.Duration","location":"api/scala/concurrent/duration/Duration.html","searchKeys":["*"]},{"name":"val x$4: Type[T4]","description":"scala.quoted.FromExpr$$Tuple7FromExpr","location":"api/scala/quoted/FromExpr$$Tuple7FromExpr.html","searchKeys":["x$4"]},{"name":"def toOption: Option[T]","description":"scala.util.Try","location":"api/scala/util/Try.html","searchKeys":["toOption"]},{"name":"def ==(x: Short): Boolean","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["=="]},{"name":"val x$11: Type[T11]","description":"scala.quoted.FromExpr$$Tuple12FromExpr","location":"api/scala/quoted/FromExpr$$Tuple12FromExpr.html","searchKeys":["x$11"]},{"name":"def ==(x: Float): Boolean","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["=="]},{"name":"val ScalaCompilerVersion: Name","description":"scala.util.Properties$","location":"api/scala/util/Properties$.html","searchKeys":["ScalaCompilerVersion"]},{"name":"def name: String","description":"scala.quoted.Quotes$reflectModule$TypeProjectionMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeProjectionMethods.html","searchKeys":["name"]},{"name":"def processFully(buffer: Appendable): InputStream => Unit","description":"scala.sys.process.BasicIO$","location":"api/scala/sys/process/BasicIO$.html","searchKeys":["processFully"]},{"name":"given Tuple14ToExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14]: ToExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)]","description":"scala.quoted.ToExpr$$Tuple14ToExpr","location":"api/scala/quoted/ToExpr$.html","searchKeys":["Tuple14ToExpr"]},{"name":"given ListFromExpr[T](using val x$1: Type[T], val x$2: FromExpr[T]): FromExpr[List[T]]","description":"scala.quoted.FromExpr$$ListFromExpr","location":"api/scala/quoted/FromExpr$.html","searchKeys":["ListFromExpr"]},{"name":"def refinements: List[Definition]","description":"scala.quoted.Quotes$reflectModule$RefinedMethods","location":"api/scala/quoted/Quotes$reflectModule$RefinedMethods.html","searchKeys":["refinements"]},{"name":"Internals","description":"","location":"docs/Internals/index.html","searchKeys":["Internals"]},{"name":"object ErrorKind","description":"scala.compiletime.testing.ErrorKind$","location":"api/scala/compiletime/testing/ErrorKind$.html","searchKeys":["ErrorKind"]},{"name":"def this(defaultEntry: Long => V, initialBufferSize: Int)","description":"scala.collection.mutable.LongMap","location":"api/scala/collection/mutable/LongMap.html","searchKeys":["this"]},{"name":"val underlying: WeakReference[ <: T]","description":"scala.ref.WeakReference","location":"api/scala/ref/WeakReference.html","searchKeys":["underlying"]},{"name":"def length: Int","description":"scala.collection.SeqView$$Reverse","location":"api/scala/collection/SeqView$$Reverse.html","searchKeys":["length"]},{"name":"object Typer extends ErrorKind","description":"scala.compiletime.testing.ErrorKind$$Typer$","location":"api/scala/compiletime/testing/ErrorKind$$Typer$.html","searchKeys":["Typer"]},{"name":"given CharToExpr[T <: Char]: ToExpr[T]","description":"scala.quoted.ToExpr$$CharToExpr","location":"api/scala/quoted/ToExpr$$CharToExpr.html","searchKeys":["CharToExpr"]},{"name":"class Concat[A](prefix: SomeIterableOps[A], suffix: SomeIterableOps[A]) extends AbstractView[A]","description":"scala.collection.View$$Concat","location":"api/scala/collection/View$$Concat.html","searchKeys":["Concat"]},{"name":"object ClassTagIterableFactory","description":"scala.collection.ClassTagIterableFactory$","location":"api/scala/collection/ClassTagIterableFactory$.html","searchKeys":["ClassTagIterableFactory"]},{"name":"val x$10: Type[T10]","description":"scala.quoted.FromExpr$$Tuple15FromExpr","location":"api/scala/quoted/FromExpr$$Tuple15FromExpr.html","searchKeys":["x$10"]},{"name":"class NonLocalReturnControl[@specialized(Byte, Short, Int, Long, Char, Float, Double, Boolean, Unit) T](val key: AnyRef, val value: T) extends ControlThrowable","description":"scala.runtime.NonLocalReturnControl","location":"api/scala/runtime/NonLocalReturnControl.html","searchKeys":["NonLocalReturnControl"]},{"name":"def intersection[R](that: IntMap[R]): IntMap[T]","description":"scala.collection.immutable.IntMap","location":"api/scala/collection/immutable/IntMap.html","searchKeys":["intersection"]},{"name":"def updateWith[S >: T](key: Long, value: S, f: (T, S) => S): LongMap[S]","description":"scala.collection.immutable.LongMap","location":"api/scala/collection/immutable/LongMap.html","searchKeys":["updateWith"]},{"name":"def slice(from: Int, until: Int): C","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["slice"]},{"name":"def apply(x: Char, xs: Char*): Array[Char]","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["apply"]},{"name":"type MirroredElemTypes = EmptyTuple","description":"scala.deriving.Mirror$$SingletonProxy","location":"api/scala/deriving/Mirror$$SingletonProxy.html","searchKeys":["MirroredElemTypes"]},{"name":"def floatValue: Float","description":"scala.runtime.ScalaNumberProxy","location":"api/scala/runtime/ScalaNumberProxy.html","searchKeys":["floatValue"]},{"name":"def fromTry[T](result: Try[T]): Future[T]","description":"scala.concurrent.Future$","location":"api/scala/concurrent/Future$.html","searchKeys":["fromTry"]},{"name":"type NamedArg <: Term","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["NamedArg"]},{"name":"def getOrNull(key: Long): V","description":"scala.collection.mutable.LongMap","location":"api/scala/collection/mutable/LongMap.html","searchKeys":["getOrNull"]},{"name":"trait FloatConstantModule","description":"scala.quoted.Quotes$reflectModule$FloatConstantModule","location":"api/scala/quoted/Quotes$reflectModule$FloatConstantModule.html","searchKeys":["FloatConstantModule"]},{"name":"class Tuple4[+T1, +T2, +T3, +T4](_1: T1, _2: T2, _3: T3, _4: T4) extends Product4[T1, T2, T3, T4]","description":"scala.Tuple4","location":"api/scala/Tuple4.html","searchKeys":["Tuple4"]},{"name":"def >=(x: Long): Boolean","description":"scala.Long","location":"api/scala/Long.html","searchKeys":[">="]},{"name":"def fromJava(o: Optional[A]): O","description":"scala.jdk.OptionShape","location":"api/scala/jdk/OptionShape.html","searchKeys":["fromJava"]},{"name":"Higher-Kinded Types in Dotty","description":"","location":"docs/internals/higher-kinded-v2.html","searchKeys":["Higher-Kinded Types in Dotty"]},{"name":"def fromURL(url: URL)(codec: Codec): BufferedSource","description":"scala.io.Source$","location":"api/scala/io/Source$.html","searchKeys":["fromURL"]},{"name":"class RichFunction1AsLongToDoubleFunction(underlying: Long => Double) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichFunction1AsLongToDoubleFunction","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsLongToDoubleFunction.html","searchKeys":["RichFunction1AsLongToDoubleFunction"]},{"name":"class ofChar(val unsafeArray: Array[Char]) extends ArraySeq[Char]","description":"scala.collection.immutable.ArraySeq$$ofChar","location":"api/scala/collection/immutable/ArraySeq$$ofChar.html","searchKeys":["ofChar"]},{"name":"trait PartialFunction[-A, +B] extends A => B","description":"scala.PartialFunction","location":"api/scala/PartialFunction.html","searchKeys":["PartialFunction"]},{"name":"trait SortedSetFactoryDefaults[+A, +CC <: ([X] =>> SortedSet[X] & SortedSetOps[X, CC, CC[X]]), +WithFilterCC <: ([x] =>> IterableOps[x, WithFilterCC, WithFilterCC[x]] & Set[x])] extends SortedSetOps[A, CC, CC[A]]","description":"scala.collection.SortedSetFactoryDefaults","location":"api/scala/collection/SortedSetFactoryDefaults.html","searchKeys":["SortedSetFactoryDefaults"]},{"name":"def apply$mcZII$sp(v1: Int, v2: Int): Boolean","description":"scala.runtime.java8.JFunction2$mcZII$sp","location":"api/scala/runtime/java8/JFunction2$mcZII$sp.html","searchKeys":["apply$mcZII$sp"]},{"name":"trait ClassDefModule","description":"scala.quoted.Quotes$reflectModule$ClassDefModule","location":"api/scala/quoted/Quotes$reflectModule$ClassDefModule.html","searchKeys":["ClassDefModule"]},{"name":"trait StreamShapeLowPriority1","description":"scala.collection.convert.StreamExtensions$$StreamShapeLowPriority1","location":"api/scala/collection/convert/StreamExtensions$$StreamShapeLowPriority1.html","searchKeys":["StreamShapeLowPriority1"]},{"name":"given PositionMethods","description":"scala.quoted.Quotes$reflectModule$PositionMethods","location":"api/scala/quoted/Quotes$reflectModule$PositionMethods.html","searchKeys":["PositionMethods"]},{"name":"class BitSet(var elems: Array[Long]) extends AbstractSet[Int] with SortedSet[Int] with SortedSetOps[Int, [A] =>> SortedSet[A], BitSet] with StrictOptimizedIterableOps[Int, [A] =>> Set[A], BitSet] with StrictOptimizedSortedSetOps[Int, [A] =>> SortedSet[A], BitSet] with BitSet with BitSetOps[BitSet] with Serializable","description":"scala.collection.mutable.BitSet","location":"api/scala/collection/mutable/BitSet.html","searchKeys":["BitSet"]},{"name":"def |(x: Int): Int","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["|"]},{"name":"Dropped: XML Literals","description":"","location":"docs/reference/dropped-features/xml.html","searchKeys":["Dropped: XML Literals"]},{"name":"def trimToSize(): Unit","description":"scala.collection.mutable.ArrayDeque","location":"api/scala/collection/mutable/ArrayDeque.html","searchKeys":["trimToSize"]},{"name":"given CaseDefMethods","description":"scala.quoted.Quotes$reflectModule$CaseDefMethods","location":"api/scala/quoted/Quotes$reflectModule$CaseDefMethods.html","searchKeys":["CaseDefMethods"]},{"name":"def enrichAsJavaBinaryOperator[T, A1, A2](sf: (T, A1) => A2)(evA1: A1 =:= T, evA2: A2 =:= T): RichFunction2AsBinaryOperator[T]","description":"scala.jdk.Priority1FunctionExtensions","location":"api/scala/jdk/Priority1FunctionExtensions.html","searchKeys":["enrichAsJavaBinaryOperator"]},{"name":"def unapply[T1, T2, T3, T4, T5, T6, T7](x: Product7[T1, T2, T3, T4, T5, T6, T7]): Option[Product7[T1, T2, T3, T4, T5, T6, T7]]","description":"scala.Product7$","location":"api/scala/Product7$.html","searchKeys":["unapply"]},{"name":"trait MapFactory[+CC <: ([_$20, _$21] =>> Any)] extends Serializable","description":"scala.collection.MapFactory","location":"api/scala/collection/MapFactory.html","searchKeys":["MapFactory"]},{"name":"class NumericRange[T](val start: T, val end: T, val step: T, val isInclusive: Boolean)(num: Integral[T]) extends AbstractSeq[T] with IndexedSeq[T] with IndexedSeqOps[T, [A] =>> IndexedSeq[A], IndexedSeq[T]] with StrictOptimizedSeqOps[T, [A] =>> IndexedSeq[A], IndexedSeq[T]] with IterableFactoryDefaults[T, [A] =>> IndexedSeq[A]] with Serializable","description":"scala.collection.immutable.NumericRange","location":"api/scala/collection/immutable/NumericRange.html","searchKeys":["NumericRange"]},{"name":"val x$39: FromExpr[T19]","description":"scala.quoted.FromExpr$$Tuple20FromExpr","location":"api/scala/quoted/FromExpr$$Tuple20FromExpr.html","searchKeys":["x$39"]},{"name":"def splitAt(self: Tuple, n: Int): (Tuple, Tuple)","description":"scala.runtime.Tuples$","location":"api/scala/runtime/Tuples$.html","searchKeys":["splitAt"]},{"name":"val x$19: FromExpr[T1]","description":"scala.quoted.FromExpr$$Tuple18FromExpr","location":"api/scala/quoted/FromExpr$$Tuple18FromExpr.html","searchKeys":["x$19"]},{"name":"given TreeMethods","description":"scala.quoted.Quotes$reflectModule$TreeMethods","location":"api/scala/quoted/Quotes$reflectModule$TreeMethods.html","searchKeys":["TreeMethods"]},{"name":"def unapply(x: Expr[(T1, T2, T3)])(using Quotes): Option[(T1, T2, T3)]","description":"scala.quoted.FromExpr$$Tuple3FromExpr","location":"api/scala/quoted/FromExpr$$Tuple3FromExpr.html","searchKeys":["unapply"]},{"name":"def memberType(name: String): Symbol","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["memberType"]},{"name":"val x$20: Type[T20]","description":"scala.quoted.FromExpr$$Tuple20FromExpr","location":"api/scala/quoted/FromExpr$$Tuple20FromExpr.html","searchKeys":["x$20"]},{"name":"def toFactory[K, V, CC <: ([_$59, _$60] =>> Any)](factory: SortedMapFactory[CC])(evidence$41: Ordering[K]): Factory[(K, V), CC[K, V]]","description":"scala.collection.SortedMapFactory$","location":"api/scala/collection/SortedMapFactory$.html","searchKeys":["toFactory"]},{"name":"val x$3: Type[T3]","description":"scala.quoted.FromExpr$$Tuple9FromExpr","location":"api/scala/quoted/FromExpr$$Tuple9FromExpr.html","searchKeys":["x$3"]},{"name":"type BufferedIterator[+A] = BufferedIterator[A]","description":"scala","location":"api/scala.html","searchKeys":["BufferedIterator"]},{"name":"def *(x: Short): Float","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["*"]},{"name":"trait PackageClauseModule","description":"scala.quoted.Quotes$reflectModule$PackageClauseModule","location":"api/scala/quoted/Quotes$reflectModule$PackageClauseModule.html","searchKeys":["PackageClauseModule"]},{"name":"def -(x: Long): Long","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["-"]},{"name":"object IterableOnce","description":"scala.collection.IterableOnce$","location":"api/scala/collection/IterableOnce$.html","searchKeys":["IterableOnce"]},{"name":"def asJavaParStream: IntStream","description":"scala.collection.convert.StreamExtensions$ShortArrayHasSeqParStream","location":"api/scala/collection/convert/StreamExtensions$ShortArrayHasSeqParStream.html","searchKeys":["asJavaParStream"]},{"name":"class SearchImpl[Repr, A](coll: SeqOps[A, AnyConstr, ]) extends AnyVal","description":"scala.collection.Searching$$SearchImpl","location":"api/scala/collection/Searching$$SearchImpl.html","searchKeys":["SearchImpl"]},{"name":"type ![X <: Boolean] <: Boolean","description":"scala.compiletime.ops.boolean$","location":"api/scala/compiletime/ops/boolean$.html","searchKeys":["!"]},{"name":"def updated[V1 >: V](key: K, value: V1): Map[K, V1]","description":"scala.collection.immutable.Map$$Map2","location":"api/scala/collection/immutable/Map$$Map2.html","searchKeys":["updated"]},{"name":"def ==(x: Short): Boolean","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["=="]},{"name":"def %(x: Double): Double","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["%"]},{"name":"def collectionAsScalaIterable[A](i: Collection[A]): Iterable[A]","description":"scala.collection.JavaConverters$","location":"api/scala/collection/JavaConverters$.html","searchKeys":["collectionAsScalaIterable"]},{"name":"def tabulate[A](n1: Int, n2: Int, n3: Int, n4: Int)(f: (Int, Int, Int, Int) => A)(evidence$13: ClassTag[A]): CC[CC[CC[CC[A]]]]","description":"scala.collection.ClassTagIterableFactory","location":"api/scala/collection/ClassTagIterableFactory.html","searchKeys":["tabulate"]},{"name":"def asJavaSeqValueLongStream[K](m: Map[K, Long]): LongStream","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaSeqValueLongStream"]},{"name":"def mutableSetAsJavaSet[A](s: Set[A]): Set[A]","description":"scala.collection.JavaConverters$","location":"api/scala/collection/JavaConverters$.html","searchKeys":["mutableSetAsJavaSet"]},{"name":"def apply(x1: T): R","description":"scala.jdk.FunctionWrappers$$AsJavaFunction","location":"api/scala/jdk/FunctionWrappers$$AsJavaFunction.html","searchKeys":["apply"]},{"name":"Runtime Multi-Stage Programming","description":"","location":"docs/reference/metaprogramming/staging.html","searchKeys":["Runtime Multi-Stage Programming"]},{"name":"def &=(other: BitSet): BitSet","description":"scala.collection.mutable.BitSet","location":"api/scala/collection/mutable/BitSet.html","searchKeys":["&="]},{"name":"def contains(elem: A): Boolean","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["contains"]},{"name":"def asJavaBiFunction[T, U, R](sf: (T, U) => R): BiFunction[T, U, R]","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asJavaBiFunction"]},{"name":"def isValidLong: Boolean","description":"scala.runtime.RichLong","location":"api/scala/runtime/RichLong.html","searchKeys":["isValidLong"]},{"name":"trait Product5[+T1, +T2, +T3, +T4, +T5] extends Product","description":"scala.Product5","location":"api/scala/Product5.html","searchKeys":["Product5"]},{"name":"def incl(elem: A): ListSet[A]","description":"scala.collection.immutable.ListSet","location":"api/scala/collection/immutable/ListSet.html","searchKeys":["incl"]},{"name":"def updated[V1 >: V](key: K, value: V1): TreeMap[K, V1]","description":"scala.collection.immutable.TreeMap","location":"api/scala/collection/immutable/TreeMap.html","searchKeys":["updated"]},{"name":"given PackageClauseMethods","description":"scala.quoted.Quotes$reflectModule$PackageClauseMethods","location":"api/scala/quoted/Quotes$reflectModule$PackageClauseMethods.html","searchKeys":["PackageClauseMethods"]},{"name":"def removeHeadOption(resizeInternalRepr: Boolean): Option[A]","description":"scala.collection.mutable.ArrayDeque","location":"api/scala/collection/mutable/ArrayDeque.html","searchKeys":["removeHeadOption"]},{"name":"def subSequence(start: Int, end: Int): CharSequence","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["subSequence"]},{"name":"def _4: T4","description":"scala.Product12","location":"api/scala/Product12.html","searchKeys":["_4"]},{"name":"def compare(x: Double, y: Double): Int","description":"scala.math.Ordering$$Double$$TotalOrdering","location":"api/scala/math/Ordering$$Double$$TotalOrdering.html","searchKeys":["compare"]},{"name":"def newBuilder[K, V](evidence$48: Ordering[K]): Builder[(K, V), CC[K, V]]","description":"scala.collection.SortedMapFactory$$Delegate","location":"api/scala/collection/SortedMapFactory$$Delegate.html","searchKeys":["newBuilder"]},{"name":"object LazyZip4","description":"scala.collection.LazyZip4$","location":"api/scala/collection/LazyZip4$.html","searchKeys":["LazyZip4"]},{"name":"def flatMap[K2, V2](f: (K, V) => IterableOnce[(K2, V2)])(@implicitNotFound ordering: Ordering[K2]): CollisionProofHashMap[K2, V2]","description":"scala.collection.mutable.CollisionProofHashMap","location":"api/scala/collection/mutable/CollisionProofHashMap.html","searchKeys":["flatMap"]},{"name":"val underlying: Map[K, V]","description":"scala.collection.mutable.Map$$WithDefault","location":"api/scala/collection/mutable/Map$$WithDefault.html","searchKeys":["underlying"]},{"name":"def initLast: (Ordering[T], T)","description":"scala.collection.immutable.TreeSeqMap$$Ordering","location":"api/scala/collection/immutable/TreeSeqMap$$Ordering.html","searchKeys":["initLast"]},{"name":"object ListBuffer extends StrictOptimizedSeqFactory[[A] =>> ListBuffer[A]]","description":"scala.collection.mutable.ListBuffer$","location":"api/scala/collection/mutable/ListBuffer$.html","searchKeys":["ListBuffer"]},{"name":"trait Product15[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15] extends Product","description":"scala.Product15","location":"api/scala/Product15.html","searchKeys":["Product15"]},{"name":"val x$2: Type[T2]","description":"scala.quoted.FromExpr$$Tuple19FromExpr","location":"api/scala/quoted/FromExpr$$Tuple19FromExpr.html","searchKeys":["x$2"]},{"name":"def apply$mcIII$sp(v1: Int, v2: Int): Int","description":"scala.runtime.java8.JFunction2$mcIII$sp","location":"api/scala/runtime/java8/JFunction2$mcIII$sp.html","searchKeys":["apply$mcIII$sp"]},{"name":"def buildFromArray[A](evidence$2: ClassTag[A]): BuildFrom[Array[], A, Array[A]]","description":"scala.collection.BuildFrom$","location":"api/scala/collection/BuildFrom$.html","searchKeys":["buildFromArray"]},{"name":"class DropWhile[A](underlying: SomeIterableOps[A], p: A => Boolean) extends AbstractView[A]","description":"scala.collection.View$$DropWhile","location":"api/scala/collection/View$$DropWhile.html","searchKeys":["DropWhile"]},{"name":"val x$25: FromExpr[T11]","description":"scala.quoted.FromExpr$$Tuple14FromExpr","location":"api/scala/quoted/FromExpr$$Tuple14FromExpr.html","searchKeys":["x$25"]},{"name":"val OPAQUE: 35","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["OPAQUE"]},{"name":"def fun: Term","description":"scala.quoted.Quotes$reflectModule$TypeApplyMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeApplyMethods.html","searchKeys":["fun"]},{"name":"def unapply(x: Expr[(T1, T2)])(using Quotes): Option[(T1, T2)]","description":"scala.quoted.FromExpr$$Tuple2FromExpr","location":"api/scala/quoted/FromExpr$$Tuple2FromExpr.html","searchKeys":["unapply"]},{"name":"def trySuccess(value: T): Boolean","description":"scala.concurrent.Promise","location":"api/scala/concurrent/Promise.html","searchKeys":["trySuccess"]},{"name":"type OmitSelector <: Selector","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["OmitSelector"]},{"name":"def ordinal: Int","description":"scala.collection.immutable.TreeSeqMap$$Ordering","location":"api/scala/collection/immutable/TreeSeqMap$$Ordering.html","searchKeys":["ordinal"]},{"name":"given Tuple22ToExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22]: ToExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22)]","description":"scala.quoted.ToExpr$$Tuple22ToExpr","location":"api/scala/quoted/ToExpr$$Tuple22ToExpr.html","searchKeys":["Tuple22ToExpr"]},{"name":"def unapply(x: Return): (Term, Symbol)","description":"scala.quoted.Quotes$reflectModule$ReturnModule","location":"api/scala/quoted/Quotes$reflectModule$ReturnModule.html","searchKeys":["unapply"]},{"name":"def char2double(x: Char): Double","description":"scala.Char$","location":"api/scala/Char$.html","searchKeys":["char2double"]},{"name":"val CASEaccessor: 27","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["CASEaccessor"]},{"name":"def find[T](futures: Iterable[Future[T]])(p: T => Boolean)(executor: ExecutionContext): Future[Option[T]]","description":"scala.concurrent.Future$","location":"api/scala/concurrent/Future$.html","searchKeys":["find"]},{"name":"def unapply(x: Expr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)])(using Quotes): Option[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)]","description":"scala.quoted.FromExpr$$Tuple14FromExpr","location":"api/scala/quoted/FromExpr$$Tuple14FromExpr.html","searchKeys":["unapply"]},{"name":"trait SortedSet[A] extends Set[A] with SortedSetOps[A, [A] =>> SortedSet[A], SortedSet[A]] with SortedSetFactoryDefaults[A, [A] =>> SortedSet[A], [A] =>> Set[A]]","description":"scala.collection.SortedSet","location":"api/scala/collection/SortedSet.html","searchKeys":["SortedSet"]},{"name":"val elems: Long","description":"scala.collection.immutable.BitSet$$BitSet1","location":"api/scala/collection/immutable/BitSet$$BitSet1.html","searchKeys":["elems"]},{"name":"def hash(x: T): Int","description":"scala.util.hashing.Hashing","location":"api/scala/util/hashing/Hashing.html","searchKeys":["hash"]},{"name":"def !=(x: Float): Boolean","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["!="]},{"name":"given ThisTypeMethods","description":"scala.quoted.Quotes$reflectModule$ThisTypeMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ThisTypeMethods"]},{"name":"def resources[R1, R2, R3, R4, A](resource1: R1, resource2: => R2, resource3: => R3, resource4: => R4)(body: (R1, R2, R3, R4) => A)(evidence$7: Releasable[R1], evidence$8: Releasable[R2], evidence$9: Releasable[R3], evidence$10: Releasable[R4]): A","description":"scala.util.Using$","location":"api/scala/util/Using$.html","searchKeys":["resources"]},{"name":"val jDoubleStreamShape: StreamShape[Double, DoubleStream, DoubleStepper]","description":"scala.collection.convert.StreamExtensions$$StreamShape$","location":"api/scala/collection/convert/StreamExtensions$$StreamShape$.html","searchKeys":["jDoubleStreamShape"]},{"name":"def reduceLeft[B >: A](op: (B, A) => B): B","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["reduceLeft"]},{"name":"def apply$mcZJ$sp(v1: Long): Boolean","description":"scala.runtime.java8.JFunction1$mcZJ$sp","location":"api/scala/runtime/java8/JFunction1$mcZJ$sp.html","searchKeys":["apply$mcZJ$sp"]},{"name":"def -(x: Short): Int","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["-"]},{"name":"def startsWith[B >: A](that: Array[B]): Boolean","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["startsWith"]},{"name":"def ofTupleFromSeq(seq: Seq[Expr[Any]])(using Quotes): Expr[Tuple]","description":"scala.quoted.Expr$","location":"api/scala/quoted/Expr$.html","searchKeys":["ofTupleFromSeq"]},{"name":"def patternHigherOrderHole[U](pat: Any, args: Any*): U","description":"scala.quoted.runtime.Patterns$","location":"api/scala/quoted/runtime/Patterns$.html","searchKeys":["patternHigherOrderHole"]},{"name":"def unary_-: Double","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["unary_-"]},{"name":"type IntConstant <: Constant","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["IntConstant"]},{"name":"def printf(text: String, xs: Any*): Unit","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["printf"]},{"name":"def toDouble(x: Byte): Double","description":"scala.math.Numeric$$ByteIsIntegral","location":"api/scala/math/Numeric$$ByteIsIntegral.html","searchKeys":["toDouble"]},{"name":"type Class[T] = Class[T]","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["Class"]},{"name":"def addString(b: StringBuilder): StringBuilder","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["addString"]},{"name":"def unapply(tdef: TypeDef): (String, Tree)","description":"scala.quoted.Quotes$reflectModule$TypeDefModule","location":"api/scala/quoted/Quotes$reflectModule$TypeDefModule.html","searchKeys":["unapply"]},{"name":"type Inferred <: TypeTree","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Inferred"]},{"name":"def unapply(x: Expr[(T1)])(using Quotes): Option[(T1)]","description":"scala.quoted.FromExpr$$Tuple1FromExpr","location":"api/scala/quoted/FromExpr$$Tuple1FromExpr.html","searchKeys":["unapply"]},{"name":"def reverse: String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["reverse"]},{"name":"object SortedSetOps","description":"scala.collection.SortedSetOps$","location":"api/scala/collection/SortedSetOps$.html","searchKeys":["SortedSetOps"]},{"name":"class AsJavaDoublePredicate(sf: Double => Boolean) extends DoublePredicate","description":"scala.jdk.FunctionWrappers$$AsJavaDoublePredicate","location":"api/scala/jdk/FunctionWrappers$$AsJavaDoublePredicate.html","searchKeys":["AsJavaDoublePredicate"]},{"name":"def ^(x: Int): Int","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["^"]},{"name":"type GenMap[K, +V] = Map[K, V]","description":"scala.collection","location":"api/scala/collection.html","searchKeys":["GenMap"]},{"name":"class OpenHashMap[Key, Value](initialSize: Int) extends AbstractMap[Key, Value] with MapOps[Key, Value, [Key, Value] =>> OpenHashMap[Key, Value], OpenHashMap[Key, Value]] with StrictOptimizedIterableOps[(Key, Value), [A] =>> Iterable[A], OpenHashMap[Key, Value]] with MapFactoryDefaults[Key, Value, [Key, Value] =>> OpenHashMap[Key, Value], [A] =>> Iterable[A]] with DefaultSerializable","description":"scala.collection.mutable.OpenHashMap","location":"api/scala/collection/mutable/OpenHashMap.html","searchKeys":["OpenHashMap"]},{"name":"def Mutable: Flags","description":"scala.quoted.Quotes$reflectModule$FlagsModule","location":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html","searchKeys":["Mutable"]},{"name":"def tref: TypeRepr","description":"scala.quoted.Quotes$reflectModule$ThisTypeMethods","location":"api/scala/quoted/Quotes$reflectModule$ThisTypeMethods.html","searchKeys":["tref"]},{"name":"val TERMREFsymbol: 114","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["TERMREFsymbol"]},{"name":"def singleType[T <: AnyRef](value: AnyRef): Manifest[T]","description":"scala.reflect.Manifest$","location":"api/scala/reflect/Manifest$.html","searchKeys":["singleType"]},{"name":"val x$18: Type[T18]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["x$18"]},{"name":"def partition(p: A => Boolean): (C, C)","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["partition"]},{"name":"val x$11: FromExpr[T3]","description":"scala.quoted.FromExpr$$Tuple8FromExpr","location":"api/scala/quoted/FromExpr$$Tuple8FromExpr.html","searchKeys":["x$11"]},{"name":"def toInt(x: Short): Int","description":"scala.math.Numeric$$ShortIsIntegral","location":"api/scala/math/Numeric$$ShortIsIntegral.html","searchKeys":["toInt"]},{"name":"def zip[B](that: IterableOnce[B]): Array[(A, B)]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["zip"]},{"name":"def result(): Array[Float]","description":"scala.collection.mutable.ArrayBuilder$$ofFloat","location":"api/scala/collection/mutable/ArrayBuilder$$ofFloat.html","searchKeys":["result"]},{"name":"def fromString(s: String): Double","description":"scala.util.CommandLineParser$$FromString$$given_FromString_Double$","location":"api/scala/util/CommandLineParser$$FromString$$given_FromString_Double$.html","searchKeys":["fromString"]},{"name":"def println(x: Any): Unit","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["println"]},{"name":"def tabulate[T](n: Int)(f: Int => T)(evidence$17: ClassTag[T]): Array[T]","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["tabulate"]},{"name":"def allOverriddenSymbols: Iterator[Symbol]","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["allOverriddenSymbols"]},{"name":"def ArrayModule: Symbol","description":"scala.quoted.Quotes$reflectModule$defnModule","location":"api/scala/quoted/Quotes$reflectModule$defnModule.html","searchKeys":["ArrayModule"]},{"name":"val x$3: Type[T3]","description":"scala.quoted.FromExpr$$Tuple12FromExpr","location":"api/scala/quoted/FromExpr$$Tuple12FromExpr.html","searchKeys":["x$3"]},{"name":"type Max[X <: Int, Y <: Int] <: Int","description":"scala.compiletime.ops.int$","location":"api/scala/compiletime/ops/int$.html","searchKeys":["Max"]},{"name":"def paramNames: List[String]","description":"scala.quoted.Quotes$reflectModule$LambdaTypeMethods","location":"api/scala/quoted/Quotes$reflectModule$LambdaTypeMethods.html","searchKeys":["paramNames"]},{"name":"def ++[T](that: IArray[U])(evidence$1: ClassTag[U]): IArray[U]","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["++"]},{"name":"class Channel[A]","description":"scala.concurrent.Channel","location":"api/scala/concurrent/Channel.html","searchKeys":["Channel"]},{"name":"trait SortedMapFactoryDefaults[K, +V, +CC <: ([x, y] =>> Map[x, y] & SortedMapOps[x, y, CC, CC[x, y]] & UnsortedCC[x, y]), +WithFilterCC <: ([x] =>> IterableOps[x, WithFilterCC, WithFilterCC[x]] & Iterable[x]), +UnsortedCC <: ([x, y] =>> Map[x, y])] extends SortedMapOps[K, V, CC, CC[K, V]] with MapOps[K, V, UnsortedCC, CC[K, V]]","description":"scala.collection.SortedMapFactoryDefaults","location":"api/scala/collection/SortedMapFactoryDefaults.html","searchKeys":["SortedMapFactoryDefaults"]},{"name":"Release Procedure","description":"","location":"docs/contributing/procedures/release.html","searchKeys":["Release Procedure"]},{"name":"def iterator: Iterator[(El1, El2, El3)]","description":"scala.runtime.Tuple3Zipped","location":"api/scala/runtime/Tuple3Zipped.html","searchKeys":["iterator"]},{"name":"val MatchType: MatchTypeModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["MatchType"]},{"name":"def copy(original: Tree)(cond: Term, thenp: Term, elsep: Term): If","description":"scala.quoted.Quotes$reflectModule$IfModule","location":"api/scala/quoted/Quotes$reflectModule$IfModule.html","searchKeys":["copy"]},{"name":"type RoundingMode = Value","description":"scala.math.BigDecimal$$RoundingMode$","location":"api/scala/math/BigDecimal$$RoundingMode$.html","searchKeys":["RoundingMode"]},{"name":"def substituteCo[F <: ([_$3] =>> Any)](ff: F[From]): F[To]","description":"scala.<:<","location":"api/scala/<:<.html","searchKeys":["substituteCo"]},{"name":"def <(x: Int): Boolean","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["<"]},{"name":"val defaultValue: K => V","description":"scala.collection.immutable.Map$$WithDefault","location":"api/scala/collection/immutable/Map$$WithDefault.html","searchKeys":["defaultValue"]},{"name":"given Tuple15ToExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15]: ToExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)]","description":"scala.quoted.ToExpr$$Tuple15ToExpr","location":"api/scala/quoted/ToExpr$$Tuple15ToExpr.html","searchKeys":["Tuple15ToExpr"]},{"name":"def range[A](start: A, end: A)(evidence$24: Integral[A]): CC[A]","description":"scala.collection.IterableFactory","location":"api/scala/collection/IterableFactory.html","searchKeys":["range"]},{"name":"def finalizer: Option[Term]","description":"scala.quoted.Quotes$reflectModule$TryMethods","location":"api/scala/quoted/Quotes$reflectModule$TryMethods.html","searchKeys":["finalizer"]},{"name":"def newArray3(len: Int): Array[Array[Array[T]]]","description":"scala.reflect.ClassManifestDeprecatedApis","location":"api/scala/reflect/ClassManifestDeprecatedApis.html","searchKeys":["newArray3"]},{"name":"def Covariant: Flags","description":"scala.quoted.Quotes$reflectModule$FlagsModule","location":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html","searchKeys":["Covariant"]},{"name":"def map[K2, V2](f: (K, V) => (K2, V2))(@implicitNotFound ordering: Ordering[K2]): CC[K2, V2]","description":"scala.collection.SortedMapOps","location":"api/scala/collection/SortedMapOps.html","searchKeys":["map"]},{"name":"def rangeImpl(from: Option[A], until: Option[A]): C","description":"scala.collection.SortedOps","location":"api/scala/collection/SortedOps.html","searchKeys":["rangeImpl"]},{"name":"given MatchTypeTreeMethods","description":"scala.quoted.Quotes$reflectModule$MatchTypeTreeMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["MatchTypeTreeMethods"]},{"name":"val MinValue: -1.7976931348623157E308","description":"scala.Double$","location":"api/scala/Double$.html","searchKeys":["MinValue"]},{"name":"def asJavaLongPredicate(sf: Long => Boolean): LongPredicate","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asJavaLongPredicate"]},{"name":"def bound: Option[TypeTree]","description":"scala.quoted.Quotes$reflectModule$GivenSelectorMethods","location":"api/scala/quoted/Quotes$reflectModule$GivenSelectorMethods.html","searchKeys":["bound"]},{"name":"val ShortConstant: ShortConstantModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ShortConstant"]},{"name":"class ConcurrentMapHasAsJava[K, V](m: Map[K, V])","description":"scala.collection.convert.AsJavaExtensions$ConcurrentMapHasAsJava","location":"api/scala/collection/convert/AsJavaExtensions$ConcurrentMapHasAsJava.html","searchKeys":["ConcurrentMapHasAsJava"]},{"name":"given ParamRefTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ParamRefTypeTest"]},{"name":"def prepend(elem: A): ArrayBuffer[A]","description":"scala.collection.mutable.ArrayBuffer","location":"api/scala/collection/mutable/ArrayBuffer.html","searchKeys":["prepend"]},{"name":"def collectionAsScalaIterableConverter[A](i: Collection[A]): AsScala[Iterable[A]]","description":"scala.collection.JavaConverters$","location":"api/scala/collection/JavaConverters$.html","searchKeys":["collectionAsScalaIterableConverter"]},{"name":"def from(start: Int, step: Int): LazyList[Int]","description":"scala.collection.immutable.LazyList$","location":"api/scala/collection/immutable/LazyList$.html","searchKeys":["from"]},{"name":"object DummyImplicit","description":"scala.DummyImplicit$","location":"api/scala/DummyImplicit$.html","searchKeys":["DummyImplicit"]},{"name":"def addExact(x: Int, y: Int): Int","description":"scala.math","location":"api/scala/math.html","searchKeys":["addExact"]},{"name":"val x$6: FromExpr[T1]","description":"scala.quoted.FromExpr$$Tuple5FromExpr","location":"api/scala/quoted/FromExpr$$Tuple5FromExpr.html","searchKeys":["x$6"]},{"name":"def tupled: (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) => R","description":"scala.Function15","location":"api/scala/Function15.html","searchKeys":["tupled"]},{"name":"def <(x: Byte): Boolean","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["<"]},{"name":"def unary_~: Int","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["unary_~"]},{"name":"def hasTimeLeft(): Boolean","description":"scala.concurrent.duration.Deadline","location":"api/scala/concurrent/duration/Deadline.html","searchKeys":["hasTimeLeft"]},{"name":"def asScalaFromBooleanSupplier(jf: BooleanSupplier): () => Boolean","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asScalaFromBooleanSupplier"]},{"name":"def >(x: Float): Boolean","description":"scala.Double","location":"api/scala/Double.html","searchKeys":[">"]},{"name":"val x$14: Type[T14]","description":"scala.quoted.FromExpr$$Tuple21FromExpr","location":"api/scala/quoted/FromExpr$$Tuple21FromExpr.html","searchKeys":["x$14"]},{"name":"Dotty Internals 1: Trees & Symbols (Meeting Notes)","description":"","location":"docs/internals/dotty-internals-1-notes.html","searchKeys":["Dotty Internals 1: Trees & Symbols (Meeting Notes)"]},{"name":"def newBuilder[K, V](initialCapacity: Int, loadFactor: Double): Builder[(K, V), HashMap[K, V]]","description":"scala.collection.mutable.HashMap$","location":"api/scala/collection/mutable/HashMap$.html","searchKeys":["newBuilder"]},{"name":"def apply$mcFII$sp(v1: Int, v2: Int): Float","description":"scala.runtime.java8.JFunction2$mcFII$sp","location":"api/scala/runtime/java8/JFunction2$mcFII$sp.html","searchKeys":["apply$mcFII$sp"]},{"name":"def update(elem: A, included: Boolean): Unit","description":"scala.collection.mutable.SetOps","location":"api/scala/collection/mutable/SetOps.html","searchKeys":["update"]},{"name":"object Try","description":"scala.util.Try$","location":"api/scala/util/Try$.html","searchKeys":["Try"]},{"name":"val List: List","description":"scala","location":"api/scala.html","searchKeys":["List"]},{"name":"trait Function21[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, -T14, -T15, -T16, -T17, -T18, -T19, -T20, -T21, +R] extends AnyRef","description":"scala.Function21","location":"api/scala/Function21.html","searchKeys":["Function21"]},{"name":"def round: Int","description":"scala.runtime.RichFloat","location":"api/scala/runtime/RichFloat.html","searchKeys":["round"]},{"name":"given TypeIdentTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeIdentTypeTest"]},{"name":"def after(i: Int): CharSequence","description":"scala.util.matching.Regex$$MatchData","location":"api/scala/util/matching/Regex$$MatchData.html","searchKeys":["after"]},{"name":"class RichBooleanSupplierAsFunction0(underlying: BooleanSupplier) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichBooleanSupplierAsFunction0","location":"api/scala/jdk/FunctionWrappers$$RichBooleanSupplierAsFunction0.html","searchKeys":["RichBooleanSupplierAsFunction0"]},{"name":"def trySplit(): DoubleStepper","description":"scala.collection.DoubleStepper","location":"api/scala/collection/DoubleStepper.html","searchKeys":["trySplit"]},{"name":"def /(x: Double): Double","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["/"]},{"name":"object ArrayBuilder","description":"scala.collection.mutable.ArrayBuilder$","location":"api/scala/collection/mutable/ArrayBuilder$.html","searchKeys":["ArrayBuilder"]},{"name":"def transformTypeTrees(trees: List[TypeTree])(owner: Symbol): List[TypeTree]","description":"scala.quoted.Quotes$reflectModule$TreeMap","location":"api/scala/quoted/Quotes$reflectModule$TreeMap.html","searchKeys":["transformTypeTrees"]},{"name":"def apply$mcJJJ$sp(v1: Long, v2: Long): Long","description":"scala.runtime.java8.JFunction2$mcJJJ$sp","location":"api/scala/runtime/java8/JFunction2$mcJJJ$sp.html","searchKeys":["apply$mcJJJ$sp"]},{"name":"def toScala[C1](factory: Factory[Long, C1])(info: AccumulatorFactoryInfo[Long, C1]): C1","description":"scala.collection.convert.StreamExtensions$LongStreamHasToScala","location":"api/scala/collection/convert/StreamExtensions$LongStreamHasToScala.html","searchKeys":["toScala"]},{"name":"object IndexedSeq extends Delegate[[A] =>> IndexedSeq[A]]","description":"scala.collection.IndexedSeq$","location":"api/scala/collection/IndexedSeq$.html","searchKeys":["IndexedSeq"]},{"name":"def milliseconds[C](c: C)(ev: Classifier[C]): R","description":"scala.concurrent.duration.DurationConversions","location":"api/scala/concurrent/duration/DurationConversions.html","searchKeys":["milliseconds"]},{"name":"val x$22: FromExpr[T9]","description":"scala.quoted.FromExpr$$Tuple13FromExpr","location":"api/scala/quoted/FromExpr$$Tuple13FromExpr.html","searchKeys":["x$22"]},{"name":"def initialize(value: Boolean): Boolean","description":"scala.runtime.LazyBoolean","location":"api/scala/runtime/LazyBoolean.html","searchKeys":["initialize"]},{"name":"def let(owner: Symbol, rhs: Term)(body: Ident => Term): Term","description":"scala.quoted.Quotes$reflectModule$ValDefModule","location":"api/scala/quoted/Quotes$reflectModule$ValDefModule.html","searchKeys":["let"]},{"name":"trait Creator[+T]","description":"scala.sys.Prop$$Creator","location":"api/scala/sys/Prop$$Creator.html","searchKeys":["Creator"]},{"name":"def scanLeft[B](z: B)(op: (B, A) => B)(evidence$3: ClassTag[B]): Array[B]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["scanLeft"]},{"name":"def Open: Flags","description":"scala.quoted.Quotes$reflectModule$FlagsModule","location":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html","searchKeys":["Open"]},{"name":"object Expr","description":"scala.quoted.runtime.Expr$","location":"api/scala/quoted/runtime/Expr$.html","searchKeys":["Expr"]},{"name":"def toJavaGeneric: Optional[Double]","description":"scala.jdk.OptionConverters$$RichOptionalDouble","location":"api/scala/jdk/OptionConverters$$RichOptionalDouble.html","searchKeys":["toJavaGeneric"]},{"name":"val x$2: Type[R]","description":"scala.quoted.FromExpr$$EitherFromExpr","location":"api/scala/quoted/FromExpr$$EitherFromExpr.html","searchKeys":["x$2"]},{"name":"def newBuilder[K, V]: Builder[(K, V), VectorMap[K, V]]","description":"scala.collection.immutable.VectorMap$","location":"api/scala/collection/immutable/VectorMap$.html","searchKeys":["newBuilder"]},{"name":"val OrType: OrTypeModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["OrType"]},{"name":"val Integral: Integral","description":"scala","location":"api/scala.html","searchKeys":["Integral"]},{"name":"def untupled[T1, T2, T3, T4, T5, R](f: (T1, T2, T3, T4, T5) => R): (T1, T2, T3, T4, T5) => R","description":"scala.Function$","location":"api/scala/Function$.html","searchKeys":["untupled"]},{"name":"def _10: T10","description":"scala.Product19","location":"api/scala/Product19.html","searchKeys":["_10"]},{"name":"def rem(x: T, y: T): T","description":"scala.math.Integral","location":"api/scala/math/Integral.html","searchKeys":["rem"]},{"name":"object IterableOps","description":"scala.collection.IterableOps$","location":"api/scala/collection/IterableOps$.html","searchKeys":["IterableOps"]},{"name":"def remove(idx: Int, count: Int): Unit","description":"scala.collection.mutable.ListBuffer","location":"api/scala/collection/mutable/ListBuffer.html","searchKeys":["remove"]},{"name":"def filterToOption[B1](p: A => Boolean): Option[Either[A, B1]]","description":"scala.util.Either$$LeftProjection","location":"api/scala/util/Either$$LeftProjection.html","searchKeys":["filterToOption"]},{"name":"def minBy[B](f: A => B)(cmp: Ordering[B]): A","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["minBy"]},{"name":"def unpickleType[T <: AnyKind](pickled: String | List[String], typeHole: (Int, Seq[Any]) => Type[ <: AnyKind], termHole: (Int, Seq[Any], Quotes) => Expr[]): Type[T]","description":"scala.quoted.runtime.QuoteUnpickler","location":"api/scala/quoted/runtime/QuoteUnpickler.html","searchKeys":["unpickleType"]},{"name":"def from[B](coll: IterableOnce[B]): ArrayBuffer[B]","description":"scala.collection.mutable.ArrayBuffer$","location":"api/scala/collection/mutable/ArrayBuffer$.html","searchKeys":["from"]},{"name":"val x$9: Type[T9]","description":"scala.quoted.FromExpr$$Tuple20FromExpr","location":"api/scala/quoted/FromExpr$$Tuple20FromExpr.html","searchKeys":["x$9"]},{"name":"The Meta-theory of Symmetric Metaprogramming","description":"","location":"docs/reference/metaprogramming/simple-smp.html","searchKeys":["The Meta-theory of Symmetric Metaprogramming"]},{"name":"val Empty: TreeSeqMap[Nothing, Nothing]","description":"scala.collection.immutable.TreeSeqMap$","location":"api/scala/collection/immutable/TreeSeqMap$.html","searchKeys":["Empty"]},{"name":"def fill[A, C](n1: Int, n2: Int, n3: Int)(elem: => A)(canAccumulate: AccumulatorFactoryShape[A, C]): AnyAccumulator[AnyAccumulator[C]]","description":"scala.jdk.Accumulator$","location":"api/scala/jdk/Accumulator$.html","searchKeys":["fill"]},{"name":"def -(x: Double): Double","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["-"]},{"name":"def tabulate[T](n1: Int, n2: Int)(f: (Int, Int) => T)(evidence$24: ClassTag[T]): IArray[IArray[T]]","description":"scala.IArray$package$$IArray$","location":"api/scala/IArray$package$$IArray$.html","searchKeys":["tabulate"]},{"name":"def abs: BigInt","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["abs"]},{"name":"trait EvidenceIterableFactory[+CC <: ([_$30] =>> Any), Ev <: ([_$31] =>> Any)] extends Serializable","description":"scala.collection.EvidenceIterableFactory","location":"api/scala/collection/EvidenceIterableFactory.html","searchKeys":["EvidenceIterableFactory"]},{"name":"trait IntConstantModule","description":"scala.quoted.Quotes$reflectModule$IntConstantModule","location":"api/scala/quoted/Quotes$reflectModule$IntConstantModule.html","searchKeys":["IntConstantModule"]},{"name":"def asScalaFromDoubleFunction[R](jf: DoubleFunction[R]): Double => R","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asScalaFromDoubleFunction"]},{"name":"def prependedAll[B >: A](prefix: IterableOnce[B]): CC[B]","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["prependedAll"]},{"name":"def isValidShort: Boolean","description":"scala.math.ScalaNumericAnyConversions","location":"api/scala/math/ScalaNumericAnyConversions.html","searchKeys":["isValidShort"]},{"name":"val BOLD: \"\\033[1m\"","description":"scala.io.AnsiColor","location":"api/scala/io/AnsiColor.html","searchKeys":["BOLD"]},{"name":"def empty[K, V](orderBy: OrderBy): TreeSeqMap[K, V]","description":"scala.collection.immutable.TreeSeqMap$","location":"api/scala/collection/immutable/TreeSeqMap$.html","searchKeys":["empty"]},{"name":"def canEqual(that: Any): Boolean","description":"scala.Equals","location":"api/scala/Equals.html","searchKeys":["canEqual"]},{"name":"trait CharOrdering extends Ordering[Char]","description":"scala.math.Ordering$$CharOrdering","location":"api/scala/math/Ordering$$CharOrdering.html","searchKeys":["CharOrdering"]},{"name":"trait SymbolOrdering extends Ordering[Symbol]","description":"scala.math.Ordering$$SymbolOrdering","location":"api/scala/math/Ordering$$SymbolOrdering.html","searchKeys":["SymbolOrdering"]},{"name":"object Product2","description":"scala.Product2$","location":"api/scala/Product2$.html","searchKeys":["Product2"]},{"name":"val x$5: Type[T5]","description":"scala.quoted.FromExpr$$Tuple20FromExpr","location":"api/scala/quoted/FromExpr$$Tuple20FromExpr.html","searchKeys":["x$5"]},{"name":"def apply(x: Option[T])(using Quotes): Expr[Option[T]]","description":"scala.quoted.ToExpr$$OptionToExpr","location":"api/scala/quoted/ToExpr$$OptionToExpr.html","searchKeys":["apply"]},{"name":"def set AsJavaSet[A](s: Set[A]): Set[A]","description":"scala.collection.convert.ToJavaImplicits","location":"api/scala/collection/convert/ToJavaImplicits.html","searchKeys":["set AsJavaSet"]},{"name":"val x$9: Type[T9]","description":"scala.quoted.FromExpr$$Tuple11FromExpr","location":"api/scala/quoted/FromExpr$$Tuple11FromExpr.html","searchKeys":["x$9"]},{"name":"class RichOptional[A](o: Optional[A]) extends AnyVal","description":"scala.jdk.OptionConverters$$RichOptional","location":"api/scala/jdk/OptionConverters$$RichOptional.html","searchKeys":["RichOptional"]},{"name":"class AsJavaDoubleUnaryOperator(sf: Double => Double) extends DoubleUnaryOperator","description":"scala.jdk.FunctionWrappers$$AsJavaDoubleUnaryOperator","location":"api/scala/jdk/FunctionWrappers$$AsJavaDoubleUnaryOperator.html","searchKeys":["AsJavaDoubleUnaryOperator"]},{"name":"def apply(command: String, cwd: Option[File], extraEnv: (String, String)*): ProcessBuilder","description":"scala.sys.process.ProcessCreation","location":"api/scala/sys/process/ProcessCreation.html","searchKeys":["apply"]},{"name":"var array: Array[T]","description":"scala.collection.mutable.UnrolledBuffer$$Unrolled","location":"api/scala/collection/mutable/UnrolledBuffer$$Unrolled.html","searchKeys":["array"]},{"name":"def run(log: ProcessLogger, connectInput: Boolean): Process","description":"scala.sys.process.ProcessBuilder","location":"api/scala/sys/process/ProcessBuilder.html","searchKeys":["run"]},{"name":"def apply(tup: (T1, T2, T3, T4, T5, T6))(using Quotes): Expr[(T1, T2, T3, T4, T5, T6)]","description":"scala.quoted.ToExpr$$Tuple6ToExpr","location":"api/scala/quoted/ToExpr$$Tuple6ToExpr.html","searchKeys":["apply"]},{"name":"def getOrElse[A1 >: A](or: => A1): A1","description":"scala.util.Either$$LeftProjection","location":"api/scala/util/Either$$LeftProjection.html","searchKeys":["getOrElse"]},{"name":"def unapplySeq[A](x: CC[A]): UnapplySeqWrapper[A]","description":"scala.collection.SeqFactory","location":"api/scala/collection/SeqFactory.html","searchKeys":["unapplySeq"]},{"name":"class ofBoolean(val unsafeArray: Array[Boolean]) extends ArraySeq[Boolean]","description":"scala.collection.immutable.ArraySeq$$ofBoolean","location":"api/scala/collection/immutable/ArraySeq$$ofBoolean.html","searchKeys":["ofBoolean"]},{"name":"trait StringOrdering extends Ordering[String]","description":"scala.math.Ordering$$StringOrdering","location":"api/scala/math/Ordering$$StringOrdering.html","searchKeys":["StringOrdering"]},{"name":"def STATE(cur: Long, ord: Int): Long","description":"scala.runtime.LazyVals$","location":"api/scala/runtime/LazyVals$.html","searchKeys":["STATE"]},{"name":"def sameElements[B >: A](that: IterableOnce[B]): Boolean","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["sameElements"]},{"name":"def sortInPlaceWith(lt: (A, A) => Boolean): IndexedSeqOps[A, CC, C]","description":"scala.collection.mutable.IndexedSeqOps","location":"api/scala/collection/mutable/IndexedSeqOps.html","searchKeys":["sortInPlaceWith"]},{"name":"given given_FromString_Boolean: FromString[Boolean]","description":"scala.util.CommandLineParser$$FromString$$given_FromString_Boolean$","location":"api/scala/util/CommandLineParser$$FromString$.html","searchKeys":["given_FromString_Boolean"]},{"name":"given ShortConstantTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ShortConstantTypeTest"]},{"name":"object BasicIO","description":"scala.sys.process.BasicIO$","location":"api/scala/sys/process/BasicIO$.html","searchKeys":["BasicIO"]},{"name":"def apply(x1: Double): Double","description":"scala.jdk.FunctionWrappers$$FromJavaDoubleUnaryOperator","location":"api/scala/jdk/FunctionWrappers$$FromJavaDoubleUnaryOperator.html","searchKeys":["apply"]},{"name":"def mkString: String","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["mkString"]},{"name":"def write(x: A): Unit","description":"scala.concurrent.Channel","location":"api/scala/concurrent/Channel.html","searchKeys":["write"]},{"name":"val Import: ImportModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Import"]},{"name":"def <(x: Short): Boolean","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["<"]},{"name":"def asJavaSeqValueIntStreamFromByte[K](m: Map[K, Byte]): IntStream","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaSeqValueIntStreamFromByte"]},{"name":"def apply(x1: T, x2: U): Int","description":"scala.jdk.FunctionWrappers$$FromJavaToIntBiFunction","location":"api/scala/jdk/FunctionWrappers$$FromJavaToIntBiFunction.html","searchKeys":["apply"]},{"name":"def curried: T1 => T2 => T3 => T4 => T5 => T6 => T7 => T8 => T9 => T10 => T11 => T12 => R","description":"scala.Function12","location":"api/scala/Function12.html","searchKeys":["curried"]},{"name":"def _9: T9","description":"scala.Product18","location":"api/scala/Product18.html","searchKeys":["_9"]},{"name":"class AbstractSet[A] extends AbstractIterable[A] with Set[A]","description":"scala.collection.AbstractSet","location":"api/scala/collection/AbstractSet.html","searchKeys":["AbstractSet"]},{"name":"def indices: Range","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["indices"]},{"name":"type Equiv[T] = Equiv[T]","description":"scala","location":"api/scala.html","searchKeys":["Equiv"]},{"name":"type Zip[T1 <: Tuple, T2 <: Tuple] = (T1, T2) match {\n  case (h1 *: t1, h2 *: t2) => (h1, h2) *: Zip[t1, t2]\n  case (EmptyTuple, _) => EmptyTuple\n  case (_, EmptyTuple) => EmptyTuple\n  case _ => Tuple\n}","description":"scala.Tuple$","location":"api/scala/Tuple$.html","searchKeys":["Zip"]},{"name":"class Map3[K, +V](key1: K, value1: V, key2: K, value2: V, key3: K, value3: V) extends AbstractMap[K, V] with StrictOptimizedIterableOps[(K, V), [A] =>> Iterable[A], Map[K, V]] with Serializable","description":"scala.collection.immutable.Map$$Map3","location":"api/scala/collection/immutable/Map$$Map3.html","searchKeys":["Map3"]},{"name":"given Tuple2ToExpr[T1, T2]: ToExpr[(T1, T2)]","description":"scala.quoted.ToExpr$$Tuple2ToExpr","location":"api/scala/quoted/ToExpr$$Tuple2ToExpr.html","searchKeys":["Tuple2ToExpr"]},{"name":"def toScala[C1](factory: Factory[Double, C1])(info: AccumulatorFactoryInfo[Double, C1]): C1","description":"scala.collection.convert.StreamExtensions$DoubleStreamHasToScala","location":"api/scala/collection/convert/StreamExtensions$DoubleStreamHasToScala.html","searchKeys":["toScala"]},{"name":"val x$6: Type[T6]","description":"scala.quoted.FromExpr$$Tuple19FromExpr","location":"api/scala/quoted/FromExpr$$Tuple19FromExpr.html","searchKeys":["x$6"]},{"name":"def tails: Iterator[C]","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["tails"]},{"name":"def qualifier: TypeRepr","description":"scala.quoted.Quotes$reflectModule$NamedTypeMethods","location":"api/scala/quoted/Quotes$reflectModule$NamedTypeMethods.html","searchKeys":["qualifier"]},{"name":"trait Function1[@specialized -T1, @specialized +R] extends AnyRef","description":"scala.Function1","location":"api/scala/Function1.html","searchKeys":["Function1"]},{"name":"def toOctalString: String","description":"scala.runtime.RichLong","location":"api/scala/runtime/RichLong.html","searchKeys":["toOctalString"]},{"name":"def ordered[A](asComparable: () => A): Ordering[A]","description":"scala.math.LowPriorityOrderingImplicits","location":"api/scala/math/LowPriorityOrderingImplicits.html","searchKeys":["ordered"]},{"name":"trait JFunction2$mcDDI$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcDDI$sp","location":"api/scala/runtime/java8/JFunction2$mcDDI$sp.html","searchKeys":["JFunction2$mcDDI$sp"]},{"name":"def take[This >: Tuple <: Tuple](n: Int): Take[This, n]","description":"scala.Tuple","location":"api/scala/Tuple.html","searchKeys":["take"]},{"name":"trait Seq[A] extends Iterable[A] with Seq[A] with SeqOps[A, [A] =>> Seq[A], Seq[A]] with IterableFactoryDefaults[A, [A] =>> Seq[A]]","description":"scala.collection.mutable.Seq","location":"api/scala/collection/mutable/Seq.html","searchKeys":["Seq"]},{"name":"def apply(x1: T): Long","description":"scala.jdk.FunctionWrappers$$FromJavaToLongFunction","location":"api/scala/jdk/FunctionWrappers$$FromJavaToLongFunction.html","searchKeys":["apply"]},{"name":"class Error(message: String, lineContent: String, column: Int, kind: ErrorKind)","description":"scala.compiletime.testing.Error","location":"api/scala/compiletime/testing/Error.html","searchKeys":["Error"]},{"name":"trait AnnotatedTypeModule","description":"scala.quoted.Quotes$reflectModule$AnnotatedTypeModule","location":"api/scala/quoted/Quotes$reflectModule$AnnotatedTypeModule.html","searchKeys":["AnnotatedTypeModule"]},{"name":"def _12: T12","description":"scala.Product21","location":"api/scala/Product21.html","searchKeys":["_12"]},{"name":"given SummonFromMethods","description":"scala.quoted.Quotes$reflectModule$SummonFromMethods","location":"api/scala/quoted/Quotes$reflectModule$SummonFromMethods.html","searchKeys":["SummonFromMethods"]},{"name":"def apply(inline x: Long, inline xs: Long*): IArray[Long]","description":"scala.IArray$package$$IArray$","location":"api/scala/IArray$package$$IArray$.html","searchKeys":["apply"]},{"name":"def ScalaPrimitiveValueClasses: List[Symbol]","description":"scala.quoted.Quotes$reflectModule$defnModule","location":"api/scala/quoted/Quotes$reflectModule$defnModule.html","searchKeys":["ScalaPrimitiveValueClasses"]},{"name":"def stepper: IntStepper & EfficientSplit","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["stepper"]},{"name":"trait RecursiveThisModule","description":"scala.quoted.Quotes$reflectModule$RecursiveThisModule","location":"api/scala/quoted/Quotes$reflectModule$RecursiveThisModule.html","searchKeys":["RecursiveThisModule"]},{"name":"def newBuilder[A](evidence$40: Ev[A]): Builder[A, CC[A]]","description":"scala.collection.EvidenceIterableFactory$$Delegate","location":"api/scala/collection/EvidenceIterableFactory$$Delegate.html","searchKeys":["newBuilder"]},{"name":"def copy(original: Tree)(aliases: List[TypeDef], tpt: TypeTree): TypeBlock","description":"scala.quoted.Quotes$reflectModule$TypeBlockModule","location":"api/scala/quoted/Quotes$reflectModule$TypeBlockModule.html","searchKeys":["copy"]},{"name":"def nextDouble(): Double","description":"scala.util.Random","location":"api/scala/util/Random.html","searchKeys":["nextDouble"]},{"name":"def timeLeft: FiniteDuration","description":"scala.concurrent.duration.Deadline","location":"api/scala/concurrent/duration/Deadline.html","searchKeys":["timeLeft"]},{"name":"def *(x: Long): Double","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["*"]},{"name":"def isValidFloat: Boolean","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["isValidFloat"]},{"name":"def apply[K <: AnyRef, V](elems: (K, V)*): AnyRefMap[K, V]","description":"scala.collection.mutable.AnyRefMap$","location":"api/scala/collection/mutable/AnyRefMap$.html","searchKeys":["apply"]},{"name":"def enqueue(elems: A*): Unit","description":"scala.collection.mutable.PriorityQueue","location":"api/scala/collection/mutable/PriorityQueue.html","searchKeys":["enqueue"]},{"name":"def gteq(x: T, y: T): Boolean","description":"scala.math.PartialOrdering","location":"api/scala/math/PartialOrdering.html","searchKeys":["gteq"]},{"name":"def asScala: Long => Unit","description":"scala.jdk.FunctionWrappers$$RichLongConsumerAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichLongConsumerAsFunction1.html","searchKeys":["asScala"]},{"name":"val x$2: Type[R]","description":"scala.quoted.FromExpr$$LeftFromExpr","location":"api/scala/quoted/FromExpr$$LeftFromExpr.html","searchKeys":["x$2"]},{"name":"def toIterable: Iterable[A]","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["toIterable"]},{"name":"object DurationConverters","description":"scala.jdk.DurationConverters$","location":"api/scala/jdk/DurationConverters$.html","searchKeys":["DurationConverters"]},{"name":"def collect[B](pf: PartialFunction[A, B]): Iterator[B]","description":"scala.collection.Iterator","location":"api/scala/collection/Iterator.html","searchKeys":["collect"]},{"name":"def iterate[A](start: A, len: Int)(f: A => A): CC[A]","description":"scala.collection.IterableFactory","location":"api/scala/collection/IterableFactory.html","searchKeys":["iterate"]},{"name":"def Boolean2boolean(x: Boolean): Boolean","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["Boolean2boolean"]},{"name":"def -(x: Int): Float","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["-"]},{"name":"def nonEmpty: Boolean","description":"scala.Option","location":"api/scala/Option.html","searchKeys":["nonEmpty"]},{"name":"def updateWith(key: K)(remappingFunction: Option[V] => Option[V]): Option[V]","description":"scala.collection.mutable.MapOps","location":"api/scala/collection/mutable/MapOps.html","searchKeys":["updateWith"]},{"name":"def replaceFirstIn(target: CharSequence, replacement: String): String","description":"scala.util.matching.Regex","location":"api/scala/util/matching/Regex.html","searchKeys":["replaceFirstIn"]},{"name":"Extension Methods","description":"","location":"docs/reference/contextual/extension-methods.html","searchKeys":["Extension Methods"]},{"name":"given TypeIdentMethods","description":"scala.quoted.Quotes$reflectModule$TypeIdentMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeIdentMethods"]},{"name":"val firstNatTreeTag: 60","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["firstNatTreeTag"]},{"name":"type WrappedArray[X] = ArraySeq[X]","description":"scala.collection.mutable","location":"api/scala/collection/mutable.html","searchKeys":["WrappedArray"]},{"name":"class AsJava[A](op: => A)","description":"scala.collection.JavaConverters$$AsJava","location":"api/scala/collection/JavaConverters$$AsJava.html","searchKeys":["AsJava"]},{"name":"def asJava: Predicate[T]","description":"scala.jdk.FunctionWrappers$$RichFunction1AsPredicate","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsPredicate.html","searchKeys":["asJava"]},{"name":"val x$31: FromExpr[T12]","description":"scala.quoted.FromExpr$$Tuple19FromExpr","location":"api/scala/quoted/FromExpr$$Tuple19FromExpr.html","searchKeys":["x$31"]},{"name":"def >(x: Byte): Boolean","description":"scala.Long","location":"api/scala/Long.html","searchKeys":[">"]},{"name":"def unapply[T1, T2](x: Product2[T1, T2]): Option[Product2[T1, T2]]","description":"scala.Product2$","location":"api/scala/Product2$.html","searchKeys":["unapply"]},{"name":"def /(x: Float): Double","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["/"]},{"name":"def getClassForName(name: String): Class[]","description":"scala.compat.Platform$","location":"api/scala/compat/Platform$.html","searchKeys":["getClassForName"]},{"name":"val TypeBounds: TypeBoundsModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeBounds"]},{"name":"def newArray4(len: Int): Array[Array[Array[Array[T]]]]","description":"scala.reflect.ClassManifestDeprecatedApis","location":"api/scala/reflect/ClassManifestDeprecatedApis.html","searchKeys":["newArray4"]},{"name":"object Set extends IterableFactory[[A] =>> Set[A]]","description":"scala.collection.immutable.Set$","location":"api/scala/collection/immutable/Set$.html","searchKeys":["Set"]},{"name":"object TreeSet extends SortedIterableFactory[[A] =>> TreeSet[A]]","description":"scala.collection.mutable.TreeSet$","location":"api/scala/collection/mutable/TreeSet$.html","searchKeys":["TreeSet"]},{"name":"def +(x: Double): Double","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["+"]},{"name":"def memberField(name: String): Symbol","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["memberField"]},{"name":"def mkString(sep: String): String","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["mkString"]},{"name":"def adder: ObjDoubleConsumer[DoubleAccumulator]","description":"scala.jdk.DoubleAccumulator$","location":"api/scala/jdk/DoubleAccumulator$.html","searchKeys":["adder"]},{"name":"def >(x: Byte): Boolean","description":"scala.Int","location":"api/scala/Int.html","searchKeys":[">"]},{"name":"val TYPEREF: 117","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["TYPEREF"]},{"name":"val arraySeed: 1007110753","description":"scala.util.hashing.MurmurHash3$","location":"api/scala/util/hashing/MurmurHash3$.html","searchKeys":["arraySeed"]},{"name":"def format: String","description":"scala.collection.immutable.TreeSeqMap$$Ordering","location":"api/scala/collection/immutable/TreeSeqMap$$Ordering.html","searchKeys":["format"]},{"name":"trait AlternativesModule","description":"scala.quoted.Quotes$reflectModule$AlternativesModule","location":"api/scala/quoted/Quotes$reflectModule$AlternativesModule.html","searchKeys":["AlternativesModule"]},{"name":"def clear(): Unit","description":"scala.collection.immutable.VectorBuilder","location":"api/scala/collection/immutable/VectorBuilder.html","searchKeys":["clear"]},{"name":"def elemTag: ClassTag[]","description":"scala.collection.mutable.ArraySeq$$ofBoolean","location":"api/scala/collection/mutable/ArraySeq$$ofBoolean.html","searchKeys":["elemTag"]},{"name":"Contributing","description":"","location":"docs/Contributing/index.html","searchKeys":["Contributing"]},{"name":"def setScale(scale: Int, mode: RoundingMode): BigDecimal","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["setScale"]},{"name":"val x$10: Type[T10]","description":"scala.quoted.FromExpr$$Tuple11FromExpr","location":"api/scala/quoted/FromExpr$$Tuple11FromExpr.html","searchKeys":["x$10"]},{"name":"def shortValue: Short","description":"scala.runtime.ScalaNumberProxy","location":"api/scala/runtime/ScalaNumberProxy.html","searchKeys":["shortValue"]},{"name":"def toSeconds: Long","description":"scala.concurrent.duration.Duration","location":"api/scala/concurrent/duration/Duration.html","searchKeys":["toSeconds"]},{"name":"val x$20: FromExpr[T8]","description":"scala.quoted.FromExpr$$Tuple12FromExpr","location":"api/scala/quoted/FromExpr$$Tuple12FromExpr.html","searchKeys":["x$20"]},{"name":"def isInclusive: Boolean","description":"scala.collection.immutable.Range","location":"api/scala/collection/immutable/Range.html","searchKeys":["isInclusive"]},{"name":"def length: Int","description":"scala.collection.mutable.UnrolledBuffer","location":"api/scala/collection/mutable/UnrolledBuffer.html","searchKeys":["length"]},{"name":"def fromProduct(p: Product): MirroredMonoType","description":"scala.deriving.Mirror$$SingletonProxy","location":"api/scala/deriving/Mirror$$SingletonProxy.html","searchKeys":["fromProduct"]},{"name":"type CAP >: L <: U","description":"scala.runtime.TypeBox","location":"api/scala/runtime/TypeBox.html","searchKeys":["CAP"]},{"name":"val unsafeArray: Array[Float]","description":"scala.collection.immutable.ArraySeq$$ofFloat","location":"api/scala/collection/immutable/ArraySeq$$ofFloat.html","searchKeys":["unsafeArray"]},{"name":"val x$3: FromExpr[L]","description":"scala.quoted.FromExpr$$LeftFromExpr","location":"api/scala/quoted/FromExpr$$LeftFromExpr.html","searchKeys":["x$3"]},{"name":"def apply$mcZD$sp(v1: Double): Boolean","description":"scala.runtime.java8.JFunction1$mcZD$sp","location":"api/scala/runtime/java8/JFunction1$mcZD$sp.html","searchKeys":["apply$mcZD$sp"]},{"name":"def iterator: Iterator[A]","description":"scala.collection.View$$DropRight","location":"api/scala/collection/View$$DropRight.html","searchKeys":["iterator"]},{"name":"val AnyRef: Manifest[AnyRef]","description":"scala.reflect.ManifestFactory$","location":"api/scala/reflect/ManifestFactory$.html","searchKeys":["AnyRef"]},{"name":"Union Types - More Details","description":"","location":"docs/reference/new-types/union-types-spec.html","searchKeys":["Union Types - More Details"]},{"name":"val TypeReprPrinter: Printer[TypeRepr]","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeReprPrinter"]},{"name":"def asJavaParKeyDoubleStream[V](m: Map[Double, V]): DoubleStream","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaParKeyDoubleStream"]},{"name":"val ClassOfConstant: ClassOfConstantModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ClassOfConstant"]},{"name":"def seqAsJavaList[A](s: Seq[A]): List[A]","description":"scala.collection.JavaConverters$","location":"api/scala/collection/JavaConverters$.html","searchKeys":["seqAsJavaList"]},{"name":"type ParamRef <: TypeRepr","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ParamRef"]},{"name":"def apply(t: Throwable): Boolean","description":"scala.util.control.NonFatal$","location":"api/scala/util/control/NonFatal$.html","searchKeys":["apply"]},{"name":"val HALF_UP: Value","description":"scala.math.BigDecimal$$RoundingMode$","location":"api/scala/math/BigDecimal$$RoundingMode$.html","searchKeys":["HALF_UP"]},{"name":"def fun: Term","description":"scala.quoted.Quotes$reflectModule$UnapplyMethods","location":"api/scala/quoted/Quotes$reflectModule$UnapplyMethods.html","searchKeys":["fun"]},{"name":"def findFirstIn(source: CharSequence): Option[String]","description":"scala.util.matching.Regex","location":"api/scala/util/matching/Regex.html","searchKeys":["findFirstIn"]},{"name":"def asJava: IntUnaryOperator","description":"scala.jdk.FunctionWrappers$$RichFunction1AsIntUnaryOperator","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsIntUnaryOperator.html","searchKeys":["asJava"]},{"name":"def parseString(str: String): Option[Short]","description":"scala.math.Numeric$$ShortIsIntegral","location":"api/scala/math/Numeric$$ShortIsIntegral.html","searchKeys":["parseString"]},{"name":"class DefaultSerializationProxy[A](factory: Factory[A, Any], coll: Iterable[A]) extends Serializable","description":"scala.collection.generic.DefaultSerializationProxy","location":"api/scala/collection/generic/DefaultSerializationProxy.html","searchKeys":["DefaultSerializationProxy"]},{"name":"val x$1: Type[T]","description":"scala.quoted.FromExpr$$MapFromExpr","location":"api/scala/quoted/FromExpr$$MapFromExpr.html","searchKeys":["x$1"]},{"name":"def _5: T5","description":"scala.Product12","location":"api/scala/Product12.html","searchKeys":["_5"]},{"name":"def result(): Array[T]","description":"scala.collection.mutable.ArrayBuilder$$ofRef","location":"api/scala/collection/mutable/ArrayBuilder$$ofRef.html","searchKeys":["result"]},{"name":"def asScala: A","description":"scala.collection.JavaConverters$$AsScala","location":"api/scala/collection/JavaConverters$$AsScala.html","searchKeys":["asScala"]},{"name":"val TypeSelect: TypeSelectModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeSelect"]},{"name":"def classType[T](clazz: Class[]): ClassTag[T]","description":"scala.reflect.ClassManifestFactory$","location":"api/scala/reflect/ClassManifestFactory$.html","searchKeys":["classType"]},{"name":"def annotations: List[Term]","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["annotations"]},{"name":"def toBuffer[B >: A]: Buffer[B]","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["toBuffer"]},{"name":"def hour[C](c: C)(ev: Classifier[C]): R","description":"scala.concurrent.duration.DurationConversions","location":"api/scala/concurrent/duration/DurationConversions.html","searchKeys":["hour"]},{"name":"class Group[T >: Null](value: T) extends SpecializedGroup","description":"scala.Specializable$$Group","location":"api/scala/Specializable$$Group.html","searchKeys":["Group"]},{"name":"Numeric Literals","description":"","location":"docs/reference/changed-features/numeric-literals.html","searchKeys":["Numeric Literals"]},{"name":"def apply(x: Array[Char], mc: MathContext): BigDecimal","description":"scala.math.BigDecimal$","location":"api/scala/math/BigDecimal$.html","searchKeys":["apply"]},{"name":"def get(t: Object, off: Long): Long","description":"scala.runtime.LazyVals$","location":"api/scala/runtime/LazyVals$.html","searchKeys":["get"]},{"name":"def /(x: Double): Double","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["/"]},{"name":"val x$30: FromExpr[T15]","description":"scala.quoted.FromExpr$$Tuple15FromExpr","location":"api/scala/quoted/FromExpr$$Tuple15FromExpr.html","searchKeys":["x$30"]},{"name":"def startsWith[B >: A](that: Array[B], offset: Int): Boolean","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["startsWith"]},{"name":"val RecursiveThis: RecursiveThisModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["RecursiveThis"]},{"name":"Dropped Features","description":"","location":"docs/Dropped Features/index.html","searchKeys":["Dropped Features"]},{"name":"def getAsDouble(): Double","description":"scala.jdk.FunctionWrappers$$AsJavaDoubleSupplier","location":"api/scala/jdk/FunctionWrappers$$AsJavaDoubleSupplier.html","searchKeys":["getAsDouble"]},{"name":"def asJavaObjIntConsumer[T](sf: (T, Integer) => BoxedUnit): ObjIntConsumer[T]","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asJavaObjIntConsumer"]},{"name":"def flatMap(f: Value => IterableOnce[Value]): ValueSet","description":"scala.Enumeration$ValueSet","location":"api/scala/Enumeration$ValueSet.html","searchKeys":["flatMap"]},{"name":"def lazyLines_!: LazyList[String]","description":"scala.sys.process.ProcessBuilder","location":"api/scala/sys/process/ProcessBuilder.html","searchKeys":["lazyLines_!"]},{"name":"def asScalaFromBinaryOperator[T](jf: BinaryOperator[T]): (T, T) => T","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asScalaFromBinaryOperator"]},{"name":"def iterator: Iterator[(A, B)]","description":"scala.collection.View$$ZipAll","location":"api/scala/collection/View$$ZipAll.html","searchKeys":["iterator"]},{"name":"def toMillis: Long","description":"scala.concurrent.duration.FiniteDuration","location":"api/scala/concurrent/duration/FiniteDuration.html","searchKeys":["toMillis"]},{"name":"trait ValDefModule","description":"scala.quoted.Quotes$reflectModule$ValDefModule","location":"api/scala/quoted/Quotes$reflectModule$ValDefModule.html","searchKeys":["ValDefModule"]},{"name":"def resume: Either[() => TailRec[A], A]","description":"scala.util.control.TailCalls$$TailRec","location":"api/scala/util/control/TailCalls$$TailRec.html","searchKeys":["resume"]},{"name":"def addOne(elem: Elem): GrowableBuilder[Elem, To]","description":"scala.collection.mutable.GrowableBuilder","location":"api/scala/collection/mutable/GrowableBuilder.html","searchKeys":["addOne"]},{"name":"class ArrayOps[A](xs: Array[A]) extends AnyVal","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["ArrayOps"]},{"name":"object ToExpr","description":"scala.quoted.ToExpr$","location":"api/scala/quoted/ToExpr$.html","searchKeys":["ToExpr"]},{"name":"trait StrictOptimizedSeqFactory[+CC <: ([A] =>> SeqOps[A, [A] =>> Seq[A], Seq[A]])] extends SeqFactory[CC]","description":"scala.collection.StrictOptimizedSeqFactory","location":"api/scala/collection/StrictOptimizedSeqFactory.html","searchKeys":["StrictOptimizedSeqFactory"]},{"name":"val x$17: FromExpr[T7]","description":"scala.quoted.FromExpr$$Tuple10FromExpr","location":"api/scala/quoted/FromExpr$$Tuple10FromExpr.html","searchKeys":["x$17"]},{"name":"type Iterable[+A] = Iterable[A]","description":"scala","location":"api/scala.html","searchKeys":["Iterable"]},{"name":"trait IeeeOrdering extends Ordering[Double]","description":"scala.math.Ordering$$Double$$IeeeOrdering","location":"api/scala/math/Ordering$$Double$$IeeeOrdering.html","searchKeys":["IeeeOrdering"]},{"name":"def map[B, C](f: (El1, El2, El3, El4) => B)(bf: BuildFrom[C1, B, C]): C","description":"scala.collection.LazyZip4","location":"api/scala/collection/LazyZip4.html","searchKeys":["map"]},{"name":"def *(x: Char): Int","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["*"]},{"name":"trait ExtraImplicits","description":"scala.math.Equiv$$ExtraImplicits","location":"api/scala/math/Equiv$$ExtraImplicits.html","searchKeys":["ExtraImplicits"]},{"name":"def tupled: (T1, T2, T3, T4, T5, T6, T7) => R","description":"scala.Function7","location":"api/scala/Function7.html","searchKeys":["tupled"]},{"name":"val untagged: SeqFactory[[A] =>> ArraySeq[A]]","description":"scala.collection.immutable.ArraySeq$","location":"api/scala/collection/immutable/ArraySeq$.html","searchKeys":["untagged"]},{"name":"val HALF_EVEN: Value","description":"scala.math.BigDecimal$$RoundingMode$","location":"api/scala/math/BigDecimal$$RoundingMode$.html","searchKeys":["HALF_EVEN"]},{"name":"def complete(result: Try[T]): Promise[T]","description":"scala.concurrent.Promise","location":"api/scala/concurrent/Promise.html","searchKeys":["complete"]},{"name":"object FutureConverters","description":"scala.jdk.javaapi.FutureConverters$","location":"api/scala/jdk/javaapi/FutureConverters$.html","searchKeys":["FutureConverters"]},{"name":"class Breaks","description":"scala.util.control.Breaks","location":"api/scala/util/control/Breaks.html","searchKeys":["Breaks"]},{"name":"class AsJavaSupplier[T](sf: () => T) extends Supplier[T]","description":"scala.jdk.FunctionWrappers$$AsJavaSupplier","location":"api/scala/jdk/FunctionWrappers$$AsJavaSupplier.html","searchKeys":["AsJavaSupplier"]},{"name":"def <(x: Long): Boolean","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["<"]},{"name":"def seq: Iterable[A]","description":"scala.collection.Iterable","location":"api/scala/collection/Iterable.html","searchKeys":["seq"]},{"name":"def _2: T2","description":"scala.Product11","location":"api/scala/Product11.html","searchKeys":["_2"]},{"name":"def flatMap[B](f: A => IterableOnce[B]): CC[B]","description":"scala.collection.WithFilter","location":"api/scala/collection/WithFilter.html","searchKeys":["flatMap"]},{"name":"trait Iterable[+A] extends IterableOnce[A] with IterableOps[A, [A] =>> Iterable[A], Iterable[A]] with IterableFactoryDefaults[A, [A] =>> Iterable[A]]","description":"scala.collection.Iterable","location":"api/scala/collection/Iterable.html","searchKeys":["Iterable"]},{"name":"def apply(length: Long, unit: TimeUnit): FiniteDuration","description":"scala.concurrent.duration.Duration$","location":"api/scala/concurrent/duration/Duration$.html","searchKeys":["apply"]},{"name":"def isAnonymousFunction: Boolean","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["isAnonymousFunction"]},{"name":"def self: T","description":"scala.Proxy$$Typed","location":"api/scala/Proxy$$Typed.html","searchKeys":["self"]},{"name":"trait Dynamic","description":"scala.Dynamic","location":"api/scala/Dynamic.html","searchKeys":["Dynamic"]},{"name":"def <(x: Double): Boolean","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["<"]},{"name":"def contains(elem: A): Boolean","description":"scala.collection.immutable.Set$$Set3","location":"api/scala/collection/immutable/Set$$Set3.html","searchKeys":["contains"]},{"name":"given ClassToExpr[T <: Class[]]: ToExpr[T]","description":"scala.quoted.ToExpr$$ClassToExpr","location":"api/scala/quoted/ToExpr$.html","searchKeys":["ClassToExpr"]},{"name":"def applyAsDouble(x1: T): Double","description":"scala.jdk.FunctionWrappers$$AsJavaToDoubleFunction","location":"api/scala/jdk/FunctionWrappers$$AsJavaToDoubleFunction.html","searchKeys":["applyAsDouble"]},{"name":"val emptyDoubleArray: Array[Double]","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["emptyDoubleArray"]},{"name":"Announcing Dotty 0.22.0-RC1 - syntactic enhancements, type-level arithmetic and more","description":"","location":"blog/2020/02/05/22nd-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.22.0-RC1 - syntactic enhancements, type-level arithmetic and more"]},{"name":"def ^(x: Byte): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["^"]},{"name":"def asJava: A","description":"scala.collection.JavaConverters$$AsJava","location":"api/scala/collection/JavaConverters$$AsJava.html","searchKeys":["asJava"]},{"name":"trait JFunction2$mcJJI$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcJJI$sp","location":"api/scala/runtime/java8/JFunction2$mcJJI$sp.html","searchKeys":["JFunction2$mcJJI$sp"]},{"name":"val Seq: Seq","description":"scala","location":"api/scala.html","searchKeys":["Seq"]},{"name":"class Unrolled[T]","description":"scala.collection.mutable.UnrolledBuffer$$Unrolled","location":"api/scala/collection/mutable/UnrolledBuffer$$Unrolled.html","searchKeys":["Unrolled"]},{"name":"def unapply(x: OmitSelector): Some[String]","description":"scala.quoted.Quotes$reflectModule$OmitSelectorModule","location":"api/scala/quoted/Quotes$reflectModule$OmitSelectorModule.html","searchKeys":["unapply"]},{"name":"def asScala: Double => R","description":"scala.jdk.FunctionWrappers$$RichDoubleFunctionAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichDoubleFunctionAsFunction1.html","searchKeys":["asScala"]},{"name":"class AsJavaDoubleFunction[R](sf: Double => R) extends DoubleFunction[R]","description":"scala.jdk.FunctionWrappers$$AsJavaDoubleFunction","location":"api/scala/jdk/FunctionWrappers$$AsJavaDoubleFunction.html","searchKeys":["AsJavaDoubleFunction"]},{"name":"val ANNOTATION: 173","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["ANNOTATION"]},{"name":"given given_FromString_Byte: FromString[Byte]","description":"scala.util.CommandLineParser$$FromString$$given_FromString_Byte$","location":"api/scala/util/CommandLineParser$$FromString$$given_FromString_Byte$.html","searchKeys":["given_FromString_Byte"]},{"name":"trait Sum extends Mirror","description":"scala.deriving.Mirror$$Sum","location":"api/scala/deriving/Mirror$$Sum.html","searchKeys":["Sum"]},{"name":"TypeTest","description":"","location":"docs/reference/other-new-features/type-test.html","searchKeys":["TypeTest"]},{"name":"def /(x: Byte): Int","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["/"]},{"name":"def curried: T1 => T2 => T3 => T4 => T5 => T6 => R","description":"scala.Function6","location":"api/scala/Function6.html","searchKeys":["curried"]},{"name":"def <(x: Short): Boolean","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["<"]},{"name":"def mapInPlace(f: A => A): ListBuffer[A]","description":"scala.collection.mutable.ListBuffer","location":"api/scala/collection/mutable/ListBuffer.html","searchKeys":["mapInPlace"]},{"name":"class FromJavaToDoubleFunction[T](jf: ToDoubleFunction[T]) extends T => Double","description":"scala.jdk.FunctionWrappers$$FromJavaToDoubleFunction","location":"api/scala/jdk/FunctionWrappers$$FromJavaToDoubleFunction.html","searchKeys":["FromJavaToDoubleFunction"]},{"name":"def &(x: Short): Int","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["&"]},{"name":"Contextual Abstractions","description":"","location":"docs/Contextual Abstractions/index.html","searchKeys":["Contextual Abstractions"]},{"name":"def removeFirst(p: A => Boolean, from: Int): Option[A]","description":"scala.collection.mutable.ArrayDeque","location":"api/scala/collection/mutable/ArrayDeque.html","searchKeys":["removeFirst"]},{"name":"def scala$collection$SortedMap$$super$equals(o: Any): Boolean","description":"scala.collection.SortedMap","location":"api/scala/collection/SortedMap.html","searchKeys":["scala$collection$SortedMap$$super$equals"]},{"name":"def isSet: Boolean","description":"scala.sys.Prop","location":"api/scala/sys/Prop.html","searchKeys":["isSet"]},{"name":"val underlying: StringBuilder","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["underlying"]},{"name":"val INLINEPROXY: 16","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["INLINEPROXY"]},{"name":"def sortedMapFactory: SortedMapFactory[CC]","description":"scala.collection.SortedMapOps","location":"api/scala/collection/SortedMapOps.html","searchKeys":["sortedMapFactory"]},{"name":"def >>>(x: Long): Int","description":"scala.Char","location":"api/scala/Char.html","searchKeys":[">>>"]},{"name":"def get: T","description":"scala.util.Try","location":"api/scala/util/Try.html","searchKeys":["get"]},{"name":"def resources[R1, R2, R3, A](resource1: R1, resource2: => R2, resource3: => R3)(body: (R1, R2, R3) => A)(evidence$4: Releasable[R1], evidence$5: Releasable[R2], evidence$6: Releasable[R3]): A","description":"scala.util.Using$","location":"api/scala/util/Using$.html","searchKeys":["resources"]},{"name":"given PolyTypeMethods","description":"scala.quoted.Quotes$reflectModule$PolyTypeMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["PolyTypeMethods"]},{"name":"def asScala[A](l: List[A]): Buffer[A]","description":"scala.collection.convert.AsScalaConverters","location":"api/scala/collection/convert/AsScalaConverters.html","searchKeys":["asScala"]},{"name":"def valueOf(d: Double): BigDecimal","description":"scala.math.BigDecimal$","location":"api/scala/math/BigDecimal$.html","searchKeys":["valueOf"]},{"name":"trait Growable[-A] extends Clearable","description":"scala.collection.mutable.Growable","location":"api/scala/collection/mutable/Growable.html","searchKeys":["Growable"]},{"name":"def javaIterator[B >: Double]: OfDouble","description":"scala.collection.DoubleStepper","location":"api/scala/collection/DoubleStepper.html","searchKeys":["javaIterator"]},{"name":"class Slice[A](underlying: SomeIndexedSeqOps[A], from: Int, until: Int) extends AbstractIndexedSeqView[A]","description":"scala.collection.IndexedSeqView$$Slice","location":"api/scala/collection/IndexedSeqView$$Slice.html","searchKeys":["Slice"]},{"name":"def asScala: (Long, Long) => Long","description":"scala.jdk.FunctionWrappers$$RichLongBinaryOperatorAsFunction2","location":"api/scala/jdk/FunctionWrappers$$RichLongBinaryOperatorAsFunction2.html","searchKeys":["asScala"]},{"name":"def >=(x: Long): Boolean","description":"scala.Char","location":"api/scala/Char.html","searchKeys":[">="]},{"name":"val x$27: FromExpr[T13]","description":"scala.quoted.FromExpr$$Tuple14FromExpr","location":"api/scala/quoted/FromExpr$$Tuple14FromExpr.html","searchKeys":["x$27"]},{"name":"trait JFunction2$mcDIJ$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcDIJ$sp","location":"api/scala/runtime/java8/JFunction2$mcDIJ$sp.html","searchKeys":["JFunction2$mcDIJ$sp"]},{"name":"def seconds: FiniteDuration","description":"scala.concurrent.duration.DurationConversions","location":"api/scala/concurrent/duration/DurationConversions.html","searchKeys":["seconds"]},{"name":"def >>(x: Long): Int","description":"scala.Char","location":"api/scala/Char.html","searchKeys":[">>"]},{"name":"def length: Int","description":"scala.Predef$$ArrayCharSequence","location":"api/scala/Predef$$ArrayCharSequence.html","searchKeys":["length"]},{"name":"def ^(x: Long): Long","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["^"]},{"name":"object Int extends IntOrdering with CachedReverse[Int]","description":"scala.math.Ordering$$Int$","location":"api/scala/math/Ordering$$Int$.html","searchKeys":["Int"]},{"name":"def concat[T](xss: Array[T]*)(evidence$11: ClassTag[T]): Array[T]","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["concat"]},{"name":"def enrichAsScalaFromPredicate[T](jf: Predicate[T]): RichPredicateAsFunction1[T]","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsScalaFromPredicate"]},{"name":"class RichLongFunctionAsFunction1[R](underlying: LongFunction[R]) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichLongFunctionAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichLongFunctionAsFunction1.html","searchKeys":["RichLongFunctionAsFunction1"]},{"name":"def _13: T13","description":"scala.Product17","location":"api/scala/Product17.html","searchKeys":["_13"]},{"name":"def Erased: Flags","description":"scala.quoted.Quotes$reflectModule$FlagsModule","location":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html","searchKeys":["Erased"]},{"name":"object genericNumberLiterals","description":"scala.language$$experimental$$genericNumberLiterals$","location":"api/scala/language$$experimental$$genericNumberLiterals$.html","searchKeys":["genericNumberLiterals"]},{"name":"def asJavaToIntFunction: ToIntFunction[T]","description":"scala.jdk.FunctionWrappers$$RichFunction1AsToIntFunction","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsToIntFunction.html","searchKeys":["asJavaToIntFunction"]},{"name":"val x$17: Type[T17]","description":"scala.quoted.FromExpr$$Tuple21FromExpr","location":"api/scala/quoted/FromExpr$$Tuple21FromExpr.html","searchKeys":["x$17"]},{"name":"trait Function3[-T1, -T2, -T3, +R] extends AnyRef","description":"scala.Function3","location":"api/scala/Function3.html","searchKeys":["Function3"]},{"name":"class ListSet[A] extends AbstractSet[A] with StrictOptimizedSetOps[A, [A] =>> ListSet[A], ListSet[A]] with IterableFactoryDefaults[A, [A] =>> ListSet[A]] with DefaultSerializable","description":"scala.collection.immutable.ListSet","location":"api/scala/collection/immutable/ListSet.html","searchKeys":["ListSet"]},{"name":"class RichIntConsumerAsFunction1(underlying: IntConsumer) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichIntConsumerAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichIntConsumerAsFunction1.html","searchKeys":["RichIntConsumerAsFunction1"]},{"name":"def optManifest[T](m: OptManifest[T]): OptManifest[T]","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["optManifest"]},{"name":"def _1: T1","description":"scala.Product17","location":"api/scala/Product17.html","searchKeys":["_1"]},{"name":"def toSeq: Seq[B]","description":"scala.util.Either","location":"api/scala/util/Either.html","searchKeys":["toSeq"]},{"name":"def mapValues[W](f: V => W): MapView[K, W]","description":"scala.collection.MapOps","location":"api/scala/collection/MapOps.html","searchKeys":["mapValues"]},{"name":"def asJava[K, V](m: Map[K, V]): ConcurrentMap[K, V]","description":"scala.collection.convert.AsJavaConverters","location":"api/scala/collection/convert/AsJavaConverters.html","searchKeys":["asJava"]},{"name":"def map[A1](f: A => A1): Either[A1, B]","description":"scala.util.Either$$LeftProjection","location":"api/scala/util/Either$$LeftProjection.html","searchKeys":["map"]},{"name":"def lazyZip[B](that: Iterable[B]): LazyZip2[A, B, Iterable[A]]","description":"scala.collection.Iterable","location":"api/scala/collection/Iterable.html","searchKeys":["lazyZip"]},{"name":"def ==(x: Float): Boolean","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["=="]},{"name":"def fromZip[V](keys: Array[Long], values: Array[V]): LongMap[V]","description":"scala.collection.mutable.LongMap$","location":"api/scala/collection/mutable/LongMap$.html","searchKeys":["fromZip"]},{"name":"given SuperMethods","description":"scala.quoted.Quotes$reflectModule$SuperMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["SuperMethods"]},{"name":"class RichChar(val self: Char) extends AnyVal with IntegralProxy[Char]","description":"scala.runtime.RichChar","location":"api/scala/runtime/RichChar.html","searchKeys":["RichChar"]},{"name":"trait JFunction2$mcZII$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcZII$sp","location":"api/scala/runtime/java8/JFunction2$mcZII$sp.html","searchKeys":["JFunction2$mcZII$sp"]},{"name":"type MirroredLabel <: String","description":"scala.deriving.Mirror","location":"api/scala/deriving/Mirror.html","searchKeys":["MirroredLabel"]},{"name":"def anyStepperShape[T]: StepperShape[T, AnyStepper[T]]","description":"scala.collection.StepperShapeLowPriority1","location":"api/scala/collection/StepperShapeLowPriority1.html","searchKeys":["anyStepperShape"]},{"name":"def requiredMethod(path: String): Symbol","description":"scala.quoted.Quotes$reflectModule$SymbolModule","location":"api/scala/quoted/Quotes$reflectModule$SymbolModule.html","searchKeys":["requiredMethod"]},{"name":"def minute: FiniteDuration","description":"scala.concurrent.duration.DurationConversions","location":"api/scala/concurrent/duration/DurationConversions.html","searchKeys":["minute"]},{"name":"def _9: T9","description":"scala.Product9","location":"api/scala/Product9.html","searchKeys":["_9"]},{"name":"def toOption: Option[B]","description":"scala.util.Either$$RightProjection","location":"api/scala/util/Either$$RightProjection.html","searchKeys":["toOption"]},{"name":"val MINIMUM: -2147483648","description":"scala.annotation.elidable$","location":"api/scala/annotation/elidable$.html","searchKeys":["MINIMUM"]},{"name":"def initialize(value: Float): Float","description":"scala.runtime.LazyFloat","location":"api/scala/runtime/LazyFloat.html","searchKeys":["initialize"]},{"name":"def longValue: Long","description":"scala.runtime.ScalaNumberProxy","location":"api/scala/runtime/ScalaNumberProxy.html","searchKeys":["longValue"]},{"name":"val x$31: FromExpr[T10]","description":"scala.quoted.FromExpr$$Tuple21FromExpr","location":"api/scala/quoted/FromExpr$$Tuple21FromExpr.html","searchKeys":["x$31"]},{"name":"def memberMethods: List[Symbol]","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["memberMethods"]},{"name":"val Printer: PrinterModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Printer"]},{"name":"def microseconds[C](c: C)(ev: Classifier[C]): R","description":"scala.concurrent.duration.DurationConversions","location":"api/scala/concurrent/duration/DurationConversions.html","searchKeys":["microseconds"]},{"name":"def iterator: Iterator[(K, V)]","description":"scala.collection.MapView$$Id","location":"api/scala/collection/MapView$$Id.html","searchKeys":["iterator"]},{"name":"def >(x: Char): Boolean","description":"scala.Double","location":"api/scala/Double.html","searchKeys":[">"]},{"name":"def setCharAt(index: Int, ch: Char): StringBuilder","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["setCharAt"]},{"name":"def iterableFactory: IterableFactory[[A] =>> Iterable[A]]","description":"scala.collection.Iterable","location":"api/scala/collection/Iterable.html","searchKeys":["iterableFactory"]},{"name":"def apply[This >: NonEmptyTuple <: NonEmptyTuple](n: Int): Elem[This, n]","description":"scala.NonEmptyTuple","location":"api/scala/NonEmptyTuple.html","searchKeys":["apply"]},{"name":"def +(x: Byte): Float","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["+"]},{"name":"def round(x: Double): Long","description":"scala.math","location":"api/scala/math.html","searchKeys":["round"]},{"name":"class IterableOnceExtensionMethods[A](it: IterableOnce[A]) extends AnyVal","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["IterableOnceExtensionMethods"]},{"name":"def minus(x: Long, y: Long): Long","description":"scala.math.Numeric$$LongIsIntegral","location":"api/scala/math/Numeric$$LongIsIntegral.html","searchKeys":["minus"]},{"name":"def tupled: (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) => R","description":"scala.Function17","location":"api/scala/Function17.html","searchKeys":["tupled"]},{"name":"def >>(x: Int): Int","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":[">>"]},{"name":"def fromString(s: String): Int","description":"scala.util.CommandLineParser$$FromString$$given_FromString_Int$","location":"api/scala/util/CommandLineParser$$FromString$$given_FromString_Int$.html","searchKeys":["fromString"]},{"name":"class AsJavaDoubleSupplier(sf: () => Double) extends DoubleSupplier","description":"scala.jdk.FunctionWrappers$$AsJavaDoubleSupplier","location":"api/scala/jdk/FunctionWrappers$$AsJavaDoubleSupplier.html","searchKeys":["AsJavaDoubleSupplier"]},{"name":"object IndexedBuffer extends Delegate[[A] =>> IndexedBuffer[A]]","description":"scala.collection.mutable.IndexedBuffer$","location":"api/scala/collection/mutable/IndexedBuffer$.html","searchKeys":["IndexedBuffer"]},{"name":"def exists(@deprecatedName(\"f\", \"2.13.3\") p: A => Boolean): Boolean","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["exists"]},{"name":"class CollisionProofHashMap[K, V](initialCapacity: Int, loadFactor: Double)(ordering: Ordering[K]) extends AbstractMap[K, V] with MapOps[K, V, [K, V] =>> Map[K, V], CollisionProofHashMap[K, V]] with StrictOptimizedIterableOps[(K, V), [A] =>> Iterable[A], CollisionProofHashMap[K, V]] with StrictOptimizedMapOps[K, V, [K, V] =>> Map[K, V], CollisionProofHashMap[K, V]]","description":"scala.collection.mutable.CollisionProofHashMap","location":"api/scala/collection/mutable/CollisionProofHashMap.html","searchKeys":["CollisionProofHashMap"]},{"name":"val length: Long","description":"scala.concurrent.duration.FiniteDuration","location":"api/scala/concurrent/duration/FiniteDuration.html","searchKeys":["length"]},{"name":"type Ident <: Ref","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Ident"]},{"name":"def error(msg: String): Unit","description":"scala.quoted.Quotes$reflectModule$reportModule","location":"api/scala/quoted/Quotes$reflectModule$reportModule.html","searchKeys":["error"]},{"name":"def unapply(x: Expr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19)])(using Quotes): Option[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19)]","description":"scala.quoted.FromExpr$$Tuple19FromExpr","location":"api/scala/quoted/FromExpr$$Tuple19FromExpr.html","searchKeys":["unapply"]},{"name":"def unary_~: Int","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["unary_~"]},{"name":"val UNIQUE: 10","description":"dotty.tools.tasty.TastyFormat$$NameTags","location":"api/dotty/tools/tasty/TastyFormat$$NameTags.html","searchKeys":["UNIQUE"]},{"name":"def scan[B >: A](z: B)(op: (B, B) => B): CC[B]","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["scan"]},{"name":"def endLine: Int","description":"scala.quoted.Quotes$reflectModule$PositionMethods","location":"api/scala/quoted/Quotes$reflectModule$PositionMethods.html","searchKeys":["endLine"]},{"name":"def _11: T11","description":"scala.Product11","location":"api/scala/Product11.html","searchKeys":["_11"]},{"name":"def withFilter(p: A => Boolean): WithFilter[A, CC]","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["withFilter"]},{"name":"def compare(that: BigInt): Int","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["compare"]},{"name":"Announcing Dotty 0.16.0-RC3 – the Scala Days 2019 Release","description":"","location":"blog/2019/06/11/16th-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.16.0-RC3 – the Scala Days 2019 Release"]},{"name":"def _8: T8","description":"scala.Product8","location":"api/scala/Product8.html","searchKeys":["_8"]},{"name":"val x$8: Type[T8]","description":"scala.quoted.FromExpr$$Tuple14FromExpr","location":"api/scala/quoted/FromExpr$$Tuple14FromExpr.html","searchKeys":["x$8"]},{"name":"object Short extends Equiv[Short]","description":"scala.math.Equiv$$Short$","location":"api/scala/math/Equiv$$Short$.html","searchKeys":["Short"]},{"name":"def startsWith[B >: A](that: IterableOnce[B], offset: Int): Boolean","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["startsWith"]},{"name":"Dropped: Weak Conformance - More Details","description":"","location":"docs/reference/dropped-features/weak-conformance-spec.html","searchKeys":["Dropped: Weak Conformance - More Details"]},{"name":"def reader(): InputStreamReader","description":"scala.io.BufferedSource","location":"api/scala/io/BufferedSource.html","searchKeys":["reader"]},{"name":"class Tuple13[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13](_1: T1, _2: T2, _3: T3, _4: T4, _5: T5, _6: T6, _7: T7, _8: T8, _9: T9, _10: T10, _11: T11, _12: T12, _13: T13) extends Product13[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13]","description":"scala.Tuple13","location":"api/scala/Tuple13.html","searchKeys":["Tuple13"]},{"name":"def <=(x: Long): Boolean","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["<="]},{"name":"trait NullConstantModule","description":"scala.quoted.Quotes$reflectModule$NullConstantModule","location":"api/scala/quoted/Quotes$reflectModule$NullConstantModule.html","searchKeys":["NullConstantModule"]},{"name":"def update(idx: Long, elem: A): Unit","description":"scala.jdk.AnyAccumulator","location":"api/scala/jdk/AnyAccumulator.html","searchKeys":["update"]},{"name":"object DoubleProp extends CreatorImpl[Double]","description":"scala.sys.Prop$$DoubleProp$","location":"api/scala/sys/Prop$$DoubleProp$.html","searchKeys":["DoubleProp"]},{"name":"def tpe: TypeRepr","description":"scala.quoted.Quotes$reflectModule$TypeTreeMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeTreeMethods.html","searchKeys":["tpe"]},{"name":"def empty[A]: CC[A]","description":"scala.collection.ClassTagIterableFactory$$AnyIterableDelegate","location":"api/scala/collection/ClassTagIterableFactory$$AnyIterableDelegate.html","searchKeys":["empty"]},{"name":"val TypeBoundsTree: TypeBoundsTreeModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeBoundsTree"]},{"name":"def flatMap[B](f: A => IterableOnce[B])(evidence$30: ClassTag[B]): Array[B]","description":"scala.collection.ArrayOps$$WithFilter","location":"api/scala/collection/ArrayOps$$WithFilter.html","searchKeys":["flatMap"]},{"name":"trait JFunction1$mcZD$sp extends Any => Any with Serializable","description":"scala.runtime.java8.JFunction1$mcZD$sp","location":"api/scala/runtime/java8/JFunction1$mcZD$sp.html","searchKeys":["JFunction1$mcZD$sp"]},{"name":"type Numeric[T] = Numeric[T]","description":"scala","location":"api/scala.html","searchKeys":["Numeric"]},{"name":"val untagged: SeqFactory[[T] =>> ArraySeq[T]]","description":"scala.collection.mutable.ArraySeq$","location":"api/scala/collection/mutable/ArraySeq$.html","searchKeys":["untagged"]},{"name":"def !: Int","description":"scala.sys.process.ProcessBuilder","location":"api/scala/sys/process/ProcessBuilder.html","searchKeys":["!"]},{"name":"def *(x: Byte): Float","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["*"]},{"name":"trait TypeBoundsTreeModule","description":"scala.quoted.Quotes$reflectModule$TypeBoundsTreeModule","location":"api/scala/quoted/Quotes$reflectModule$TypeBoundsTreeModule.html","searchKeys":["TypeBoundsTreeModule"]},{"name":"def value: Double","description":"scala.runtime.LazyDouble","location":"api/scala/runtime/LazyDouble.html","searchKeys":["value"]},{"name":"def _16: T16","description":"scala.Product22","location":"api/scala/Product22.html","searchKeys":["_16"]},{"name":"def ==(x: Char): Boolean","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["=="]},{"name":"def lift: A => Option[B]","description":"scala.PartialFunction","location":"api/scala/PartialFunction.html","searchKeys":["lift"]},{"name":"def substring(start: Int): String","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["substring"]},{"name":"def iteratorFrom(start: K): Iterator[(K, V)]","description":"scala.collection.SortedMapOps","location":"api/scala/collection/SortedMapOps.html","searchKeys":["iteratorFrom"]},{"name":"object #::","description":"scala.package$$#::$","location":"api/scala/package$$#::$.html","searchKeys":["#::"]},{"name":"given BigIntFromDigits: WithRadix[BigInt]","description":"scala.util.FromDigits$$BigIntFromDigits$","location":"api/scala/util/FromDigits$.html","searchKeys":["BigIntFromDigits"]},{"name":"object IndexedSeq extends Delegate[[T] =>> IndexedSeq[T]]","description":"scala.collection.mutable.IndexedSeq$","location":"api/scala/collection/mutable/IndexedSeq$.html","searchKeys":["IndexedSeq"]},{"name":"def <<(x: Int): Int","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["<<"]},{"name":"trait StrictEquiv extends Equiv[Float]","description":"scala.math.Equiv$$Float$$StrictEquiv","location":"api/scala/math/Equiv$$Float$$StrictEquiv.html","searchKeys":["StrictEquiv"]},{"name":"given MapFromExpr[T, U](using val x$1: Type[T], val x$2: Type[U], val x$3: FromExpr[T], val x$4: FromExpr[U]): FromExpr[Map[T, U]]","description":"scala.quoted.FromExpr$$MapFromExpr","location":"api/scala/quoted/FromExpr$.html","searchKeys":["MapFromExpr"]},{"name":"def /(x: Long): Float","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["/"]},{"name":"def int2bigInt(i: Int): BigInt","description":"scala.math.BigInt$","location":"api/scala/math/BigInt$.html","searchKeys":["int2bigInt"]},{"name":"given ParamClauseMethods","description":"scala.quoted.Quotes$reflectModule$ParamClauseMethods","location":"api/scala/quoted/Quotes$reflectModule$ParamClauseMethods.html","searchKeys":["ParamClauseMethods"]},{"name":"def apply(parent: TypeRepr, name: String, info: TypeRepr): Refinement","description":"scala.quoted.Quotes$reflectModule$RefinementModule","location":"api/scala/quoted/Quotes$reflectModule$RefinementModule.html","searchKeys":["apply"]},{"name":"def zip[B](that: IterableOnce[B]): CC[(A, B)]","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["zip"]},{"name":"class CompletionStageOps[T](cs: CompletionStage[T]) extends AnyVal","description":"scala.jdk.FutureConverters$$CompletionStageOps","location":"api/scala/jdk/FutureConverters$$CompletionStageOps.html","searchKeys":["CompletionStageOps"]},{"name":"val x$19: FromExpr[T8]","description":"scala.quoted.FromExpr$$Tuple11FromExpr","location":"api/scala/quoted/FromExpr$$Tuple11FromExpr.html","searchKeys":["x$19"]},{"name":"val x$5: Type[T5]","description":"scala.quoted.FromExpr$$Tuple6FromExpr","location":"api/scala/quoted/FromExpr$$Tuple6FromExpr.html","searchKeys":["x$5"]},{"name":"def empty[A]: View[A]","description":"scala.collection.View$","location":"api/scala/collection/View$.html","searchKeys":["empty"]},{"name":"def scala$collection$BitSetOps$$super$min[B >: Int](ord: Ordering[B]): Int","description":"scala.collection.BitSetOps","location":"api/scala/collection/BitSetOps.html","searchKeys":["scala$collection$BitSetOps$$super$min"]},{"name":"def negate(x: Long): Long","description":"scala.math.Numeric$$LongIsIntegral","location":"api/scala/math/Numeric$$LongIsIntegral.html","searchKeys":["negate"]},{"name":"class DurationInt(n: Int) extends AnyVal with DurationConversions","description":"scala.concurrent.duration.package$$DurationInt","location":"api/scala/concurrent/duration/package$$DurationInt.html","searchKeys":["DurationInt"]},{"name":"class RichFunction0AsLongSupplier(underlying: () => Long) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichFunction0AsLongSupplier","location":"api/scala/jdk/FunctionWrappers$$RichFunction0AsLongSupplier.html","searchKeys":["RichFunction0AsLongSupplier"]},{"name":"val Flags: FlagsModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Flags"]},{"name":"val Short: ShortManifest","description":"scala.reflect.ManifestFactory$","location":"api/scala/reflect/ManifestFactory$.html","searchKeys":["Short"]},{"name":"def size: Int","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["size"]},{"name":"val empty: ValueSet","description":"scala.Enumeration$ValueSet$","location":"api/scala/Enumeration$ValueSet$.html","searchKeys":["empty"]},{"name":"def wait4Notification(t: Object, offset: Long, cur: Long, ord: Int): Unit","description":"scala.runtime.LazyVals$","location":"api/scala/runtime/LazyVals$.html","searchKeys":["wait4Notification"]},{"name":"val firstASTTreeTag: 90","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["firstASTTreeTag"]},{"name":"object Map extends Delegate[[K, V] =>> Map[K, V]]","description":"scala.collection.Map$","location":"api/scala/collection/Map$.html","searchKeys":["Map"]},{"name":"val x$12: Type[T12]","description":"scala.quoted.FromExpr$$Tuple14FromExpr","location":"api/scala/quoted/FromExpr$$Tuple14FromExpr.html","searchKeys":["x$12"]},{"name":"def test(x1: Int): Boolean","description":"scala.jdk.FunctionWrappers$$AsJavaIntPredicate","location":"api/scala/jdk/FunctionWrappers$$AsJavaIntPredicate.html","searchKeys":["test"]},{"name":"class Delegate[CC <: ([_$17] =>> Any)](delegate: IterableFactory[CC]) extends IterableFactory[CC]","description":"scala.collection.IterableFactory$$Delegate","location":"api/scala/collection/IterableFactory$$Delegate.html","searchKeys":["Delegate"]},{"name":"trait Function11[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, +R] extends AnyRef","description":"scala.Function11","location":"api/scala/Function11.html","searchKeys":["Function11"]},{"name":"def clear(): Unit","description":"scala.collection.mutable.ArrayDeque","location":"api/scala/collection/mutable/ArrayDeque.html","searchKeys":["clear"]},{"name":"def to(end: Int): Inclusive","description":"scala.runtime.RichInt","location":"api/scala/runtime/RichInt.html","searchKeys":["to"]},{"name":"type IsTraversableLike[Repr] = IsIterable[Repr]","description":"scala.collection.generic","location":"api/scala/collection/generic.html","searchKeys":["IsTraversableLike"]},{"name":"def ||(x: Boolean): Boolean","description":"scala.Boolean","location":"api/scala/Boolean.html","searchKeys":["||"]},{"name":"given Tuple12FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12](using val x$1: Type[T1], val x$2: Type[T2], val x$3: Type[T3], val x$4: Type[T4], val x$5: Type[T5], val x$6: Type[T6], val x$7: Type[T7], val x$8: Type[T8], val x$9: Type[T9], val x$10: Type[T10], val x$11: Type[T11], val x$12: Type[T12], val x$13: FromExpr[T1], val x$14: FromExpr[T2], val x$15: FromExpr[T3], val x$16: FromExpr[T4], val x$17: FromExpr[T5], val x$18: FromExpr[T6], val x$19: FromExpr[T7], val x$20: FromExpr[T8], val x$21: FromExpr[T9], val x$22: FromExpr[T10], val x$23: FromExpr[T11], val x$24: FromExpr[T12]): FromExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)]","description":"scala.quoted.FromExpr$$Tuple12FromExpr","location":"api/scala/quoted/FromExpr$$Tuple12FromExpr.html","searchKeys":["Tuple12FromExpr"]},{"name":"IDE support for Dotty","description":"","location":"docs/usage/ide-support.html","searchKeys":["IDE support for Dotty"]},{"name":"given ClassDefTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ClassDefTypeTest"]},{"name":"def result(): List[A]","description":"scala.collection.mutable.ListBuffer","location":"api/scala/collection/mutable/ListBuffer.html","searchKeys":["result"]},{"name":"given ShortToExpr[T <: Short]: ToExpr[T]","description":"scala.quoted.ToExpr$$ShortToExpr","location":"api/scala/quoted/ToExpr$$ShortToExpr.html","searchKeys":["ShortToExpr"]},{"name":"class NotGiven[+T]","description":"scala.util.NotGiven","location":"api/scala/util/NotGiven.html","searchKeys":["NotGiven"]},{"name":"def >=(size: Int): Boolean","description":"scala.collection.IterableOps$$SizeCompareOps","location":"api/scala/collection/IterableOps$$SizeCompareOps.html","searchKeys":[">="]},{"name":"given AppliedTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["AppliedTypeTest"]},{"name":"val x$1: Type[T1]","description":"scala.quoted.FromExpr$$Tuple2FromExpr","location":"api/scala/quoted/FromExpr$$Tuple2FromExpr.html","searchKeys":["x$1"]},{"name":"given NewTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["NewTypeTest"]},{"name":"def toBigInt: BigInt","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["toBigInt"]},{"name":"type >[X <: Int, Y <: Int] <: Boolean","description":"scala.compiletime.ops.int$","location":"api/scala/compiletime/ops/int$.html","searchKeys":[">"]},{"name":"def <(x: Float): Boolean","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["<"]},{"name":"Polymorphic Function Types","description":"","location":"docs/reference/new-types/polymorphic-function-types.html","searchKeys":["Polymorphic Function Types"]},{"name":"def takeWhile(p: Char => Boolean): String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["takeWhile"]},{"name":"def asJavaSeqKeyStream[S <: BaseStream[, ], St <: Stepper[]](s: StreamShape[K, S, St], st: StepperShape[K, St]): S","description":"scala.collection.convert.StreamExtensions$MapHasSeqKeyValueStream","location":"api/scala/collection/convert/StreamExtensions$MapHasSeqKeyValueStream.html","searchKeys":["asJavaSeqKeyStream"]},{"name":"given PackageClauseMethods","description":"scala.quoted.Quotes$reflectModule$PackageClauseMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["PackageClauseMethods"]},{"name":"Scala3doc-specific Tags and Features","description":"","location":"docs/usage/scala3doc/specificTags.html","searchKeys":["Scala3doc-specific Tags and Features"]},{"name":"def foreachKey[U](f: Long => U): Unit","description":"scala.collection.immutable.LongMap","location":"api/scala/collection/immutable/LongMap.html","searchKeys":["foreachKey"]},{"name":"def defaultInitialCapacity: Int","description":"scala.collection.mutable.CollisionProofHashMap$","location":"api/scala/collection/mutable/CollisionProofHashMap$.html","searchKeys":["defaultInitialCapacity"]},{"name":"val SHAREDterm: 60","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["SHAREDterm"]},{"name":"def matchData: Iterator[Match]","description":"scala.util.matching.Regex$$MatchIterator","location":"api/scala/util/matching/Regex$$MatchIterator.html","searchKeys":["matchData"]},{"name":"def _12: T12","description":"scala.Product14","location":"api/scala/Product14.html","searchKeys":["_12"]},{"name":"def +(x: Byte): Int","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["+"]},{"name":"def subtractOne(elem: K): WithDefault[K, V]","description":"scala.collection.mutable.Map$$WithDefault","location":"api/scala/collection/mutable/Map$$WithDefault.html","searchKeys":["subtractOne"]},{"name":"def asJava: DoubleSupplier","description":"scala.jdk.FunctionWrappers$$RichFunction0AsDoubleSupplier","location":"api/scala/jdk/FunctionWrappers$$RichFunction0AsDoubleSupplier.html","searchKeys":["asJava"]},{"name":"def apply(tup: (T1, T2, T3, T4))(using Quotes): Expr[(T1, T2, T3, T4)]","description":"scala.quoted.ToExpr$$Tuple4ToExpr","location":"api/scala/quoted/ToExpr$$Tuple4ToExpr.html","searchKeys":["apply"]},{"name":"def enrichAsScalaFromIntToDoubleFunction(jf: IntToDoubleFunction): RichIntToDoubleFunctionAsFunction1","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsScalaFromIntToDoubleFunction"]},{"name":"def apply(key: K): V","description":"scala.collection.MapOps","location":"api/scala/collection/MapOps.html","searchKeys":["apply"]},{"name":"def max(rhs: T): T","description":"scala.math.Ordering$OrderingOps","location":"api/scala/math/Ordering$OrderingOps.html","searchKeys":["max"]},{"name":"def asJavaDictionary: Dictionary[K, V]","description":"scala.collection.convert.AsJavaExtensions$MutableMapHasAsJava","location":"api/scala/collection/convert/AsJavaExtensions$MutableMapHasAsJava.html","searchKeys":["asJavaDictionary"]},{"name":"def _7: T7","description":"scala.Product17","location":"api/scala/Product17.html","searchKeys":["_7"]},{"name":"def -(x: Char): Double","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["-"]},{"name":"def toFactory[A, C](sa: Accumulator)(canAccumulate: AccumulatorFactoryShape[A, C]): Factory[A, C]","description":"scala.jdk.Accumulator$","location":"api/scala/jdk/Accumulator$.html","searchKeys":["toFactory"]},{"name":"trait ByteOrdering extends Ordering[Byte]","description":"scala.math.Ordering$$ByteOrdering","location":"api/scala/math/Ordering$$ByteOrdering.html","searchKeys":["ByteOrdering"]},{"name":"def newBuilder: Builder[Char, WrappedString]","description":"scala.collection.immutable.WrappedString$","location":"api/scala/collection/immutable/WrappedString$.html","searchKeys":["newBuilder"]},{"name":"def appliedTo(arg: Term): Term","description":"scala.quoted.Quotes$reflectModule$TermMethods","location":"api/scala/quoted/Quotes$reflectModule$TermMethods.html","searchKeys":["appliedTo"]},{"name":"given AlternativesMethods","description":"scala.quoted.Quotes$reflectModule$AlternativesMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["AlternativesMethods"]},{"name":"def apply(idx: Int): T","description":"scala.collection.mutable.UnrolledBuffer","location":"api/scala/collection/mutable/UnrolledBuffer.html","searchKeys":["apply"]},{"name":"trait Product9[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9] extends Product","description":"scala.Product9","location":"api/scala/Product9.html","searchKeys":["Product9"]},{"name":"def !=(x: Char): Boolean","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["!="]},{"name":"given SummonFromMethods","description":"scala.quoted.Quotes$reflectModule$SummonFromMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["SummonFromMethods"]},{"name":"def millis[C](c: C)(ev: Classifier[C]): R","description":"scala.concurrent.duration.DurationConversions","location":"api/scala/concurrent/duration/DurationConversions.html","searchKeys":["millis"]},{"name":"trait PolyTypeModule","description":"scala.quoted.Quotes$reflectModule$PolyTypeModule","location":"api/scala/quoted/Quotes$reflectModule$PolyTypeModule.html","searchKeys":["PolyTypeModule"]},{"name":"class ofDouble(val unsafeArray: Array[Double]) extends ArraySeq[Double]","description":"scala.collection.immutable.ArraySeq$$ofDouble","location":"api/scala/collection/immutable/ArraySeq$$ofDouble.html","searchKeys":["ofDouble"]},{"name":"def fromDigits(digits: String): BigDecimal","description":"scala.util.FromDigits$$BigDecimalFromDigits$","location":"api/scala/util/FromDigits$$BigDecimalFromDigits$.html","searchKeys":["fromDigits"]},{"name":"def print(x: Any): Unit","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["print"]},{"name":"class Random(val self: Random) extends Serializable","description":"scala.util.Random","location":"api/scala/util/Random.html","searchKeys":["Random"]},{"name":"def _21: T21","description":"scala.Product21","location":"api/scala/Product21.html","searchKeys":["_21"]},{"name":"def asScalaFromLongPredicate(jf: LongPredicate): Long => Boolean","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asScalaFromLongPredicate"]},{"name":"object Filter","description":"scala.collection.View$$Filter$","location":"api/scala/collection/View$$Filter$.html","searchKeys":["Filter"]},{"name":"val x$10: FromExpr[T3]","description":"scala.quoted.FromExpr$$Tuple7FromExpr","location":"api/scala/quoted/FromExpr$$Tuple7FromExpr.html","searchKeys":["x$10"]},{"name":"def scalb(f: Float, scaleFactor: Int): Float","description":"scala.math","location":"api/scala/math.html","searchKeys":["scalb"]},{"name":"given AnnotatedTypeTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["AnnotatedTypeTypeTest"]},{"name":"val x$2: Type[T2]","description":"scala.quoted.FromExpr$$Tuple15FromExpr","location":"api/scala/quoted/FromExpr$$Tuple15FromExpr.html","searchKeys":["x$2"]},{"name":"def ==(x: Float): Boolean","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["=="]},{"name":"val MUTABLE: 25","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["MUTABLE"]},{"name":"val ParamRef: ParamRefModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ParamRef"]},{"name":"def until(end: T): Exclusive[T]","description":"scala.runtime.IntegralProxy","location":"api/scala/runtime/IntegralProxy.html","searchKeys":["until"]},{"name":"class RichFunction1AsDoubleConsumer(underlying: Double => Unit) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichFunction1AsDoubleConsumer","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsDoubleConsumer.html","searchKeys":["RichFunction1AsDoubleConsumer"]},{"name":"def translucentSuperType: TypeRepr","description":"scala.quoted.Quotes$reflectModule$TypeRefMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeRefMethods.html","searchKeys":["translucentSuperType"]},{"name":"def insert(index: Int, x: Boolean): StringBuilder","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["insert"]},{"name":"val codec: Codec","description":"scala.io.BufferedSource","location":"api/scala/io/BufferedSource.html","searchKeys":["codec"]},{"name":"trait SeqOps[+A, +CC <: ([_$1] =>> Any), +C] extends SeqOps[A, CC, C]","description":"scala.collection.immutable.SeqOps","location":"api/scala/collection/immutable/SeqOps.html","searchKeys":["SeqOps"]},{"name":"object HashSet extends IterableFactory[[A] =>> HashSet[A]]","description":"scala.collection.mutable.HashSet$","location":"api/scala/collection/mutable/HashSet$.html","searchKeys":["HashSet"]},{"name":"def single[A](a: A): Iterable[A]","description":"scala.collection.Iterable$","location":"api/scala/collection/Iterable$.html","searchKeys":["single"]},{"name":"def unapply[T1, T2, T3, T4, T5, T6, T7, T8, T9](x: Product9[T1, T2, T3, T4, T5, T6, T7, T8, T9]): Option[Product9[T1, T2, T3, T4, T5, T6, T7, T8, T9]]","description":"scala.Product9$","location":"api/scala/Product9$.html","searchKeys":["unapply"]},{"name":"given ShortFromExpr","description":"scala.quoted.FromExpr$","location":"api/scala/quoted/FromExpr$.html","searchKeys":["ShortFromExpr"]},{"name":"type *[X <: Int, Y <: Int] <: Int","description":"scala.compiletime.ops.int$","location":"api/scala/compiletime/ops/int$.html","searchKeys":["*"]},{"name":"Multiversal Equality for Scala","description":"","location":"blog/2016/05/05/multiversal-equality.html","searchKeys":["Multiversal Equality for Scala"]},{"name":"def appendedAll[B >: Char](suffix: IterableOnce[B]): IndexedSeq[B]","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["appendedAll"]},{"name":"var nextName: Iterator[String]","description":"scala.Enumeration","location":"api/scala/Enumeration.html","searchKeys":["nextName"]},{"name":"def scala$collection$BitSetOps$$super$diff(that: Set[Int]): C","description":"scala.collection.BitSetOps","location":"api/scala/collection/BitSetOps.html","searchKeys":["scala$collection$BitSetOps$$super$diff"]},{"name":"def !=(x: Byte): Boolean","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["!="]},{"name":"def arraycopy(src: AnyRef, srcPos: Int, dest: AnyRef, destPos: Int, length: Int): Unit","description":"scala.compat.Platform$","location":"api/scala/compat/Platform$.html","searchKeys":["arraycopy"]},{"name":"def +(x: String): String","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["+"]},{"name":"val Traversable: Iterable","description":"scala.collection.immutable","location":"api/scala/collection/immutable.html","searchKeys":["Traversable"]},{"name":"def toIArray(self: Tuple): IArray[Object]","description":"scala.runtime.Tuples$","location":"api/scala/runtime/Tuples$.html","searchKeys":["toIArray"]},{"name":"trait WithRadix[T] extends FromDigits[T]","description":"scala.util.FromDigits$$WithRadix","location":"api/scala/util/FromDigits$$WithRadix.html","searchKeys":["WithRadix"]},{"name":"def apply[T](xs: T*)(evidence$5: ClassTag[T]): Array[T]","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["apply"]},{"name":"class RichFunctionAsFunction1[T, R](underlying: Function[T, R]) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichFunctionAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichFunctionAsFunction1.html","searchKeys":["RichFunctionAsFunction1"]},{"name":"def toShortOption: Option[Short]","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["toShortOption"]},{"name":"Dropped: Existential Types","description":"","location":"docs/reference/dropped-features/existential-types.html","searchKeys":["Dropped: Existential Types"]},{"name":"Talks","description":"","location":"docs/resources/talks.html","searchKeys":["Talks"]},{"name":"type TimeUnit = TimeUnit","description":"scala.concurrent.duration","location":"api/scala/concurrent/duration.html","searchKeys":["TimeUnit"]},{"name":"val companion: AnyRef","description":"scala.collection.convert.StreamExtensions$$AccumulatorFactoryInfo","location":"api/scala/collection/convert/StreamExtensions$$AccumulatorFactoryInfo.html","searchKeys":["companion"]},{"name":"def view: View[A]","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["view"]},{"name":"def ++=(s: String): StringBuilder","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["++="]},{"name":"package scala.compiletime","description":"scala.compiletime","location":"api/scala/compiletime.html","searchKeys":["scala.compiletime"]},{"name":"def natSize(nat: Int): Int","description":"dotty.tools.tasty.TastyBuffer$","location":"api/dotty/tools/tasty/TastyBuffer$.html","searchKeys":["natSize"]},{"name":"def length: Int","description":"scala.collection.mutable.ArraySeq$$ofLong","location":"api/scala/collection/mutable/ArraySeq$$ofLong.html","searchKeys":["length"]},{"name":"given BindTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["BindTypeTest"]},{"name":"def countLong(p: Long => Boolean): Long","description":"scala.jdk.LongAccumulator","location":"api/scala/jdk/LongAccumulator.html","searchKeys":["countLong"]},{"name":"def nextLong(n: Long): Long","description":"scala.util.Random","location":"api/scala/util/Random.html","searchKeys":["nextLong"]},{"name":"def apply(tup: (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11))(using Quotes): Expr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)]","description":"scala.quoted.ToExpr$$Tuple11ToExpr","location":"api/scala/quoted/ToExpr$$Tuple11ToExpr.html","searchKeys":["apply"]},{"name":"trait TermParamClauseModule","description":"scala.quoted.Quotes$reflectModule$TermParamClauseModule","location":"api/scala/quoted/Quotes$reflectModule$TermParamClauseModule.html","searchKeys":["TermParamClauseModule"]},{"name":"val Ref: RefModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Ref"]},{"name":"def floatArrayOps(xs: Array[Float]): ArrayOps[Float]","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["floatArrayOps"]},{"name":"object SortedMap extends Delegate[[K, V] =>> SortedMap[K, V]]","description":"scala.collection.SortedMap$","location":"api/scala/collection/SortedMap$.html","searchKeys":["SortedMap"]},{"name":"val Term: TermModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Term"]},{"name":"def apply(x: Int): IntConstant","description":"scala.quoted.Quotes$reflectModule$IntConstantModule","location":"api/scala/quoted/Quotes$reflectModule$IntConstantModule.html","searchKeys":["apply"]},{"name":"val x$31: FromExpr[T13]","description":"scala.quoted.FromExpr$$Tuple18FromExpr","location":"api/scala/quoted/FromExpr$$Tuple18FromExpr.html","searchKeys":["x$31"]},{"name":"val x$24: FromExpr[T2]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["x$24"]},{"name":"val Nothing: ClassTag[Nothing]","description":"scala.reflect.ClassTag$","location":"api/scala/reflect/ClassTag$.html","searchKeys":["Nothing"]},{"name":"object 3.1-migration","description":"scala.language$$3.1-migration$","location":"api/scala/language$$3/1-migration$.html","searchKeys":["3.1-migration"]},{"name":"given ConstantTypeTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ConstantTypeTypeTest"]},{"name":"Test Vulpix Framework","description":"","location":"docs/contributing/procedures/vulpix.html","searchKeys":["Test Vulpix Framework"]},{"name":"def Sealed: Flags","description":"scala.quoted.Quotes$reflectModule$FlagsModule","location":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html","searchKeys":["Sealed"]},{"name":"trait StrictOptimizedMapOps[K, +V, +CC <: ([X, Y] =>> MapOps[X, Y, CC, ]), +C <: MapOps[K, V, CC, C]] extends MapOps[K, V, CC, C] with StrictOptimizedMapOps[K, V, CC, C] with StrictOptimizedIterableOps[(K, V), [A] =>> Iterable[A], C]","description":"scala.collection.immutable.StrictOptimizedMapOps","location":"api/scala/collection/immutable/StrictOptimizedMapOps.html","searchKeys":["StrictOptimizedMapOps"]},{"name":"object ShortIsIntegral extends ShortIsIntegral with ShortOrdering","description":"scala.math.Numeric$$ShortIsIntegral$","location":"api/scala/math/Numeric$$ShortIsIntegral$.html","searchKeys":["ShortIsIntegral"]},{"name":"def traverse[A, B, M <: ([X] =>> IterableOnce[X])](in: M[A])(fn: A => Future[B])(bf: BuildFrom[M[A], B, M[B]], executor: ExecutionContext): Future[M[B]]","description":"scala.concurrent.Future$","location":"api/scala/concurrent/Future$.html","searchKeys":["traverse"]},{"name":"def contains(elem: A): Boolean","description":"scala.collection.immutable.ListSet","location":"api/scala/collection/immutable/ListSet.html","searchKeys":["contains"]},{"name":"def apply(bitlength: Int, certainty: Int, rnd: Random): BigInt","description":"scala.math.BigInt$","location":"api/scala/math/BigInt$.html","searchKeys":["apply"]},{"name":"type ExecutionException = ExecutionException","description":"scala.concurrent","location":"api/scala/concurrent.html","searchKeys":["ExecutionException"]},{"name":"def withFilter(p: A => Boolean): Iterator[A]","description":"scala.collection.Iterator","location":"api/scala/collection/Iterator.html","searchKeys":["withFilter"]},{"name":"val Apply: ApplyModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Apply"]},{"name":"def apply$mcVDD$sp(v1: Double, v2: Double): Unit","description":"scala.runtime.java8.JFunction2$mcVDD$sp","location":"api/scala/runtime/java8/JFunction2$mcVDD$sp.html","searchKeys":["apply$mcVDD$sp"]},{"name":"val WrappedArray: ArraySeq","description":"scala.collection.mutable","location":"api/scala/collection/mutable.html","searchKeys":["WrappedArray"]},{"name":"def enqueue(): Boolean","description":"scala.ref.Reference","location":"api/scala/ref/Reference.html","searchKeys":["enqueue"]},{"name":"def capacity: Int","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["capacity"]},{"name":"val x$4: Type[T4]","description":"scala.quoted.FromExpr$$Tuple8FromExpr","location":"api/scala/quoted/FromExpr$$Tuple8FromExpr.html","searchKeys":["x$4"]},{"name":"def result(): Array[Long]","description":"scala.collection.mutable.ArrayBuilder$$ofLong","location":"api/scala/collection/mutable/ArrayBuilder$$ofLong.html","searchKeys":["result"]},{"name":"type Catcher[+T] = PartialFunction[Throwable, T]","description":"scala.util.control.Exception$","location":"api/scala/util/control/Exception$.html","searchKeys":["Catcher"]},{"name":"def enrichAsJavaIntUnaryOperator[A0](sf: A0 => Int)(evA0: A0 =:= Int): RichFunction1AsIntUnaryOperator","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsJavaIntUnaryOperator"]},{"name":"def sortWith[T](f: (T, T) => Boolean): IArray[T]","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["sortWith"]},{"name":"def applyAsInt(x1: T, x2: U): Int","description":"scala.jdk.FunctionWrappers$$AsJavaToIntBiFunction","location":"api/scala/jdk/FunctionWrappers$$AsJavaToIntBiFunction.html","searchKeys":["applyAsInt"]},{"name":"def appliedToTypeTrees(targs: List[TypeTree]): Term","description":"scala.quoted.Quotes$reflectModule$TermMethods","location":"api/scala/quoted/Quotes$reflectModule$TermMethods.html","searchKeys":["appliedToTypeTrees"]},{"name":"def zip(t1: Tuple, t2: Tuple): Tuple","description":"scala.runtime.Tuples$","location":"api/scala/runtime/Tuples$.html","searchKeys":["zip"]},{"name":"def <(x: Int): Boolean","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["<"]},{"name":"class Delegate[C <: ([_$28, _$29] =>> Any)](delegate: MapFactory[C]) extends MapFactory[C]","description":"scala.collection.MapFactory$$Delegate","location":"api/scala/collection/MapFactory$$Delegate.html","searchKeys":["Delegate"]},{"name":"def &&(x: Boolean): Boolean","description":"scala.Boolean","location":"api/scala/Boolean.html","searchKeys":["&&"]},{"name":"given BigDecimalFromDigits: Floating[BigDecimal]","description":"scala.util.FromDigits$$BigDecimalFromDigits$","location":"api/scala/util/FromDigits$.html","searchKeys":["BigDecimalFromDigits"]},{"name":"def reference[T <: AnyRef]: Equiv[T]","description":"scala.math.Equiv$","location":"api/scala/math/Equiv$.html","searchKeys":["reference"]},{"name":"def asJavaParIntStreamFromShort(cc: IterableOnce[Short]): IntStream","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaParIntStreamFromShort"]},{"name":"def newBuilder[K, V]: Builder[(K, V), HashMap[K, V]]","description":"scala.collection.mutable.HashMap$","location":"api/scala/collection/mutable/HashMap$.html","searchKeys":["newBuilder"]},{"name":"def unapplySeq(c: Char): Option[List[Char]]","description":"scala.util.matching.Regex","location":"api/scala/util/matching/Regex.html","searchKeys":["unapplySeq"]},{"name":"def empty[K, V]: SeqMap[K, V]","description":"scala.collection.immutable.SeqMap$","location":"api/scala/collection/immutable/SeqMap$.html","searchKeys":["empty"]},{"name":"def asScala: Buffer[A]","description":"scala.collection.convert.AsScalaExtensions$ListHasAsScala","location":"api/scala/collection/convert/AsScalaExtensions$ListHasAsScala.html","searchKeys":["asScala"]},{"name":"object Empty extends Stream[Nothing]","description":"scala.collection.immutable.Stream$$Empty$","location":"api/scala/collection/immutable/Stream$$Empty$.html","searchKeys":["Empty"]},{"name":"def isAbstractType: Boolean","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["isAbstractType"]},{"name":"def flags: Flags","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["flags"]},{"name":"def >(x: Char): Boolean","description":"scala.Int","location":"api/scala/Int.html","searchKeys":[">"]},{"name":"def ofSeqDoubleStepper(st: DoubleStepper): AnyStepper[Double]","description":"scala.collection.AnyStepper$","location":"api/scala/collection/AnyStepper$.html","searchKeys":["ofSeqDoubleStepper"]},{"name":"def compare(a: FiniteDuration, b: FiniteDuration): Int","description":"scala.concurrent.duration.FiniteDuration$$FiniteDurationIsOrdered$","location":"api/scala/concurrent/duration/FiniteDuration$$FiniteDurationIsOrdered$.html","searchKeys":["compare"]},{"name":"def estimateSize: Long","description":"scala.collection.Stepper","location":"api/scala/collection/Stepper.html","searchKeys":["estimateSize"]},{"name":"type ^[X <: Int, Y <: Int] <: Int","description":"scala.compiletime.ops.int$","location":"api/scala/compiletime/ops/int$.html","searchKeys":["^"]},{"name":"def >=(x: Float): Boolean","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":[">="]},{"name":"object Prop","description":"scala.sys.Prop$","location":"api/scala/sys/Prop$.html","searchKeys":["Prop"]},{"name":"def _19: T19","description":"scala.Product20","location":"api/scala/Product20.html","searchKeys":["_19"]},{"name":"given MatchCaseMethods","description":"scala.quoted.Quotes$reflectModule$MatchCaseMethods","location":"api/scala/quoted/Quotes$reflectModule$MatchCaseMethods.html","searchKeys":["MatchCaseMethods"]},{"name":"object languageFeature","description":"scala.languageFeature$","location":"api/scala/languageFeature$.html","searchKeys":["languageFeature"]},{"name":"trait Quotes","description":"scala.quoted.Quotes","location":"api/scala/quoted/Quotes.html","searchKeys":["Quotes"]},{"name":"def apply(i: Int): Char","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["apply"]},{"name":"given BigIntToExpr: ToExpr[BigInt]","description":"scala.quoted.ToExpr$$BigIntToExpr$","location":"api/scala/quoted/ToExpr$.html","searchKeys":["BigIntToExpr"]},{"name":"given MatchTypeTreeMethods","description":"scala.quoted.Quotes$reflectModule$MatchTypeTreeMethods","location":"api/scala/quoted/Quotes$reflectModule$MatchTypeTreeMethods.html","searchKeys":["MatchTypeTreeMethods"]},{"name":"given TupleConsToExpr[H, T <: Tuple]: ToExpr[H *: T]","description":"scala.quoted.ToExpr$$TupleConsToExpr","location":"api/scala/quoted/ToExpr$$TupleConsToExpr.html","searchKeys":["TupleConsToExpr"]},{"name":"def map(f: Int => Int): IntAccumulator","description":"scala.jdk.IntAccumulator","location":"api/scala/jdk/IntAccumulator.html","searchKeys":["map"]},{"name":"def _17: T17","description":"scala.Product18","location":"api/scala/Product18.html","searchKeys":["_17"]},{"name":"def pipe[B](f: A => B): B","description":"scala.util.ChainingOps","location":"api/scala/util/ChainingOps.html","searchKeys":["pipe"]},{"name":"val x$36: FromExpr[T17]","description":"scala.quoted.FromExpr$$Tuple19FromExpr","location":"api/scala/quoted/FromExpr$$Tuple19FromExpr.html","searchKeys":["x$36"]},{"name":"Classpaths","description":"","location":"docs/internals/classpaths.html","searchKeys":["Classpaths"]},{"name":"object NoManifest extends OptManifest[Nothing] with Serializable","description":"scala.reflect.NoManifest$","location":"api/scala/reflect/NoManifest$.html","searchKeys":["NoManifest"]},{"name":"class RichFunction2AsBiConsumer[T, U](underlying: (T, U) => Unit) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichFunction2AsBiConsumer","location":"api/scala/jdk/FunctionWrappers$$RichFunction2AsBiConsumer.html","searchKeys":["RichFunction2AsBiConsumer"]},{"name":"def apply(idx: Int): B","description":"scala.collection.SeqView$$Map","location":"api/scala/collection/SeqView$$Map.html","searchKeys":["apply"]},{"name":"type Constant <: AnyRef","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Constant"]},{"name":"def /(x: Char): Int","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["/"]},{"name":"class AbstractFunction11[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, +R] extends (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) => R","description":"scala.runtime.AbstractFunction11","location":"api/scala/runtime/AbstractFunction11.html","searchKeys":["AbstractFunction11"]},{"name":"def update(idx: Int, elem: A): Unit","description":"scala.collection.mutable.ListBuffer","location":"api/scala/collection/mutable/ListBuffer.html","searchKeys":["update"]},{"name":"class FromJavaObjIntConsumer[T](jf: ObjIntConsumer[T]) extends (T, Int) => Unit","description":"scala.jdk.FunctionWrappers$$FromJavaObjIntConsumer","location":"api/scala/jdk/FunctionWrappers$$FromJavaObjIntConsumer.html","searchKeys":["FromJavaObjIntConsumer"]},{"name":"val x$25: FromExpr[T12]","description":"scala.quoted.FromExpr$$Tuple13FromExpr","location":"api/scala/quoted/FromExpr$$Tuple13FromExpr.html","searchKeys":["x$25"]},{"name":"def iterator: Iterator[(K, V)]","description":"scala.collection.immutable.HashMap","location":"api/scala/collection/immutable/HashMap.html","searchKeys":["iterator"]},{"name":"trait SortedMap[K, V] extends SortedMap[K, V] with Map[K, V] with SortedMapOps[K, V, [K, V] =>> SortedMap[K, V], SortedMap[K, V]] with SortedMapFactoryDefaults[K, V, [K, V] =>> SortedMap[K, V], [A] =>> Iterable[A], [K, V] =>> Map[K, V]]","description":"scala.collection.mutable.SortedMap","location":"api/scala/collection/mutable/SortedMap.html","searchKeys":["SortedMap"]},{"name":"type IsMappedBy[F <: ([_$8] =>> Any)] = [X <: Tuple] =>> X =:= Map[InverseMap[X, F], F]","description":"scala.Tuple$","location":"api/scala/Tuple$.html","searchKeys":["IsMappedBy"]},{"name":"def filter[B1](p: A => Boolean): Option[Either[A, B1]]","description":"scala.util.Either$$LeftProjection","location":"api/scala/util/Either$$LeftProjection.html","searchKeys":["filter"]},{"name":"val x$3: Type[T3]","description":"scala.quoted.FromExpr$$Tuple17FromExpr","location":"api/scala/quoted/FromExpr$$Tuple17FromExpr.html","searchKeys":["x$3"]},{"name":"def contains(v: Value): Boolean","description":"scala.Enumeration$ValueSet","location":"api/scala/Enumeration$ValueSet.html","searchKeys":["contains"]},{"name":"class RichToDoubleFunctionAsFunction1[T](underlying: ToDoubleFunction[T]) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichToDoubleFunctionAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichToDoubleFunctionAsFunction1.html","searchKeys":["RichToDoubleFunctionAsFunction1"]},{"name":"val x$16: Type[T16]","description":"scala.quoted.FromExpr$$Tuple20FromExpr","location":"api/scala/quoted/FromExpr$$Tuple20FromExpr.html","searchKeys":["x$16"]},{"name":"given RefinedTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["RefinedTypeTest"]},{"name":"def endsWith[B >: A](that: Array[B]): Boolean","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["endsWith"]},{"name":"def >(x: Float): Boolean","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":[">"]},{"name":"val underlying: SomeIterableOps[A]","description":"scala.collection.View$$Filter","location":"api/scala/collection/View$$Filter.html","searchKeys":["underlying"]},{"name":"def flatMap[B, To](f: (El1, El2, El3) => IterableOnce[B])(bf: BuildFrom[It1, B, To]): To","description":"scala.runtime.Tuple3Zipped","location":"api/scala/runtime/Tuple3Zipped.html","searchKeys":["flatMap"]},{"name":"def nextFloat(): Float","description":"scala.util.Random","location":"api/scala/util/Random.html","searchKeys":["nextFloat"]},{"name":"def dropInPlace(n: Int): Buffer[A]","description":"scala.collection.mutable.Buffer","location":"api/scala/collection/mutable/Buffer.html","searchKeys":["dropInPlace"]},{"name":"def widen: TypeRepr","description":"scala.quoted.Quotes$reflectModule$TypeReprMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html","searchKeys":["widen"]},{"name":"def value: Term","description":"scala.quoted.Quotes$reflectModule$NamedArgMethods","location":"api/scala/quoted/Quotes$reflectModule$NamedArgMethods.html","searchKeys":["value"]},{"name":"def <(x: Long): Boolean","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["<"]},{"name":"def implicits: List[Term]","description":"scala.quoted.Quotes$reflectModule$UnapplyMethods","location":"api/scala/quoted/Quotes$reflectModule$UnapplyMethods.html","searchKeys":["implicits"]},{"name":"class deprecatedName(name: String, since: String) extends StaticAnnotation","description":"scala.deprecatedName","location":"api/scala/deprecatedName.html","searchKeys":["deprecatedName"]},{"name":"def >(x: Byte): Boolean","description":"scala.Double","location":"api/scala/Double.html","searchKeys":[">"]},{"name":"def reverseIterator: Iterator[A]","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["reverseIterator"]},{"name":"val defaultApplyPreferredMaxLength: Int","description":"scala.collection.immutable.IndexedSeqDefaults$","location":"api/scala/collection/immutable/IndexedSeqDefaults$.html","searchKeys":["defaultApplyPreferredMaxLength"]},{"name":"def this()","description":"scala.collection.mutable.LongMap","location":"api/scala/collection/mutable/LongMap.html","searchKeys":["this"]},{"name":"def iterator: Iterator[B]","description":"scala.collection.View$$FlatMap","location":"api/scala/collection/View$$FlatMap.html","searchKeys":["iterator"]},{"name":"def enrichAsScalaFromBiPredicate[T, U](jf: BiPredicate[T, U]): RichBiPredicateAsFunction2[T, U]","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsScalaFromBiPredicate"]},{"name":"given Tuple3ToExpr[T1, T2, T3]: ToExpr[(T1, T2, T3)]","description":"scala.quoted.ToExpr$$Tuple3ToExpr","location":"api/scala/quoted/ToExpr$.html","searchKeys":["Tuple3ToExpr"]},{"name":"def /:[B](z: B)(op: (B, A) => B): B","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["/:"]},{"name":"def singleton[T](key: Int, value: T): IntMap[T]","description":"scala.collection.immutable.IntMap$","location":"api/scala/collection/immutable/IntMap$.html","searchKeys":["singleton"]},{"name":"def !=(x: Long): Boolean","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["!="]},{"name":"val x$19: FromExpr[T2]","description":"scala.quoted.FromExpr$$Tuple17FromExpr","location":"api/scala/quoted/FromExpr$$Tuple17FromExpr.html","searchKeys":["x$19"]},{"name":"val METHODtype: 180","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["METHODtype"]},{"name":"val OFF: 2147483647","description":"scala.annotation.elidable$","location":"api/scala/annotation/elidable$.html","searchKeys":["OFF"]},{"name":"class Ops[T1, T2](x: (T1, T2)) extends AnyVal","description":"scala.runtime.Tuple2Zipped$$Ops","location":"api/scala/runtime/Tuple2Zipped$$Ops.html","searchKeys":["Ops"]},{"name":"val x$10: FromExpr[T1]","description":"scala.quoted.FromExpr$$Tuple9FromExpr","location":"api/scala/quoted/FromExpr$$Tuple9FromExpr.html","searchKeys":["x$10"]},{"name":"def unapply(x: PolyType): (List[String], List[TypeBounds], TypeRepr)","description":"scala.quoted.Quotes$reflectModule$PolyTypeModule","location":"api/scala/quoted/Quotes$reflectModule$PolyTypeModule.html","searchKeys":["unapply"]},{"name":"given Tuple19ToExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19]: ToExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19)]","description":"scala.quoted.ToExpr$$Tuple19ToExpr","location":"api/scala/quoted/ToExpr$.html","searchKeys":["Tuple19ToExpr"]},{"name":"given SingletonMethods","description":"scala.quoted.Quotes$reflectModule$SingletonMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["SingletonMethods"]},{"name":"trait Process","description":"scala.sys.process.Process","location":"api/scala/sys/process/Process.html","searchKeys":["Process"]},{"name":"def newBuilder[A]: Builder[A, CC[A]]","description":"scala.collection.SeqFactory$$Delegate","location":"api/scala/collection/SeqFactory$$Delegate.html","searchKeys":["newBuilder"]},{"name":"def *(d: FiniteDuration): FiniteDuration","description":"scala.concurrent.duration.package$$LongMult","location":"api/scala/concurrent/duration/package$$LongMult.html","searchKeys":["*"]},{"name":"def asJava: Map[K, V]","description":"scala.collection.convert.AsJavaExtensions$MutableMapHasAsJava","location":"api/scala/collection/convert/AsJavaExtensions$MutableMapHasAsJava.html","searchKeys":["asJava"]},{"name":"def tail(self: NonEmptyTuple): Tuple","description":"scala.runtime.Tuples$","location":"api/scala/runtime/Tuples$.html","searchKeys":["tail"]},{"name":"val array: Array[Long]","description":"scala.collection.mutable.ArraySeq$$ofLong","location":"api/scala/collection/mutable/ArraySeq$$ofLong.html","searchKeys":["array"]},{"name":"def append(x: Any): StringBuilder","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["append"]},{"name":"def make[T](x: Array[T]): ArraySeq[T]","description":"scala.collection.mutable.ArraySeq$","location":"api/scala/collection/mutable/ArraySeq$.html","searchKeys":["make"]},{"name":"def startsWith[T](that: IArray[U], offset: Int)(evidence$12: ClassTag[U]): Boolean","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["startsWith"]},{"name":"class UninitializedError extends RuntimeException","description":"scala.UninitializedError","location":"api/scala/UninitializedError.html","searchKeys":["UninitializedError"]},{"name":"def unbox(x: Object): Short","description":"scala.Short$","location":"api/scala/Short$.html","searchKeys":["unbox"]},{"name":"def asJava[A](b: Buffer[A]): List[A]","description":"scala.collection.convert.AsJavaConverters","location":"api/scala/collection/convert/AsJavaConverters.html","searchKeys":["asJava"]},{"name":"trait JFunction2$mcFJD$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcFJD$sp","location":"api/scala/runtime/java8/JFunction2$mcFJD$sp.html","searchKeys":["JFunction2$mcFJD$sp"]},{"name":"def length: Int","description":"scala.collection.immutable.ArraySeq$$ofBoolean","location":"api/scala/collection/immutable/ArraySeq$$ofBoolean.html","searchKeys":["length"]},{"name":"def ==(x: Short): Boolean","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["=="]},{"name":"def equiv(x: String, y: String): Boolean","description":"scala.math.Equiv$$String$","location":"api/scala/math/Equiv$$String$.html","searchKeys":["equiv"]},{"name":"val INFO: 800","description":"scala.annotation.elidable$","location":"api/scala/annotation/elidable$.html","searchKeys":["INFO"]},{"name":"def asScalaFromLongUnaryOperator(jf: LongUnaryOperator): Long => Long","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asScalaFromLongUnaryOperator"]},{"name":"def firstKey: Long","description":"scala.collection.immutable.LongMap","location":"api/scala/collection/immutable/LongMap.html","searchKeys":["firstKey"]},{"name":"def apply[A](hd: A, tl: => Stream[A]): Stream[A]","description":"scala.collection.immutable.Stream$$cons$","location":"api/scala/collection/immutable/Stream$$cons$.html","searchKeys":["apply"]},{"name":"def equiv(x: Unit, y: Unit): Boolean","description":"scala.math.Equiv$$Unit$","location":"api/scala/math/Equiv$$Unit$.html","searchKeys":["equiv"]},{"name":"object OptionShape","description":"scala.jdk.OptionShape$","location":"api/scala/jdk/OptionShape$.html","searchKeys":["OptionShape"]},{"name":"def floatValue: Float","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["floatValue"]},{"name":"def >>(x: Long): Int","description":"scala.Int","location":"api/scala/Int.html","searchKeys":[">>"]},{"name":"def unapply[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21](x: Product21[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21]): Option[Product21[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21]]","description":"scala.Product21$","location":"api/scala/Product21$.html","searchKeys":["unapply"]},{"name":"def readLongNat(): Long","description":"dotty.tools.tasty.TastyReader","location":"api/dotty/tools/tasty/TastyReader.html","searchKeys":["readLongNat"]},{"name":"def toFloat: Float","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["toFloat"]},{"name":"def withClose(f: () => Unit): Source","description":"scala.io.Source","location":"api/scala/io/Source.html","searchKeys":["withClose"]},{"name":"val Definition: DefinitionModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Definition"]},{"name":"def comparatorToOrdering[A](cmp: Comparator[A]): Ordering[A]","description":"scala.math.LowPriorityOrderingImplicits","location":"api/scala/math/LowPriorityOrderingImplicits.html","searchKeys":["comparatorToOrdering"]},{"name":"def floorDiv(x: Int, y: Int): Int","description":"scala.math","location":"api/scala/math.html","searchKeys":["floorDiv"]},{"name":"def <(x: Float): Boolean","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["<"]},{"name":"def asJavaToIntFunction[T](sf: T => Integer): ToIntFunction[T]","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asJavaToIntFunction"]},{"name":"trait Function0[@specialized +R] extends AnyRef","description":"scala.Function0","location":"api/scala/Function0.html","searchKeys":["Function0"]},{"name":"class Prepended[+A](elem: A, underlying: SomeSeqOps[A]) extends Prepended[A] with SeqView[A]","description":"scala.collection.SeqView$$Prepended","location":"api/scala/collection/SeqView$$Prepended.html","searchKeys":["Prepended"]},{"name":"val x$4: Type[T4]","description":"scala.quoted.FromExpr$$Tuple10FromExpr","location":"api/scala/quoted/FromExpr$$Tuple10FromExpr.html","searchKeys":["x$4"]},{"name":"def orderedHashing: Hashing[IterableOnce[Any]]","description":"scala.util.hashing.MurmurHash3$","location":"api/scala/util/hashing/MurmurHash3$.html","searchKeys":["orderedHashing"]},{"name":"def asScala: (T, Int) => Unit","description":"scala.jdk.FunctionWrappers$$RichObjIntConsumerAsFunction2","location":"api/scala/jdk/FunctionWrappers$$RichObjIntConsumerAsFunction2.html","searchKeys":["asScala"]},{"name":"trait ReturnModule","description":"scala.quoted.Quotes$reflectModule$ReturnModule","location":"api/scala/quoted/Quotes$reflectModule$ReturnModule.html","searchKeys":["ReturnModule"]},{"name":"def enrichAsScalaFromLongSupplier(jf: LongSupplier): RichLongSupplierAsFunction0","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsScalaFromLongSupplier"]},{"name":"object Sorting","description":"scala.util.Sorting$","location":"api/scala/util/Sorting$.html","searchKeys":["Sorting"]},{"name":"def apply$mcVID$sp(v1: Int, v2: Double): Unit","description":"scala.runtime.java8.JFunction2$mcVID$sp","location":"api/scala/runtime/java8/JFunction2$mcVID$sp.html","searchKeys":["apply$mcVID$sp"]},{"name":"val x$22: FromExpr[T1]","description":"scala.quoted.FromExpr$$Tuple21FromExpr","location":"api/scala/quoted/FromExpr$$Tuple21FromExpr.html","searchKeys":["x$22"]},{"name":"trait ThisTypeModule","description":"scala.quoted.Quotes$reflectModule$ThisTypeModule","location":"api/scala/quoted/Quotes$reflectModule$ThisTypeModule.html","searchKeys":["ThisTypeModule"]},{"name":"object Product20","description":"scala.Product20$","location":"api/scala/Product20$.html","searchKeys":["Product20"]},{"name":"def Iterable[T](ord: Ordering[T]): Ordering[Iterable[T]]","description":"scala.math.Ordering$","location":"api/scala/math/Ordering$.html","searchKeys":["Iterable"]},{"name":"def equiv(x: Float, y: Float): Boolean","description":"scala.math.Equiv$$Float$$StrictEquiv","location":"api/scala/math/Equiv$$Float$$StrictEquiv.html","searchKeys":["equiv"]},{"name":"def mapInPlace(f: A => A): IndexedSeqOps[A, CC, C]","description":"scala.collection.mutable.IndexedSeqOps","location":"api/scala/collection/mutable/IndexedSeqOps.html","searchKeys":["mapInPlace"]},{"name":"def collectFirst[B](pf: PartialFunction[A, B]): Option[B]","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["collectFirst"]},{"name":"def !=(x: Int): Boolean","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["!="]},{"name":"def enrichAsJavaLongToDoubleFunction[A0](sf: A0 => Double)(evA0: A0 =:= Long): RichFunction1AsLongToDoubleFunction","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsJavaLongToDoubleFunction"]},{"name":"def ==(x: Byte): Boolean","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["=="]},{"name":"val x$1: Type[T]","description":"scala.quoted.FromExpr$$SomeFromExpr","location":"api/scala/quoted/FromExpr$$SomeFromExpr.html","searchKeys":["x$1"]},{"name":"def minus(x: T, y: T): T","description":"scala.math.Numeric","location":"api/scala/math/Numeric.html","searchKeys":["minus"]},{"name":"def enrichAsJavaToDoubleBiFunction[T, U](sf: (T, U) => Double): RichFunction2AsToDoubleBiFunction[T, U]","description":"scala.jdk.Priority2FunctionExtensions","location":"api/scala/jdk/Priority2FunctionExtensions.html","searchKeys":["enrichAsJavaToDoubleBiFunction"]},{"name":"object NonFatal","description":"scala.util.control.NonFatal$","location":"api/scala/util/control/NonFatal$.html","searchKeys":["NonFatal"]},{"name":"def |(x: Short): Int","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["|"]},{"name":"def >(x: Byte): Boolean","description":"scala.Char","location":"api/scala/Char.html","searchKeys":[">"]},{"name":"def toScala(o: OptionalLong): Option[Long]","description":"scala.jdk.javaapi.OptionConverters$","location":"api/scala/jdk/javaapi/OptionConverters$.html","searchKeys":["toScala"]},{"name":"def _8: T8","description":"scala.Product17","location":"api/scala/Product17.html","searchKeys":["_8"]},{"name":"def newBuilder[K, V]: GrowableBuilder[(K, V), TrieMap[K, V]]","description":"scala.collection.concurrent.TrieMap$","location":"api/scala/collection/concurrent/TrieMap$.html","searchKeys":["newBuilder"]},{"name":"val x$17: FromExpr[T1]","description":"scala.quoted.FromExpr$$Tuple16FromExpr","location":"api/scala/quoted/FromExpr$$Tuple16FromExpr.html","searchKeys":["x$17"]},{"name":"def _2: T2","description":"scala.Product4","location":"api/scala/Product4.html","searchKeys":["_2"]},{"name":"def maxId: Int","description":"scala.Enumeration","location":"api/scala/Enumeration.html","searchKeys":["maxId"]},{"name":"val FloatShape: Shape","description":"scala.collection.StepperShape$","location":"api/scala/collection/StepperShape$.html","searchKeys":["FloatShape"]},{"name":"def concat[B >: A](suffix: IterableOnce[B]): CC[B]","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["concat"]},{"name":"def codeOf(arg: Any): String","description":"scala.compiletime","location":"api/scala/compiletime.html","searchKeys":["codeOf"]},{"name":"def apply(i: Int): Char","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["apply"]},{"name":"def apply(x1: Double): Long","description":"scala.jdk.FunctionWrappers$$FromJavaDoubleToLongFunction","location":"api/scala/jdk/FunctionWrappers$$FromJavaDoubleToLongFunction.html","searchKeys":["apply"]},{"name":"object Factory","description":"scala.collection.Factory$","location":"api/scala/collection/Factory$.html","searchKeys":["Factory"]},{"name":"def iterator: Iterator[(K, V)]","description":"scala.collection.mutable.ListMap","location":"api/scala/collection/mutable/ListMap.html","searchKeys":["iterator"]},{"name":"def empty[K, V]: VectorMap[K, V]","description":"scala.collection.immutable.VectorMap$","location":"api/scala/collection/immutable/VectorMap$.html","searchKeys":["empty"]},{"name":"def |(x: Long): Long","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["|"]},{"name":"def transformTerm(tree: Term)(owner: Symbol): Term","description":"scala.quoted.Quotes$reflectModule$TreeMap","location":"api/scala/quoted/Quotes$reflectModule$TreeMap.html","searchKeys":["transformTerm"]},{"name":"def decode(name0: String): String","description":"scala.reflect.NameTransformer$","location":"api/scala/reflect/NameTransformer$.html","searchKeys":["decode"]},{"name":"def id: Int","description":"scala.Enumeration$Val","location":"api/scala/Enumeration$Val.html","searchKeys":["id"]},{"name":"def tabulate[T](n1: Int, n2: Int, n3: Int, n4: Int, n5: Int)(f: (Int, Int, Int, Int, Int) => T)(evidence$27: ClassTag[T]): IArray[IArray[IArray[IArray[IArray[T]]]]]","description":"scala.IArray$package$$IArray$","location":"api/scala/IArray$package$$IArray$.html","searchKeys":["tabulate"]},{"name":"def segmentLength(p: A => Boolean, from: Int): Int","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["segmentLength"]},{"name":"val getOffset: \"getOffset\"","description":"scala.runtime.LazyVals$$Names$","location":"api/scala/runtime/LazyVals$$Names$.html","searchKeys":["getOffset"]},{"name":"given TypeCaseDefTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeCaseDefTypeTest"]},{"name":"def fromRawBytes(bytes: Array[Byte]): Source","description":"scala.io.Source$","location":"api/scala/io/Source$.html","searchKeys":["fromRawBytes"]},{"name":"given FlagsMethods","description":"scala.quoted.Quotes$reflectModule$FlagsMethods","location":"api/scala/quoted/Quotes$reflectModule$FlagsMethods.html","searchKeys":["FlagsMethods"]},{"name":"def /(that: BigInt): BigInt","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["/"]},{"name":"def newBuilder[K <: AnyRef, V]: ReusableBuilder[(K, V), AnyRefMap[K, V]]","description":"scala.collection.mutable.AnyRefMap$","location":"api/scala/collection/mutable/AnyRefMap$.html","searchKeys":["newBuilder"]},{"name":"trait RefiningAnnotation extends StaticAnnotation","description":"scala.annotation.RefiningAnnotation","location":"api/scala/annotation/RefiningAnnotation.html","searchKeys":["RefiningAnnotation"]},{"name":"def _1: T1","description":"scala.Product3","location":"api/scala/Product3.html","searchKeys":["_1"]},{"name":"def unapply(tree: If): (Term, Term, Term)","description":"scala.quoted.Quotes$reflectModule$IfModule","location":"api/scala/quoted/Quotes$reflectModule$IfModule.html","searchKeys":["unapply"]},{"name":"def apply(i: Int): Char","description":"scala.collection.immutable.ArraySeq$$ofChar","location":"api/scala/collection/immutable/ArraySeq$$ofChar.html","searchKeys":["apply"]},{"name":"given EmptyTupleFromExpr: FromExpr[EmptyTuple]","description":"scala.quoted.FromExpr$$EmptyTupleFromExpr$","location":"api/scala/quoted/FromExpr$.html","searchKeys":["EmptyTupleFromExpr"]},{"name":"val index: Int","description":"scala.StringContext$$InvalidEscapeException","location":"api/scala/StringContext$$InvalidEscapeException.html","searchKeys":["index"]},{"name":"def length_=(n: Int): Unit","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["length_="]},{"name":"val x$10: Type[T10]","description":"scala.quoted.FromExpr$$Tuple16FromExpr","location":"api/scala/quoted/FromExpr$$Tuple16FromExpr.html","searchKeys":["x$10"]},{"name":"def to(end: Int, step: Int): Inclusive","description":"scala.runtime.RichInt","location":"api/scala/runtime/RichInt.html","searchKeys":["to"]},{"name":"def isRight: Boolean","description":"scala.util.Right","location":"api/scala/util/Right.html","searchKeys":["isRight"]},{"name":"def equiv(x: Int, y: Int): Boolean","description":"scala.math.Equiv$$Int$","location":"api/scala/math/Equiv$$Int$.html","searchKeys":["equiv"]},{"name":"object Expr","description":"scala.quoted.Expr$","location":"api/scala/quoted/Expr$.html","searchKeys":["Expr"]},{"name":"class FilterKeys[K, +V](underlying: SomeMapOps[K, V], p: K => Boolean) extends AbstractMapView[K, V]","description":"scala.collection.MapView$$FilterKeys","location":"api/scala/collection/MapView$$FilterKeys.html","searchKeys":["FilterKeys"]},{"name":"def map[B](f: A => B)(evidence$1: Ordering[B]): CC[B]","description":"scala.collection.SortedSetOps$$WithFilter","location":"api/scala/collection/SortedSetOps$$WithFilter.html","searchKeys":["map"]},{"name":"def empty[K, V]: LinkedHashMap[K, V]","description":"scala.collection.mutable.LinkedHashMap$","location":"api/scala/collection/mutable/LinkedHashMap$.html","searchKeys":["empty"]},{"name":"def newBind(parent: Symbol, name: String, flags: Flags, tpe: TypeRepr): Symbol","description":"scala.quoted.Quotes$reflectModule$SymbolModule","location":"api/scala/quoted/Quotes$reflectModule$SymbolModule.html","searchKeys":["newBind"]},{"name":"def apply(builder: JProcessBuilder): ProcessBuilder","description":"scala.sys.process.ProcessCreation","location":"api/scala/sys/process/ProcessCreation.html","searchKeys":["apply"]},{"name":"val Annotated: AnnotatedModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Annotated"]},{"name":"def copy(original: Tree)(tpt: TypeTree, refinements: List[Definition]): Refined","description":"scala.quoted.Quotes$reflectModule$RefinedModule","location":"api/scala/quoted/Quotes$reflectModule$RefinedModule.html","searchKeys":["copy"]},{"name":"def #<(f: URL): ProcessBuilder","description":"scala.sys.process.ProcessBuilder$$Sink","location":"api/scala/sys/process/ProcessBuilder$$Sink.html","searchKeys":["#<"]},{"name":"given StatementTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["StatementTypeTest"]},{"name":"def asJavaDoubleFunction[R](sf: Double => R): DoubleFunction[R]","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asJavaDoubleFunction"]},{"name":"given OptionFromExpr[T](using val x$1: Type[T], val x$2: FromExpr[T]): FromExpr[Option[T]]","description":"scala.quoted.FromExpr$$OptionFromExpr","location":"api/scala/quoted/FromExpr$.html","searchKeys":["OptionFromExpr"]},{"name":"given ArrayOfShortToExpr: ToExpr[Array[Short]]","description":"scala.quoted.ToExpr$$ArrayOfShortToExpr$","location":"api/scala/quoted/ToExpr$.html","searchKeys":["ArrayOfShortToExpr"]},{"name":"def subtractOne(elem: K): HashMap[K, V]","description":"scala.collection.mutable.HashMap","location":"api/scala/collection/mutable/HashMap.html","searchKeys":["subtractOne"]},{"name":"def hasNext: Boolean","description":"scala.io.Source$LineIterator","location":"api/scala/io/Source$LineIterator.html","searchKeys":["hasNext"]},{"name":"def this()","description":"scala.collection.mutable.BitSet","location":"api/scala/collection/mutable/BitSet.html","searchKeys":["this"]},{"name":"def apply$mcIJD$sp(v1: Long, v2: Double): Int","description":"scala.runtime.java8.JFunction2$mcIJD$sp","location":"api/scala/runtime/java8/JFunction2$mcIJD$sp.html","searchKeys":["apply$mcIJD$sp"]},{"name":"val stringIsSeq: IsSeq[String] { type A = Char; type C = String;  }","description":"scala.collection.generic.IsSeq$","location":"api/scala/collection/generic/IsSeq$.html","searchKeys":["stringIsSeq"]},{"name":"def asJavaDoubleBinaryOperator(sf: (Double, Double) => Double): DoubleBinaryOperator","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asJavaDoubleBinaryOperator"]},{"name":"def NoneModule: Symbol","description":"scala.quoted.Quotes$reflectModule$defnModule","location":"api/scala/quoted/Quotes$reflectModule$defnModule.html","searchKeys":["NoneModule"]},{"name":"def get: Option[T]","description":"scala.ref.Reference","location":"api/scala/ref/Reference.html","searchKeys":["get"]},{"name":"def fold[T](z: U)(op: (U, U) => U)(evidence$4: ClassTag[U]): U","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["fold"]},{"name":"object Function","description":"scala.Function$","location":"api/scala/Function$.html","searchKeys":["Function"]},{"name":"def toList: List[Union[Tuple]]","description":"scala.Tuple","location":"api/scala/Tuple.html","searchKeys":["toList"]},{"name":"class SoftReference[+T <: AnyRef](value: T, queue: ReferenceQueue[T]) extends ReferenceWrapper[T]","description":"scala.ref.SoftReference","location":"api/scala/ref/SoftReference.html","searchKeys":["SoftReference"]},{"name":"def name: String","description":"scala.io.Codec","location":"api/scala/io/Codec.html","searchKeys":["name"]},{"name":"def _6: T6","description":"scala.Product12","location":"api/scala/Product12.html","searchKeys":["_6"]},{"name":"class AbstractFunction9[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, +R] extends (T1, T2, T3, T4, T5, T6, T7, T8, T9) => R","description":"scala.runtime.AbstractFunction9","location":"api/scala/runtime/AbstractFunction9.html","searchKeys":["AbstractFunction9"]},{"name":"class RichFunction2AsObjLongConsumer[T](underlying: (T, Long) => Unit) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichFunction2AsObjLongConsumer","location":"api/scala/jdk/FunctionWrappers$$RichFunction2AsObjLongConsumer.html","searchKeys":["RichFunction2AsObjLongConsumer"]},{"name":"def underlying: TypeRepr","description":"scala.quoted.Quotes$reflectModule$RecursiveTypeMethods","location":"api/scala/quoted/Quotes$reflectModule$RecursiveTypeMethods.html","searchKeys":["underlying"]},{"name":"def mapConserve[B >: A <: AnyRef](f: A => B): List[B]","description":"scala.collection.immutable.List","location":"api/scala/collection/immutable/List.html","searchKeys":["mapConserve"]},{"name":"val x$1: Type[T1]","description":"scala.quoted.FromExpr$$Tuple18FromExpr","location":"api/scala/quoted/FromExpr$$Tuple18FromExpr.html","searchKeys":["x$1"]},{"name":"def nextAfter(start: Float, direction: Double): Float","description":"scala.math","location":"api/scala/math.html","searchKeys":["nextAfter"]},{"name":"def map[B](f: A => B): CC[B]","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["map"]},{"name":"def byte2int(x: Byte): Int","description":"scala.Byte$","location":"api/scala/Byte$.html","searchKeys":["byte2int"]},{"name":"def dequeue(): A","description":"scala.collection.mutable.PriorityQueue","location":"api/scala/collection/mutable/PriorityQueue.html","searchKeys":["dequeue"]},{"name":"def concat[T](xss: IArray[T]*)(evidence$17: ClassTag[T]): IArray[T]","description":"scala.IArray$package$$IArray$","location":"api/scala/IArray$package$$IArray$.html","searchKeys":["concat"]},{"name":"val TRAIT_SETTER_SEPARATOR_STRING: \"$_setter_$\"","description":"scala.reflect.NameTransformer$","location":"api/scala/reflect/NameTransformer$.html","searchKeys":["TRAIT_SETTER_SEPARATOR_STRING"]},{"name":"val AndType: AndTypeModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["AndType"]},{"name":"trait JFunction1$mcFF$sp extends Any => Any with Serializable","description":"scala.runtime.java8.JFunction1$mcFF$sp","location":"api/scala/runtime/java8/JFunction1$mcFF$sp.html","searchKeys":["JFunction1$mcFF$sp"]},{"name":"def apply$mcJDJ$sp(v1: Double, v2: Long): Long","description":"scala.runtime.java8.JFunction2$mcJDJ$sp","location":"api/scala/runtime/java8/JFunction2$mcJDJ$sp.html","searchKeys":["apply$mcJDJ$sp"]},{"name":"def ==(x: Int): Boolean","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["=="]},{"name":"def asJavaEnumeration[A](i: Iterator[A]): Enumeration[A]","description":"scala.collection.convert.AsJavaConverters","location":"api/scala/collection/convert/AsJavaConverters.html","searchKeys":["asJavaEnumeration"]},{"name":"def unapplySeq[A](x: CC[A]): UnapplySeqWrapper[A]","description":"scala.collection.ClassTagSeqFactory","location":"api/scala/collection/ClassTagSeqFactory.html","searchKeys":["unapplySeq"]},{"name":"object List extends StrictOptimizedSeqFactory[[A] =>> List[A]]","description":"scala.collection.immutable.List$","location":"api/scala/collection/immutable/List$.html","searchKeys":["List"]},{"name":"def asJavaCollection: Collection[A]","description":"scala.collection.JavaConverters$$AsJavaCollection","location":"api/scala/collection/JavaConverters$$AsJavaCollection.html","searchKeys":["asJavaCollection"]},{"name":"def asJavaPredicate: Predicate[T]","description":"scala.jdk.FunctionWrappers$$RichFunction1AsPredicate","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsPredicate.html","searchKeys":["asJavaPredicate"]},{"name":"val x$38: FromExpr[T16]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["x$38"]},{"name":"given TypeCaseDefMethods","description":"scala.quoted.Quotes$reflectModule$TypeCaseDefMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeCaseDefMethods"]},{"name":"trait MatchModule","description":"scala.quoted.Quotes$reflectModule$MatchModule","location":"api/scala/quoted/Quotes$reflectModule$MatchModule.html","searchKeys":["MatchModule"]},{"name":"def untupled[T1, T2, T3, R](f: (T1, T2, T3) => R): (T1, T2, T3) => R","description":"scala.Function$","location":"api/scala/Function$.html","searchKeys":["untupled"]},{"name":"def minus(other: FiniteDuration): FiniteDuration","description":"scala.concurrent.duration.FiniteDuration","location":"api/scala/concurrent/duration/FiniteDuration.html","searchKeys":["minus"]},{"name":"def arrayType[T](arg: OptManifest[]): ClassTag[Array[T]]","description":"scala.reflect.ClassManifestFactory$","location":"api/scala/reflect/ClassManifestFactory$.html","searchKeys":["arrayType"]},{"name":"def asJavaSeqStream: IntStream","description":"scala.collection.convert.StreamExtensions$StringHasSeqParStream","location":"api/scala/collection/convert/StreamExtensions$StringHasSeqParStream.html","searchKeys":["asJavaSeqStream"]},{"name":"type RenameSelector <: Selector","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["RenameSelector"]},{"name":"class RichFunction2AsObjIntConsumer[T](underlying: (T, Int) => Unit) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichFunction2AsObjIntConsumer","location":"api/scala/jdk/FunctionWrappers$$RichFunction2AsObjIntConsumer.html","searchKeys":["RichFunction2AsObjIntConsumer"]},{"name":"val x$11: Type[T11]","description":"scala.quoted.FromExpr$$Tuple13FromExpr","location":"api/scala/quoted/FromExpr$$Tuple13FromExpr.html","searchKeys":["x$11"]},{"name":"trait StrictOptimizedSortedMapOps[K, +V, +CC <: ([X, Y] =>> Map[X, Y] & SortedMapOps[X, Y, CC, ]), +C <: SortedMapOps[K, V, CC, C]] extends SortedMapOps[K, V, CC, C] with StrictOptimizedSortedMapOps[K, V, CC, C] with StrictOptimizedMapOps[K, V, [K, V] =>> Map[K, V], C]","description":"scala.collection.immutable.StrictOptimizedSortedMapOps","location":"api/scala/collection/immutable/StrictOptimizedSortedMapOps.html","searchKeys":["StrictOptimizedSortedMapOps"]},{"name":"object Either","description":"scala.util.Either$","location":"api/scala/util/Either$.html","searchKeys":["Either"]},{"name":"def drop(n: Int): C","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["drop"]},{"name":"def isValidInt: Boolean","description":"scala.math.ScalaNumericAnyConversions","location":"api/scala/math/ScalaNumericAnyConversions.html","searchKeys":["isValidInt"]},{"name":"def milliseconds: FiniteDuration","description":"scala.concurrent.duration.DurationConversions","location":"api/scala/concurrent/duration/DurationConversions.html","searchKeys":["milliseconds"]},{"name":"val intStreamUnboxer: StreamUnboxer[Int, IntStream]","description":"scala.collection.convert.StreamExtensions$$StreamUnboxer$","location":"api/scala/collection/convert/StreamExtensions$$StreamUnboxer$.html","searchKeys":["intStreamUnboxer"]},{"name":"def env: Map[String, String]","description":"scala.sys","location":"api/scala/sys.html","searchKeys":["env"]},{"name":"def apply$mcJ$sp(): Long","description":"scala.runtime.java8.JFunction0$mcJ$sp","location":"api/scala/runtime/java8/JFunction0$mcJ$sp.html","searchKeys":["apply$mcJ$sp"]},{"name":"def plus(x: Int, y: Int): Int","description":"scala.math.Numeric$$IntIsIntegral","location":"api/scala/math/Numeric$$IntIsIntegral.html","searchKeys":["plus"]},{"name":"val start: Int","description":"scala.collection.immutable.Range","location":"api/scala/collection/immutable/Range.html","searchKeys":["start"]},{"name":"val x$21: Type[T21]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["x$21"]},{"name":"def defaultLoadFactor: Double","description":"scala.collection.mutable.CollisionProofHashMap$","location":"api/scala/collection/mutable/CollisionProofHashMap$.html","searchKeys":["defaultLoadFactor"]},{"name":"def empty[K, V]: TreeSeqMap[K, V]","description":"scala.collection.immutable.TreeSeqMap$","location":"api/scala/collection/immutable/TreeSeqMap$.html","searchKeys":["empty"]},{"name":"val x$7: Type[T7]","description":"scala.quoted.FromExpr$$Tuple17FromExpr","location":"api/scala/quoted/FromExpr$$Tuple17FromExpr.html","searchKeys":["x$7"]},{"name":"def readResolve(): AnyRef","description":"scala.Enumeration","location":"api/scala/Enumeration.html","searchKeys":["readResolve"]},{"name":"def curried: T1 => T2 => R","description":"scala.Function2","location":"api/scala/Function2.html","searchKeys":["curried"]},{"name":"val unit: TimeUnit","description":"scala.concurrent.duration.FiniteDuration","location":"api/scala/concurrent/duration/FiniteDuration.html","searchKeys":["unit"]},{"name":"def %(x: Short): Int","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["%"]},{"name":"def reverse_:::[B >: A](prefix: List[B]): List[B]","description":"scala.collection.immutable.List","location":"api/scala/collection/immutable/List.html","searchKeys":["reverse_:::"]},{"name":"Programmatic Structural Types","description":"","location":"docs/reference/changed-features/structural-types.html","searchKeys":["Programmatic Structural Types"]},{"name":"def subtractOne(k: K): TrieMap[K, V]","description":"scala.collection.concurrent.TrieMap","location":"api/scala/collection/concurrent/TrieMap.html","searchKeys":["subtractOne"]},{"name":"def _3: T3","description":"scala.Product11","location":"api/scala/Product11.html","searchKeys":["_3"]},{"name":"class Filter[A](val underlying: SomeIterableOps[A], val p: A => Boolean, val isFlipped: Boolean) extends AbstractView[A]","description":"scala.collection.View$$Filter","location":"api/scala/collection/View$$Filter.html","searchKeys":["Filter"]},{"name":"def iterableFactory[K <: AnyRef, V]: Factory[(K, V), AnyRefMap[K, V]]","description":"scala.collection.mutable.AnyRefMap$","location":"api/scala/collection/mutable/AnyRefMap$.html","searchKeys":["iterableFactory"]},{"name":"def rangeHash(start: Int, step: Int, last: Int): Int","description":"scala.util.hashing.MurmurHash3$","location":"api/scala/util/hashing/MurmurHash3$.html","searchKeys":["rangeHash"]},{"name":"given StringConstantTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["StringConstantTypeTest"]},{"name":"def UnitClass: Symbol","description":"scala.quoted.Quotes$reflectModule$defnModule","location":"api/scala/quoted/Quotes$reflectModule$defnModule.html","searchKeys":["UnitClass"]},{"name":"type ::[+A] = ::[A]","description":"scala","location":"api/scala.html","searchKeys":["::"]},{"name":"def empty[T](evidence$1: ClassTag[T]): ArraySeq[T]","description":"scala.collection.mutable.ArraySeq$","location":"api/scala/collection/mutable/ArraySeq$.html","searchKeys":["empty"]},{"name":"Type System","description":"","location":"docs/internals/type-system.html","searchKeys":["Type System"]},{"name":"def apply(array: Array[Long])(using Quotes): Expr[Array[Long]]","description":"scala.quoted.ToExpr$$ArrayOfLongToExpr$","location":"api/scala/quoted/ToExpr$$ArrayOfLongToExpr$.html","searchKeys":["apply"]},{"name":"given given_FromString_Double: FromString[Double]","description":"scala.util.CommandLineParser$$FromString$$given_FromString_Double$","location":"api/scala/util/CommandLineParser$$FromString$$given_FromString_Double$.html","searchKeys":["given_FromString_Double"]},{"name":"trait ThisModule","description":"scala.quoted.Quotes$reflectModule$ThisModule","location":"api/scala/quoted/Quotes$reflectModule$ThisModule.html","searchKeys":["ThisModule"]},{"name":"def asJavaIntSupplier(sf: () => Integer): IntSupplier","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asJavaIntSupplier"]},{"name":"def /(x: Float): Float","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["/"]},{"name":"def sortedMapFactory[K, V](evidence$30: Ordering[K]): Factory[(K, V), CC[K, V]]","description":"scala.collection.SortedMapFactory","location":"api/scala/collection/SortedMapFactory.html","searchKeys":["sortedMapFactory"]},{"name":"object Ordered","description":"scala.math.Ordered$","location":"api/scala/math/Ordered$.html","searchKeys":["Ordered"]},{"name":"given SimpleSelectorTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["SimpleSelectorTypeTest"]},{"name":"def subtractOne(key: K): AnyRefMap[K, V]","description":"scala.collection.mutable.AnyRefMap","location":"api/scala/collection/mutable/AnyRefMap.html","searchKeys":["subtractOne"]},{"name":"val Bits32AndUp: Group[(Int, Long, Float, Double)]","description":"scala.Specializable$","location":"api/scala/Specializable$.html","searchKeys":["Bits32AndUp"]},{"name":"def apply[T](runtimeClass1: Class[]): ClassTag[T]","description":"scala.reflect.ClassTag$","location":"api/scala/reflect/ClassTag$.html","searchKeys":["apply"]},{"name":"class List[+A] extends AbstractSeq[A] with LinearSeq[A] with LinearSeqOps[A, [A] =>> List[A], List[A]] with StrictOptimizedLinearSeqOps[A, [A] =>> List[A], List[A]] with StrictOptimizedSeqOps[A, [A] =>> List[A], List[A]] with IterableFactoryDefaults[A, [A] =>> List[A]] with DefaultSerializable","description":"scala.collection.immutable.List","location":"api/scala/collection/immutable/List.html","searchKeys":["List"]},{"name":"val level: Int","description":"scala.annotation.elidable","location":"api/scala/annotation/elidable.html","searchKeys":["level"]},{"name":"def ==(x: Long): Boolean","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["=="]},{"name":"given Tuple8FromExpr[T1, T2, T3, T4, T5, T6, T7, T8](using val x$1: Type[T1], val x$2: Type[T2], val x$3: Type[T3], val x$4: Type[T4], val x$5: Type[T5], val x$6: Type[T6], val x$7: Type[T7], val x$8: Type[T8], val x$9: FromExpr[T1], val x$10: FromExpr[T2], val x$11: FromExpr[T3], val x$12: FromExpr[T4], val x$13: FromExpr[T5], val x$14: FromExpr[T6], val x$15: FromExpr[T7], val x$16: FromExpr[T8]): FromExpr[(T1, T2, T3, T4, T5, T6, T7, T8)]","description":"scala.quoted.FromExpr$$Tuple8FromExpr","location":"api/scala/quoted/FromExpr$$Tuple8FromExpr.html","searchKeys":["Tuple8FromExpr"]},{"name":"def initialized: Boolean","description":"scala.runtime.LazyFloat","location":"api/scala/runtime/LazyFloat.html","searchKeys":["initialized"]},{"name":"def applyAsInt(x1: T): Int","description":"scala.jdk.FunctionWrappers$$AsJavaToIntFunction","location":"api/scala/jdk/FunctionWrappers$$AsJavaToIntFunction.html","searchKeys":["applyAsInt"]},{"name":"val x$19: FromExpr[T9]","description":"scala.quoted.FromExpr$$Tuple10FromExpr","location":"api/scala/quoted/FromExpr$$Tuple10FromExpr.html","searchKeys":["x$19"]},{"name":"def global: ExecutionContext","description":"scala.concurrent.ExecutionContext$$Implicits$","location":"api/scala/concurrent/ExecutionContext$$Implicits$.html","searchKeys":["global"]},{"name":"def asJavaParValueDoubleStreamFromFloat[K](m: Map[K, Float]): DoubleStream","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaParValueDoubleStreamFromFloat"]},{"name":"val x$20: Type[T20]","description":"scala.quoted.FromExpr$$Tuple21FromExpr","location":"api/scala/quoted/FromExpr$$Tuple21FromExpr.html","searchKeys":["x$20"]},{"name":"def apply(tup: (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13))(using Quotes): Expr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)]","description":"scala.quoted.ToExpr$$Tuple13ToExpr","location":"api/scala/quoted/ToExpr$$Tuple13ToExpr.html","searchKeys":["apply"]},{"name":"given ArrayOfFloatToExpr: ToExpr[Array[Float]]","description":"scala.quoted.ToExpr$$ArrayOfFloatToExpr$","location":"api/scala/quoted/ToExpr$.html","searchKeys":["ArrayOfFloatToExpr"]},{"name":"val RenameSelector: RenameSelectorModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["RenameSelector"]},{"name":"def this(seed: Long)","description":"scala.util.Random","location":"api/scala/util/Random.html","searchKeys":["this"]},{"name":"def addString(b: StringBuilder): StringBuilder","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["addString"]},{"name":"def plus(x: Char, y: Char): Char","description":"scala.math.Numeric$$CharIsIntegral","location":"api/scala/math/Numeric$$CharIsIntegral.html","searchKeys":["plus"]},{"name":"val x$3: Type[T3]","description":"scala.quoted.FromExpr$$Tuple13FromExpr","location":"api/scala/quoted/FromExpr$$Tuple13FromExpr.html","searchKeys":["x$3"]},{"name":"def %(x: Int): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["%"]},{"name":"def betaReduce(term: Term): Option[Term]","description":"scala.quoted.Quotes$reflectModule$TermModule","location":"api/scala/quoted/Quotes$reflectModule$TermModule.html","searchKeys":["betaReduce"]},{"name":"def apply(x1: Long): Double","description":"scala.jdk.FunctionWrappers$$FromJavaLongToDoubleFunction","location":"api/scala/jdk/FunctionWrappers$$FromJavaLongToDoubleFunction.html","searchKeys":["apply"]},{"name":"def takeWhileInPlace(p: A => Boolean): Buffer[A]","description":"scala.collection.mutable.Buffer","location":"api/scala/collection/mutable/Buffer.html","searchKeys":["takeWhileInPlace"]},{"name":"def apply(v1: T1, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6): R","description":"scala.Function6","location":"api/scala/Function6.html","searchKeys":["apply"]},{"name":"def start: Int","description":"scala.util.matching.Regex$$MatchIterator","location":"api/scala/util/matching/Regex$$MatchIterator.html","searchKeys":["start"]},{"name":"def get(): T","description":"scala.jdk.FunctionWrappers$$AsJavaSupplier","location":"api/scala/jdk/FunctionWrappers$$AsJavaSupplier.html","searchKeys":["get"]},{"name":"def rounded: BigDecimal","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["rounded"]},{"name":"def catchBreak(onBreak: => T): T","description":"scala.util.control.Breaks$TryBlock","location":"api/scala/util/control/Breaks$TryBlock.html","searchKeys":["catchBreak"]},{"name":"trait BooleanOrdering extends Ordering[Boolean]","description":"scala.math.Ordering$$BooleanOrdering","location":"api/scala/math/Ordering$$BooleanOrdering.html","searchKeys":["BooleanOrdering"]},{"name":"def intValue: Int","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["intValue"]},{"name":"def format(args: Any*): String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["format"]},{"name":"class showAsInfix(enabled: Boolean) extends StaticAnnotation","description":"scala.annotation.showAsInfix","location":"api/scala/annotation/showAsInfix.html","searchKeys":["showAsInfix"]},{"name":"def !=(x: Short): Boolean","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["!="]},{"name":"def $conforms[A]: A => A","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["$conforms"]},{"name":"def indexOf(elem: A, from: Int): Int","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["indexOf"]},{"name":"def addOne(elem: Float): ofFloat","description":"scala.collection.mutable.ArrayBuilder$$ofFloat","location":"api/scala/collection/mutable/ArrayBuilder$$ofFloat.html","searchKeys":["addOne"]},{"name":"val x$21: FromExpr[T2]","description":"scala.quoted.FromExpr$$Tuple19FromExpr","location":"api/scala/quoted/FromExpr$$Tuple19FromExpr.html","searchKeys":["x$21"]},{"name":"def nn[T]: x & T","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["nn"]},{"name":"trait StepperShapeLowPriority2","description":"scala.collection.StepperShapeLowPriority2","location":"api/scala/collection/StepperShapeLowPriority2.html","searchKeys":["StepperShapeLowPriority2"]},{"name":"trait Product3[+T1, +T2, +T3] extends Product","description":"scala.Product3","location":"api/scala/Product3.html","searchKeys":["Product3"]},{"name":"class WithFilter[+A, +CC <: ([_$1] =>> Any)] extends Serializable","description":"scala.collection.WithFilter","location":"api/scala/collection/WithFilter.html","searchKeys":["WithFilter"]},{"name":"def asJavaParCharStream: IntStream","description":"scala.collection.convert.StreamExtensions$StringHasSeqParStream","location":"api/scala/collection/convert/StreamExtensions$StringHasSeqParStream.html","searchKeys":["asJavaParCharStream"]},{"name":"def close(c: Closeable): Unit","description":"scala.sys.process.BasicIO$","location":"api/scala/sys/process/BasicIO$.html","searchKeys":["close"]},{"name":"def addOne(kv: (Key, Value)): OpenHashMap[Key, Value]","description":"scala.collection.mutable.OpenHashMap","location":"api/scala/collection/mutable/OpenHashMap.html","searchKeys":["addOne"]},{"name":"val FINER: 400","description":"scala.annotation.elidable$","location":"api/scala/annotation/elidable$.html","searchKeys":["FINER"]},{"name":"def isValidByte: Boolean","description":"scala.math.ScalaNumericAnyConversions","location":"api/scala/math/ScalaNumericAnyConversions.html","searchKeys":["isValidByte"]},{"name":"object existentials extends existentials","description":"scala.languageFeature$$existentials$","location":"api/scala/languageFeature$$existentials$.html","searchKeys":["existentials"]},{"name":"def mapTo[S](tag: ClassTag[S]): Future[S]","description":"scala.concurrent.Future","location":"api/scala/concurrent/Future.html","searchKeys":["mapTo"]},{"name":"val x$26: FromExpr[T10]","description":"scala.quoted.FromExpr$$Tuple16FromExpr","location":"api/scala/quoted/FromExpr$$Tuple16FromExpr.html","searchKeys":["x$26"]},{"name":"given TypeCaseDefMethods","description":"scala.quoted.Quotes$reflectModule$TypeCaseDefMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeCaseDefMethods.html","searchKeys":["TypeCaseDefMethods"]},{"name":"trait JFunction2$mcIJD$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcIJD$sp","location":"api/scala/runtime/java8/JFunction2$mcIJD$sp.html","searchKeys":["JFunction2$mcIJD$sp"]},{"name":"def unapply(x: Expr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18)])(using Quotes): Option[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18)]","description":"scala.quoted.FromExpr$$Tuple18FromExpr","location":"api/scala/quoted/FromExpr$$Tuple18FromExpr.html","searchKeys":["unapply"]},{"name":"def single[A](a: A): Iterator[A]","description":"scala.collection.Iterator$","location":"api/scala/collection/Iterator$.html","searchKeys":["single"]},{"name":"given arrayOps","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$.html","searchKeys":["arrayOps"]},{"name":"def withFilter(q: A => Boolean): WithFilter[A]","description":"scala.collection.ArrayOps$$WithFilter","location":"api/scala/collection/ArrayOps$$WithFilter.html","searchKeys":["withFilter"]},{"name":"given GivenSelectorMethods","description":"scala.quoted.Quotes$reflectModule$GivenSelectorMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["GivenSelectorMethods"]},{"name":"object LambdaDeserializer","description":"scala.runtime.LambdaDeserializer$","location":"api/scala/runtime/LambdaDeserializer$.html","searchKeys":["LambdaDeserializer"]},{"name":"val x$19: Type[T19]","description":"scala.quoted.FromExpr$$Tuple20FromExpr","location":"api/scala/quoted/FromExpr$$Tuple20FromExpr.html","searchKeys":["x$19"]},{"name":"val MaxValue: 3.4028235E38","description":"scala.Float$","location":"api/scala/Float$.html","searchKeys":["MaxValue"]},{"name":"given ArrayOfByteToExpr: ToExpr[Array[Byte]]","description":"scala.quoted.ToExpr$$ArrayOfByteToExpr$","location":"api/scala/quoted/ToExpr$$ArrayOfByteToExpr$.html","searchKeys":["ArrayOfByteToExpr"]},{"name":"given IdentMethods","description":"scala.quoted.Quotes$reflectModule$IdentMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["IdentMethods"]},{"name":"def -(x: Char): Float","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["-"]},{"name":"def failure(cause: Throwable): Promise[T]","description":"scala.concurrent.Promise","location":"api/scala/concurrent/Promise.html","searchKeys":["failure"]},{"name":"trait JFunction2$mcFDD$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcFDD$sp","location":"api/scala/runtime/java8/JFunction2$mcFDD$sp.html","searchKeys":["JFunction2$mcFDD$sp"]},{"name":"def tupled: (T1, T2, T3, T4, T5, T6, T7, T8) => R","description":"scala.Function8","location":"api/scala/Function8.html","searchKeys":["tupled"]},{"name":"def Tuple7[T1, T2, T3, T4, T5, T6, T7](ord1: Ordering[T1], ord2: Ordering[T2], ord3: Ordering[T3], ord4: Ordering[T4], ord5: Ordering[T5], ord6: Ordering[T6], ord7: Ordering[T7]): Ordering[(T1, T2, T3, T4, T5, T6, T7)]","description":"scala.math.Ordering$","location":"api/scala/math/Ordering$.html","searchKeys":["Tuple7"]},{"name":"val :+: :+","description":"scala","location":"api/scala.html","searchKeys":[":+"]},{"name":"def toScala: Option[Double]","description":"scala.jdk.OptionConverters$$RichOptionalDouble","location":"api/scala/jdk/OptionConverters$$RichOptionalDouble.html","searchKeys":["toScala"]},{"name":"val UnitConstant: UnitConstantModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["UnitConstant"]},{"name":"def toScala: FiniteDuration","description":"scala.jdk.DurationConverters$$JavaDurationOps","location":"api/scala/jdk/DurationConverters$$JavaDurationOps.html","searchKeys":["toScala"]},{"name":"var left: RBNode[K, V]","description":"scala.collection.mutable.CollisionProofHashMap$$RBNode","location":"api/scala/collection/mutable/CollisionProofHashMap$$RBNode.html","searchKeys":["left"]},{"name":"object Product13","description":"scala.Product13$","location":"api/scala/Product13$.html","searchKeys":["Product13"]},{"name":"def compare(other: Duration): Int","description":"scala.concurrent.duration.FiniteDuration","location":"api/scala/concurrent/duration/FiniteDuration.html","searchKeys":["compare"]},{"name":"def toInt: Int","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["toInt"]},{"name":"def findLast(p: A => Boolean): Option[A]","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["findLast"]},{"name":"class MangledHashing[K] extends Hashing[K]","description":"scala.collection.concurrent.TrieMap$$MangledHashing","location":"api/scala/collection/concurrent/TrieMap$$MangledHashing.html","searchKeys":["MangledHashing"]},{"name":"def arrayType[T](arg: Manifest[]): Manifest[Array[T]]","description":"scala.reflect.ManifestFactory$","location":"api/scala/reflect/ManifestFactory$.html","searchKeys":["arrayType"]},{"name":"def TypeReprCode: Printer[TypeRepr]","description":"scala.quoted.Quotes$reflectModule$PrinterModule","location":"api/scala/quoted/Quotes$reflectModule$PrinterModule.html","searchKeys":["TypeReprCode"]},{"name":"class beanSetter extends StaticAnnotation","description":"scala.annotation.meta.beanSetter","location":"api/scala/annotation/meta/beanSetter.html","searchKeys":["beanSetter"]},{"name":"object Insertion extends OrderBy","description":"scala.collection.immutable.TreeSeqMap$$OrderBy$$Insertion$","location":"api/scala/collection/immutable/TreeSeqMap$$OrderBy$$Insertion$.html","searchKeys":["Insertion"]},{"name":"def asJavaSeqKeyIntStreamFromByte[V](m: Map[Byte, V]): IntStream","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaSeqKeyIntStreamFromByte"]},{"name":"def append[B >: A](rest: => IterableOnce[B]): Stream[B]","description":"scala.collection.immutable.Stream","location":"api/scala/collection/immutable/Stream.html","searchKeys":["append"]},{"name":"def collect(pf: PartialFunction[Long, Long]): LongAccumulator","description":"scala.jdk.LongAccumulator","location":"api/scala/jdk/LongAccumulator.html","searchKeys":["collect"]},{"name":"def /(x: Byte): Int","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["/"]},{"name":"trait ClassManifestDeprecatedApis[T] extends OptManifest[T]","description":"scala.reflect.ClassManifestDeprecatedApis","location":"api/scala/reflect/ClassManifestDeprecatedApis.html","searchKeys":["ClassManifestDeprecatedApis"]},{"name":"class FromJavaUnaryOperator[T](jf: UnaryOperator[T]) extends T => T","description":"scala.jdk.FunctionWrappers$$FromJavaUnaryOperator","location":"api/scala/jdk/FunctionWrappers$$FromJavaUnaryOperator.html","searchKeys":["FromJavaUnaryOperator"]},{"name":"class UnliftOps[A, B] extends AnyVal","description":"scala.Function1$$UnliftOps","location":"api/scala/Function1$$UnliftOps.html","searchKeys":["UnliftOps"]},{"name":"object CharIsIntegral extends CharIsIntegral with CharOrdering","description":"scala.math.Numeric$$CharIsIntegral$","location":"api/scala/math/Numeric$$CharIsIntegral$.html","searchKeys":["CharIsIntegral"]},{"name":"given UnapplyMethods","description":"scala.quoted.Quotes$reflectModule$UnapplyMethods","location":"api/scala/quoted/Quotes$reflectModule$UnapplyMethods.html","searchKeys":["UnapplyMethods"]},{"name":"object IsIterableOnce extends IsIterableOnceLowPriority","description":"scala.collection.generic.IsIterableOnce$","location":"api/scala/collection/generic/IsIterableOnce$.html","searchKeys":["IsIterableOnce"]},{"name":"def empty[T](evidence$4: ClassTag[T]): Array[T]","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["empty"]},{"name":"def apply(x: T)(using Quotes): Expr[T]","description":"scala.quoted.ToExpr$$ShortToExpr","location":"api/scala/quoted/ToExpr$$ShortToExpr.html","searchKeys":["apply"]},{"name":"val array: Array[Float]","description":"scala.collection.mutable.ArraySeq$$ofFloat","location":"api/scala/collection/mutable/ArraySeq$$ofFloat.html","searchKeys":["array"]},{"name":"trait Sink","description":"scala.sys.process.ProcessBuilder$$Sink","location":"api/scala/sys/process/ProcessBuilder$$Sink.html","searchKeys":["Sink"]},{"name":"def +(x: Short): Int","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["+"]},{"name":"def range(from: A, until: A): C","description":"scala.collection.SortedOps","location":"api/scala/collection/SortedOps.html","searchKeys":["range"]},{"name":"def ==(x: Double): Boolean","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["=="]},{"name":"class RichObjLongConsumerAsFunction2[T](underlying: ObjLongConsumer[T]) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichObjLongConsumerAsFunction2","location":"api/scala/jdk/FunctionWrappers$$RichObjLongConsumerAsFunction2.html","searchKeys":["RichObjLongConsumerAsFunction2"]},{"name":"def this(in: OutputStream => Unit, out: InputStream => Unit, err: InputStream => Unit)","description":"scala.sys.process.ProcessIO","location":"api/scala/sys/process/ProcessIO.html","searchKeys":["this"]},{"name":"def buildFromLongMap[V]: BuildFrom[LongMap[], (Long, V), LongMap[V]]","description":"scala.collection.mutable.LongMap$","location":"api/scala/collection/mutable/LongMap$.html","searchKeys":["buildFromLongMap"]},{"name":"def init[T]: IArray[T]","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["init"]},{"name":"def asJavaLongToIntFunction(sf: Long => Integer): LongToIntFunction","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asJavaLongToIntFunction"]},{"name":"class uncheckedStable extends StaticAnnotation","description":"scala.annotation.unchecked.uncheckedStable","location":"api/scala/annotation/unchecked/uncheckedStable.html","searchKeys":["uncheckedStable"]},{"name":"def longArrayOps(xs: Array[Long]): ArrayOps[Long]","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["longArrayOps"]},{"name":"class RichFunction2AsBinaryOperator[T](underlying: (T, T) => T) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichFunction2AsBinaryOperator","location":"api/scala/jdk/FunctionWrappers$$RichFunction2AsBinaryOperator.html","searchKeys":["RichFunction2AsBinaryOperator"]},{"name":"def canEqual(that: Any): Boolean","description":"scala.Tuple$package$$EmptyTuple$","location":"api/scala/Tuple$package$$EmptyTuple$.html","searchKeys":["canEqual"]},{"name":"trait LowPriorityAccumulatorFactoryInfo","description":"scala.collection.convert.StreamExtensions$$LowPriorityAccumulatorFactoryInfo","location":"api/scala/collection/convert/StreamExtensions$$LowPriorityAccumulatorFactoryInfo.html","searchKeys":["LowPriorityAccumulatorFactoryInfo"]},{"name":"def PrivateLocal: Flags","description":"scala.quoted.Quotes$reflectModule$FlagsModule","location":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html","searchKeys":["PrivateLocal"]},{"name":"def _10: T10","description":"scala.Product18","location":"api/scala/Product18.html","searchKeys":["_10"]},{"name":"def unapply[T](exprs: Seq[Expr[T]])(using FromExpr[T])(using Quotes): Option[Seq[T]]","description":"scala.quoted.Exprs$","location":"api/scala/quoted/Exprs$.html","searchKeys":["unapply"]},{"name":"class SeqHasAsJava[A](s: Seq[A])","description":"scala.collection.convert.AsJavaExtensions$SeqHasAsJava","location":"api/scala/collection/convert/AsJavaExtensions$SeqHasAsJava.html","searchKeys":["SeqHasAsJava"]},{"name":"object Parser extends ErrorKind","description":"scala.compiletime.testing.ErrorKind$$Parser$","location":"api/scala/compiletime/testing/ErrorKind$$Parser$.html","searchKeys":["Parser"]},{"name":"def asScala: Iterator[A]","description":"scala.collection.convert.AsScalaExtensions$EnumerationHasAsScala","location":"api/scala/collection/convert/AsScalaExtensions$EnumerationHasAsScala.html","searchKeys":["asScala"]},{"name":"object Properties extends PropertiesTrait","description":"scala.util.Properties$","location":"api/scala/util/Properties$.html","searchKeys":["Properties"]},{"name":"def asScalaFromIntFunction[R](jf: IntFunction[R]): Integer => R","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asScalaFromIntFunction"]},{"name":"def countLong(p: A => Boolean): Long","description":"scala.jdk.AnyAccumulator","location":"api/scala/jdk/AnyAccumulator.html","searchKeys":["countLong"]},{"name":"given SelectMethods","description":"scala.quoted.Quotes$reflectModule$SelectMethods","location":"api/scala/quoted/Quotes$reflectModule$SelectMethods.html","searchKeys":["SelectMethods"]},{"name":"def overloaded(qualifier: Term, name: String, targs: List[TypeRepr], args: List[Term]): Apply","description":"scala.quoted.Quotes$reflectModule$SelectModule","location":"api/scala/quoted/Quotes$reflectModule$SelectModule.html","searchKeys":["overloaded"]},{"name":"def unary_+: Int","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["unary_+"]},{"name":"def entryExists(key: K, p: V => Boolean): Boolean","description":"scala.collection.mutable.MultiMap","location":"api/scala/collection/mutable/MultiMap.html","searchKeys":["entryExists"]},{"name":"def bindings: List[Definition]","description":"scala.quoted.Quotes$reflectModule$InlinedMethods","location":"api/scala/quoted/Quotes$reflectModule$InlinedMethods.html","searchKeys":["bindings"]},{"name":"def infixNumericOps[T](x: T)(num: Numeric[T]): NumericOps","description":"scala.math.Numeric$$ExtraImplicits","location":"api/scala/math/Numeric$$ExtraImplicits.html","searchKeys":["infixNumericOps"]},{"name":"def Trait: Flags","description":"scala.quoted.Quotes$reflectModule$FlagsModule","location":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html","searchKeys":["Trait"]},{"name":"class MapHasParKeyValueStream[K, V, CC <: ([X, Y] =>> MapOps[X, Y, [K, V] =>> Map[K, V], ])](cc: CC[K, V])","description":"scala.collection.convert.StreamExtensions$MapHasParKeyValueStream","location":"api/scala/collection/convert/StreamExtensions$MapHasParKeyValueStream.html","searchKeys":["MapHasParKeyValueStream"]},{"name":"trait MapViewFactory extends MapFactory[<none>]","description":"scala.collection.MapViewFactory","location":"api/scala/collection/MapViewFactory.html","searchKeys":["MapViewFactory"]},{"name":"def |(x: Char): Int","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["|"]},{"name":"class Right[+A, +B](value: B) extends Either[A, B]","description":"scala.util.Right","location":"api/scala/util/Right.html","searchKeys":["Right"]},{"name":"def liftContra[F <: ([_$8] =>> Any)]: F[To] <:< F[From]","description":"scala.<:<","location":"api/scala/<:<.html","searchKeys":["liftContra"]},{"name":"def identity[T]: TypeTest[T, T]","description":"scala.reflect.TypeTest$","location":"api/scala/reflect/TypeTest$.html","searchKeys":["identity"]},{"name":"object TotalOrdering extends TotalOrdering","description":"scala.math.Ordering$$Float$$TotalOrdering$","location":"api/scala/math/Ordering$$Float$$TotalOrdering$.html","searchKeys":["TotalOrdering"]},{"name":"val x$38: FromExpr[T19]","description":"scala.quoted.FromExpr$$Tuple19FromExpr","location":"api/scala/quoted/FromExpr$$Tuple19FromExpr.html","searchKeys":["x$38"]},{"name":"val x$14: Type[T14]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["x$14"]},{"name":"given ReturnMethods","description":"scala.quoted.Quotes$reflectModule$ReturnMethods","location":"api/scala/quoted/Quotes$reflectModule$ReturnMethods.html","searchKeys":["ReturnMethods"]},{"name":"def iterator: Iterator[A]","description":"scala.collection.mutable.ListBuffer","location":"api/scala/collection/mutable/ListBuffer.html","searchKeys":["iterator"]},{"name":"given TryMethods","description":"scala.quoted.Quotes$reflectModule$TryMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TryMethods"]},{"name":"def min(x: Float, y: Float): Float","description":"scala.math","location":"api/scala/math.html","searchKeys":["min"]},{"name":"class DurationLong(n: Long) extends AnyVal with DurationConversions","description":"scala.concurrent.duration.package$$DurationLong","location":"api/scala/concurrent/duration/package$$DurationLong.html","searchKeys":["DurationLong"]},{"name":"trait ProcessLogger","description":"scala.sys.process.ProcessLogger","location":"api/scala/sys/process/ProcessLogger.html","searchKeys":["ProcessLogger"]},{"name":"def hours: FiniteDuration","description":"scala.concurrent.duration.DurationConversions","location":"api/scala/concurrent/duration/DurationConversions.html","searchKeys":["hours"]},{"name":"def ofList[T](xs: Seq[Expr[T]])(using Type[T])(using Quotes): Expr[List[T]]","description":"scala.quoted.Expr$","location":"api/scala/quoted/Expr$.html","searchKeys":["ofList"]},{"name":"given OrTypeTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["OrTypeTypeTest"]},{"name":"class Tuple9[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9](_1: T1, _2: T2, _3: T3, _4: T4, _5: T5, _6: T6, _7: T7, _8: T8, _9: T9) extends Product9[T1, T2, T3, T4, T5, T6, T7, T8, T9]","description":"scala.Tuple9","location":"api/scala/Tuple9.html","searchKeys":["Tuple9"]},{"name":"trait MatchCaseModule","description":"scala.quoted.Quotes$reflectModule$MatchCaseModule","location":"api/scala/quoted/Quotes$reflectModule$MatchCaseModule.html","searchKeys":["MatchCaseModule"]},{"name":"type Traversable[+X] = Iterable[X]","description":"scala.collection.immutable","location":"api/scala/collection/immutable.html","searchKeys":["Traversable"]},{"name":"def compose[C](r: C <:< From): C <:< To","description":"scala.<:<","location":"api/scala/<:<.html","searchKeys":["compose"]},{"name":"def +(x: Char): Float","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["+"]},{"name":"def clear(): Unit","description":"scala.collection.mutable.UnrolledBuffer","location":"api/scala/collection/mutable/UnrolledBuffer.html","searchKeys":["clear"]},{"name":"def apply(meth: Term, tpe: Option[TypeRepr]): Closure","description":"scala.quoted.Quotes$reflectModule$ClosureModule","location":"api/scala/quoted/Quotes$reflectModule$ClosureModule.html","searchKeys":["apply"]},{"name":"def cases: List[CaseDef]","description":"scala.quoted.Quotes$reflectModule$SummonFromMethods","location":"api/scala/quoted/Quotes$reflectModule$SummonFromMethods.html","searchKeys":["cases"]},{"name":"def apply(i: Int, mc: MathContext): BigDecimal","description":"scala.math.BigDecimal$","location":"api/scala/math/BigDecimal$.html","searchKeys":["apply"]},{"name":"def equiv(rhs: T): Boolean","description":"scala.math.Ordering$OrderingOps","location":"api/scala/math/Ordering$OrderingOps.html","searchKeys":["equiv"]},{"name":"type InterruptedException = InterruptedException","description":"scala","location":"api/scala.html","searchKeys":["InterruptedException"]},{"name":"def fromNow: Deadline","description":"scala.concurrent.duration.FiniteDuration","location":"api/scala/concurrent/duration/FiniteDuration.html","searchKeys":["fromNow"]},{"name":"trait BooleanProp extends Prop[Boolean]","description":"scala.sys.BooleanProp","location":"api/scala/sys/BooleanProp.html","searchKeys":["BooleanProp"]},{"name":"val name: String","description":"scala.Symbol","location":"api/scala/Symbol.html","searchKeys":["name"]},{"name":"def tree: Term","description":"scala.quoted.Quotes$reflectModule$ImplicitSearchSuccessMethods","location":"api/scala/quoted/Quotes$reflectModule$ImplicitSearchSuccessMethods.html","searchKeys":["tree"]},{"name":"def +(x: Short): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["+"]},{"name":"class ::[+A](head: A, var next: List[A]) extends List[A]","description":"scala.collection.immutable.::","location":"api/scala/collection/immutable/::.html","searchKeys":["::"]},{"name":"def enrichAsJavaObjDoubleConsumer[T, A1](sf: (T, A1) => Unit)(evA1: A1 =:= Double): RichFunction2AsObjDoubleConsumer[T]","description":"scala.jdk.Priority1FunctionExtensions","location":"api/scala/jdk/Priority1FunctionExtensions.html","searchKeys":["enrichAsJavaObjDoubleConsumer"]},{"name":"def apply(pattern: TypeRepr, rhs: TypeRepr): MatchCase","description":"scala.quoted.Quotes$reflectModule$MatchCaseModule","location":"api/scala/quoted/Quotes$reflectModule$MatchCaseModule.html","searchKeys":["apply"]},{"name":"class Tuple7[+T1, +T2, +T3, +T4, +T5, +T6, +T7](_1: T1, _2: T2, _3: T3, _4: T4, _5: T5, _6: T6, _7: T7) extends Product7[T1, T2, T3, T4, T5, T6, T7]","description":"scala.Tuple7","location":"api/scala/Tuple7.html","searchKeys":["Tuple7"]},{"name":"class Long extends AnyVal","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["Long"]},{"name":"def minus(other: Duration): Duration","description":"scala.concurrent.duration.Duration","location":"api/scala/concurrent/duration/Duration.html","searchKeys":["minus"]},{"name":"def IntClass: Symbol","description":"scala.quoted.Quotes$reflectModule$defnModule","location":"api/scala/quoted/Quotes$reflectModule$defnModule.html","searchKeys":["IntClass"]},{"name":"def <(x: Double): Boolean","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["<"]},{"name":"class Partial[T, U](f: T => U) extends AnyVal","description":"scala.collection.immutable.Range$$Partial","location":"api/scala/collection/immutable/Range$$Partial.html","searchKeys":["Partial"]},{"name":"def toChar: Char","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["toChar"]},{"name":"def stripMargin: String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["stripMargin"]},{"name":"def asJavaSeqIntStreamFromByte(cc: IterableOnce[Byte]): IntStream","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaSeqIntStreamFromByte"]},{"name":"def span[T](p: T => Boolean): (IArray[T], IArray[T])","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["span"]},{"name":"def _9: T9","description":"scala.Product17","location":"api/scala/Product17.html","searchKeys":["_9"]},{"name":"def this()","description":"scala.collection.mutable.HashSet","location":"api/scala/collection/mutable/HashSet.html","searchKeys":["this"]},{"name":"def ^(x: Long): Long","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["^"]},{"name":"def TreeStructure: Printer[Tree]","description":"scala.quoted.Quotes$reflectModule$PrinterModule","location":"api/scala/quoted/Quotes$reflectModule$PrinterModule.html","searchKeys":["TreeStructure"]},{"name":"def elemtpt: TypeTree","description":"scala.quoted.Quotes$reflectModule$RepeatedMethods","location":"api/scala/quoted/Quotes$reflectModule$RepeatedMethods.html","searchKeys":["elemtpt"]},{"name":"type Apply <: Term","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Apply"]},{"name":"def apply(v1: T1, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, v7: T7, v8: T8, v9: T9, v10: T10): R","description":"scala.Function10","location":"api/scala/Function10.html","searchKeys":["apply"]},{"name":"def repack(): Unit","description":"scala.collection.mutable.LongMap","location":"api/scala/collection/mutable/LongMap.html","searchKeys":["repack"]},{"name":"def signature: Option[Signature]","description":"scala.quoted.Quotes$reflectModule$SelectMethods","location":"api/scala/quoted/Quotes$reflectModule$SelectMethods.html","searchKeys":["signature"]},{"name":"def filter[A1](p: B => Boolean): Option[Either[A1, B]]","description":"scala.util.Either$$RightProjection","location":"api/scala/util/Either$$RightProjection.html","searchKeys":["filter"]},{"name":"given SetFromExpr[T](using val x$1: Type[T], val x$2: FromExpr[T]): FromExpr[Set[T]]","description":"scala.quoted.FromExpr$$SetFromExpr","location":"api/scala/quoted/FromExpr$.html","searchKeys":["SetFromExpr"]},{"name":"def startsWith[B >: A](that: IterableOnce[B], offset: Int): Boolean","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["startsWith"]},{"name":"val x$31: FromExpr[T11]","description":"scala.quoted.FromExpr$$Tuple20FromExpr","location":"api/scala/quoted/FromExpr$$Tuple20FromExpr.html","searchKeys":["x$31"]},{"name":"def adder: ObjLongConsumer[LongAccumulator]","description":"scala.jdk.LongAccumulator$","location":"api/scala/jdk/LongAccumulator$.html","searchKeys":["adder"]},{"name":"def unapply(x: Block): (List[Statement], Term)","description":"scala.quoted.Quotes$reflectModule$BlockModule","location":"api/scala/quoted/Quotes$reflectModule$BlockModule.html","searchKeys":["unapply"]},{"name":"trait JFunction1$mcFJ$sp extends Any => Any with Serializable","description":"scala.runtime.java8.JFunction1$mcFJ$sp","location":"api/scala/runtime/java8/JFunction1$mcFJ$sp.html","searchKeys":["JFunction1$mcFJ$sp"]},{"name":"def toInt(x: Double): Int","description":"scala.math.Numeric$$DoubleIsFractional","location":"api/scala/math/Numeric$$DoubleIsFractional.html","searchKeys":["toInt"]},{"name":"trait Map[K, V] extends Iterable[(K, V)] with Map[K, V] with MapOps[K, V, [K, V] =>> Map[K, V], Map[K, V]] with Growable[(K, V)] with Shrinkable[K] with MapFactoryDefaults[K, V, [K, V] =>> Map[K, V], [A] =>> Iterable[A]]","description":"scala.collection.mutable.Map","location":"api/scala/collection/mutable/Map.html","searchKeys":["Map"]},{"name":"def _12: T12","description":"scala.Product20","location":"api/scala/Product20.html","searchKeys":["_12"]},{"name":"trait ByNameModule","description":"scala.quoted.Quotes$reflectModule$ByNameModule","location":"api/scala/quoted/Quotes$reflectModule$ByNameModule.html","searchKeys":["ByNameModule"]},{"name":"def apply$mcZIJ$sp(v1: Int, v2: Long): Boolean","description":"scala.runtime.java8.JFunction2$mcZIJ$sp","location":"api/scala/runtime/java8/JFunction2$mcZIJ$sp.html","searchKeys":["apply$mcZIJ$sp"]},{"name":"def +=:(elem: A): Buffer[A]","description":"scala.collection.mutable.Buffer","location":"api/scala/collection/mutable/Buffer.html","searchKeys":["+=:"]},{"name":"def iterable asJava[A](i: Iterable[A]): Iterable[A]","description":"scala.collection.convert.ToJavaImplicits","location":"api/scala/collection/convert/ToJavaImplicits.html","searchKeys":["iterable asJava"]},{"name":"def %(x: Char): Int","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["%"]},{"name":"def hypot(x: Double, y: Double): Double","description":"scala.math","location":"api/scala/math.html","searchKeys":["hypot"]},{"name":"def /%(that: BigDecimal): (BigDecimal, BigDecimal)","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["/%"]},{"name":"def asType: Type[ <: AnyKind]","description":"scala.quoted.Quotes$reflectModule$TypeReprMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html","searchKeys":["asType"]},{"name":"def compare(x: Unit, y: Unit): Int","description":"scala.math.Ordering$$UnitOrdering","location":"api/scala/math/Ordering$$UnitOrdering.html","searchKeys":["compare"]},{"name":"given Tuple10ToExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]: ToExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)]","description":"scala.quoted.ToExpr$$Tuple10ToExpr","location":"api/scala/quoted/ToExpr$$Tuple10ToExpr.html","searchKeys":["Tuple10ToExpr"]},{"name":"def !=(x: Long): Boolean","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["!="]},{"name":"def estimateSize(): Long","description":"scala.collection.AnyStepper$$AnyStepperSpliterator","location":"api/scala/collection/AnyStepper$$AnyStepperSpliterator.html","searchKeys":["estimateSize"]},{"name":"trait LinearSeqOps[+A, +CC <: ([X] =>> LinearSeq[X]), +C <: LinearSeq[A] & LinearSeqOps[A, CC, C]] extends SeqOps[A, CC, C] with LinearSeqOps[A, CC, C]","description":"scala.collection.immutable.LinearSeqOps","location":"api/scala/collection/immutable/LinearSeqOps.html","searchKeys":["LinearSeqOps"]},{"name":"def #<(in: => InputStream): ProcessBuilder","description":"scala.sys.process.ProcessBuilder$$Sink","location":"api/scala/sys/process/ProcessBuilder$$Sink.html","searchKeys":["#<"]},{"name":"def lazyLines_!(log: ProcessLogger, capacity: Integer): LazyList[String]","description":"scala.sys.process.ProcessBuilder","location":"api/scala/sys/process/ProcessBuilder.html","searchKeys":["lazyLines_!"]},{"name":"def iterator: Iterator[(String, String)]","description":"scala.sys.SystemProperties","location":"api/scala/sys/SystemProperties.html","searchKeys":["iterator"]},{"name":"def unapply[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15](x: Product15[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15]): Option[Product15[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15]]","description":"scala.Product15$","location":"api/scala/Product15$.html","searchKeys":["unapply"]},{"name":"def PredefModule: Symbol","description":"scala.quoted.Quotes$reflectModule$defnModule","location":"api/scala/quoted/Quotes$reflectModule$defnModule.html","searchKeys":["PredefModule"]},{"name":"def unapply[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22](x: Product22[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22]): Option[Product22[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22]]","description":"scala.Product22$","location":"api/scala/Product22$.html","searchKeys":["unapply"]},{"name":"object ListMap extends MapFactory[[K, V] =>> ListMap[K, V]]","description":"scala.collection.mutable.ListMap$","location":"api/scala/collection/mutable/ListMap$.html","searchKeys":["ListMap"]},{"name":"class DropRight[A](underlying: SomeSeqOps[A], n: Int) extends DropRight[A] with SeqView[A]","description":"scala.collection.SeqView$$DropRight","location":"api/scala/collection/SeqView$$DropRight.html","searchKeys":["DropRight"]},{"name":"val CharConstant: CharConstantModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["CharConstant"]},{"name":"def +(x: Long): Long","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["+"]},{"name":"def %(rhs: T): T","description":"scala.math.Integral$IntegralOps","location":"api/scala/math/Integral$IntegralOps.html","searchKeys":["%"]},{"name":"given SetToExpr[T]: ToExpr[Set[T]]","description":"scala.quoted.ToExpr$$SetToExpr","location":"api/scala/quoted/ToExpr$$SetToExpr.html","searchKeys":["SetToExpr"]},{"name":"def hi: TypeTree","description":"scala.quoted.Quotes$reflectModule$TypeBoundsTreeMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeBoundsTreeMethods.html","searchKeys":["hi"]},{"name":"def minute[C](c: C)(ev: Classifier[C]): R","description":"scala.concurrent.duration.DurationConversions","location":"api/scala/concurrent/duration/DurationConversions.html","searchKeys":["minute"]},{"name":"trait SortedIterableFactory[+CC <: ([_$42] =>> Any)] extends EvidenceIterableFactory[CC, Ordering]","description":"scala.collection.SortedIterableFactory","location":"api/scala/collection/SortedIterableFactory.html","searchKeys":["SortedIterableFactory"]},{"name":"trait JFunction2$mcJIJ$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcJIJ$sp","location":"api/scala/runtime/java8/JFunction2$mcJIJ$sp.html","searchKeys":["JFunction2$mcJIJ$sp"]},{"name":"def addOne(a: Long): LongAccumulator","description":"scala.jdk.LongAccumulator","location":"api/scala/jdk/LongAccumulator.html","searchKeys":["addOne"]},{"name":"def self: Option[ValDef]","description":"scala.quoted.Quotes$reflectModule$ClassDefMethods","location":"api/scala/quoted/Quotes$reflectModule$ClassDefMethods.html","searchKeys":["self"]},{"name":"def ch: Char","description":"scala.io.Source","location":"api/scala/io/Source.html","searchKeys":["ch"]},{"name":"def this()","description":"scala.util.control.ControlThrowable","location":"api/scala/util/control/ControlThrowable.html","searchKeys":["this"]},{"name":"val x$5: Type[T5]","description":"scala.quoted.FromExpr$$Tuple21FromExpr","location":"api/scala/quoted/FromExpr$$Tuple21FromExpr.html","searchKeys":["x$5"]},{"name":"class Concat[A](prefix: SomeSeqOps[A], suffix: SomeSeqOps[A]) extends Concat[A] with SeqView[A]","description":"scala.collection.SeqView$$Concat","location":"api/scala/collection/SeqView$$Concat.html","searchKeys":["Concat"]},{"name":"val TypeRepr: TypeReprModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeRepr"]},{"name":"type LambdaType <: TypeRepr","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["LambdaType"]},{"name":"def iterator: Iterator[A]","description":"scala.collection.View$$TakeWhile","location":"api/scala/collection/View$$TakeWhile.html","searchKeys":["iterator"]},{"name":"def ofSeqLongStepper(st: LongStepper): AnyStepper[Long]","description":"scala.collection.AnyStepper$","location":"api/scala/collection/AnyStepper$.html","searchKeys":["ofSeqLongStepper"]},{"name":"given LongFromExpr","description":"scala.quoted.FromExpr$","location":"api/scala/quoted/FromExpr$.html","searchKeys":["LongFromExpr"]},{"name":"def this()","description":"scala.collection.mutable.ArrayBuffer","location":"api/scala/collection/mutable/ArrayBuffer.html","searchKeys":["this"]},{"name":"def name: String","description":"scala.quoted.Quotes$reflectModule$SimpleSelectorMethods","location":"api/scala/quoted/Quotes$reflectModule$SimpleSelectorMethods.html","searchKeys":["name"]},{"name":"def toLong(x: BigInt): Long","description":"scala.math.Numeric$$BigIntIsIntegral","location":"api/scala/math/Numeric$$BigIntIsIntegral.html","searchKeys":["toLong"]},{"name":"def %(x: Double): Double","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["%"]},{"name":"val x$9: Type[T9]","description":"scala.quoted.FromExpr$$Tuple12FromExpr","location":"api/scala/quoted/FromExpr$$Tuple12FromExpr.html","searchKeys":["x$9"]},{"name":"val x$40: FromExpr[T20]","description":"scala.quoted.FromExpr$$Tuple20FromExpr","location":"api/scala/quoted/FromExpr$$Tuple20FromExpr.html","searchKeys":["x$40"]},{"name":"trait ToScalaImplicits","description":"scala.collection.convert.ToScalaImplicits","location":"api/scala/collection/convert/ToScalaImplicits.html","searchKeys":["ToScalaImplicits"]},{"name":"def apply(s: String): Duration","description":"scala.concurrent.duration.Duration$","location":"api/scala/concurrent/duration/Duration$.html","searchKeys":["apply"]},{"name":"def <=(that: String): Boolean","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["<="]},{"name":"trait TypeCaseDefModule","description":"scala.quoted.Quotes$reflectModule$TypeCaseDefModule","location":"api/scala/quoted/Quotes$reflectModule$TypeCaseDefModule.html","searchKeys":["TypeCaseDefModule"]},{"name":"def flatMap(f: Int => IterableOnce[Int]): C","description":"scala.collection.BitSetOps","location":"api/scala/collection/BitSetOps.html","searchKeys":["flatMap"]},{"name":"trait Function15[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, -T14, -T15, +R] extends AnyRef","description":"scala.Function15","location":"api/scala/Function15.html","searchKeys":["Function15"]},{"name":"def bufferAsJavaListConverter[A](b: Buffer[A]): AsJava[List[A]]","description":"scala.collection.JavaConverters$","location":"api/scala/collection/JavaConverters$.html","searchKeys":["bufferAsJavaListConverter"]},{"name":"given given_FromString_Double: FromString[Double]","description":"scala.util.CommandLineParser$$FromString$$given_FromString_Double$","location":"api/scala/util/CommandLineParser$$FromString$.html","searchKeys":["given_FromString_Double"]},{"name":"trait Iterable[+A] extends Iterable[A] with IterableOps[A, [A] =>> Iterable[A], Iterable[A]] with IterableFactoryDefaults[A, [A] =>> Iterable[A]]","description":"scala.collection.immutable.Iterable","location":"api/scala/collection/immutable/Iterable.html","searchKeys":["Iterable"]},{"name":"val bytes: Array[Byte]","description":"dotty.tools.tasty.TastyReader","location":"api/dotty/tools/tasty/TastyReader.html","searchKeys":["bytes"]},{"name":"val mapSeed: Int","description":"scala.util.hashing.MurmurHash3$","location":"api/scala/util/hashing/MurmurHash3$.html","searchKeys":["mapSeed"]},{"name":"def asJavaParIntStreamFromChar(cc: IterableOnce[Character]): IntStream","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaParIntStreamFromChar"]},{"name":"def enrichAsScalaFromDoublePredicate(jf: DoublePredicate): RichDoublePredicateAsFunction1","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsScalaFromDoublePredicate"]},{"name":"def apply(inline x: Boolean, inline xs: Boolean*): IArray[Boolean]","description":"scala.IArray$package$$IArray$","location":"api/scala/IArray$package$$IArray$.html","searchKeys":["apply"]},{"name":"def apply(name: String, arg: Term): NamedArg","description":"scala.quoted.Quotes$reflectModule$NamedArgModule","location":"api/scala/quoted/Quotes$reflectModule$NamedArgModule.html","searchKeys":["apply"]},{"name":"object Iterator extends IterableFactory[[A] =>> Iterator[A]]","description":"scala.collection.Iterator$","location":"api/scala/collection/Iterator$.html","searchKeys":["Iterator"]},{"name":"def contains(elem: Int): Boolean","description":"scala.collection.BitSetOps","location":"api/scala/collection/BitSetOps.html","searchKeys":["contains"]},{"name":"def paramss: List[ParamClause]","description":"scala.quoted.Quotes$reflectModule$DefDefMethods","location":"api/scala/quoted/Quotes$reflectModule$DefDefMethods.html","searchKeys":["paramss"]},{"name":"class GrowableBuilder[Elem, To <: Growable[Elem]](val elems: To) extends Builder[Elem, To]","description":"scala.collection.mutable.GrowableBuilder","location":"api/scala/collection/mutable/GrowableBuilder.html","searchKeys":["GrowableBuilder"]},{"name":"object IndexedSeq extends Delegate[[A] =>> IndexedSeq[A]]","description":"scala.collection.immutable.IndexedSeq$","location":"api/scala/collection/immutable/IndexedSeq$.html","searchKeys":["IndexedSeq"]},{"name":"def newArray(len: Int): Array[T]","description":"scala.reflect.ClassTag","location":"api/scala/reflect/ClassTag.html","searchKeys":["newArray"]},{"name":"val x$10: Type[T10]","description":"scala.quoted.FromExpr$$Tuple12FromExpr","location":"api/scala/quoted/FromExpr$$Tuple12FromExpr.html","searchKeys":["x$10"]},{"name":"def /(x: Char): Float","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["/"]},{"name":"def apply$mcFJD$sp(v1: Long, v2: Double): Float","description":"scala.runtime.java8.JFunction2$mcFJD$sp","location":"api/scala/runtime/java8/JFunction2$mcFJD$sp.html","searchKeys":["apply$mcFJD$sp"]},{"name":"def <=(x: Double): Boolean","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["<="]},{"name":"Scala 3 Syntax Summary","description":"","location":"docs/reference/syntax.html","searchKeys":["Scala 3 Syntax Summary"]},{"name":"val x$1: Type[T1]","description":"scala.quoted.FromExpr$$Tuple21FromExpr","location":"api/scala/quoted/FromExpr$$Tuple21FromExpr.html","searchKeys":["x$1"]},{"name":"class RichFunction1AsFunction[T, R](underlying: T => R) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichFunction1AsFunction","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsFunction.html","searchKeys":["RichFunction1AsFunction"]},{"name":"class RichIntSupplierAsFunction0(underlying: IntSupplier) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichIntSupplierAsFunction0","location":"api/scala/jdk/FunctionWrappers$$RichIntSupplierAsFunction0.html","searchKeys":["RichIntSupplierAsFunction0"]},{"name":"def bitSetFactory: SpecificIterableFactory[Int, BitSet]","description":"scala.collection.immutable.BitSet","location":"api/scala/collection/immutable/BitSet.html","searchKeys":["bitSetFactory"]},{"name":"def empty[A]: AnyAccumulator[A]","description":"scala.jdk.AnyAccumulator$","location":"api/scala/jdk/AnyAccumulator$.html","searchKeys":["empty"]},{"name":"type IndexedSeq[+A] = IndexedSeq[A]","description":"scala","location":"api/scala.html","searchKeys":["IndexedSeq"]},{"name":"given WhileTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["WhileTypeTest"]},{"name":"val setSeed: Int","description":"scala.util.hashing.MurmurHash3$","location":"api/scala/util/hashing/MurmurHash3$.html","searchKeys":["setSeed"]},{"name":"val NoPrefix: NoPrefixModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["NoPrefix"]},{"name":"def rangeIsSeq[C0 <: Range]: IsSeq[C0] { type A = Int; type C = IndexedSeq[Int];  }","description":"scala.collection.generic.IsSeq$","location":"api/scala/collection/generic/IsSeq$.html","searchKeys":["rangeIsSeq"]},{"name":"def JavaLangPackage: Symbol","description":"scala.quoted.Quotes$reflectModule$defnModule","location":"api/scala/quoted/Quotes$reflectModule$defnModule.html","searchKeys":["JavaLangPackage"]},{"name":"given Tuple9FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9](using val x$1: Type[T1], val x$2: Type[T2], val x$3: Type[T3], val x$4: Type[T4], val x$5: Type[T5], val x$6: Type[T6], val x$7: Type[T7], val x$8: Type[T8], val x$9: Type[T9], val x$10: FromExpr[T1], val x$11: FromExpr[T2], val x$12: FromExpr[T3], val x$13: FromExpr[T4], val x$14: FromExpr[T5], val x$15: FromExpr[T6], val x$16: FromExpr[T7], val x$17: FromExpr[T8], val x$18: FromExpr[T9]): FromExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9)]","description":"scala.quoted.FromExpr$$Tuple9FromExpr","location":"api/scala/quoted/FromExpr$.html","searchKeys":["Tuple9FromExpr"]},{"name":"API Documentation","description":"","location":"docs/usage/scala3doc/docComments.html","searchKeys":["API Documentation"]},{"name":"def apply$mcJD$sp(v1: Double): Long","description":"scala.runtime.java8.JFunction1$mcJD$sp","location":"api/scala/runtime/java8/JFunction1$mcJD$sp.html","searchKeys":["apply$mcJD$sp"]},{"name":"given RefinementTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["RefinementTypeTest"]},{"name":"def ==(x: Float): Boolean","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["=="]},{"name":"def equiv(x: BigInt, y: BigInt): Boolean","description":"scala.math.Equiv$$BigInt$","location":"api/scala/math/Equiv$$BigInt$.html","searchKeys":["equiv"]},{"name":"def tabulate[A](n1: Int, n2: Int, n3: Int)(f: (Int, Int, Int) => A): CC[CC[CC[A]]]","description":"scala.collection.IterableFactory","location":"api/scala/collection/IterableFactory.html","searchKeys":["tabulate"]},{"name":"def dropWhile(p: A => Boolean): C","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["dropWhile"]},{"name":"def tabulate[A, C](n1: Int, n2: Int)(f: (Int, Int) => A)(canAccumulate: AccumulatorFactoryShape[A, C]): AnyAccumulator[C]","description":"scala.jdk.Accumulator$","location":"api/scala/jdk/Accumulator$.html","searchKeys":["tabulate"]},{"name":"val QUALTHIS: 91","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["QUALTHIS"]},{"name":"type Selector <: AnyRef","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Selector"]},{"name":"def map[K2, V2](f: (K, V) => (K2, V2)): CC[K2, V2]","description":"scala.collection.MapOps$$WithFilter","location":"api/scala/collection/MapOps$$WithFilter.html","searchKeys":["map"]},{"name":"def companion: IterableFactory[CC]","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["companion"]},{"name":"val LAMBDA: 142","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["LAMBDA"]},{"name":"def updated[V1 >: V](key: K, value: V1): Map[K, V1]","description":"scala.collection.immutable.Map$$Map1","location":"api/scala/collection/immutable/Map$$Map1.html","searchKeys":["updated"]},{"name":"def tpt: TypeTree","description":"scala.quoted.Quotes$reflectModule$RefinedMethods","location":"api/scala/quoted/Quotes$reflectModule$RefinedMethods.html","searchKeys":["tpt"]},{"name":"def toName: String","description":"scala.quoted.Quotes$reflectModule$RenameSelectorMethods","location":"api/scala/quoted/Quotes$reflectModule$RenameSelectorMethods.html","searchKeys":["toName"]},{"name":"given TypeDefMethods","description":"scala.quoted.Quotes$reflectModule$TypeDefMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeDefMethods.html","searchKeys":["TypeDefMethods"]},{"name":"val MinorVersion: Int","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["MinorVersion"]},{"name":"def update(index: Int, elem: T): Unit","description":"scala.collection.mutable.ArraySeq$$ofRef","location":"api/scala/collection/mutable/ArraySeq$$ofRef.html","searchKeys":["update"]},{"name":"object Tuple3Zipped","description":"scala.runtime.Tuple3Zipped$","location":"api/scala/runtime/Tuple3Zipped$.html","searchKeys":["Tuple3Zipped"]},{"name":"def enable(): Unit","description":"scala.sys.BooleanProp","location":"api/scala/sys/BooleanProp.html","searchKeys":["enable"]},{"name":"def _4: T4","description":"scala.Product11","location":"api/scala/Product11.html","searchKeys":["_4"]},{"name":"def enrichAsScalaFromDoubleToLongFunction(jf: DoubleToLongFunction): RichDoubleToLongFunctionAsFunction1","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsScalaFromDoubleToLongFunction"]},{"name":"def /(x: Int): Int","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["/"]},{"name":"def padTo[B >: Char](len: Int, elem: B): IndexedSeq[B]","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["padTo"]},{"name":"given UnapplyTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["UnapplyTypeTest"]},{"name":"def mapAsScalaMapConverter[K, V](m: Map[K, V]): AsScala[Map[K, V]]","description":"scala.collection.JavaConverters$","location":"api/scala/collection/JavaConverters$.html","searchKeys":["mapAsScalaMapConverter"]},{"name":"given InferredTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["InferredTypeTest"]},{"name":"def ScalaNumericValueClasses: List[Symbol]","description":"scala.quoted.Quotes$reflectModule$defnModule","location":"api/scala/quoted/Quotes$reflectModule$defnModule.html","searchKeys":["ScalaNumericValueClasses"]},{"name":"def insert(index: Int, x: Long): StringBuilder","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["insert"]},{"name":"object Using","description":"scala.util.Using$","location":"api/scala/util/Using$.html","searchKeys":["Using"]},{"name":"def tabulate[A](n1: Int, n2: Int, n3: Int, n4: Int, n5: Int)(f: (Int, Int, Int, Int, Int) => A)(evidence$14: ClassTag[A]): CC[CC[CC[CC[CC[A]]]]]","description":"scala.collection.ClassTagIterableFactory","location":"api/scala/collection/ClassTagIterableFactory.html","searchKeys":["tabulate"]},{"name":"given Tuple8FromExpr[T1, T2, T3, T4, T5, T6, T7, T8](using val x$1: Type[T1], val x$2: Type[T2], val x$3: Type[T3], val x$4: Type[T4], val x$5: Type[T5], val x$6: Type[T6], val x$7: Type[T7], val x$8: Type[T8], val x$9: FromExpr[T1], val x$10: FromExpr[T2], val x$11: FromExpr[T3], val x$12: FromExpr[T4], val x$13: FromExpr[T5], val x$14: FromExpr[T6], val x$15: FromExpr[T7], val x$16: FromExpr[T8]): FromExpr[(T1, T2, T3, T4, T5, T6, T7, T8)]","description":"scala.quoted.FromExpr$$Tuple8FromExpr","location":"api/scala/quoted/FromExpr$.html","searchKeys":["Tuple8FromExpr"]},{"name":"Enums","description":"","location":"docs/Enums/index.html","searchKeys":["Enums"]},{"name":"def sizeCompare(otherSize: Int): Int","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["sizeCompare"]},{"name":"def nonEmpty: Boolean","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["nonEmpty"]},{"name":"def enrichAsJavaPredicate[T](sf: T => Boolean): RichFunction1AsPredicate[T]","description":"scala.jdk.Priority1FunctionExtensions","location":"api/scala/jdk/Priority1FunctionExtensions.html","searchKeys":["enrichAsJavaPredicate"]},{"name":"def iterator: Iterator[A]","description":"scala.collection.mutable.LinkedHashSet","location":"api/scala/collection/mutable/LinkedHashSet.html","searchKeys":["iterator"]},{"name":"def javaIterator[B >: A]: Iterator[B]","description":"scala.collection.AnyStepper","location":"api/scala/collection/AnyStepper.html","searchKeys":["javaIterator"]},{"name":"val Unit: UnitManifest","description":"scala.reflect.Manifest$","location":"api/scala/reflect/Manifest$.html","searchKeys":["Unit"]},{"name":"class HashSet[A](initialCapacity: Int, loadFactor: Double) extends AbstractSet[A] with SetOps[A, [A] =>> HashSet[A], HashSet[A]] with StrictOptimizedIterableOps[A, [A] =>> HashSet[A], HashSet[A]] with IterableFactoryDefaults[A, [A] =>> HashSet[A]] with Serializable","description":"scala.collection.mutable.HashSet","location":"api/scala/collection/mutable/HashSet.html","searchKeys":["HashSet"]},{"name":"def ==(x: Short): Boolean","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["=="]},{"name":"type Seq[+A] = Seq[A]","description":"scala","location":"api/scala.html","searchKeys":["Seq"]},{"name":"val Object: Manifest[Object]","description":"scala.reflect.ClassManifestFactory$","location":"api/scala/reflect/ClassManifestFactory$.html","searchKeys":["Object"]},{"name":"def apply$mcDDI$sp(v1: Double, v2: Int): Double","description":"scala.runtime.java8.JFunction2$mcDDI$sp","location":"api/scala/runtime/java8/JFunction2$mcDDI$sp.html","searchKeys":["apply$mcDDI$sp"]},{"name":"val jByteStreamShape: StreamShape[Byte, IntStream, IntStepper]","description":"scala.collection.convert.StreamExtensions$$StreamShape$","location":"api/scala/collection/convert/StreamExtensions$$StreamShape$.html","searchKeys":["jByteStreamShape"]},{"name":"val x$38: FromExpr[T17]","description":"scala.quoted.FromExpr$$Tuple21FromExpr","location":"api/scala/quoted/FromExpr$$Tuple21FromExpr.html","searchKeys":["x$38"]},{"name":"def wrap: ClassTag[Array[T]]","description":"scala.reflect.ClassTag","location":"api/scala/reflect/ClassTag.html","searchKeys":["wrap"]},{"name":"Dropped: Symbol Literals","description":"","location":"docs/reference/dropped-features/symlits.html","searchKeys":["Dropped: Symbol Literals"]},{"name":"val CASEDEF: 155","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["CASEDEF"]},{"name":"type Right[+A, +B] = Right[A, B]","description":"scala","location":"api/scala.html","searchKeys":["Right"]},{"name":"val x$41: FromExpr[T19]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["x$41"]},{"name":"class AsJavaIntUnaryOperator(sf: Int => Int) extends IntUnaryOperator","description":"scala.jdk.FunctionWrappers$$AsJavaIntUnaryOperator","location":"api/scala/jdk/FunctionWrappers$$AsJavaIntUnaryOperator.html","searchKeys":["AsJavaIntUnaryOperator"]},{"name":"def filterNot(p: A => Boolean): Iterator[A]","description":"scala.collection.Iterator","location":"api/scala/collection/Iterator.html","searchKeys":["filterNot"]},{"name":"type List[+A] = List[A]","description":"scala","location":"api/scala.html","searchKeys":["List"]},{"name":"def this(initialBufferSize: Int)","description":"scala.collection.mutable.AnyRefMap","location":"api/scala/collection/mutable/AnyRefMap.html","searchKeys":["this"]},{"name":"trait JFunction1$mcDI$sp extends Any => Any with Serializable","description":"scala.runtime.java8.JFunction1$mcDI$sp","location":"api/scala/runtime/java8/JFunction1$mcDI$sp.html","searchKeys":["JFunction1$mcDI$sp"]},{"name":"class LeftPartitionMapped[A, A1, A2](underlying: SomeIterableOps[A], f: A => Either[A1, A2]) extends AbstractView[A1]","description":"scala.collection.View$$LeftPartitionMapped","location":"api/scala/collection/View$$LeftPartitionMapped.html","searchKeys":["LeftPartitionMapped"]},{"name":"class DummyImplicit","description":"scala.DummyImplicit","location":"api/scala/DummyImplicit.html","searchKeys":["DummyImplicit"]},{"name":"def length: Int","description":"scala.collection.SeqView$$Prepended","location":"api/scala/collection/SeqView$$Prepended.html","searchKeys":["length"]},{"name":"def unbox(x: Object): Float","description":"scala.Float$","location":"api/scala/Float$.html","searchKeys":["unbox"]},{"name":"def <:<(that: ClassTag[]): Boolean","description":"scala.reflect.ClassManifestDeprecatedApis","location":"api/scala/reflect/ClassManifestDeprecatedApis.html","searchKeys":["<:<"]},{"name":"def _5: T5","description":"scala.Product22","location":"api/scala/Product22.html","searchKeys":["_5"]},{"name":"Scaling DOT to Scala - Soundness","description":"","location":"blog/2016/02/17/scaling-dot-soundness.html","searchKeys":["Scaling DOT to Scala - Soundness"]},{"name":"def toCoarsest: Duration","description":"scala.concurrent.duration.Duration$$Infinite","location":"api/scala/concurrent/duration/Duration$$Infinite.html","searchKeys":["toCoarsest"]},{"name":"def goto(addr: Addr): Unit","description":"dotty.tools.tasty.TastyReader","location":"api/dotty/tools/tasty/TastyReader.html","searchKeys":["goto"]},{"name":"def nanoseconds[C](c: C)(ev: Classifier[C]): R","description":"scala.concurrent.duration.DurationConversions","location":"api/scala/concurrent/duration/DurationConversions.html","searchKeys":["nanoseconds"]},{"name":"def optionOrdering: Ordering[T]","description":"scala.math.Ordering$$OptionOrdering","location":"api/scala/math/Ordering$$OptionOrdering.html","searchKeys":["optionOrdering"]},{"name":"def get(key: K): Option[V]","description":"scala.collection.immutable.Map$$WithDefault","location":"api/scala/collection/immutable/Map$$WithDefault.html","searchKeys":["get"]},{"name":"class deprecatedOverriding(message: String, since: String) extends StaticAnnotation","description":"scala.deprecatedOverriding","location":"api/scala/deprecatedOverriding.html","searchKeys":["deprecatedOverriding"]},{"name":"type Abs[X <: Int] <: Int","description":"scala.compiletime.ops.int$","location":"api/scala/compiletime/ops/int$.html","searchKeys":["Abs"]},{"name":"def -(x: Short): Double","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["-"]},{"name":"def /(x: Int): Float","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["/"]},{"name":"val x$13: FromExpr[T4]","description":"scala.quoted.FromExpr$$Tuple9FromExpr","location":"api/scala/quoted/FromExpr$$Tuple9FromExpr.html","searchKeys":["x$13"]},{"name":"given given_FromString_String: FromString[String]","description":"scala.util.CommandLineParser$$FromString$$given_FromString_String$","location":"api/scala/util/CommandLineParser$$FromString$.html","searchKeys":["given_FromString_String"]},{"name":"def grouped(size: Int): Iterator[C]","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["grouped"]},{"name":"object Selectable","description":"scala.Selectable$","location":"api/scala/Selectable$.html","searchKeys":["Selectable"]},{"name":"def asJavaSeqIntStreamFromChar(cc: IterableOnce[Character]): IntStream","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaSeqIntStreamFromChar"]},{"name":"def apply(command: String, arguments: Seq[String]): ProcessBuilder","description":"scala.sys.process.ProcessCreation","location":"api/scala/sys/process/ProcessCreation.html","searchKeys":["apply"]},{"name":"def exact(cs: Array[Char]): BigDecimal","description":"scala.math.BigDecimal$","location":"api/scala/math/BigDecimal$.html","searchKeys":["exact"]},{"name":"class companionObject extends StaticAnnotation","description":"scala.annotation.meta.companionObject","location":"api/scala/annotation/meta/companionObject.html","searchKeys":["companionObject"]},{"name":"def exit(): Nothing","description":"scala.sys","location":"api/scala/sys.html","searchKeys":["exit"]},{"name":"def flatten[B](asIterable: A => IterableOnce[B], m: ClassTag[B]): Array[B]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["flatten"]},{"name":"def withPositioning(on: Boolean): Source","description":"scala.io.Source","location":"api/scala/io/Source.html","searchKeys":["withPositioning"]},{"name":"def toHours: Long","description":"scala.concurrent.duration.Duration","location":"api/scala/concurrent/duration/Duration.html","searchKeys":["toHours"]},{"name":"def >=(x: Float): Boolean","description":"scala.Double","location":"api/scala/Double.html","searchKeys":[">="]},{"name":"def apply(x1: Long): R","description":"scala.jdk.FunctionWrappers$$FromJavaLongFunction","location":"api/scala/jdk/FunctionWrappers$$FromJavaLongFunction.html","searchKeys":["apply"]},{"name":"def rem(x: Short, y: Short): Short","description":"scala.math.Numeric$$ShortIsIntegral","location":"api/scala/math/Numeric$$ShortIsIntegral.html","searchKeys":["rem"]},{"name":"def +=(elem: A): Growable[A]","description":"scala.collection.mutable.Growable","location":"api/scala/collection/mutable/Growable.html","searchKeys":["+="]},{"name":"class RichFunction2AsToLongBiFunction[T, U](underlying: (T, U) => Long) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichFunction2AsToLongBiFunction","location":"api/scala/jdk/FunctionWrappers$$RichFunction2AsToLongBiFunction.html","searchKeys":["RichFunction2AsToLongBiFunction"]},{"name":"def ceil: Double","description":"scala.runtime.RichDouble","location":"api/scala/runtime/RichDouble.html","searchKeys":["ceil"]},{"name":"object Manager","description":"scala.util.Using$$Manager$","location":"api/scala/util/Using$$Manager$.html","searchKeys":["Manager"]},{"name":"def newBuilder[K, V](evidence$3: Ordering[K]): Builder[(K, V), CollisionProofHashMap[K, V]]","description":"scala.collection.mutable.CollisionProofHashMap$","location":"api/scala/collection/mutable/CollisionProofHashMap$.html","searchKeys":["newBuilder"]},{"name":"def zip[This >: Tuple <: Tuple, T2 <: Tuple](t2: T2): Zip[This, T2]","description":"scala.Tuple","location":"api/scala/Tuple.html","searchKeys":["zip"]},{"name":"def toSet[B >: A]: Set[B]","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["toSet"]},{"name":"def update(idx: Int, elem: A): Unit","description":"scala.jdk.AnyAccumulator","location":"api/scala/jdk/AnyAccumulator.html","searchKeys":["update"]},{"name":"def head[T]: T","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["head"]},{"name":"trait TreeTraverser extends TreeAccumulator[Unit]","description":"scala.quoted.Quotes$reflectModule$TreeTraverser","location":"api/scala/quoted/Quotes$reflectModule$TreeTraverser.html","searchKeys":["TreeTraverser"]},{"name":"def forall(p: A => Boolean): Boolean","description":"scala.util.Either$$LeftProjection","location":"api/scala/util/Either$$LeftProjection.html","searchKeys":["forall"]},{"name":"trait InlinedModule","description":"scala.quoted.Quotes$reflectModule$InlinedModule","location":"api/scala/quoted/Quotes$reflectModule$InlinedModule.html","searchKeys":["InlinedModule"]},{"name":"package scala.annotation","description":"scala.annotation","location":"api/scala/annotation.html","searchKeys":["scala.annotation"]},{"name":"val untagged: SeqFactory[[T] =>> UnrolledBuffer[T]]","description":"scala.collection.mutable.UnrolledBuffer$","location":"api/scala/collection/mutable/UnrolledBuffer$.html","searchKeys":["untagged"]},{"name":"val x$17: Type[T17]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["x$17"]},{"name":"def FloatClass: Symbol","description":"scala.quoted.Quotes$reflectModule$defnModule","location":"api/scala/quoted/Quotes$reflectModule$defnModule.html","searchKeys":["FloatClass"]},{"name":"object LazyVals","description":"scala.runtime.LazyVals$","location":"api/scala/runtime/LazyVals$.html","searchKeys":["LazyVals"]},{"name":"class Drop[A](underlying: SomeIterableOps[A], n: Int) extends AbstractView[A]","description":"scala.collection.View$$Drop","location":"api/scala/collection/View$$Drop.html","searchKeys":["Drop"]},{"name":"def _14: T14","description":"scala.Product19","location":"api/scala/Product19.html","searchKeys":["_14"]},{"name":"def <=(x: Long): Boolean","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["<="]},{"name":"def |(x: Byte): Int","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["|"]},{"name":"val x$1: Type[L]","description":"scala.quoted.FromExpr$$RightFromExpr","location":"api/scala/quoted/FromExpr$$RightFromExpr.html","searchKeys":["x$1"]},{"name":"def _1: T1","description":"scala.Product16","location":"api/scala/Product16.html","searchKeys":["_1"]},{"name":"def -(x: Int): Int","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["-"]},{"name":"class Null$","description":"scala.runtime.Null$","location":"api/scala/runtime/Null$.html","searchKeys":["Null$"]},{"name":"def value: Any","description":"scala.quoted.Quotes$reflectModule$ConstantMethods","location":"api/scala/quoted/Quotes$reflectModule$ConstantMethods.html","searchKeys":["value"]},{"name":"def enrichAsScalaFromLongUnaryOperator(jf: LongUnaryOperator): RichLongUnaryOperatorAsFunction1","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsScalaFromLongUnaryOperator"]},{"name":"def <<(x: Int): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["<<"]},{"name":"def value: T","description":"scala.sys.Prop","location":"api/scala/sys/Prop.html","searchKeys":["value"]},{"name":"def -(x: Double): Double","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["-"]},{"name":"def filterInPlace(p: A => Boolean): SetOps[A, CC, C]","description":"scala.collection.mutable.SetOps","location":"api/scala/collection/mutable/SetOps.html","searchKeys":["filterInPlace"]},{"name":"def toString(radix: Int): String","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["toString"]},{"name":"def update(idx: Int, elem: Char): Unit","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["update"]},{"name":"def javaBigDecimal2bigDecimal(x: BigDecimal): BigDecimal","description":"scala.math.BigDecimal$","location":"api/scala/math/BigDecimal$.html","searchKeys":["javaBigDecimal2bigDecimal"]},{"name":"given ClosureMethods","description":"scala.quoted.Quotes$reflectModule$ClosureMethods","location":"api/scala/quoted/Quotes$reflectModule$ClosureMethods.html","searchKeys":["ClosureMethods"]},{"name":"def unconstrained: Set[Int]","description":"scala.collection.mutable.BitSet","location":"api/scala/collection/mutable/BitSet.html","searchKeys":["unconstrained"]},{"name":"def push(elem: A): Stack[A]","description":"scala.collection.mutable.Stack","location":"api/scala/collection/mutable/Stack.html","searchKeys":["push"]},{"name":"def abs(x: T): T","description":"scala.math.Numeric","location":"api/scala/math/Numeric.html","searchKeys":["abs"]},{"name":"def stableSort[K](a: Seq[K], f: (K, K) => Boolean)(evidence$7: ClassTag[K]): Array[K]","description":"scala.util.Sorting$","location":"api/scala/util/Sorting$.html","searchKeys":["stableSort"]},{"name":"def >=(x: Long): Boolean","description":"scala.Double","location":"api/scala/Double.html","searchKeys":[">="]},{"name":"trait JFunction1$mcIF$sp extends Any => Any with Serializable","description":"scala.runtime.java8.JFunction1$mcIF$sp","location":"api/scala/runtime/java8/JFunction1$mcIF$sp.html","searchKeys":["JFunction1$mcIF$sp"]},{"name":"trait AppliedTypeModule","description":"scala.quoted.Quotes$reflectModule$AppliedTypeModule","location":"api/scala/quoted/Quotes$reflectModule$AppliedTypeModule.html","searchKeys":["AppliedTypeModule"]},{"name":"def size: Int","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["size"]},{"name":"class StringHasSeqParStream(s: String)","description":"scala.collection.convert.StreamExtensions$StringHasSeqParStream","location":"api/scala/collection/convert/StreamExtensions$StringHasSeqParStream.html","searchKeys":["StringHasSeqParStream"]},{"name":"def >=(rhs: T): Boolean","description":"scala.math.Ordering$OrderingOps","location":"api/scala/math/Ordering$OrderingOps.html","searchKeys":[">="]},{"name":"def reset(): Source","description":"scala.io.Source","location":"api/scala/io/Source.html","searchKeys":["reset"]},{"name":"Type Lambdas","description":"","location":"docs/reference/new-types/type-lambdas.html","searchKeys":["Type Lambdas"]},{"name":"def splitAt(n: Int): (C, C)","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["splitAt"]},{"name":"def unapply(x: Expr[Set[T]])(using Quotes): Option[Set[T]]","description":"scala.quoted.FromExpr$$SetFromExpr","location":"api/scala/quoted/FromExpr$$SetFromExpr.html","searchKeys":["unapply"]},{"name":"def set(newValue: String): String","description":"scala.sys.Prop","location":"api/scala/sys/Prop.html","searchKeys":["set"]},{"name":"class RichFunction1AsUnaryOperator[T](underlying: T => T) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichFunction1AsUnaryOperator","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsUnaryOperator.html","searchKeys":["RichFunction1AsUnaryOperator"]},{"name":"def reduceRight(f: (A, A) => A): A","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["reduceRight"]},{"name":"def newBuilder[A]: Builder[A, Iterator[A]]","description":"scala.collection.Iterator$","location":"api/scala/collection/Iterator$.html","searchKeys":["newBuilder"]},{"name":"def length: Int","description":"scala.collection.immutable.ArraySeq$$ofInt","location":"api/scala/collection/immutable/ArraySeq$$ofInt.html","searchKeys":["length"]},{"name":"def println(x: Any): Unit","description":"scala.Console$","location":"api/scala/Console$.html","searchKeys":["println"]},{"name":"type ConstantType <: TypeRepr","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ConstantType"]},{"name":"def updated[V1 >: V](key: K, value: V1): ListMap[K, V1]","description":"scala.collection.immutable.ListMap","location":"api/scala/collection/immutable/ListMap.html","searchKeys":["updated"]},{"name":"trait JFunction2$mcIDD$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcIDD$sp","location":"api/scala/runtime/java8/JFunction2$mcIDD$sp.html","searchKeys":["JFunction2$mcIDD$sp"]},{"name":"def array: Array[AnyRef]","description":"scala.collection.mutable.ArrayDequeOps","location":"api/scala/collection/mutable/ArrayDequeOps.html","searchKeys":["array"]},{"name":"def empty[A]: Queue[A]","description":"scala.collection.mutable.Queue$","location":"api/scala/collection/mutable/Queue$.html","searchKeys":["empty"]},{"name":"def takeRight(n: Int): C","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["takeRight"]},{"name":"def partition(p: Char => Boolean): (String, String)","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["partition"]},{"name":"def sortedSetOrdering[CC <: ([X] =>> SortedSet[X]), T](ord: Ordering[T]): Ordering[CC[T]]","description":"scala.math.Ordering$$ExtraImplicits","location":"api/scala/math/Ordering$$ExtraImplicits.html","searchKeys":["sortedSetOrdering"]},{"name":"type RuntimeException = RuntimeException","description":"scala","location":"api/scala.html","searchKeys":["RuntimeException"]},{"name":"def asExprOf(using Type[T]): Expr[T]","description":"scala.quoted.Quotes$reflectModule$TreeMethods","location":"api/scala/quoted/Quotes$reflectModule$TreeMethods.html","searchKeys":["asExprOf"]},{"name":"val Float: FloatManifest","description":"scala.reflect.Manifest$","location":"api/scala/reflect/Manifest$.html","searchKeys":["Float"]},{"name":"trait ByteIsIntegral extends Integral[Byte]","description":"scala.math.Numeric$$ByteIsIntegral","location":"api/scala/math/Numeric$$ByteIsIntegral.html","searchKeys":["ByteIsIntegral"]},{"name":"def unapply(x: Expr[(T1, T2, T3, T4, T5, T6, T7, T8)])(using Quotes): Option[(T1, T2, T3, T4, T5, T6, T7, T8)]","description":"scala.quoted.FromExpr$$Tuple8FromExpr","location":"api/scala/quoted/FromExpr$$Tuple8FromExpr.html","searchKeys":["unapply"]},{"name":"def toLong(x: Short): Long","description":"scala.math.Numeric$$ShortIsIntegral","location":"api/scala/math/Numeric$$ShortIsIntegral.html","searchKeys":["toLong"]},{"name":"def convert(d: FiniteDuration): FiniteDuration","description":"scala.concurrent.duration.DurationConversions$$spanConvert$","location":"api/scala/concurrent/duration/DurationConversions$$spanConvert$.html","searchKeys":["convert"]},{"name":"def unapply(x: Assign): (Term, Term)","description":"scala.quoted.Quotes$reflectModule$AssignModule","location":"api/scala/quoted/Quotes$reflectModule$AssignModule.html","searchKeys":["unapply"]},{"name":"trait TermRefModule","description":"scala.quoted.Quotes$reflectModule$TermRefModule","location":"api/scala/quoted/Quotes$reflectModule$TermRefModule.html","searchKeys":["TermRefModule"]},{"name":"def collectFirst[B](f: PartialFunction[A, B]): Option[B]","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["collectFirst"]},{"name":"def ==(x: Char): Boolean","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["=="]},{"name":"object StructuralCallSite","description":"scala.runtime.StructuralCallSite$","location":"api/scala/runtime/StructuralCallSite$.html","searchKeys":["StructuralCallSite"]},{"name":"def apply(qualifier: Term, symbol: Symbol): Select","description":"scala.quoted.Quotes$reflectModule$SelectModule","location":"api/scala/quoted/Quotes$reflectModule$SelectModule.html","searchKeys":["apply"]},{"name":"trait JFunction0$mcS$sp extends () => Any with Serializable","description":"scala.runtime.java8.JFunction0$mcS$sp","location":"api/scala/runtime/java8/JFunction0$mcS$sp.html","searchKeys":["JFunction0$mcS$sp"]},{"name":"def copy(original: Tree)(result: TypeTree): ByName","description":"scala.quoted.Quotes$reflectModule$ByNameModule","location":"api/scala/quoted/Quotes$reflectModule$ByNameModule.html","searchKeys":["copy"]},{"name":"def byteswap32(v: Int): Int","description":"scala.util.hashing","location":"api/scala/util/hashing.html","searchKeys":["byteswap32"]},{"name":"val x$8: Type[T8]","description":"scala.quoted.FromExpr$$Tuple15FromExpr","location":"api/scala/quoted/FromExpr$$Tuple15FromExpr.html","searchKeys":["x$8"]},{"name":"def unary_~: Int","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["unary_~"]},{"name":"def apply(withIn: Boolean, log: ProcessLogger): ProcessIO","description":"scala.sys.process.BasicIO$","location":"api/scala/sys/process/BasicIO$.html","searchKeys":["apply"]},{"name":"def indexWhere[T](p: T => Boolean, from: Int): Int","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["indexWhere"]},{"name":"trait Shrinkable[-A]","description":"scala.collection.mutable.Shrinkable","location":"api/scala/collection/mutable/Shrinkable.html","searchKeys":["Shrinkable"]},{"name":"def unlift: PartialFunction[A, B]","description":"scala.Function1$$UnliftOps","location":"api/scala/Function1$$UnliftOps.html","searchKeys":["unlift"]},{"name":"def readNat(): Int","description":"dotty.tools.tasty.TastyReader","location":"api/dotty/tools/tasty/TastyReader.html","searchKeys":["readNat"]},{"name":"object any","description":"scala.compiletime.ops.any$","location":"api/scala/compiletime/ops/any$.html","searchKeys":["any"]},{"name":"def apply$mcF$sp(): Float","description":"scala.runtime.java8.JFunction0$mcF$sp","location":"api/scala/runtime/java8/JFunction0$mcF$sp.html","searchKeys":["apply$mcF$sp"]},{"name":"def newBuilder[K, V]: Builder[(K, V), LinkedHashMap[K, V]]","description":"scala.collection.mutable.LinkedHashMap$","location":"api/scala/collection/mutable/LinkedHashMap$.html","searchKeys":["newBuilder"]},{"name":"val Char: CharManifest","description":"scala.reflect.Manifest$","location":"api/scala/reflect/Manifest$.html","searchKeys":["Char"]},{"name":"trait RefModule","description":"scala.quoted.Quotes$reflectModule$RefModule","location":"api/scala/quoted/Quotes$reflectModule$RefModule.html","searchKeys":["RefModule"]},{"name":"def >(x: Char): Boolean","description":"scala.Char","location":"api/scala/Char.html","searchKeys":[">"]},{"name":"given TypeIdentMethods","description":"scala.quoted.Quotes$reflectModule$TypeIdentMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeIdentMethods.html","searchKeys":["TypeIdentMethods"]},{"name":"object +:","description":"scala.collection.package$$+:$","location":"api/scala/collection/package$$+:$.html","searchKeys":["+:"]},{"name":"trait App extends DelayedInit","description":"scala.App","location":"api/scala/App.html","searchKeys":["App"]},{"name":"val x$24: FromExpr[T3]","description":"scala.quoted.FromExpr$$Tuple21FromExpr","location":"api/scala/quoted/FromExpr$$Tuple21FromExpr.html","searchKeys":["x$24"]},{"name":"def map[V2](f: (Long, T) => (Long, V2)): LongMap[V2]","description":"scala.collection.immutable.LongMap","location":"api/scala/collection/immutable/LongMap.html","searchKeys":["map"]},{"name":"given SomeFromExpr[T](using val x$1: Type[T], val x$2: FromExpr[T]): FromExpr[Some[T]]","description":"scala.quoted.FromExpr$$SomeFromExpr","location":"api/scala/quoted/FromExpr$.html","searchKeys":["SomeFromExpr"]},{"name":"class RichLongToDoubleFunctionAsFunction1(underlying: LongToDoubleFunction) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichLongToDoubleFunctionAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichLongToDoubleFunctionAsFunction1.html","searchKeys":["RichLongToDoubleFunctionAsFunction1"]},{"name":"def toRadians: Float","description":"scala.runtime.RichFloat","location":"api/scala/runtime/RichFloat.html","searchKeys":["toRadians"]},{"name":"Divergences between Scala 2 and Dotty","description":"","location":"docs/contributing/scala2-vs-scala3.html","searchKeys":["Divergences between Scala 2 and Dotty"]},{"name":"def unapply(constant: NullConstant): Boolean","description":"scala.quoted.Quotes$reflectModule$NullConstantModule","location":"api/scala/quoted/Quotes$reflectModule$NullConstantModule.html","searchKeys":["unapply"]},{"name":"def apply(x: Either[L, R])(using Quotes): Expr[Either[L, R]]","description":"scala.quoted.ToExpr$$EitherToExpr","location":"api/scala/quoted/ToExpr$$EitherToExpr.html","searchKeys":["apply"]},{"name":"def nanoseconds: FiniteDuration","description":"scala.concurrent.duration.DurationConversions","location":"api/scala/concurrent/duration/DurationConversions.html","searchKeys":["nanoseconds"]},{"name":"trait LowPriorityEquiv","description":"scala.math.LowPriorityEquiv","location":"api/scala/math/LowPriorityEquiv.html","searchKeys":["LowPriorityEquiv"]},{"name":"trait LowPriorityOrderingImplicits","description":"scala.math.LowPriorityOrderingImplicits","location":"api/scala/math/LowPriorityOrderingImplicits.html","searchKeys":["LowPriorityOrderingImplicits"]},{"name":"given GivenSelectorMethods","description":"scala.quoted.Quotes$reflectModule$GivenSelectorMethods","location":"api/scala/quoted/Quotes$reflectModule$GivenSelectorMethods.html","searchKeys":["GivenSelectorMethods"]},{"name":"Enumerations","description":"","location":"docs/reference/enums/enums.html","searchKeys":["Enumerations"]},{"name":"trait IntIsIntegral extends Integral[Int]","description":"scala.math.Numeric$$IntIsIntegral","location":"api/scala/math/Numeric$$IntIsIntegral.html","searchKeys":["IntIsIntegral"]},{"name":"def appendAll(xs: String): StringBuilder","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["appendAll"]},{"name":"val x$4: Type[T4]","description":"scala.quoted.FromExpr$$Tuple15FromExpr","location":"api/scala/quoted/FromExpr$$Tuple15FromExpr.html","searchKeys":["x$4"]},{"name":"def ==(x: Int): Boolean","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["=="]},{"name":"def iterator: Iterator[(K, V)]","description":"scala.collection.immutable.Map$$Map4","location":"api/scala/collection/immutable/Map$$Map4.html","searchKeys":["iterator"]},{"name":"type <=[X <: Int, Y <: Int] <: Boolean","description":"scala.compiletime.ops.int$","location":"api/scala/compiletime/ops/int$.html","searchKeys":["<="]},{"name":"class FromJavaBinaryOperator[T](jf: BinaryOperator[T]) extends (T, T) => T","description":"scala.jdk.FunctionWrappers$$FromJavaBinaryOperator","location":"api/scala/jdk/FunctionWrappers$$FromJavaBinaryOperator.html","searchKeys":["FromJavaBinaryOperator"]},{"name":"def length: Int","description":"scala.collection.Iterator","location":"api/scala/collection/Iterator.html","searchKeys":["length"]},{"name":"def _7: T7","description":"scala.Product16","location":"api/scala/Product16.html","searchKeys":["_7"]},{"name":"def productArity: Int","description":"scala.Product","location":"api/scala/Product.html","searchKeys":["productArity"]},{"name":"val Long: LongManifest","description":"scala.reflect.Manifest$","location":"api/scala/reflect/Manifest$.html","searchKeys":["Long"]},{"name":"object AccumulatorFactoryInfo extends LowPriorityAccumulatorFactoryInfo","description":"scala.collection.convert.StreamExtensions$$AccumulatorFactoryInfo$","location":"api/scala/collection/convert/StreamExtensions$$AccumulatorFactoryInfo$.html","searchKeys":["AccumulatorFactoryInfo"]},{"name":"package scala.collection.concurrent","description":"scala.collection.concurrent","location":"api/scala/collection/concurrent.html","searchKeys":["scala.collection.concurrent"]},{"name":"def unary_+: Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["unary_+"]},{"name":"Resources","description":"","location":"docs/Resources/index.html","searchKeys":["Resources"]},{"name":"def unapplySeq(seq: Seq[A]): Option[Seq[B]]","description":"scala.PartialFunction$$ElementWiseExtractor","location":"api/scala/PartialFunction$$ElementWiseExtractor.html","searchKeys":["unapplySeq"]},{"name":"def copySliceToArray(srcStart: Int, dest: Array[], destStart: Int, maxItems: Int): dest","description":"scala.collection.mutable.ArrayDequeOps","location":"api/scala/collection/mutable/ArrayDequeOps.html","searchKeys":["copySliceToArray"]},{"name":"def &(x: Boolean): Boolean","description":"scala.Boolean","location":"api/scala/Boolean.html","searchKeys":["&"]},{"name":"def apply(idx: Int): T","description":"scala.collection.mutable.UnrolledBuffer$$Unrolled","location":"api/scala/collection/mutable/UnrolledBuffer$$Unrolled.html","searchKeys":["apply"]},{"name":"type MatchTypeTree <: TypeTree","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["MatchTypeTree"]},{"name":"given RefinedMethods","description":"scala.quoted.Quotes$reflectModule$RefinedMethods","location":"api/scala/quoted/Quotes$reflectModule$RefinedMethods.html","searchKeys":["RefinedMethods"]},{"name":"def resource[R, A](resource: R)(body: R => A)(releasable: Releasable[R]): A","description":"scala.util.Using$","location":"api/scala/util/Using$.html","searchKeys":["resource"]},{"name":"def memberType(member: Symbol): TypeRepr","description":"scala.quoted.Quotes$reflectModule$TypeReprMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html","searchKeys":["memberType"]},{"name":"def _16: T16","description":"scala.Product21","location":"api/scala/Product21.html","searchKeys":["_16"]},{"name":"def lteq(other: Duration): Boolean","description":"scala.concurrent.duration.Duration","location":"api/scala/concurrent/duration/Duration.html","searchKeys":["lteq"]},{"name":"def newMethod(parent: Symbol, name: String, tpe: TypeRepr, flags: Flags, privateWithin: Symbol): Symbol","description":"scala.quoted.Quotes$reflectModule$SymbolModule","location":"api/scala/quoted/Quotes$reflectModule$SymbolModule.html","searchKeys":["newMethod"]},{"name":"type SomeIterableConstr[X, Y] = IterableOps[, AnyConstr, ]","description":"scala.collection.MapView$","location":"api/scala/collection/MapView$.html","searchKeys":["SomeIterableConstr"]},{"name":"def coll: C & CC[K, V]","description":"scala.collection.immutable.MapOps","location":"api/scala/collection/immutable/MapOps.html","searchKeys":["coll"]},{"name":"val x$12: Type[T12]","description":"scala.quoted.FromExpr$$Tuple15FromExpr","location":"api/scala/quoted/FromExpr$$Tuple15FromExpr.html","searchKeys":["x$12"]},{"name":"def raw(args: Any*): String","description":"scala.StringContext","location":"api/scala/StringContext.html","searchKeys":["raw"]},{"name":"def apply(x1: T, x2: T): T","description":"scala.jdk.FunctionWrappers$$FromJavaBinaryOperator","location":"api/scala/jdk/FunctionWrappers$$FromJavaBinaryOperator.html","searchKeys":["apply"]},{"name":"def assemble(): Unit","description":"dotty.tools.tasty.TastyBuffer","location":"api/dotty/tools/tasty/TastyBuffer.html","searchKeys":["assemble"]},{"name":"def fromFile(name: String)(codec: Codec): BufferedSource","description":"scala.io.Source$","location":"api/scala/io/Source$.html","searchKeys":["fromFile"]},{"name":"def newMethod(parent: Symbol, name: String, tpe: TypeRepr): Symbol","description":"scala.quoted.Quotes$reflectModule$SymbolModule","location":"api/scala/quoted/Quotes$reflectModule$SymbolModule.html","searchKeys":["newMethod"]},{"name":"def _2: T2","description":"scala.Product10","location":"api/scala/Product10.html","searchKeys":["_2"]},{"name":"def initialized: Boolean","description":"scala.runtime.LazyBoolean","location":"api/scala/runtime/LazyBoolean.html","searchKeys":["initialized"]},{"name":"def scala$collection$immutable$IndexedSeqOps$$super$slice(from: Int, until: Int): C","description":"scala.collection.immutable.IndexedSeqOps","location":"api/scala/collection/immutable/IndexedSeqOps.html","searchKeys":["scala$collection$immutable$IndexedSeqOps$$super$slice"]},{"name":"class Delegate[CC <: ([_$43] =>> Any)](delegate: EvidenceIterableFactory[CC, Ordering]) extends Delegate[CC, Ordering] with SortedIterableFactory[CC]","description":"scala.collection.SortedIterableFactory$$Delegate","location":"api/scala/collection/SortedIterableFactory$$Delegate.html","searchKeys":["Delegate"]},{"name":"def asScalaFromDoubleSupplier(jf: DoubleSupplier): () => Double","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asScalaFromDoubleSupplier"]},{"name":"def termSymbol: Symbol","description":"scala.quoted.Quotes$reflectModule$TypeReprMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html","searchKeys":["termSymbol"]},{"name":"val SimpleSelector: SimpleSelectorModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["SimpleSelector"]},{"name":"def apply(l: Long): BigInt","description":"scala.math.BigInt$","location":"api/scala/math/BigInt$.html","searchKeys":["apply"]},{"name":"def result(): LongMap[V]","description":"scala.collection.mutable.LongMap$$LongMapBuilder","location":"api/scala/collection/mutable/LongMap$$LongMapBuilder.html","searchKeys":["result"]},{"name":"val msg: String","description":"scala.util.CommandLineParser$$ParseError","location":"api/scala/util/CommandLineParser$$ParseError.html","searchKeys":["msg"]},{"name":"class SingletonProxy(val value: AnyRef) extends Product","description":"scala.deriving.Mirror$$SingletonProxy","location":"api/scala/deriving/Mirror$$SingletonProxy.html","searchKeys":["SingletonProxy"]},{"name":"val ByteConstant: ByteConstantModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ByteConstant"]},{"name":"type DefDef <: Definition","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["DefDef"]},{"name":"object StrictEquiv extends StrictEquiv","description":"scala.math.Equiv$$Float$$StrictEquiv$","location":"api/scala/math/Equiv$$Float$$StrictEquiv$.html","searchKeys":["StrictEquiv"]},{"name":"def fold[C](fa: A => C, fb: B => C): C","description":"scala.util.Either","location":"api/scala/util/Either.html","searchKeys":["fold"]},{"name":"Union Types","description":"","location":"docs/reference/new-types/union-types.html","searchKeys":["Union Types"]},{"name":"def from(start: Int): Stream[Int]","description":"scala.collection.immutable.Stream$","location":"api/scala/collection/immutable/Stream$.html","searchKeys":["from"]},{"name":"def parseRemainingArguments[T](args: Array[String], n: Int)(using fs: FromString[T]): List[T]","description":"scala.util.CommandLineParser$","location":"api/scala/util/CommandLineParser$.html","searchKeys":["parseRemainingArguments"]},{"name":"val MaxValue: 32767","description":"scala.Short$","location":"api/scala/Short$.html","searchKeys":["MaxValue"]},{"name":"val SECONDS: TimeUnit","description":"scala.concurrent.duration","location":"api/scala/concurrent/duration.html","searchKeys":["SECONDS"]},{"name":"Announcing Dotty 0.6.0 and 0.7.0-RC1","description":"","location":"blog/2018/03/05/seventh-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.6.0 and 0.7.0-RC1"]},{"name":"def asJava: List[A]","description":"scala.collection.convert.AsJavaExtensions$BufferHasAsJava","location":"api/scala/collection/convert/AsJavaExtensions$BufferHasAsJava.html","searchKeys":["asJava"]},{"name":"def specificIterableFactory: Factory[A, C]","description":"scala.collection.SpecificIterableFactory","location":"api/scala/collection/SpecificIterableFactory.html","searchKeys":["specificIterableFactory"]},{"name":"given Tuple3FromExpr[T1, T2, T3](using val x$1: Type[T1], val x$2: Type[T2], val x$3: Type[T3], val x$4: FromExpr[T1], val x$5: FromExpr[T2], val x$6: FromExpr[T3]): FromExpr[(T1, T2, T3)]","description":"scala.quoted.FromExpr$$Tuple3FromExpr","location":"api/scala/quoted/FromExpr$.html","searchKeys":["Tuple3FromExpr"]},{"name":"def removed(key: K): TreeSeqMap[K, V]","description":"scala.collection.immutable.TreeSeqMap","location":"api/scala/collection/immutable/TreeSeqMap.html","searchKeys":["removed"]},{"name":"def scala$collection$LinearSeqOps$$super$sameElements[B >: A](that: IterableOnce[B]): Boolean","description":"scala.collection.LinearSeqOps","location":"api/scala/collection/LinearSeqOps.html","searchKeys":["scala$collection$LinearSeqOps$$super$sameElements"]},{"name":"def isExpr: Boolean","description":"scala.quoted.Quotes$reflectModule$TreeMethods","location":"api/scala/quoted/Quotes$reflectModule$TreeMethods.html","searchKeys":["isExpr"]},{"name":"def append(x: Long): StringBuilder","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["append"]},{"name":"def asScalaFromConsumer[T](jf: Consumer[T]): T => BoxedUnit","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asScalaFromConsumer"]},{"name":"def snapshot(): TrieMap[K, V]","description":"scala.collection.concurrent.TrieMap","location":"api/scala/collection/concurrent/TrieMap.html","searchKeys":["snapshot"]},{"name":"def args: List[TypeRepr]","description":"scala.quoted.Quotes$reflectModule$AppliedTypeMethods","location":"api/scala/quoted/Quotes$reflectModule$AppliedTypeMethods.html","searchKeys":["args"]},{"name":"def cons(x: Any, self: Tuple): Tuple","description":"scala.runtime.Tuples$","location":"api/scala/runtime/Tuples$.html","searchKeys":["cons"]},{"name":"val x$36: FromExpr[T18]","description":"scala.quoted.FromExpr$$Tuple18FromExpr","location":"api/scala/quoted/FromExpr$$Tuple18FromExpr.html","searchKeys":["x$36"]},{"name":"def Case: Flags","description":"scala.quoted.Quotes$reflectModule$FlagsModule","location":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html","searchKeys":["Case"]},{"name":"class Deferrer[A] extends AnyVal","description":"scala.collection.immutable.LazyList$$Deferrer","location":"api/scala/collection/immutable/LazyList$$Deferrer.html","searchKeys":["Deferrer"]},{"name":"class Tuple17[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16, +T17](_1: T1, _2: T2, _3: T3, _4: T4, _5: T5, _6: T6, _7: T7, _8: T8, _9: T9, _10: T10, _11: T11, _12: T12, _13: T13, _14: T14, _15: T15, _16: T16, _17: T17) extends Product17[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17]","description":"scala.Tuple17","location":"api/scala/Tuple17.html","searchKeys":["Tuple17"]},{"name":"def forall(f: B => Boolean): Boolean","description":"scala.util.Either","location":"api/scala/util/Either.html","searchKeys":["forall"]},{"name":"class AbstractFunction20[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, -T14, -T15, -T16, -T17, -T18, -T19, -T20, +R] extends (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) => R","description":"scala.runtime.AbstractFunction20","location":"api/scala/runtime/AbstractFunction20.html","searchKeys":["AbstractFunction20"]},{"name":"given DoubleToExpr[T <: Double]: ToExpr[T]","description":"scala.quoted.ToExpr$$DoubleToExpr","location":"api/scala/quoted/ToExpr$.html","searchKeys":["DoubleToExpr"]},{"name":"def _12: T12","description":"scala.Product13","location":"api/scala/Product13.html","searchKeys":["_12"]},{"name":"def getOrElse[B1 >: B](or: => B1): B1","description":"scala.util.Either","location":"api/scala/util/Either.html","searchKeys":["getOrElse"]},{"name":"def flatten[S](ev: T <:< Future[S]): Future[S]","description":"scala.concurrent.Future","location":"api/scala/concurrent/Future.html","searchKeys":["flatten"]},{"name":"def EmptyPackageClass: Symbol","description":"scala.quoted.Quotes$reflectModule$defnModule","location":"api/scala/quoted/Quotes$reflectModule$defnModule.html","searchKeys":["EmptyPackageClass"]},{"name":"def run(connectInput: Boolean): Process","description":"scala.sys.process.ProcessBuilder","location":"api/scala/sys/process/ProcessBuilder.html","searchKeys":["run"]},{"name":"def toByteArray: Array[Byte]","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["toByteArray"]},{"name":"def _19: T19","description":"scala.Product19","location":"api/scala/Product19.html","searchKeys":["_19"]},{"name":"val Boolean: BooleanManifest","description":"scala.reflect.ClassTag$","location":"api/scala/reflect/ClassTag$.html","searchKeys":["Boolean"]},{"name":"def foreachValue[A](f: V => A): Unit","description":"scala.collection.mutable.AnyRefMap","location":"api/scala/collection/mutable/AnyRefMap.html","searchKeys":["foreachValue"]},{"name":"def +(x: Byte): Double","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["+"]},{"name":"def apply[T](n: Int): T","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["apply"]},{"name":"def foreach[U](f: (El1, El2, El3) => U): Unit","description":"scala.collection.LazyZip3","location":"api/scala/collection/LazyZip3.html","searchKeys":["foreach"]},{"name":"def isEmpty: Boolean","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["isEmpty"]},{"name":"def Tuple2[T1, T2](eqv1: Equiv[T1], eqv2: Equiv[T2]): Equiv[(T1, T2)]","description":"scala.math.Equiv$","location":"api/scala/math/Equiv$.html","searchKeys":["Tuple2"]},{"name":"trait MatchData","description":"scala.util.matching.Regex$$MatchData","location":"api/scala/util/matching/Regex$$MatchData.html","searchKeys":["MatchData"]},{"name":"def enrichAsScalaFromLongBinaryOperator(jf: LongBinaryOperator): RichLongBinaryOperatorAsFunction2","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsScalaFromLongBinaryOperator"]},{"name":"def diff[B >: A](that: Seq[B]): C","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["diff"]},{"name":"def _13: T13","description":"scala.Product16","location":"api/scala/Product16.html","searchKeys":["_13"]},{"name":"def iterableAsScalaIterableConverter[A](i: Iterable[A]): AsScala[Iterable[A]]","description":"scala.collection.JavaConverters$","location":"api/scala/collection/JavaConverters$.html","searchKeys":["iterableAsScalaIterableConverter"]},{"name":"def lazyLines_!(log: ProcessLogger): LazyList[String]","description":"scala.sys.process.ProcessBuilder","location":"api/scala/sys/process/ProcessBuilder.html","searchKeys":["lazyLines_!"]},{"name":"def min[B >: A](ord: Ordering[B]): A","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["min"]},{"name":"def subtractOne(key: Long): LongMap[V]","description":"scala.collection.mutable.LongMap","location":"api/scala/collection/mutable/LongMap.html","searchKeys":["subtractOne"]},{"name":"given given_FromString_Long: FromString[Long]","description":"scala.util.CommandLineParser$$FromString$$given_FromString_Long$","location":"api/scala/util/CommandLineParser$$FromString$.html","searchKeys":["given_FromString_Long"]},{"name":"def this(types: Specializable*)","description":"scala.specialized","location":"api/scala/specialized.html","searchKeys":["this"]},{"name":"class FromJavaIntSupplier(jf: IntSupplier) extends () => Int","description":"scala.jdk.FunctionWrappers$$FromJavaIntSupplier","location":"api/scala/jdk/FunctionWrappers$$FromJavaIntSupplier.html","searchKeys":["FromJavaIntSupplier"]},{"name":"def clear(): Unit","description":"scala.collection.mutable.TreeSet","location":"api/scala/collection/mutable/TreeSet.html","searchKeys":["clear"]},{"name":"def ord: Ordering[T]","description":"scala.runtime.OrderedProxy","location":"api/scala/runtime/OrderedProxy.html","searchKeys":["ord"]},{"name":"def apply(low: TypeTree, hi: TypeTree): TypeBoundsTree","description":"scala.quoted.Quotes$reflectModule$TypeBoundsTreeModule","location":"api/scala/quoted/Quotes$reflectModule$TypeBoundsTreeModule.html","searchKeys":["apply"]},{"name":"def inclusive(start: BigDecimal, end: BigDecimal, step: BigDecimal): Inclusive[BigDecimal]","description":"scala.collection.immutable.Range$$BigDecimal$","location":"api/scala/collection/immutable/Range$$BigDecimal$.html","searchKeys":["inclusive"]},{"name":"def canPipeTo: Boolean","description":"scala.sys.process.ProcessBuilder","location":"api/scala/sys/process/ProcessBuilder.html","searchKeys":["canPipeTo"]},{"name":"trait GivenSelectorModule","description":"scala.quoted.Quotes$reflectModule$GivenSelectorModule","location":"api/scala/quoted/Quotes$reflectModule$GivenSelectorModule.html","searchKeys":["GivenSelectorModule"]},{"name":"val x$5: Type[T5]","description":"scala.quoted.FromExpr$$Tuple7FromExpr","location":"api/scala/quoted/FromExpr$$Tuple7FromExpr.html","searchKeys":["x$5"]},{"name":"def map[B1](f: B => B1): Either[A, B1]","description":"scala.util.Either","location":"api/scala/util/Either.html","searchKeys":["map"]},{"name":"def <<(n: Int): BigInt","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["<<"]},{"name":"def /(that: BigDecimal): BigDecimal","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["/"]},{"name":"def apply(): NullConstant","description":"scala.quoted.Quotes$reflectModule$NullConstantModule","location":"api/scala/quoted/Quotes$reflectModule$NullConstantModule.html","searchKeys":["apply"]},{"name":"def declarations: List[Symbol]","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["declarations"]},{"name":"def wrapAccess[T](body: => T): Option[T]","description":"scala.sys.SystemProperties","location":"api/scala/sys/SystemProperties.html","searchKeys":["wrapAccess"]},{"name":"def apply(x1: T, x2: U): R","description":"scala.jdk.FunctionWrappers$$AsJavaBiFunction","location":"api/scala/jdk/FunctionWrappers$$AsJavaBiFunction.html","searchKeys":["apply"]},{"name":"def end: Int","description":"scala.quoted.Quotes$reflectModule$PositionMethods","location":"api/scala/quoted/Quotes$reflectModule$PositionMethods.html","searchKeys":["end"]},{"name":"package scala.jdk.javaapi","description":"scala.jdk.javaapi","location":"api/scala/jdk/javaapi.html","searchKeys":["scala.jdk.javaapi"]},{"name":"def #>(out: => OutputStream): ProcessBuilder","description":"scala.sys.process.ProcessBuilder$$Source","location":"api/scala/sys/process/ProcessBuilder$$Source.html","searchKeys":["#>"]},{"name":"def value: T","description":"scala.util.DynamicVariable","location":"api/scala/util/DynamicVariable.html","searchKeys":["value"]},{"name":"def emptyBooleanIArray: IArray[Boolean]","description":"scala.IArray$package$$IArray$","location":"api/scala/IArray$package$$IArray$.html","searchKeys":["emptyBooleanIArray"]},{"name":"def dropWhile(p: Char => Boolean): String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["dropWhile"]},{"name":"def nn[T](x: T | Null): x & T","description":"scala.runtime.Scala3RunTime$","location":"api/scala/runtime/Scala3RunTime$.html","searchKeys":["nn"]},{"name":"trait LiteralModule","description":"scala.quoted.Quotes$reflectModule$LiteralModule","location":"api/scala/quoted/Quotes$reflectModule$LiteralModule.html","searchKeys":["LiteralModule"]},{"name":"val Iterator: Iterator","description":"scala","location":"api/scala.html","searchKeys":["Iterator"]},{"name":"given Tuple5FromExpr[T1, T2, T3, T4, T5](using val x$1: Type[T1], val x$2: Type[T2], val x$3: Type[T3], val x$4: Type[T4], val x$5: Type[T5], val x$6: FromExpr[T1], val x$7: FromExpr[T2], val x$8: FromExpr[T3], val x$9: FromExpr[T4], val x$10: FromExpr[T5]): FromExpr[(T1, T2, T3, T4, T5)]","description":"scala.quoted.FromExpr$$Tuple5FromExpr","location":"api/scala/quoted/FromExpr$$Tuple5FromExpr.html","searchKeys":["Tuple5FromExpr"]},{"name":"Erased Terms","description":"","location":"docs/reference/metaprogramming/erased-terms.html","searchKeys":["Erased Terms"]},{"name":"val unit: Future[Unit]","description":"scala.concurrent.Future$","location":"api/scala/concurrent/Future$.html","searchKeys":["unit"]},{"name":"def unzip3[A1, A2, A3](asTriple: A => (A1, A2, A3), ct1: ClassTag[A1], ct2: ClassTag[A2], ct3: ClassTag[A3]): (Array[A1], Array[A2], Array[A3])","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["unzip3"]},{"name":"def apply$mcIJ$sp(v1: Long): Int","description":"scala.runtime.java8.JFunction1$mcIJ$sp","location":"api/scala/runtime/java8/JFunction1$mcIJ$sp.html","searchKeys":["apply$mcIJ$sp"]},{"name":"def withInput(write: OutputStream => Unit): ProcessIO","description":"scala.sys.process.ProcessIO","location":"api/scala/sys/process/ProcessIO.html","searchKeys":["withInput"]},{"name":"def foldTree(x: Unit, tree: Tree)(owner: Symbol): Unit","description":"scala.quoted.Quotes$reflectModule$TreeTraverser","location":"api/scala/quoted/Quotes$reflectModule$TreeTraverser.html","searchKeys":["foldTree"]},{"name":"def stringOf(arg: Any): String","description":"scala.runtime.ScalaRunTime$","location":"api/scala/runtime/ScalaRunTime$.html","searchKeys":["stringOf"]},{"name":"def !=(x: Byte): Boolean","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["!="]},{"name":"class AsJavaLongToIntFunction(sf: Long => Int) extends LongToIntFunction","description":"scala.jdk.FunctionWrappers$$AsJavaLongToIntFunction","location":"api/scala/jdk/FunctionWrappers$$AsJavaLongToIntFunction.html","searchKeys":["AsJavaLongToIntFunction"]},{"name":"def !=(x: Double): Boolean","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["!="]},{"name":"given ExportMethods","description":"scala.quoted.Quotes$reflectModule$ExportMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ExportMethods"]},{"name":"def unapply(x: CaseDef): (Tree, Option[Term], Term)","description":"scala.quoted.Quotes$reflectModule$CaseDefModule","location":"api/scala/quoted/Quotes$reflectModule$CaseDefModule.html","searchKeys":["unapply"]},{"name":"def +(x: Char): Int","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["+"]},{"name":"def contains(elem: A): Boolean","description":"scala.collection.immutable.Set$$Set2","location":"api/scala/collection/immutable/Set$$Set2.html","searchKeys":["contains"]},{"name":"object Unit extends UnitOrdering","description":"scala.math.Ordering$$Unit$","location":"api/scala/math/Ordering$$Unit$.html","searchKeys":["Unit"]},{"name":"given SeqFromExpr[T](using val x$1: Type[T], val x$2: FromExpr[T]): FromExpr[Seq[T]]","description":"scala.quoted.FromExpr$$SeqFromExpr","location":"api/scala/quoted/FromExpr$.html","searchKeys":["SeqFromExpr"]},{"name":"object Symbol extends UniquenessCache[String, Symbol]","description":"scala.Symbol$","location":"api/scala/Symbol$.html","searchKeys":["Symbol"]},{"name":"type GenSeq[+X] = Seq[X]","description":"scala.collection","location":"api/scala/collection.html","searchKeys":["GenSeq"]},{"name":"val x$1: Type[T1]","description":"scala.quoted.FromExpr$$Tuple3FromExpr","location":"api/scala/quoted/FromExpr$$Tuple3FromExpr.html","searchKeys":["x$1"]},{"name":"def |(x: Int): Int","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["|"]},{"name":"def %(x: Char): Int","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["%"]},{"name":"def prependedAll[B >: A](prefix: IterableOnce[B])(evidence$12: ClassTag[B]): Array[B]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["prependedAll"]},{"name":"def assertFailed(): Nothing","description":"scala.runtime.Scala3RunTime$","location":"api/scala/runtime/Scala3RunTime$.html","searchKeys":["assertFailed"]},{"name":"def %(x: Short): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["%"]},{"name":"def asJavaIntFunction: IntFunction[R]","description":"scala.jdk.FunctionWrappers$$RichFunction1AsIntFunction","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsIntFunction.html","searchKeys":["asJavaIntFunction"]},{"name":"def %(x: Short): Double","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["%"]},{"name":"def remove(): Boolean","description":"scala.sys.ShutdownHookThread","location":"api/scala/sys/ShutdownHookThread.html","searchKeys":["remove"]},{"name":"object WeakReference","description":"scala.ref.WeakReference$","location":"api/scala/ref/WeakReference$.html","searchKeys":["WeakReference"]},{"name":"type GivenSelector <: Selector","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["GivenSelector"]},{"name":"def apply[T](r: => T): Try[T]","description":"scala.util.Try$","location":"api/scala/util/Try$.html","searchKeys":["apply"]},{"name":"def asScala[A, B](m: ConcurrentMap[A, B]): Map[A, B]","description":"scala.collection.convert.AsScalaConverters","location":"api/scala/collection/convert/AsScalaConverters.html","searchKeys":["asScala"]},{"name":"def sign: T","description":"scala.runtime.ScalaNumberProxy","location":"api/scala/runtime/ScalaNumberProxy.html","searchKeys":["sign"]},{"name":"def quot(x: Byte, y: Byte): Byte","description":"scala.math.Numeric$$ByteIsIntegral","location":"api/scala/math/Numeric$$ByteIsIntegral.html","searchKeys":["quot"]},{"name":"val x$21: FromExpr[T9]","description":"scala.quoted.FromExpr$$Tuple12FromExpr","location":"api/scala/quoted/FromExpr$$Tuple12FromExpr.html","searchKeys":["x$21"]},{"name":"def apply(cases: List[CaseDef]): SummonFrom","description":"scala.quoted.Quotes$reflectModule$SummonFromModule","location":"api/scala/quoted/Quotes$reflectModule$SummonFromModule.html","searchKeys":["apply"]},{"name":"trait ParamRefModule","description":"scala.quoted.Quotes$reflectModule$ParamRefModule","location":"api/scala/quoted/Quotes$reflectModule$ParamRefModule.html","searchKeys":["ParamRefModule"]},{"name":"def error(msg: String, expr: Expr[Any]): Unit","description":"scala.quoted.Quotes$reflectModule$reportModule","location":"api/scala/quoted/Quotes$reflectModule$reportModule.html","searchKeys":["error"]},{"name":"def nanos[C](c: C)(ev: Classifier[C]): R","description":"scala.concurrent.duration.DurationConversions","location":"api/scala/concurrent/duration/DurationConversions.html","searchKeys":["nanos"]},{"name":"def call: Option[Tree]","description":"scala.quoted.Quotes$reflectModule$InlinedMethods","location":"api/scala/quoted/Quotes$reflectModule$InlinedMethods.html","searchKeys":["call"]},{"name":"def asJavaParLongStream(cc: IterableOnce[Long]): LongStream","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaParLongStream"]},{"name":"val x$22: FromExpr[T2]","description":"scala.quoted.FromExpr$$Tuple20FromExpr","location":"api/scala/quoted/FromExpr$$Tuple20FromExpr.html","searchKeys":["x$22"]},{"name":"def asJava: IntToLongFunction","description":"scala.jdk.FunctionWrappers$$RichFunction1AsIntToLongFunction","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsIntToLongFunction.html","searchKeys":["asJava"]},{"name":"def apply(bound: Option[TypeTree], selector: TypeTree, cases: List[TypeCaseDef]): MatchTypeTree","description":"scala.quoted.Quotes$reflectModule$MatchTypeTreeModule","location":"api/scala/quoted/Quotes$reflectModule$MatchTypeTreeModule.html","searchKeys":["apply"]},{"name":"def tryCompare(x: T, y: T): Option[Int]","description":"scala.math.Ordering","location":"api/scala/math/Ordering.html","searchKeys":["tryCompare"]},{"name":"def NullClass: Symbol","description":"scala.quoted.Quotes$reflectModule$defnModule","location":"api/scala/quoted/Quotes$reflectModule$defnModule.html","searchKeys":["NullClass"]},{"name":"def _5: T5","description":"scala.Product11","location":"api/scala/Product11.html","searchKeys":["_5"]},{"name":"given MatchTypeMethods","description":"scala.quoted.Quotes$reflectModule$MatchTypeMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["MatchTypeMethods"]},{"name":"def rem(x: Byte, y: Byte): Byte","description":"scala.math.Numeric$$ByteIsIntegral","location":"api/scala/math/Numeric$$ByteIsIntegral.html","searchKeys":["rem"]},{"name":"def fromBitMaskNoCopy(elems: Array[Long]): BitSet","description":"scala.collection.immutable.BitSet$","location":"api/scala/collection/immutable/BitSet$.html","searchKeys":["fromBitMaskNoCopy"]},{"name":"given UnitConstantTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["UnitConstantTypeTest"]},{"name":"def flatten[U](ev: T <:< Try[U]): Try[U]","description":"scala.util.Try","location":"api/scala/util/Try.html","searchKeys":["flatten"]},{"name":"def sin(x: Double): Double","description":"scala.math","location":"api/scala/math.html","searchKeys":["sin"]},{"name":"def apply(x1: T, x2: U): Boolean","description":"scala.jdk.FunctionWrappers$$FromJavaBiPredicate","location":"api/scala/jdk/FunctionWrappers$$FromJavaBiPredicate.html","searchKeys":["apply"]},{"name":"object SortedSet extends Delegate[[A] =>> SortedSet[A]]","description":"scala.collection.SortedSet$","location":"api/scala/collection/SortedSet$.html","searchKeys":["SortedSet"]},{"name":"val buildFromWrappedString: BuildFrom[WrappedString, Char, WrappedString]","description":"scala.collection.BuildFrom$","location":"api/scala/collection/BuildFrom$.html","searchKeys":["buildFromWrappedString"]},{"name":"def float2Float(x: Float): Float","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["float2Float"]},{"name":"trait Priority0FunctionExtensions extends Priority1FunctionExtensions","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["Priority0FunctionExtensions"]},{"name":"type Map[Tup <: Tuple, F <: ([_$4] =>> Any)] = Tup match {\n  case EmptyTuple => EmptyTuple\n  case h *: t => F[h] *: Map[t, F]\n}","description":"scala.Tuple$","location":"api/scala/Tuple$.html","searchKeys":["Map"]},{"name":"object IntAccumulator extends SpecificIterableFactory[Int, IntAccumulator]","description":"scala.jdk.IntAccumulator$","location":"api/scala/jdk/IntAccumulator$.html","searchKeys":["IntAccumulator"]},{"name":"def decrementExact(x: Int): Int","description":"scala.math","location":"api/scala/math.html","searchKeys":["decrementExact"]},{"name":"given OmitSelectorMethods","description":"scala.quoted.Quotes$reflectModule$OmitSelectorMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["OmitSelectorMethods"]},{"name":"val x$26: FromExpr[T4]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["x$26"]},{"name":"class Elems[A](xs: A*) extends AbstractView[A]","description":"scala.collection.View$$Elems","location":"api/scala/collection/View$$Elems.html","searchKeys":["Elems"]},{"name":"def toJava[A](o: Option[A]): Optional[A]","description":"scala.jdk.javaapi.OptionConverters$","location":"api/scala/jdk/javaapi/OptionConverters$.html","searchKeys":["toJava"]},{"name":"def /(x: Byte): Int","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["/"]},{"name":"given EmptyTupleToExpr: ToExpr[EmptyTuple]","description":"scala.quoted.ToExpr$$EmptyTupleToExpr$","location":"api/scala/quoted/ToExpr$$EmptyTupleToExpr$.html","searchKeys":["EmptyTupleToExpr"]},{"name":"def mapValuesInPlace(f: (K, V) => V): MapOps[K, V, CC, C]","description":"scala.collection.mutable.MapOps","location":"api/scala/collection/mutable/MapOps.html","searchKeys":["mapValuesInPlace"]},{"name":"def args: Array[String]","description":"scala.App","location":"api/scala/App.html","searchKeys":["args"]},{"name":"def asJava: DoubleFunction[R]","description":"scala.jdk.FunctionWrappers$$RichFunction1AsDoubleFunction","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsDoubleFunction.html","searchKeys":["asJava"]},{"name":"def append(x: Float): StringBuilder","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["append"]},{"name":"def replaceAllIn(target: CharSequence, replacement: String): String","description":"scala.util.matching.Regex","location":"api/scala/util/matching/Regex.html","searchKeys":["replaceAllIn"]},{"name":"def length: Int","description":"scala.collection.immutable.ArraySeq$$ofUnit","location":"api/scala/collection/immutable/ArraySeq$$ofUnit.html","searchKeys":["length"]},{"name":"def ^(x: Char): Int","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["^"]},{"name":"def tpt: TypeTree","description":"scala.quoted.Quotes$reflectModule$TypedMethods","location":"api/scala/quoted/Quotes$reflectModule$TypedMethods.html","searchKeys":["tpt"]},{"name":"val SummonFrom: SummonFromModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["SummonFrom"]},{"name":"package scala.runtime","description":"scala.runtime","location":"api/scala/runtime.html","searchKeys":["scala.runtime"]},{"name":"val x$2: Type[T2]","description":"scala.quoted.FromExpr$$Tuple16FromExpr","location":"api/scala/quoted/FromExpr$$Tuple16FromExpr.html","searchKeys":["x$2"]},{"name":"def char2int(x: Char): Int","description":"scala.Char$","location":"api/scala/Char$.html","searchKeys":["char2int"]},{"name":"def isWhole: Boolean","description":"scala.math.ScalaNumericAnyConversions","location":"api/scala/math/ScalaNumericAnyConversions.html","searchKeys":["isWhole"]},{"name":"def _6: T6","description":"scala.Product22","location":"api/scala/Product22.html","searchKeys":["_6"]},{"name":"object CommandLineParser","description":"scala.util.CommandLineParser$","location":"api/scala/util/CommandLineParser$.html","searchKeys":["CommandLineParser"]},{"name":"Announcing Dotty 0.9.0-RC1","description":"","location":"blog/2018/07/06/ninth-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.9.0-RC1"]},{"name":"def string2codec(s: String): Codec","description":"scala.io.Codec$","location":"api/scala/io/Codec$.html","searchKeys":["string2codec"]},{"name":"def +=(elem1: A, elem2: A, elems: A*): Growable[A]","description":"scala.collection.mutable.Growable","location":"api/scala/collection/mutable/Growable.html","searchKeys":["+="]},{"name":"def !!<(log: ProcessLogger): String","description":"scala.sys.process.ProcessBuilder","location":"api/scala/sys/process/ProcessBuilder.html","searchKeys":["!!<"]},{"name":"def tuple3ToZippedOps[T1, T2, T3](x: (T1, T2, T3)): Ops[T1, T2, T3]","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["tuple3ToZippedOps"]},{"name":"def insert(index: Int, x: Int): StringBuilder","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["insert"]},{"name":"type DivergingImplicit <: ImplicitSearchFailure","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["DivergingImplicit"]},{"name":"def asJavaSeqCodePointStream: IntStream","description":"scala.collection.convert.StreamExtensions$StringHasSeqParStream","location":"api/scala/collection/convert/StreamExtensions$StringHasSeqParStream.html","searchKeys":["asJavaSeqCodePointStream"]},{"name":"def processLinesFully(processLine: String => Unit)(readLine: () => String): Unit","description":"scala.sys.process.BasicIO$","location":"api/scala/sys/process/BasicIO$.html","searchKeys":["processLinesFully"]},{"name":"def *(x: Double): Double","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["*"]},{"name":"def min(other: Duration): Duration","description":"scala.concurrent.duration.Duration","location":"api/scala/concurrent/duration/Duration.html","searchKeys":["min"]},{"name":"def partitionMap[A1, A2](f: A => Either[A1, A2])(evidence$1: ClassTag[A1], evidence$2: ClassTag[A2]): (Array[A1], Array[A2])","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["partitionMap"]},{"name":"trait JFunction1$mcIJ$sp extends Any => Any with Serializable","description":"scala.runtime.java8.JFunction1$mcIJ$sp","location":"api/scala/runtime/java8/JFunction1$mcIJ$sp.html","searchKeys":["JFunction1$mcIJ$sp"]},{"name":"def fromArray[T](xs: Array[T]): Tuple","description":"scala.Tuple$","location":"api/scala/Tuple$.html","searchKeys":["fromArray"]},{"name":"def apply(): T","description":"scala.concurrent.DelayedLazyVal","location":"api/scala/concurrent/DelayedLazyVal.html","searchKeys":["apply"]},{"name":"def distinctBy[B](f: A => B): Array[A]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["distinctBy"]},{"name":"given OptionFromExpr[T](using val x$1: Type[T], val x$2: FromExpr[T]): FromExpr[Option[T]]","description":"scala.quoted.FromExpr$$OptionFromExpr","location":"api/scala/quoted/FromExpr$$OptionFromExpr.html","searchKeys":["OptionFromExpr"]},{"name":"def fromZip[K <: AnyRef, V](keys: Iterable[K], values: Iterable[V]): AnyRefMap[K, V]","description":"scala.collection.mutable.AnyRefMap$","location":"api/scala/collection/mutable/AnyRefMap$.html","searchKeys":["fromZip"]},{"name":"def ==(x: Long): Boolean","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["=="]},{"name":"def --(that: IterableOnce[A]): C","description":"scala.collection.SetOps","location":"api/scala/collection/SetOps.html","searchKeys":["--"]},{"name":"def toInt: Int","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["toInt"]},{"name":"def asJavaDictionaryConverter[K, V](m: Map[K, V]): AsJavaDictionary[K, V]","description":"scala.collection.JavaConverters$","location":"api/scala/collection/JavaConverters$.html","searchKeys":["asJavaDictionaryConverter"]},{"name":"def enrichAsScalaFromSupplier[T](jf: Supplier[T]): RichSupplierAsFunction0[T]","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsScalaFromSupplier"]},{"name":"val x$23: FromExpr[T4]","description":"scala.quoted.FromExpr$$Tuple19FromExpr","location":"api/scala/quoted/FromExpr$$Tuple19FromExpr.html","searchKeys":["x$23"]},{"name":"def result(): To","description":"scala.collection.mutable.GrowableBuilder","location":"api/scala/collection/mutable/GrowableBuilder.html","searchKeys":["result"]},{"name":"def <(x: Int): Boolean","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["<"]},{"name":"class FractionalOps(lhs: T) extends NumericOps","description":"scala.math.Fractional$FractionalOps","location":"api/scala/math/Fractional$FractionalOps.html","searchKeys":["FractionalOps"]},{"name":"trait SeqOps[A, +CC <: ([_$1] =>> Any), +C <: AnyRef] extends SeqOps[A, CC, C] with Cloneable[C]","description":"scala.collection.mutable.SeqOps","location":"api/scala/collection/mutable/SeqOps.html","searchKeys":["SeqOps"]},{"name":"def apply(idx: Int): Int","description":"scala.collection.immutable.Range","location":"api/scala/collection/immutable/Range.html","searchKeys":["apply"]},{"name":"def asJavaDoubleConsumer(sf: Double => BoxedUnit): DoubleConsumer","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asJavaDoubleConsumer"]},{"name":"val AnyVal: Manifest[AnyVal]","description":"scala.reflect.Manifest$","location":"api/scala/reflect/Manifest$.html","searchKeys":["AnyVal"]},{"name":"def canEqualAny[L, R]: CanEqual[L, R]","description":"scala.CanEqual$","location":"api/scala/CanEqual$.html","searchKeys":["canEqualAny"]},{"name":"def asJavaSeqStream[S <: BaseStream[, ], St <: Stepper[]](s: StreamShape[A, S, St], st: StepperShape[A, St]): S","description":"scala.collection.convert.StreamExtensions$StepperHasSeqStream","location":"api/scala/collection/convert/StreamExtensions$StepperHasSeqStream.html","searchKeys":["asJavaSeqStream"]},{"name":"def processEscapes(str: String): String","description":"scala.StringContext$","location":"api/scala/StringContext$.html","searchKeys":["processEscapes"]},{"name":"def times(x: BigDecimal, y: BigDecimal): BigDecimal","description":"scala.math.Numeric$$BigDecimalIsConflicted","location":"api/scala/math/Numeric$$BigDecimalIsConflicted.html","searchKeys":["times"]},{"name":"def default[T]: Default[T]","description":"scala.util.hashing.Hashing$","location":"api/scala/util/hashing/Hashing$.html","searchKeys":["default"]},{"name":"def >=(x: Float): Boolean","description":"scala.Long","location":"api/scala/Long.html","searchKeys":[">="]},{"name":"given DefinitionMethods","description":"scala.quoted.Quotes$reflectModule$DefinitionMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["DefinitionMethods"]},{"name":"val OmitSelector: OmitSelectorModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["OmitSelector"]},{"name":"def wrapRefArray[T <: AnyRef](xs: Array[T]): ArraySeq[T]","description":"scala.runtime.ScalaRunTime$","location":"api/scala/runtime/ScalaRunTime$.html","searchKeys":["wrapRefArray"]},{"name":"def -(x: Long): Long","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["-"]},{"name":"def get(key: K): Option[W]","description":"scala.collection.MapView$$MapValues","location":"api/scala/collection/MapView$$MapValues.html","searchKeys":["get"]},{"name":"given CaseDefMethods","description":"scala.quoted.Quotes$reflectModule$CaseDefMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["CaseDefMethods"]},{"name":"def flipBit(n: Int): BigInt","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["flipBit"]},{"name":"package dotty.tools.tasty.util","description":"dotty.tools.tasty.util","location":"api/dotty/tools/tasty/util.html","searchKeys":["dotty.tools.tasty.util"]},{"name":"def update(idx: Int, elem: Int): Unit","description":"scala.jdk.IntAccumulator","location":"api/scala/jdk/IntAccumulator.html","searchKeys":["update"]},{"name":"def empty[A]: CC[A]","description":"scala.collection.IterableFactory","location":"api/scala/collection/IterableFactory.html","searchKeys":["empty"]},{"name":"def int2float(x: Int): Float","description":"scala.Int$","location":"api/scala/Int$.html","searchKeys":["int2float"]},{"name":"def -(elem: A): Repr","description":"scala.collection.generic.Subtractable","location":"api/scala/collection/generic/Subtractable.html","searchKeys":["-"]},{"name":"def sourceFile: SourceFile","description":"scala.quoted.Quotes$reflectModule$PositionMethods","location":"api/scala/quoted/Quotes$reflectModule$PositionMethods.html","searchKeys":["sourceFile"]},{"name":"def grouped(size: Int): Iterator[Array[A]]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["grouped"]},{"name":"def scalb(d: Double, scaleFactor: Int): Double","description":"scala.math","location":"api/scala/math.html","searchKeys":["scalb"]},{"name":"def TypeReprShortCode: Printer[TypeRepr]","description":"scala.quoted.Quotes$reflectModule$PrinterModule","location":"api/scala/quoted/Quotes$reflectModule$PrinterModule.html","searchKeys":["TypeReprShortCode"]},{"name":"val length: Int","description":"scala.collection.immutable.NumericRange","location":"api/scala/collection/immutable/NumericRange.html","searchKeys":["length"]},{"name":"trait Function14[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, -T14, +R] extends AnyRef","description":"scala.Function14","location":"api/scala/Function14.html","searchKeys":["Function14"]},{"name":"def asScala: () => Int","description":"scala.jdk.FunctionWrappers$$RichIntSupplierAsFunction0","location":"api/scala/jdk/FunctionWrappers$$RichIntSupplierAsFunction0.html","searchKeys":["asScala"]},{"name":"object OrderBy","description":"scala.collection.immutable.TreeSeqMap$$OrderBy$","location":"api/scala/collection/immutable/TreeSeqMap$$OrderBy$.html","searchKeys":["OrderBy"]},{"name":"class BufferHasAsJava[A](b: Buffer[A])","description":"scala.collection.convert.AsJavaExtensions$BufferHasAsJava","location":"api/scala/collection/convert/AsJavaExtensions$BufferHasAsJava.html","searchKeys":["BufferHasAsJava"]},{"name":"def result(): Array[Int]","description":"scala.collection.mutable.ArrayBuilder$$ofInt","location":"api/scala/collection/mutable/ArrayBuilder$$ofInt.html","searchKeys":["result"]},{"name":"def apply(x: BigInt, mc: MathContext): BigDecimal","description":"scala.math.BigDecimal$","location":"api/scala/math/BigDecimal$.html","searchKeys":["apply"]},{"name":"def ++(suffix: IterableOnce[Char]): String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["++"]},{"name":"val processError: InputStream => Unit","description":"scala.sys.process.ProcessIO","location":"api/scala/sys/process/ProcessIO.html","searchKeys":["processError"]},{"name":"def group(id: String): String","description":"scala.util.matching.Regex$$MatchData","location":"api/scala/util/matching/Regex$$MatchData.html","searchKeys":["group"]},{"name":"def apply(bound: TypeRepr, scrutinee: TypeRepr, cases: List[TypeRepr]): MatchType","description":"scala.quoted.Quotes$reflectModule$MatchTypeModule","location":"api/scala/quoted/Quotes$reflectModule$MatchTypeModule.html","searchKeys":["apply"]},{"name":"def hasExitValue: Boolean","description":"scala.sys.process.ProcessBuilder","location":"api/scala/sys/process/ProcessBuilder.html","searchKeys":["hasExitValue"]},{"name":"type TermParamClause <: ParamClause","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TermParamClause"]},{"name":"object SeqFactory","description":"scala.collection.SeqFactory$","location":"api/scala/collection/SeqFactory$.html","searchKeys":["SeqFactory"]},{"name":"trait Enum extends Product with Serializable","description":"scala.reflect.Enum","location":"api/scala/reflect/Enum.html","searchKeys":["Enum"]},{"name":"def valueManifests: List[AnyValManifest[]]","description":"scala.reflect.ManifestFactory$","location":"api/scala/reflect/ManifestFactory$.html","searchKeys":["valueManifests"]},{"name":"val x$7: Type[T7]","description":"scala.quoted.FromExpr$$Tuple18FromExpr","location":"api/scala/quoted/FromExpr$$Tuple18FromExpr.html","searchKeys":["x$7"]},{"name":"type Refined <: TypeTree","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Refined"]},{"name":"def fold[T, R](futures: IterableOnce[Future[T]])(zero: R)(@deprecatedName(\"foldFun\") op: (R, T) => R)(executor: ExecutionContext): Future[R]","description":"scala.concurrent.Future$","location":"api/scala/concurrent/Future$.html","searchKeys":["fold"]},{"name":"def ensureCapacity(newCapacity: Int): Unit","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["ensureCapacity"]},{"name":"class ofShort extends ArrayBuilder[Short]","description":"scala.collection.mutable.ArrayBuilder$$ofShort","location":"api/scala/collection/mutable/ArrayBuilder$$ofShort.html","searchKeys":["ofShort"]},{"name":"val jLongAccumulatorFactoryInfo: AccumulatorFactoryInfo[Long, IntAccumulator]","description":"scala.collection.convert.StreamExtensions$$AccumulatorFactoryInfo$","location":"api/scala/collection/convert/StreamExtensions$$AccumulatorFactoryInfo$.html","searchKeys":["jLongAccumulatorFactoryInfo"]},{"name":"def tparams: List[TypeDef]","description":"scala.quoted.Quotes$reflectModule$LambdaTypeTreeMethods","location":"api/scala/quoted/Quotes$reflectModule$LambdaTypeTreeMethods.html","searchKeys":["tparams"]},{"name":"def list asScalaBuffer[A](l: List[A]): Buffer[A]","description":"scala.collection.convert.ToScalaImplicits","location":"api/scala/collection/convert/ToScalaImplicits.html","searchKeys":["list asScalaBuffer"]},{"name":"val RECthis: 66","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["RECthis"]},{"name":"class Cons[A](val head: A, tl: => Stream[A]) extends Stream[A]","description":"scala.collection.immutable.Stream$$Cons","location":"api/scala/collection/immutable/Stream$$Cons.html","searchKeys":["Cons"]},{"name":"def !=(that: Addr): Boolean","description":"dotty.tools.tasty.TastyBuffer$$Addr","location":"api/dotty/tools/tasty/TastyBuffer$$Addr.html","searchKeys":["!="]},{"name":"def exists(p: A => Boolean): Boolean","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["exists"]},{"name":"object HashMap extends MapFactory[[K, V] =>> HashMap[K, V]]","description":"scala.collection.mutable.HashMap$","location":"api/scala/collection/mutable/HashMap$.html","searchKeys":["HashMap"]},{"name":"def toImmutable: BitSet","description":"scala.collection.mutable.BitSet","location":"api/scala/collection/mutable/BitSet.html","searchKeys":["toImmutable"]},{"name":"val ShortShape: Shape","description":"scala.collection.StepperShape$","location":"api/scala/collection/StepperShape$.html","searchKeys":["ShortShape"]},{"name":"trait JFunction1$mcVJ$sp extends Any => Any with Serializable","description":"scala.runtime.java8.JFunction1$mcVJ$sp","location":"api/scala/runtime/java8/JFunction1$mcVJ$sp.html","searchKeys":["JFunction1$mcVJ$sp"]},{"name":"def iterator: Iterator[A]","description":"scala.collection.immutable.HashSet","location":"api/scala/collection/immutable/HashSet.html","searchKeys":["iterator"]},{"name":"class BufferedLineIterator extends AbstractIterator[String] with Iterator[String]","description":"scala.io.BufferedSource$BufferedLineIterator","location":"api/scala/io/BufferedSource$BufferedLineIterator.html","searchKeys":["BufferedLineIterator"]},{"name":"def Synthetic: Flags","description":"scala.quoted.Quotes$reflectModule$FlagsModule","location":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html","searchKeys":["Synthetic"]},{"name":"val x$4: Type[T4]","description":"scala.quoted.FromExpr$$Tuple11FromExpr","location":"api/scala/quoted/FromExpr$$Tuple11FromExpr.html","searchKeys":["x$4"]},{"name":"def _6: T6","description":"scala.Product9","location":"api/scala/Product9.html","searchKeys":["_6"]},{"name":"def -(x: Byte): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["-"]},{"name":"def makeSet: Set[V]","description":"scala.collection.mutable.MultiMap","location":"api/scala/collection/mutable/MultiMap.html","searchKeys":["makeSet"]},{"name":"def fill[A, C](n1: Int, n2: Int)(elem: => A)(canAccumulate: AccumulatorFactoryShape[A, C]): AnyAccumulator[C]","description":"scala.jdk.Accumulator$","location":"api/scala/jdk/Accumulator$.html","searchKeys":["fill"]},{"name":"trait Future[+T] extends Awaitable[T]","description":"scala.concurrent.Future","location":"api/scala/concurrent/Future.html","searchKeys":["Future"]},{"name":"def lazyZip[B](that: Iterable[B]): LazyZip3[El1, El2, B, C1]","description":"scala.collection.LazyZip2","location":"api/scala/collection/LazyZip2.html","searchKeys":["lazyZip"]},{"name":"def mapValuesNow[V1](f: V => V1): LongMap[V1]","description":"scala.collection.mutable.LongMap","location":"api/scala/collection/mutable/LongMap.html","searchKeys":["mapValuesNow"]},{"name":"def unapply(x: MethodType): (List[String], List[TypeRepr], TypeRepr)","description":"scala.quoted.Quotes$reflectModule$MethodTypeModule","location":"api/scala/quoted/Quotes$reflectModule$MethodTypeModule.html","searchKeys":["unapply"]},{"name":"def transferFully(in: InputStream, out: OutputStream): Unit","description":"scala.sys.process.BasicIO$","location":"api/scala/sys/process/BasicIO$.html","searchKeys":["transferFully"]},{"name":"def count[T](p: T => Boolean): Int","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["count"]},{"name":"val x$21: FromExpr[T3]","description":"scala.quoted.FromExpr$$Tuple18FromExpr","location":"api/scala/quoted/FromExpr$$Tuple18FromExpr.html","searchKeys":["x$21"]},{"name":"val x$3: Type[T3]","description":"scala.quoted.FromExpr$$Tuple18FromExpr","location":"api/scala/quoted/FromExpr$$Tuple18FromExpr.html","searchKeys":["x$3"]},{"name":"def unapply(constant: IntConstant): Some[Int]","description":"scala.quoted.Quotes$reflectModule$IntConstantModule","location":"api/scala/quoted/Quotes$reflectModule$IntConstantModule.html","searchKeys":["unapply"]},{"name":"def updated[V1 >: V](key: K, value: V1): CC[K, V1]","description":"scala.collection.mutable.MapOps","location":"api/scala/collection/mutable/MapOps.html","searchKeys":["updated"]},{"name":"val x$16: Type[T16]","description":"scala.quoted.FromExpr$$Tuple21FromExpr","location":"api/scala/quoted/FromExpr$$Tuple21FromExpr.html","searchKeys":["x$16"]},{"name":"val Zero: FiniteDuration","description":"scala.concurrent.duration.Duration$","location":"api/scala/concurrent/duration/Duration$.html","searchKeys":["Zero"]},{"name":"def asScala: Long => Long","description":"scala.jdk.FunctionWrappers$$RichLongUnaryOperatorAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichLongUnaryOperatorAsFunction1.html","searchKeys":["asScala"]},{"name":"def fromString(s: String): T","description":"scala.util.CommandLineParser$$FromString","location":"api/scala/util/CommandLineParser$$FromString.html","searchKeys":["fromString"]},{"name":"def transformStats(trees: List[Statement])(owner: Symbol): List[Statement]","description":"scala.quoted.Quotes$reflectModule$TreeMap","location":"api/scala/quoted/Quotes$reflectModule$TreeMap.html","searchKeys":["transformStats"]},{"name":"def signature: Signature","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["signature"]},{"name":"def lastIndexWhere(p: Char => Boolean, end: Int): Int","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["lastIndexWhere"]},{"name":"def anyStreamShape[T]: StreamShape[T, Stream[T], Stepper[T]]","description":"scala.collection.convert.StreamExtensions$$StreamShapeLowPriority1","location":"api/scala/collection/convert/StreamExtensions$$StreamShapeLowPriority1.html","searchKeys":["anyStreamShape"]},{"name":"val PARAM: 134","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["PARAM"]},{"name":"def updated[V1 >: V](key: K, value: V1): WithDefault[K, V1]","description":"scala.collection.immutable.Map$$WithDefault","location":"api/scala/collection/immutable/Map$$WithDefault.html","searchKeys":["updated"]},{"name":"def !=(x: Long): Boolean","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["!="]},{"name":"val x$26: FromExpr[T11]","description":"scala.quoted.FromExpr$$Tuple15FromExpr","location":"api/scala/quoted/FromExpr$$Tuple15FromExpr.html","searchKeys":["x$26"]},{"name":"Right-Associative Extension Methods: Details","description":"","location":"docs/reference/contextual/right-associative-extension-methods.html","searchKeys":["Right-Associative Extension Methods: Details"]},{"name":"def asJavaDoubleToIntFunction(sf: Double => Integer): DoubleToIntFunction","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asJavaDoubleToIntFunction"]},{"name":"given SomeFromExpr[T](using val x$1: Type[T], val x$2: FromExpr[T]): FromExpr[Some[T]]","description":"scala.quoted.FromExpr$$SomeFromExpr","location":"api/scala/quoted/FromExpr$$SomeFromExpr.html","searchKeys":["SomeFromExpr"]},{"name":"trait ScalaNumericAnyConversions","description":"scala.math.ScalaNumericAnyConversions","location":"api/scala/math/ScalaNumericAnyConversions.html","searchKeys":["ScalaNumericAnyConversions"]},{"name":"def ^(x: Int): Int","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["^"]},{"name":"def asScala: (T, U) => Long","description":"scala.jdk.FunctionWrappers$$RichToLongBiFunctionAsFunction2","location":"api/scala/jdk/FunctionWrappers$$RichToLongBiFunctionAsFunction2.html","searchKeys":["asScala"]},{"name":"opaque type IArray[+T]","description":"scala.opaques$","location":"api/scala/opaques$.html","searchKeys":["IArray"]},{"name":"def copy(original: Tree)(name: String, constr: DefDef, parents: List[Tree], derived: List[TypeTree], selfOpt: Option[ValDef], body: List[Statement]): ClassDef","description":"scala.quoted.Quotes$reflectModule$ClassDefModule","location":"api/scala/quoted/Quotes$reflectModule$ClassDefModule.html","searchKeys":["copy"]},{"name":"class DelayedLazyVal[T](f: () => T, body: => Unit)(exec: ExecutionContext)","description":"scala.concurrent.DelayedLazyVal","location":"api/scala/concurrent/DelayedLazyVal.html","searchKeys":["DelayedLazyVal"]},{"name":"def apply(command: Seq[String], cwd: File, extraEnv: (String, String)*): ProcessBuilder","description":"scala.sys.process.ProcessCreation","location":"api/scala/sys/process/ProcessCreation.html","searchKeys":["apply"]},{"name":"def iterator: Iterator[A]","description":"scala.collection.View$$Appended","location":"api/scala/collection/View$$Appended.html","searchKeys":["iterator"]},{"name":"def <(x: Double): Boolean","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["<"]},{"name":"def enrichAsJavaIntSupplier(sf: () => Int): RichFunction0AsIntSupplier","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsJavaIntSupplier"]},{"name":"given ArrayOfCharToExpr: ToExpr[Array[Char]]","description":"scala.quoted.ToExpr$$ArrayOfCharToExpr$","location":"api/scala/quoted/ToExpr$.html","searchKeys":["ArrayOfCharToExpr"]},{"name":"val idx: Int","description":"scala.util.CommandLineParser$$ParseError","location":"api/scala/util/CommandLineParser$$ParseError.html","searchKeys":["idx"]},{"name":"def toByteExact: Byte","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["toByteExact"]},{"name":"def iterator: Iterator[A]","description":"scala.collection.View$$Filter","location":"api/scala/collection/View$$Filter.html","searchKeys":["iterator"]},{"name":"def _8: T8","description":"scala.Product16","location":"api/scala/Product16.html","searchKeys":["_8"]},{"name":"def _2: T2","description":"scala.Product3","location":"api/scala/Product3.html","searchKeys":["_2"]},{"name":"trait ScalaWholeNumberProxy[T] extends ScalaNumberProxy[T]","description":"scala.runtime.ScalaWholeNumberProxy","location":"api/scala/runtime/ScalaWholeNumberProxy.html","searchKeys":["ScalaWholeNumberProxy"]},{"name":"def equiv(x: Char, y: Char): Boolean","description":"scala.math.Equiv$$Char$","location":"api/scala/math/Equiv$$Char$.html","searchKeys":["equiv"]},{"name":"class Set4[A] extends AbstractSet[A] with StrictOptimizedIterableOps[A, [A] =>> Set[A], Set[A]] with Serializable","description":"scala.collection.immutable.Set$$Set4","location":"api/scala/collection/immutable/Set$$Set4.html","searchKeys":["Set4"]},{"name":"def newVal(parent: Symbol, name: String, tpe: TypeRepr, flags: Flags, privateWithin: Symbol): Symbol","description":"scala.quoted.Quotes$reflectModule$SymbolModule","location":"api/scala/quoted/Quotes$reflectModule$SymbolModule.html","searchKeys":["newVal"]},{"name":"trait Prop[+T]","description":"scala.sys.Prop","location":"api/scala/sys/Prop.html","searchKeys":["Prop"]},{"name":"val ParamClause: ParamClauseModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ParamClause"]},{"name":"def IEEEremainder(x: Double, y: Double): Double","description":"scala.math","location":"api/scala/math.html","searchKeys":["IEEEremainder"]},{"name":"Parameter Untupling","description":"","location":"docs/reference/other-new-features/parameter-untupling.html","searchKeys":["Parameter Untupling"]},{"name":"def flatMap[B, To](f: (El1, El2) => IterableOnce[B])(bf: BuildFrom[It1, B, To]): To","description":"scala.runtime.Tuple2Zipped","location":"api/scala/runtime/Tuple2Zipped.html","searchKeys":["flatMap"]},{"name":"def toMinutes: Long","description":"scala.concurrent.duration.Duration$$Infinite","location":"api/scala/concurrent/duration/Duration$$Infinite.html","searchKeys":["toMinutes"]},{"name":"def unapplySeq(s: String): Option[Seq[String]]","description":"scala.StringContext$s$","location":"api/scala/StringContext$s$.html","searchKeys":["unapplySeq"]},{"name":"def lines: Iterator[String]","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["lines"]},{"name":"class RichBiPredicateAsFunction2[T, U](underlying: BiPredicate[T, U]) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichBiPredicateAsFunction2","location":"api/scala/jdk/FunctionWrappers$$RichBiPredicateAsFunction2.html","searchKeys":["RichBiPredicateAsFunction2"]},{"name":"def groupMap[K, B](key: A => K)(f: A => B): Map[K, CC[B]]","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["groupMap"]},{"name":"def toUnit(unit: TimeUnit): Double","description":"scala.concurrent.duration.Duration","location":"api/scala/concurrent/duration/Duration.html","searchKeys":["toUnit"]},{"name":"def print(obj: Any): Unit","description":"scala.Console$","location":"api/scala/Console$.html","searchKeys":["print"]},{"name":"val longOptionShape: OptionShape[Long, OptionalLong]","description":"scala.jdk.OptionShape$","location":"api/scala/jdk/OptionShape$.html","searchKeys":["longOptionShape"]},{"name":"def Short2short(x: Short): Short","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["Short2short"]},{"name":"def _1: T1","description":"scala.Product2","location":"api/scala/Product2.html","searchKeys":["_1"]},{"name":"def addString(b: StringBuilder, start: String, sep: String, end: String): StringBuilder","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["addString"]},{"name":"def count(p: A => Boolean): Int","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["count"]},{"name":"def getByte(at: Addr): Int","description":"dotty.tools.tasty.TastyBuffer","location":"api/dotty/tools/tasty/TastyBuffer.html","searchKeys":["getByte"]},{"name":"Announcing Dotty 0.25.0-RC2 - speed-up of givens and change in the tuple API","description":"","location":"blog/2020/06/22/25th-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.25.0-RC2 - speed-up of givens and change in the tuple API"]},{"name":"def precision: Int","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["precision"]},{"name":"val array: Array[Boolean]","description":"scala.collection.mutable.ArraySeq$$ofBoolean","location":"api/scala/collection/mutable/ArraySeq$$ofBoolean.html","searchKeys":["array"]},{"name":"def ==(x: Short): Boolean","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["=="]},{"name":"def %(x: Double): Double","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["%"]},{"name":"def _17: T17","description":"scala.Product17","location":"api/scala/Product17.html","searchKeys":["_17"]},{"name":"def range(start: Int, end: Int, step: Int): Iterator[Int]","description":"scala.collection.Iterator$","location":"api/scala/collection/Iterator$.html","searchKeys":["range"]},{"name":"def curried: T1 => T2 => T3 => T4 => T5 => T6 => T7 => T8 => T9 => T10 => R","description":"scala.Function10","location":"api/scala/Function10.html","searchKeys":["curried"]},{"name":"class Delegate[CC <: ([_$67, _$68] =>> Any)](delegate: SortedMapFactory[CC]) extends SortedMapFactory[CC]","description":"scala.collection.SortedMapFactory$$Delegate","location":"api/scala/collection/SortedMapFactory$$Delegate.html","searchKeys":["Delegate"]},{"name":"def asJavaSupplier[T](sf: () => T): Supplier[T]","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asJavaSupplier"]},{"name":"class By[T, R](f: T => R)","description":"scala.util.control.Exception$$By","location":"api/scala/util/control/Exception$$By.html","searchKeys":["By"]},{"name":"def apply(tparams: List[TypeDef], body: Tree): LambdaTypeTree","description":"scala.quoted.Quotes$reflectModule$LambdaTypeTreeModule","location":"api/scala/quoted/Quotes$reflectModule$LambdaTypeTreeModule.html","searchKeys":["apply"]},{"name":"def +(other: Duration): Duration","description":"scala.concurrent.duration.FiniteDuration","location":"api/scala/concurrent/duration/FiniteDuration.html","searchKeys":["+"]},{"name":"def <=[B >: A](that: B)(evidence$4: () => B): Boolean","description":"scala.math.PartiallyOrdered","location":"api/scala/math/PartiallyOrdered.html","searchKeys":["<="]},{"name":"def size: Int","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["size"]},{"name":"def collect[V2](pf: PartialFunction[(Long, T), (Long, V2)]): LongMap[V2]","description":"scala.collection.immutable.LongMap","location":"api/scala/collection/immutable/LongMap.html","searchKeys":["collect"]},{"name":"def toIntOption: Option[Int]","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["toIntOption"]},{"name":"type InverseMap[X <: Tuple, F <: ([_$7] =>> Any)] = X match {\n  case F[x] *: t => x *: InverseMap[t, F]\n  case EmptyTuple => EmptyTuple\n}","description":"scala.Tuple$","location":"api/scala/Tuple$.html","searchKeys":["InverseMap"]},{"name":"def apply(array: Array[Double])(using Quotes): Expr[Array[Double]]","description":"scala.quoted.ToExpr$$ArrayOfDoubleToExpr$","location":"api/scala/quoted/ToExpr$$ArrayOfDoubleToExpr$.html","searchKeys":["apply"]},{"name":"def prepended[B >: Char](elem: B): IndexedSeq[B]","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["prepended"]},{"name":"def unary_-: Duration","description":"scala.concurrent.duration.FiniteDuration","location":"api/scala/concurrent/duration/FiniteDuration.html","searchKeys":["unary_-"]},{"name":"def intValue: Int","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["intValue"]},{"name":"def map[B](f: A => B): IterableOnce[B]","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["map"]},{"name":"def formatLocal(l: Locale, args: Any*): String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["formatLocal"]},{"name":"def newBuilder[A]: Builder[A, LazyList[A]]","description":"scala.collection.immutable.LazyList$","location":"api/scala/collection/immutable/LazyList$.html","searchKeys":["newBuilder"]},{"name":"class ArraySeq[+A] extends AbstractSeq[A] with IndexedSeq[A] with IndexedSeqOps[A, [A] =>> ArraySeq[A], ArraySeq[A]] with StrictOptimizedSeqOps[A, [A] =>> ArraySeq[A], ArraySeq[A]] with EvidenceIterableFactoryDefaults[A, [A] =>> ArraySeq[A], [T] =>> ClassTag[T]] with Serializable","description":"scala.collection.immutable.ArraySeq","location":"api/scala/collection/immutable/ArraySeq.html","searchKeys":["ArraySeq"]},{"name":"class NameRef(index: Int) extends AnyVal","description":"dotty.tools.tasty.TastyBuffer$$NameRef","location":"api/dotty/tools/tasty/TastyBuffer$$NameRef.html","searchKeys":["NameRef"]},{"name":"class unspecialized extends StaticAnnotation","description":"scala.annotation.unspecialized","location":"api/scala/annotation/unspecialized.html","searchKeys":["unspecialized"]},{"name":"def _6: T6","description":"scala.Product11","location":"api/scala/Product11.html","searchKeys":["_6"]},{"name":"def transformValuesInPlace(f: V => V): LongMap[V]","description":"scala.collection.mutable.LongMap","location":"api/scala/collection/mutable/LongMap.html","searchKeys":["transformValuesInPlace"]},{"name":"given NamedTypeTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["NamedTypeTypeTest"]},{"name":"def sliding[B >: A](size: Int, step: Int): GroupedIterator[B]","description":"scala.collection.Iterator","location":"api/scala/collection/Iterator.html","searchKeys":["sliding"]},{"name":"def find(p: A => Boolean): Option[A]","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["find"]},{"name":"def compare(that: String): Int","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["compare"]},{"name":"def apply$mcFID$sp(v1: Int, v2: Double): Float","description":"scala.runtime.java8.JFunction2$mcFID$sp","location":"api/scala/runtime/java8/JFunction2$mcFID$sp.html","searchKeys":["apply$mcFID$sp"]},{"name":"def this()","description":"scala.collection.mutable.HashMap","location":"api/scala/collection/mutable/HashMap.html","searchKeys":["this"]},{"name":"def apply(tup: (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22))(using Quotes): Expr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22)]","description":"scala.quoted.ToExpr$$Tuple22ToExpr","location":"api/scala/quoted/ToExpr$$Tuple22ToExpr.html","searchKeys":["apply"]},{"name":"type Error = Error","description":"scala","location":"api/scala.html","searchKeys":["Error"]},{"name":"def update(index: Int, elem: Short): Unit","description":"scala.collection.mutable.ArraySeq$$ofShort","location":"api/scala/collection/mutable/ArraySeq$$ofShort.html","searchKeys":["update"]},{"name":"def isExactDouble: Boolean","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["isExactDouble"]},{"name":"def mapAsJavaConcurrentMapConverter[K, V](m: Map[K, V]): AsJava[ConcurrentMap[K, V]]","description":"scala.collection.JavaConverters$","location":"api/scala/collection/JavaConverters$.html","searchKeys":["mapAsJavaConcurrentMapConverter"]},{"name":"def this(seed: Int)","description":"scala.util.Random","location":"api/scala/util/Random.html","searchKeys":["this"]},{"name":"def contains(key: K): Boolean","description":"scala.collection.MapOps","location":"api/scala/collection/MapOps.html","searchKeys":["contains"]},{"name":"def elemTag: ClassTag[]","description":"scala.collection.mutable.ArraySeq$$ofLong","location":"api/scala/collection/mutable/ArraySeq$$ofLong.html","searchKeys":["elemTag"]},{"name":"class Delegate[CC <: ([_$55] =>> Any)](delegate: EvidenceIterableFactory[CC, [T] =>> ClassTag[T]]) extends Delegate[CC, [T] =>> ClassTag[T]] with ClassTagIterableFactory[CC]","description":"scala.collection.ClassTagIterableFactory$$Delegate","location":"api/scala/collection/ClassTagIterableFactory$$Delegate.html","searchKeys":["Delegate"]},{"name":"val Inf: Infinite","description":"scala.concurrent.duration.Duration$","location":"api/scala/concurrent/duration/Duration$.html","searchKeys":["Inf"]},{"name":"trait Printer[T]","description":"scala.quoted.Quotes$reflectModule$Printer","location":"api/scala/quoted/Quotes$reflectModule$Printer.html","searchKeys":["Printer"]},{"name":"def corresponds[B](that: Seq[B])(p: (A, B) => Boolean): Boolean","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["corresponds"]},{"name":"def unfold[A, S, C](init: S)(f: S => Option[(A, S)])(canAccumulate: AccumulatorFactoryShape[A, C]): C","description":"scala.jdk.Accumulator$","location":"api/scala/jdk/Accumulator$.html","searchKeys":["unfold"]},{"name":"val isEmpty: Boolean","description":"scala.collection.immutable.Range","location":"api/scala/collection/immutable/Range.html","searchKeys":["isEmpty"]},{"name":"val MaxSpecialized: 22","description":"scala.runtime.Tuples$","location":"api/scala/runtime/Tuples$.html","searchKeys":["MaxSpecialized"]},{"name":"val x$11: Type[T11]","description":"scala.quoted.FromExpr$$Tuple14FromExpr","location":"api/scala/quoted/FromExpr$$Tuple14FromExpr.html","searchKeys":["x$11"]},{"name":"def toJavaPrimitive[O](shape: OptionShape[A, O]): O","description":"scala.jdk.OptionConverters$$RichOption","location":"api/scala/jdk/OptionConverters$$RichOption.html","searchKeys":["toJavaPrimitive"]},{"name":"class FromJavaLongPredicate(jf: LongPredicate) extends Long => Boolean","description":"scala.jdk.FunctionWrappers$$FromJavaLongPredicate","location":"api/scala/jdk/FunctionWrappers$$FromJavaLongPredicate.html","searchKeys":["FromJavaLongPredicate"]},{"name":"def find(p: A => Boolean): Option[A]","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["find"]},{"name":"def empty[K <: AnyRef, V]: AnyRefMap[K, V]","description":"scala.collection.mutable.AnyRefMap$","location":"api/scala/collection/mutable/AnyRefMap$.html","searchKeys":["empty"]},{"name":"def *(x: Char): Int","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["*"]},{"name":"def mapFactory[K, V]: Factory[(K, V), CC[K, V]]","description":"scala.collection.MapFactory","location":"api/scala/collection/MapFactory.html","searchKeys":["mapFactory"]},{"name":"val x$10: Type[T10]","description":"scala.quoted.FromExpr$$Tuple17FromExpr","location":"api/scala/quoted/FromExpr$$Tuple17FromExpr.html","searchKeys":["x$10"]},{"name":"trait JFunction1$mcDF$sp extends Any => Any with Serializable","description":"scala.runtime.java8.JFunction1$mcDF$sp","location":"api/scala/runtime/java8/JFunction1$mcDF$sp.html","searchKeys":["JFunction1$mcDF$sp"]},{"name":"trait IterableOnceOps[+A, +CC <: ([_$1] =>> Any), +C]","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["IterableOnceOps"]},{"name":"def substring(start: Int, end: Int): String","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["substring"]},{"name":"def tabulate[A](n: Int)(f: Int => A)(evidence$19: Ev[A]): CC[A]","description":"scala.collection.EvidenceIterableFactory","location":"api/scala/collection/EvidenceIterableFactory.html","searchKeys":["tabulate"]},{"name":"def unary_~: BigInt","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["unary_~"]},{"name":"def cases: List[CaseDef]","description":"scala.quoted.Quotes$reflectModule$MatchMethods","location":"api/scala/quoted/Quotes$reflectModule$MatchMethods.html","searchKeys":["cases"]},{"name":"def toIntExact: Int","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["toIntExact"]},{"name":"def |(x: Short): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["|"]},{"name":"Transparent Traits","description":"","location":"docs/reference/other-new-features/transparent-traits.html","searchKeys":["Transparent Traits"]},{"name":"trait AppliedModule","description":"scala.quoted.Quotes$reflectModule$AppliedModule","location":"api/scala/quoted/Quotes$reflectModule$AppliedModule.html","searchKeys":["AppliedModule"]},{"name":"def apply[T](x: T)(using ToExpr[T])(using Quotes): Expr[T]","description":"scala.quoted.Expr$","location":"api/scala/quoted/Expr$.html","searchKeys":["apply"]},{"name":"object DeprecatedDoubleOrdering extends TotalOrdering","description":"scala.math.Ordering$$DeprecatedDoubleOrdering$","location":"api/scala/math/Ordering$$DeprecatedDoubleOrdering$.html","searchKeys":["DeprecatedDoubleOrdering"]},{"name":"val LongConstant: LongConstantModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["LongConstant"]},{"name":"def asScalaFromBiPredicate[T, U](jf: BiPredicate[T, U]): (T, U) => Boolean","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asScalaFromBiPredicate"]},{"name":"def doubleValue: Double","description":"scala.math.ScalaNumericAnyConversions","location":"api/scala/math/ScalaNumericAnyConversions.html","searchKeys":["doubleValue"]},{"name":"def >(x: Float): Boolean","description":"scala.Long","location":"api/scala/Long.html","searchKeys":[">"]},{"name":"def _3: T3","description":"scala.Product10","location":"api/scala/Product10.html","searchKeys":["_3"]},{"name":"def asJavaParKeyDoubleStreamFromFloat[V](m: Map[Float, V]): DoubleStream","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaParKeyDoubleStreamFromFloat"]},{"name":"def +(x: Short): Float","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["+"]},{"name":"def unapply(x: Expr[Option[T]])(using Quotes): Option[Option[T]]","description":"scala.quoted.FromExpr$$OptionFromExpr","location":"api/scala/quoted/FromExpr$$OptionFromExpr.html","searchKeys":["unapply"]},{"name":"def ^(x: Byte): Int","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["^"]},{"name":"type TypeTree <: Tree","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeTree"]},{"name":"def enrichAsJavaIntToDoubleFunction[A0](sf: A0 => Double)(evA0: A0 =:= Int): RichFunction1AsIntToDoubleFunction","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsJavaIntToDoubleFunction"]},{"name":"def stats: List[Tree]","description":"scala.quoted.Quotes$reflectModule$PackageClauseMethods","location":"api/scala/quoted/Quotes$reflectModule$PackageClauseMethods.html","searchKeys":["stats"]},{"name":"def negate(x: Byte): Byte","description":"scala.math.Numeric$$ByteIsIntegral","location":"api/scala/math/Numeric$$ByteIsIntegral.html","searchKeys":["negate"]},{"name":"def transpose[B](asArray: A => Array[B]): Array[Array[B]]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["transpose"]},{"name":"def %(that: BigDecimal): BigDecimal","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["%"]},{"name":"def initialized: Boolean","description":"scala.runtime.LazyLong","location":"api/scala/runtime/LazyLong.html","searchKeys":["initialized"]},{"name":"def transformStatement(tree: Statement)(owner: Symbol): Statement","description":"scala.quoted.Quotes$reflectModule$TreeMap","location":"api/scala/quoted/Quotes$reflectModule$TreeMap.html","searchKeys":["transformStatement"]},{"name":"def seqUnbox(st: AnyStepper[T]): S","description":"scala.collection.StepperShape","location":"api/scala/collection/StepperShape.html","searchKeys":["seqUnbox"]},{"name":"var red: Boolean","description":"scala.collection.mutable.CollisionProofHashMap$$RBNode","location":"api/scala/collection/mutable/CollisionProofHashMap$$RBNode.html","searchKeys":["red"]},{"name":"def unapply(x: Expr[None])(using Quotes): Option[None]","description":"scala.quoted.FromExpr$$NoneFromExpr$","location":"api/scala/quoted/FromExpr$$NoneFromExpr$.html","searchKeys":["unapply"]},{"name":"class Prepended[+A](elem: A, underlying: SomeIterableOps[A]) extends AbstractView[A]","description":"scala.collection.View$$Prepended","location":"api/scala/collection/View$$Prepended.html","searchKeys":["Prepended"]},{"name":"def poll: Option[Reference[T]]","description":"scala.ref.ReferenceQueue","location":"api/scala/ref/ReferenceQueue.html","searchKeys":["poll"]},{"name":"def withDefault[K <: AnyRef, V](default: K => V): AnyRefMap[K, V]","description":"scala.collection.mutable.AnyRefMap$","location":"api/scala/collection/mutable/AnyRefMap$.html","searchKeys":["withDefault"]},{"name":"val reflectiveCalls: reflectiveCalls","description":"scala.language$","location":"api/scala/language$.html","searchKeys":["reflectiveCalls"]},{"name":"def toBuffer[B >: A]: Buffer[B]","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["toBuffer"]},{"name":"def transformTypeCaseDefs(trees: List[TypeCaseDef])(owner: Symbol): List[TypeCaseDef]","description":"scala.quoted.Quotes$reflectModule$TreeMap","location":"api/scala/quoted/Quotes$reflectModule$TreeMap.html","searchKeys":["transformTypeCaseDefs"]},{"name":"def mkString(sep: String): String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["mkString"]},{"name":"def toDouble: Double","description":"scala.math.Numeric$NumericOps","location":"api/scala/math/Numeric$NumericOps.html","searchKeys":["toDouble"]},{"name":"class Id[K, +V](underlying: SomeMapOps[K, V]) extends AbstractMapView[K, V]","description":"scala.collection.MapView$$Id","location":"api/scala/collection/MapView$$Id.html","searchKeys":["Id"]},{"name":"def apply$mcVII$sp(v1: Int, v2: Int): Unit","description":"scala.runtime.java8.JFunction2$mcVII$sp","location":"api/scala/runtime/java8/JFunction2$mcVII$sp.html","searchKeys":["apply$mcVII$sp"]},{"name":"def removeLast(resizeInternalRepr: Boolean): A","description":"scala.collection.mutable.ArrayDeque","location":"api/scala/collection/mutable/ArrayDeque.html","searchKeys":["removeLast"]},{"name":"class Catch[+T](val pf: Catcher[T], val fin: Option[Finally], val rethrow: Throwable => Boolean) extends Described","description":"scala.util.control.Exception$$Catch","location":"api/scala/util/control/Exception$$Catch.html","searchKeys":["Catch"]},{"name":"object PartialOrdering","description":"scala.math.PartialOrdering$","location":"api/scala/math/PartialOrdering$.html","searchKeys":["PartialOrdering"]},{"name":"object ZippedIterable3","description":"scala.runtime.ZippedIterable3$","location":"api/scala/runtime/ZippedIterable3$.html","searchKeys":["ZippedIterable3"]},{"name":"def defaultInitialCapacity: Int","description":"scala.collection.mutable.HashMap$","location":"api/scala/collection/mutable/HashMap$.html","searchKeys":["defaultInitialCapacity"]},{"name":"def initialize(value: Long): Long","description":"scala.runtime.LazyLong","location":"api/scala/runtime/LazyLong.html","searchKeys":["initialize"]},{"name":"class TastyBuffer(initialSize: Int)","description":"dotty.tools.tasty.TastyBuffer","location":"api/dotty/tools/tasty/TastyBuffer.html","searchKeys":["TastyBuffer"]},{"name":"def toFloat(x: Double): Float","description":"scala.math.Numeric$$DoubleIsFractional","location":"api/scala/math/Numeric$$DoubleIsFractional.html","searchKeys":["toFloat"]},{"name":"type >=[X <: Int, Y <: Int] <: Boolean","description":"scala.compiletime.ops.int$","location":"api/scala/compiletime/ops/int$.html","searchKeys":[">="]},{"name":"def flatMap[A1 >: A, B1](f: B => Either[A1, B1]): Either[A1, B1]","description":"scala.util.Either","location":"api/scala/util/Either.html","searchKeys":["flatMap"]},{"name":"def isDecimalDouble: Boolean","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["isDecimalDouble"]},{"name":"def buildFromAnyRefMap[K <: AnyRef, V]: BuildFrom[AnyRefMap[, ], (K, V), AnyRefMap[K, V]]","description":"scala.collection.mutable.AnyRefMap$","location":"api/scala/collection/mutable/AnyRefMap$.html","searchKeys":["buildFromAnyRefMap"]},{"name":"def setValue[T1 >: T](value: T1): T","description":"scala.sys.Prop","location":"api/scala/sys/Prop.html","searchKeys":["setValue"]},{"name":"class LongMult(i: Long) extends AnyVal","description":"scala.concurrent.duration.package$$LongMult","location":"api/scala/concurrent/duration/package$$LongMult.html","searchKeys":["LongMult"]},{"name":"Announcing Dotty 0.5.0-RC1","description":"","location":"blog/2017/12/01/fifth-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.5.0-RC1"]},{"name":"def isTupleClass(sym: Symbol): Boolean","description":"scala.quoted.Quotes$reflectModule$defnModule","location":"api/scala/quoted/Quotes$reflectModule$defnModule.html","searchKeys":["isTupleClass"]},{"name":"type R = Deadline","description":"scala.concurrent.duration.DurationConversions$$fromNowConvert$","location":"api/scala/concurrent/duration/DurationConversions$$fromNowConvert$.html","searchKeys":["R"]},{"name":"val it: IterableOps[, AnyConstr, ]","description":"scala.collection.IterableOps$$SizeCompareOps","location":"api/scala/collection/IterableOps$$SizeCompareOps.html","searchKeys":["it"]},{"name":"class Tuple3Zipped[El1, It1 <: Iterable[El1], El2, It2 <: Iterable[El2], El3, It3 <: Iterable[El3]](colls: (It1, It2, It3)) extends AnyVal with ZippedIterable3[El1, El2, El3]","description":"scala.runtime.Tuple3Zipped","location":"api/scala/runtime/Tuple3Zipped.html","searchKeys":["Tuple3Zipped"]},{"name":"class InvalidEscapeException(str: String, val index: Int) extends IllegalArgumentException","description":"scala.StringContext$$InvalidEscapeException","location":"api/scala/StringContext$$InvalidEscapeException.html","searchKeys":["InvalidEscapeException"]},{"name":"def enrichAsScalaFromDoubleToIntFunction(jf: DoubleToIntFunction): RichDoubleToIntFunctionAsFunction1","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsScalaFromDoubleToIntFunction"]},{"name":"val ASTsSection: \"ASTs\"","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["ASTsSection"]},{"name":"Inline","description":"","location":"docs/reference/metaprogramming/inline.html","searchKeys":["Inline"]},{"name":"def requireBounds(idx: Int, until: Int): Unit","description":"scala.collection.mutable.ArrayDequeOps","location":"api/scala/collection/mutable/ArrayDequeOps.html","searchKeys":["requireBounds"]},{"name":"def fromBytes(bytes: Array[Byte])(codec: Codec): Source","description":"scala.io.Source$","location":"api/scala/io/Source$.html","searchKeys":["fromBytes"]},{"name":"def forall(f: B => Boolean): Boolean","description":"scala.util.Either$$RightProjection","location":"api/scala/util/Either$$RightProjection.html","searchKeys":["forall"]},{"name":"def apply(underlying: TypeRepr, annot: Term): AnnotatedType","description":"scala.quoted.Quotes$reflectModule$AnnotatedTypeModule","location":"api/scala/quoted/Quotes$reflectModule$AnnotatedTypeModule.html","searchKeys":["apply"]},{"name":"val x$4: Type[T4]","description":"scala.quoted.FromExpr$$Tuple9FromExpr","location":"api/scala/quoted/FromExpr$$Tuple9FromExpr.html","searchKeys":["x$4"]},{"name":"trait ByNameTypeModule","description":"scala.quoted.Quotes$reflectModule$ByNameTypeModule","location":"api/scala/quoted/Quotes$reflectModule$ByNameTypeModule.html","searchKeys":["ByNameTypeModule"]},{"name":"def /(x: Short): Int","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["/"]},{"name":"def toLong: Long","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["toLong"]},{"name":"val MinValue: -3.4028235E38","description":"scala.Float$","location":"api/scala/Float$.html","searchKeys":["MinValue"]},{"name":"def read: A","description":"scala.concurrent.Channel","location":"api/scala/concurrent/Channel.html","searchKeys":["read"]},{"name":"def map AsJavaMap[K, V](m: Map[K, V]): Map[K, V]","description":"scala.collection.convert.ToJavaImplicits","location":"api/scala/collection/convert/ToJavaImplicits.html","searchKeys":["map AsJavaMap"]},{"name":"def subtractOne(elem: A): HashSet[A]","description":"scala.collection.mutable.HashSet","location":"api/scala/collection/mutable/HashSet.html","searchKeys":["subtractOne"]},{"name":"object Deadline","description":"scala.concurrent.duration.Deadline$","location":"api/scala/concurrent/duration/Deadline$.html","searchKeys":["Deadline"]},{"name":"def paramTypes: List[TypeRepr]","description":"scala.quoted.Quotes$reflectModule$LambdaTypeMethods","location":"api/scala/quoted/Quotes$reflectModule$LambdaTypeMethods.html","searchKeys":["paramTypes"]},{"name":"Dropped: private[this] and protected[this]","description":"","location":"docs/reference/dropped-features/this-qualifier.html","searchKeys":["Dropped: private[this] and protected[this]"]},{"name":"def fill[A, C](n: Int)(elem: => A)(canAccumulate: AccumulatorFactoryShape[A, C]): C","description":"scala.jdk.Accumulator$","location":"api/scala/jdk/Accumulator$.html","searchKeys":["fill"]},{"name":"def <(x: Char): Boolean","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["<"]},{"name":"def chain[T](fs: Seq[T => T]): T => T","description":"scala.Function$","location":"api/scala/Function$.html","searchKeys":["chain"]},{"name":"def removedAll(keys: IterableOnce[K]): C","description":"scala.collection.immutable.MapOps","location":"api/scala/collection/immutable/MapOps.html","searchKeys":["removedAll"]},{"name":"def copy(original: Tree)(name: String, tpt: Tree): TypeBind","description":"scala.quoted.Quotes$reflectModule$TypeBindModule","location":"api/scala/quoted/Quotes$reflectModule$TypeBindModule.html","searchKeys":["copy"]},{"name":"val PackageClause: PackageClauseModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["PackageClause"]},{"name":"def readAddr(): Addr","description":"dotty.tools.tasty.TastyReader","location":"api/dotty/tools/tasty/TastyReader.html","searchKeys":["readAddr"]},{"name":"Debugging Techniques","description":"","location":"docs/contributing/debugging.html","searchKeys":["Debugging Techniques"]},{"name":"def readEnd(): Addr","description":"dotty.tools.tasty.TastyReader","location":"api/dotty/tools/tasty/TastyReader.html","searchKeys":["readEnd"]},{"name":"def getAddr(at: Addr): Addr","description":"dotty.tools.tasty.TastyBuffer","location":"api/dotty/tools/tasty/TastyBuffer.html","searchKeys":["getAddr"]},{"name":"trait Floating[T] extends Decimal[T]","description":"scala.util.FromDigits$$Floating","location":"api/scala/util/FromDigits$$Floating.html","searchKeys":["Floating"]},{"name":"def filter(p: T => Boolean)(executor: ExecutionContext): Future[T]","description":"scala.concurrent.Future","location":"api/scala/concurrent/Future.html","searchKeys":["filter"]},{"name":"def this(initialSize: Int)","description":"scala.collection.mutable.Queue","location":"api/scala/collection/mutable/Queue.html","searchKeys":["this"]},{"name":"trait TotalOrdering extends Ordering[Float]","description":"scala.math.Ordering$$Float$$TotalOrdering","location":"api/scala/math/Ordering$$Float$$TotalOrdering.html","searchKeys":["TotalOrdering"]},{"name":"def asScala: T => R","description":"scala.jdk.FunctionWrappers$$RichFunctionAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichFunctionAsFunction1.html","searchKeys":["asScala"]},{"name":"def Param: Flags","description":"scala.quoted.Quotes$reflectModule$FlagsModule","location":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html","searchKeys":["Param"]},{"name":"Context Functions - More Details","description":"","location":"docs/reference/contextual/context-functions-spec.html","searchKeys":["Context Functions - More Details"]},{"name":"def apply(v1: T1, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, v7: T7, v8: T8, v9: T9, v10: T10, v11: T11, v12: T12, v13: T13, v14: T14): R","description":"scala.Function14","location":"api/scala/Function14.html","searchKeys":["apply"]},{"name":"def propertiesAsScalaMapConverter(p: Properties): AsScala[Map[String, String]]","description":"scala.collection.JavaConverters$","location":"api/scala/collection/JavaConverters$.html","searchKeys":["propertiesAsScalaMapConverter"]},{"name":"def <=(x: Long): Boolean","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["<="]},{"name":"class Tuple12[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12](_1: T1, _2: T2, _3: T3, _4: T4, _5: T5, _6: T6, _7: T7, _8: T8, _9: T9, _10: T10, _11: T11, _12: T12) extends Product12[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12]","description":"scala.Tuple12","location":"api/scala/Tuple12.html","searchKeys":["Tuple12"]},{"name":"def tupled: (T1, T2, T3, T4, T5, T6, T7, T8, T9) => R","description":"scala.Function9","location":"api/scala/Function9.html","searchKeys":["tupled"]},{"name":"def zipWithIndex: Iterator[(A, Int)]","description":"scala.collection.Iterator","location":"api/scala/collection/Iterator.html","searchKeys":["zipWithIndex"]},{"name":"def Protected: Flags","description":"scala.quoted.Quotes$reflectModule$FlagsModule","location":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html","searchKeys":["Protected"]},{"name":"val x$30: FromExpr[T11]","description":"scala.quoted.FromExpr$$Tuple19FromExpr","location":"api/scala/quoted/FromExpr$$Tuple19FromExpr.html","searchKeys":["x$30"]},{"name":"def Transparent: Flags","description":"scala.quoted.Quotes$reflectModule$FlagsModule","location":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html","searchKeys":["Transparent"]},{"name":"def uncurried[T1, T2, T3, T4, T5, R](f: T1 => T2 => T3 => T4 => T5 => R): (T1, T2, T3, T4, T5) => R","description":"scala.Function$","location":"api/scala/Function$.html","searchKeys":["uncurried"]},{"name":"val x$19: Type[T19]","description":"scala.quoted.FromExpr$$Tuple21FromExpr","location":"api/scala/quoted/FromExpr$$Tuple21FromExpr.html","searchKeys":["x$19"]},{"name":"def mkThrowableCatcher[T](isDef: Throwable => Boolean, f: Throwable => T): PartialFunction[Throwable, T]","description":"scala.util.control.Exception$","location":"api/scala/util/control/Exception$.html","searchKeys":["mkThrowableCatcher"]},{"name":"def orderedHash(xs: IterableOnce[Any]): Int","description":"scala.util.hashing.MurmurHash3$","location":"api/scala/util/hashing/MurmurHash3$.html","searchKeys":["orderedHash"]},{"name":"def isWhitespace: Boolean","description":"scala.runtime.RichChar","location":"api/scala/runtime/RichChar.html","searchKeys":["isWhitespace"]},{"name":"var parent: RBNode[K, V]","description":"scala.collection.mutable.CollisionProofHashMap$$RBNode","location":"api/scala/collection/mutable/CollisionProofHashMap$$RBNode.html","searchKeys":["parent"]},{"name":"def enrichAsScalaFromObjIntConsumer[T](jf: ObjIntConsumer[T]): RichObjIntConsumerAsFunction2[T]","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsScalaFromObjIntConsumer"]},{"name":"def %(x: Byte): Double","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["%"]},{"name":"def minus(x: Byte, y: Byte): Byte","description":"scala.math.Numeric$$ByteIsIntegral","location":"api/scala/math/Numeric$$ByteIsIntegral.html","searchKeys":["minus"]},{"name":"def lt(x: T, y: T): Boolean","description":"scala.math.PartialOrdering","location":"api/scala/math/PartialOrdering.html","searchKeys":["lt"]},{"name":"def apply$mcJJ$sp(v1: Long): Long","description":"scala.runtime.java8.JFunction1$mcJJ$sp","location":"api/scala/runtime/java8/JFunction1$mcJJ$sp.html","searchKeys":["apply$mcJJ$sp"]},{"name":"trait TryModule","description":"scala.quoted.Quotes$reflectModule$TryModule","location":"api/scala/quoted/Quotes$reflectModule$TryModule.html","searchKeys":["TryModule"]},{"name":"def enrichAsScalaFromDoubleUnaryOperator(jf: DoubleUnaryOperator): RichDoubleUnaryOperatorAsFunction1","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsScalaFromDoubleUnaryOperator"]},{"name":"def asJavaSeqStream[S <: BaseStream[, ], St <: Stepper[]](s: StreamShape[(K, V), S, St], st: StepperShape[(K, V), St]): S","description":"scala.collection.convert.StreamExtensions$MapHasSeqKeyValueStream","location":"api/scala/collection/convert/StreamExtensions$MapHasSeqKeyValueStream.html","searchKeys":["asJavaSeqStream"]},{"name":"given TypeRefMethods","description":"scala.quoted.Quotes$reflectModule$TypeRefMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeRefMethods.html","searchKeys":["TypeRefMethods"]},{"name":"val charSet: Charset","description":"scala.io.Codec","location":"api/scala/io/Codec.html","searchKeys":["charSet"]},{"name":"def withDescription(text: String): Source","description":"scala.io.Source","location":"api/scala/io/Source.html","searchKeys":["withDescription"]},{"name":"def productElementName(n: Int): String","description":"scala.Product","location":"api/scala/Product.html","searchKeys":["productElementName"]},{"name":"trait QuoteMatching","description":"scala.quoted.runtime.QuoteMatching","location":"api/scala/quoted/runtime/QuoteMatching.html","searchKeys":["QuoteMatching"]},{"name":"def <=(x: Char): Boolean","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["<="]},{"name":"def apply$mcDD$sp(v1: Double): Double","description":"scala.runtime.java8.JFunction1$mcDD$sp","location":"api/scala/runtime/java8/JFunction1$mcDD$sp.html","searchKeys":["apply$mcDD$sp"]},{"name":"val x$38: FromExpr[T18]","description":"scala.quoted.FromExpr$$Tuple20FromExpr","location":"api/scala/quoted/FromExpr$$Tuple20FromExpr.html","searchKeys":["x$38"]},{"name":"def _9: T9","description":"scala.Product16","location":"api/scala/Product16.html","searchKeys":["_9"]},{"name":"object LongMap","description":"scala.collection.mutable.LongMap$","location":"api/scala/collection/mutable/LongMap$.html","searchKeys":["LongMap"]},{"name":"def Array_clone: Symbol","description":"scala.quoted.Quotes$reflectModule$defnModule","location":"api/scala/quoted/Quotes$reflectModule$defnModule.html","searchKeys":["Array_clone"]},{"name":"def take(): A","description":"scala.concurrent.SyncVar","location":"api/scala/concurrent/SyncVar.html","searchKeys":["take"]},{"name":"val x$1: Type[T]","description":"scala.quoted.FromExpr$$ListFromExpr","location":"api/scala/quoted/FromExpr$$ListFromExpr.html","searchKeys":["x$1"]},{"name":"def asJavaIntUnaryOperator(sf: Integer => Integer): IntUnaryOperator","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asJavaIntUnaryOperator"]},{"name":"def toSeconds: Long","description":"scala.concurrent.duration.Duration$$Infinite","location":"api/scala/concurrent/duration/Duration$$Infinite.html","searchKeys":["toSeconds"]},{"name":"def +(x: Char): Double","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["+"]},{"name":"def enrichAsJavaDoubleFunction[A0, R](sf: A0 => R)(evA0: A0 =:= Double): RichFunction1AsDoubleFunction[R]","description":"scala.jdk.Priority1FunctionExtensions","location":"api/scala/jdk/Priority1FunctionExtensions.html","searchKeys":["enrichAsJavaDoubleFunction"]},{"name":"def maxBy[B](f: A => B)(cmp: Ordering[B]): A","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["maxBy"]},{"name":"def asJavaDoubleToLongFunction(sf: Double => Long): DoubleToLongFunction","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asJavaDoubleToLongFunction"]},{"name":"val ExprMatch: ExprMatchModule","description":"scala.quoted.runtime.QuoteMatching","location":"api/scala/quoted/runtime/QuoteMatching.html","searchKeys":["ExprMatch"]},{"name":"object experimental","description":"scala.languageFeature$$experimental$","location":"api/scala/languageFeature$$experimental$.html","searchKeys":["experimental"]},{"name":"val unsafeArray: Array[Boolean]","description":"scala.collection.immutable.ArraySeq$$ofBoolean","location":"api/scala/collection/immutable/ArraySeq$$ofBoolean.html","searchKeys":["unsafeArray"]},{"name":"def product(num: Numeric[A]): A","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["product"]},{"name":"def signum: Int","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["signum"]},{"name":"def from[V](coll: IterableOnce[(Long, V)]): LongMap[V]","description":"scala.collection.immutable.LongMap$","location":"api/scala/collection/immutable/LongMap$.html","searchKeys":["from"]},{"name":"object TreeMap extends SortedMapFactory[[K, V] =>> TreeMap[K, V]]","description":"scala.collection.immutable.TreeMap$","location":"api/scala/collection/immutable/TreeMap$.html","searchKeys":["TreeMap"]},{"name":"trait StrictEquiv extends Equiv[Double]","description":"scala.math.Equiv$$Double$$StrictEquiv","location":"api/scala/math/Equiv$$Double$$StrictEquiv.html","searchKeys":["StrictEquiv"]},{"name":"def addShutdownHook(body: => Unit): ShutdownHookThread","description":"scala.sys","location":"api/scala/sys.html","searchKeys":["addShutdownHook"]},{"name":"def newBuilder[A]: Builder[A, HashSet[A]]","description":"scala.collection.mutable.HashSet$","location":"api/scala/collection/mutable/HashSet$.html","searchKeys":["newBuilder"]},{"name":"val Long: LongManifest","description":"scala.reflect.ClassManifestFactory$","location":"api/scala/reflect/ClassManifestFactory$.html","searchKeys":["Long"]},{"name":"def reverse: PriorityQueue[A]","description":"scala.collection.mutable.PriorityQueue","location":"api/scala/collection/mutable/PriorityQueue.html","searchKeys":["reverse"]},{"name":"def asJavaSeqValueIntStream[K](m: Map[K, Integer]): IntStream","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaSeqValueIntStream"]},{"name":"def toSeq: Seq[T]","description":"scala.Array$$UnapplySeqWrapper","location":"api/scala/Array$$UnapplySeqWrapper.html","searchKeys":["toSeq"]},{"name":"trait JFunction2$mcFJI$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcFJI$sp","location":"api/scala/runtime/java8/JFunction2$mcFJI$sp.html","searchKeys":["JFunction2$mcFJI$sp"]},{"name":"def apply(inline x: Short, inline xs: Short*): IArray[Short]","description":"scala.IArray$package$$IArray$","location":"api/scala/IArray$package$$IArray$.html","searchKeys":["apply"]},{"name":"def asJavaParKeyIntStreamFromShort[V](m: Map[Short, V]): IntStream","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaParKeyIntStreamFromShort"]},{"name":"class NameTags","description":"dotty.tools.tasty.TastyFormat$$NameTags","location":"api/dotty/tools/tasty/TastyFormat$$NameTags.html","searchKeys":["NameTags"]},{"name":"class Addr(index: Int) extends AnyVal","description":"dotty.tools.tasty.TastyBuffer$$Addr","location":"api/dotty/tools/tasty/TastyBuffer$$Addr.html","searchKeys":["Addr"]},{"name":"def +(elem1: A, elem2: A, elems: A*): C","description":"scala.collection.SetOps","location":"api/scala/collection/SetOps.html","searchKeys":["+"]},{"name":"def last: T","description":"scala.collection.immutable.TreeSeqMap$$Ordering","location":"api/scala/collection/immutable/TreeSeqMap$$Ordering.html","searchKeys":["last"]},{"name":"def &(x: Long): Long","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["&"]},{"name":"type Super <: Term","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Super"]},{"name":"def this(underlying: SeqOps[A, AnyConstr, ], ord: Ordering[B])","description":"scala.collection.SeqView$$Sorted","location":"api/scala/collection/SeqView$$Sorted.html","searchKeys":["this"]},{"name":"def javaIterator[B >: A]: Iterator[]","description":"scala.collection.Stepper","location":"api/scala/collection/Stepper.html","searchKeys":["javaIterator"]},{"name":"def isType: Boolean","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["isType"]},{"name":"def foldLeft[B](z: B)(op: (B, Char) => B): B","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["foldLeft"]},{"name":"def toByte: Byte","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["toByte"]},{"name":"def unapply(x: S): Option[x & T]","description":"scala.reflect.TypeTest","location":"api/scala/reflect/TypeTest.html","searchKeys":["unapply"]},{"name":"trait Function19[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, -T14, -T15, -T16, -T17, -T18, -T19, +R] extends AnyRef","description":"scala.Function19","location":"api/scala/Function19.html","searchKeys":["Function19"]},{"name":"Dropped: General Type Projection","description":"","location":"docs/reference/dropped-features/type-projection.html","searchKeys":["Dropped: General Type Projection"]},{"name":"def iterator[T]: Iterator[T]","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["iterator"]},{"name":"def exists(p: (El1, El2) => Boolean): Boolean","description":"scala.runtime.Tuple2Zipped","location":"api/scala/runtime/Tuple2Zipped.html","searchKeys":["exists"]},{"name":"def adder[A]: BiConsumer[AnyAccumulator[A], A]","description":"scala.jdk.AnyAccumulator$","location":"api/scala/jdk/AnyAccumulator$.html","searchKeys":["adder"]},{"name":"def asScalaIteratorConverter[A](i: Iterator[A]): AsScala[Iterator[A]]","description":"scala.collection.JavaConverters$","location":"api/scala/collection/JavaConverters$.html","searchKeys":["asScalaIteratorConverter"]},{"name":"class AbstractFunction4[-T1, -T2, -T3, -T4, +R] extends (T1, T2, T3, T4) => R","description":"scala.runtime.AbstractFunction4","location":"api/scala/runtime/AbstractFunction4.html","searchKeys":["AbstractFunction4"]},{"name":"given SelectOuterTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["SelectOuterTypeTest"]},{"name":"def /(x: Long): Long","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["/"]},{"name":"val x$24: FromExpr[T10]","description":"scala.quoted.FromExpr$$Tuple14FromExpr","location":"api/scala/quoted/FromExpr$$Tuple14FromExpr.html","searchKeys":["x$24"]},{"name":"def flatMap[K2, V2](f: (K, V) => IterableOnce[(K2, V2)]): CC[K2, V2]","description":"scala.collection.MapOps","location":"api/scala/collection/MapOps.html","searchKeys":["flatMap"]},{"name":"val Super: SuperModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Super"]},{"name":"def insert(index: Int, x: String): StringBuilder","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["insert"]},{"name":"def enrichAsJavaObjIntConsumer[T, A1](sf: (T, A1) => Unit)(evA1: A1 =:= Int): RichFunction2AsObjIntConsumer[T]","description":"scala.jdk.Priority1FunctionExtensions","location":"api/scala/jdk/Priority1FunctionExtensions.html","searchKeys":["enrichAsJavaObjIntConsumer"]},{"name":"class SetHasAsScala[A](s: Set[A])","description":"scala.collection.convert.AsScalaExtensions$SetHasAsScala","location":"api/scala/collection/convert/AsScalaExtensions$SetHasAsScala.html","searchKeys":["SetHasAsScala"]},{"name":"def map[B](f: A => B): Option[B]","description":"scala.Option","location":"api/scala/Option.html","searchKeys":["map"]},{"name":"def withLeft[A1 >: A]: Either[A1, B]","description":"scala.util.Right","location":"api/scala/util/Right.html","searchKeys":["withLeft"]},{"name":"def <(x: Float): Boolean","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["<"]},{"name":"given NilToExpr: ToExpr[Nil]","description":"scala.quoted.ToExpr$$NilToExpr$","location":"api/scala/quoted/ToExpr$.html","searchKeys":["NilToExpr"]},{"name":"def #<<(u: URL): ProcessBuilder","description":"scala.sys.process.ProcessBuilder$$FileBuilder","location":"api/scala/sys/process/ProcessBuilder$$FileBuilder.html","searchKeys":["#<<"]},{"name":"def ofMacroExpansion: Position","description":"scala.quoted.Quotes$reflectModule$PositionModule","location":"api/scala/quoted/Quotes$reflectModule$PositionModule.html","searchKeys":["ofMacroExpansion"]},{"name":"val MinusInf: Infinite","description":"scala.concurrent.duration.Duration$","location":"api/scala/concurrent/duration/Duration$.html","searchKeys":["MinusInf"]},{"name":"def length: Int","description":"scala.collection.mutable.ArraySeq$$ofUnit","location":"api/scala/collection/mutable/ArraySeq$$ofUnit.html","searchKeys":["length"]},{"name":"def isAnonymousClass: Boolean","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["isAnonymousClass"]},{"name":"def toIterator: Iterator[A]","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["toIterator"]},{"name":"class FromJavaLongToDoubleFunction(jf: LongToDoubleFunction) extends Long => Double","description":"scala.jdk.FunctionWrappers$$FromJavaLongToDoubleFunction","location":"api/scala/jdk/FunctionWrappers$$FromJavaLongToDoubleFunction.html","searchKeys":["FromJavaLongToDoubleFunction"]},{"name":"def <=(x: Long): Boolean","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["<="]},{"name":"object BigInt extends BigIntOrdering","description":"scala.math.Ordering$$BigInt$","location":"api/scala/math/Ordering$$BigInt$.html","searchKeys":["BigInt"]},{"name":"def ofParIntStepper(st: IntStepper & EfficientSplit): AnyStepper[Int] & EfficientSplit","description":"scala.collection.AnyStepper$","location":"api/scala/collection/AnyStepper$.html","searchKeys":["ofParIntStepper"]},{"name":"def get(key: K): Option[V]","description":"scala.collection.immutable.Map$$Map4","location":"api/scala/collection/immutable/Map$$Map4.html","searchKeys":["get"]},{"name":"val x$26: FromExpr[T5]","description":"scala.quoted.FromExpr$$Tuple21FromExpr","location":"api/scala/quoted/FromExpr$$Tuple21FromExpr.html","searchKeys":["x$26"]},{"name":"def takeRight[T](n: Int): IArray[T]","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["takeRight"]},{"name":"trait Clearable","description":"scala.collection.mutable.Clearable","location":"api/scala/collection/mutable/Clearable.html","searchKeys":["Clearable"]},{"name":"def apply(i: Int): Char","description":"scala.collection.immutable.WrappedString","location":"api/scala/collection/immutable/WrappedString.html","searchKeys":["apply"]},{"name":"val x$6: Type[T6]","description":"scala.quoted.FromExpr$$Tuple6FromExpr","location":"api/scala/quoted/FromExpr$$Tuple6FromExpr.html","searchKeys":["x$6"]},{"name":"def <<(x: Long): Int","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["<<"]},{"name":"def parseString(str: String): Option[Int]","description":"scala.math.Numeric$$IntIsIntegral","location":"api/scala/math/Numeric$$IntIsIntegral.html","searchKeys":["parseString"]},{"name":"def empty[K, V]: ListMap[K, V]","description":"scala.collection.mutable.ListMap$","location":"api/scala/collection/mutable/ListMap$.html","searchKeys":["empty"]},{"name":"type ShortConstant <: Constant","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ShortConstant"]},{"name":"val TEMPLATE: 156","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["TEMPLATE"]},{"name":"def asScalaFromDoubleBinaryOperator(jf: DoubleBinaryOperator): (Double, Double) => Double","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asScalaFromDoubleBinaryOperator"]},{"name":"given TryMethods","description":"scala.quoted.Quotes$reflectModule$TryMethods","location":"api/scala/quoted/Quotes$reflectModule$TryMethods.html","searchKeys":["TryMethods"]},{"name":"def by[T, S](f: T => S)(ord: Ordering[S]): Ordering[T]","description":"scala.math.Ordering$","location":"api/scala/math/Ordering$.html","searchKeys":["by"]},{"name":"val MAGENTA_B: \"\\033[45m\"","description":"scala.io.AnsiColor","location":"api/scala/io/AnsiColor.html","searchKeys":["MAGENTA_B"]},{"name":"given SomeToExpr[T]: ToExpr[Some[T]]","description":"scala.quoted.ToExpr$$SomeToExpr","location":"api/scala/quoted/ToExpr$.html","searchKeys":["SomeToExpr"]},{"name":"def from[A](source: IterableOnce[A]): Stack[A]","description":"scala.collection.mutable.Stack$","location":"api/scala/collection/mutable/Stack$.html","searchKeys":["from"]},{"name":"def addAll(xs: IterableOnce[A]): Growable[A]","description":"scala.collection.mutable.Growable","location":"api/scala/collection/mutable/Growable.html","searchKeys":["addAll"]},{"name":"given TypeSelectMethods","description":"scala.quoted.Quotes$reflectModule$TypeSelectMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeSelectMethods"]},{"name":"def toFactory[K <: AnyRef, V](dummy: AnyRefMap): Factory[(K, V), AnyRefMap[K, V]]","description":"scala.collection.mutable.AnyRefMap$","location":"api/scala/collection/mutable/AnyRefMap$.html","searchKeys":["toFactory"]},{"name":"val x$14: Type[T14]","description":"scala.quoted.FromExpr$$Tuple14FromExpr","location":"api/scala/quoted/FromExpr$$Tuple14FromExpr.html","searchKeys":["x$14"]},{"name":"val SUPERACCESSOR: 20","description":"dotty.tools.tasty.TastyFormat$$NameTags","location":"api/dotty/tools/tasty/TastyFormat$$NameTags.html","searchKeys":["SUPERACCESSOR"]},{"name":"def asJava: ToIntFunction[T]","description":"scala.jdk.FunctionWrappers$$RichFunction1AsToIntFunction","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsToIntFunction.html","searchKeys":["asJava"]},{"name":"def pid: Ref","description":"scala.quoted.Quotes$reflectModule$PackageClauseMethods","location":"api/scala/quoted/Quotes$reflectModule$PackageClauseMethods.html","searchKeys":["pid"]},{"name":"def newBuilder: Builder[A, C]","description":"scala.collection.SpecificIterableFactory","location":"api/scala/collection/SpecificIterableFactory.html","searchKeys":["newBuilder"]},{"name":"val RESET: \"\\033[0m\"","description":"scala.io.AnsiColor","location":"api/scala/io/AnsiColor.html","searchKeys":["RESET"]},{"name":"def hash(x: T): Int","description":"scala.util.hashing.Hashing$$Default","location":"api/scala/util/hashing/Hashing$$Default.html","searchKeys":["hash"]},{"name":"class Tuple21[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16, +T17, +T18, +T19, +T20, +T21](_1: T1, _2: T2, _3: T3, _4: T4, _5: T5, _6: T6, _7: T7, _8: T8, _9: T9, _10: T10, _11: T11, _12: T12, _13: T13, _14: T14, _15: T15, _16: T16, _17: T17, _18: T18, _19: T19, _20: T20, _21: T21) extends Product21[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21]","description":"scala.Tuple21","location":"api/scala/Tuple21.html","searchKeys":["Tuple21"]},{"name":"def size: Int","description":"scala.collection.immutable.VectorBuilder","location":"api/scala/collection/immutable/VectorBuilder.html","searchKeys":["size"]},{"name":"trait JFunction2$mcVII$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcVII$sp","location":"api/scala/runtime/java8/JFunction2$mcVII$sp.html","searchKeys":["JFunction2$mcVII$sp"]},{"name":"val rethrow: Throwable => Boolean","description":"scala.util.control.Exception$$Catch","location":"api/scala/util/control/Exception$$Catch.html","searchKeys":["rethrow"]},{"name":"trait DoubleConstantModule","description":"scala.quoted.Quotes$reflectModule$DoubleConstantModule","location":"api/scala/quoted/Quotes$reflectModule$DoubleConstantModule.html","searchKeys":["DoubleConstantModule"]},{"name":"def toDouble(x: Float): Double","description":"scala.math.Numeric$$FloatIsFractional","location":"api/scala/math/Numeric$$FloatIsFractional.html","searchKeys":["toDouble"]},{"name":"val x$2: Type[T2]","description":"scala.quoted.FromExpr$$Tuple2FromExpr","location":"api/scala/quoted/FromExpr$$Tuple2FromExpr.html","searchKeys":["x$2"]},{"name":"def &(x: Short): Int","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["&"]},{"name":"object parasitic extends ExecutionContextExecutor with BatchingExecutor","description":"scala.concurrent.ExecutionContext$$parasitic$","location":"api/scala/concurrent/ExecutionContext$$parasitic$.html","searchKeys":["parasitic"]},{"name":"def /(x: Short): Int","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["/"]},{"name":"type AndOrType <: TypeRepr","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["AndOrType"]},{"name":"def buildFromIntMap[V]: BuildFrom[IntMap[], (Int, V), IntMap[V]]","description":"scala.collection.immutable.IntMap$","location":"api/scala/collection/immutable/IntMap$.html","searchKeys":["buildFromIntMap"]},{"name":"def docstring: Option[String]","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["docstring"]},{"name":"def appendAll(xs: IterableOnce[Char]): StringBuilder","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["appendAll"]},{"name":"val PRIVATE: 6","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["PRIVATE"]},{"name":"def _13: T13","description":"scala.Product22","location":"api/scala/Product22.html","searchKeys":["_13"]},{"name":"def Tuple6[T1, T2, T3, T4, T5, T6](ord1: Ordering[T1], ord2: Ordering[T2], ord3: Ordering[T3], ord4: Ordering[T4], ord5: Ordering[T5], ord6: Ordering[T6]): Ordering[(T1, T2, T3, T4, T5, T6)]","description":"scala.math.Ordering$","location":"api/scala/math/Ordering$.html","searchKeys":["Tuple6"]},{"name":"def isValidChar: Boolean","description":"scala.math.ScalaNumericAnyConversions","location":"api/scala/math/ScalaNumericAnyConversions.html","searchKeys":["isValidChar"]},{"name":"class SeqCharSequence(sequenceOfChars: IndexedSeq[Char]) extends CharSequence","description":"scala.Predef$$SeqCharSequence","location":"api/scala/Predef$$SeqCharSequence.html","searchKeys":["SeqCharSequence"]},{"name":"def toDouble(x: Short): Double","description":"scala.math.Numeric$$ShortIsIntegral","location":"api/scala/math/Numeric$$ShortIsIntegral.html","searchKeys":["toDouble"]},{"name":"def curried: T1 => T2 => T3 => T4 => T5 => T6 => T7 => T8 => T9 => T10 => T11 => T12 => T13 => T14 => T15 => T16 => R","description":"scala.Function16","location":"api/scala/Function16.html","searchKeys":["curried"]},{"name":"def apply(constant: Constant): Literal","description":"scala.quoted.Quotes$reflectModule$LiteralModule","location":"api/scala/quoted/Quotes$reflectModule$LiteralModule.html","searchKeys":["apply"]},{"name":"val x$9: Type[T9]","description":"scala.quoted.FromExpr$$Tuple13FromExpr","location":"api/scala/quoted/FromExpr$$Tuple13FromExpr.html","searchKeys":["x$9"]},{"name":"given Tuple11ToExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11]: ToExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)]","description":"scala.quoted.ToExpr$$Tuple11ToExpr","location":"api/scala/quoted/ToExpr$.html","searchKeys":["Tuple11ToExpr"]},{"name":"val INLINED: 147","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["INLINED"]},{"name":"def lastKey: K","description":"scala.collection.SortedMapOps","location":"api/scala/collection/SortedMapOps.html","searchKeys":["lastKey"]},{"name":"def apply(i: Int): A","description":"scala.collection.SeqFactory$$UnapplySeqWrapper","location":"api/scala/collection/SeqFactory$$UnapplySeqWrapper.html","searchKeys":["apply"]},{"name":"def >>>(x: Int): Int","description":"scala.Char","location":"api/scala/Char.html","searchKeys":[">>>"]},{"name":"val Args: Group[(Int, Long, Double)]","description":"scala.Specializable$","location":"api/scala/Specializable$.html","searchKeys":["Args"]},{"name":"object Scala3RunTime","description":"scala.runtime.Scala3RunTime$","location":"api/scala/runtime/Scala3RunTime$.html","searchKeys":["Scala3RunTime"]},{"name":"object strictEquality","description":"scala.language$$strictEquality$","location":"api/scala/language$$strictEquality$.html","searchKeys":["strictEquality"]},{"name":"def updateWith[S >: T](key: Int, value: S, f: (T, S) => S): IntMap[S]","description":"scala.collection.immutable.IntMap","location":"api/scala/collection/immutable/IntMap.html","searchKeys":["updateWith"]},{"name":"def mutableLongMapIsMap[V0]: IsMap[LongMap[V0]] { type K = Long; type V = V0; type C = LongMap[V0];  }","description":"scala.collection.generic.IsMap$","location":"api/scala/collection/generic/IsMap$.html","searchKeys":["mutableLongMapIsMap"]},{"name":"def unsorted: Set[A]","description":"scala.collection.SortedSetOps","location":"api/scala/collection/SortedSetOps.html","searchKeys":["unsorted"]},{"name":"def Exported: Flags","description":"scala.quoted.Quotes$reflectModule$FlagsModule","location":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html","searchKeys":["Exported"]},{"name":"def toHexString: String","description":"scala.runtime.RichInt","location":"api/scala/runtime/RichInt.html","searchKeys":["toHexString"]},{"name":"def >(x: Long): Boolean","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":[">"]},{"name":"def RootClass: Symbol","description":"scala.quoted.Quotes$reflectModule$defnModule","location":"api/scala/quoted/Quotes$reflectModule$defnModule.html","searchKeys":["RootClass"]},{"name":"given WildcardTypeTreeMethods","description":"scala.quoted.Quotes$reflectModule$WildcardTypeTreeMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["WildcardTypeTreeMethods"]},{"name":"val x$10: Type[T10]","description":"scala.quoted.FromExpr$$Tuple13FromExpr","location":"api/scala/quoted/FromExpr$$Tuple13FromExpr.html","searchKeys":["x$10"]},{"name":"def defaultLoadFactor: Double","description":"scala.collection.mutable.HashSet$","location":"api/scala/collection/mutable/HashSet$.html","searchKeys":["defaultLoadFactor"]},{"name":"def lastKey: A","description":"scala.collection.SortedSetOps","location":"api/scala/collection/SortedSetOps.html","searchKeys":["lastKey"]},{"name":"def this(defaultEntry: K => V, initialBufferSize: Int)","description":"scala.collection.mutable.AnyRefMap","location":"api/scala/collection/mutable/AnyRefMap.html","searchKeys":["this"]},{"name":"def subtractAll(xs: IterableOnce[A]): Shrinkable[A]","description":"scala.collection.mutable.Shrinkable","location":"api/scala/collection/mutable/Shrinkable.html","searchKeys":["subtractAll"]},{"name":"def asScalaFromUnaryOperator[T](jf: UnaryOperator[T]): T => T","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asScalaFromUnaryOperator"]},{"name":"def lastIndexOfSlice[B >: A](that: Seq[B], end: Int): Int","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["lastIndexOfSlice"]},{"name":"def minAfter(key: K): Option[(K, V)]","description":"scala.collection.SortedMapOps","location":"api/scala/collection/SortedMapOps.html","searchKeys":["minAfter"]},{"name":"object TotalOrdering extends TotalOrdering","description":"scala.math.Ordering$$Double$$TotalOrdering$","location":"api/scala/math/Ordering$$Double$$TotalOrdering$.html","searchKeys":["TotalOrdering"]},{"name":"def signum(x: T): Int","description":"scala.math.Numeric","location":"api/scala/math/Numeric.html","searchKeys":["signum"]},{"name":"def curried: T1 => T2 => T3 => T4 => T5 => T6 => T7 => R","description":"scala.Function7","location":"api/scala/Function7.html","searchKeys":["curried"]},{"name":"val Byte: ByteManifest","description":"scala.reflect.ClassTag$","location":"api/scala/reflect/ClassTag$.html","searchKeys":["Byte"]},{"name":"def unapply[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10](x: Product10[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]): Option[Product10[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]]","description":"scala.Product10$","location":"api/scala/Product10$.html","searchKeys":["unapply"]},{"name":"def isDefinedAt(idx: Int): Boolean","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["isDefinedAt"]},{"name":"def blockOn[T](thunk: => T)(permission: CanAwait): T","description":"scala.concurrent.BlockContext","location":"api/scala/concurrent/BlockContext.html","searchKeys":["blockOn"]},{"name":"val intStepperShape: StepperShape[Int, IntStepper]","description":"scala.collection.StepperShape$","location":"api/scala/collection/StepperShape$.html","searchKeys":["intStepperShape"]},{"name":"trait StrictOptimizedSortedMapOps[K, +V, +CC <: ([X, Y] =>> Map[X, Y] & SortedMapOps[X, Y, CC, ]), +C <: SortedMapOps[K, V, CC, C]] extends SortedMapOps[K, V, CC, C] with StrictOptimizedMapOps[K, V, [K, V] =>> Map[K, V], C]","description":"scala.collection.StrictOptimizedSortedMapOps","location":"api/scala/collection/StrictOptimizedSortedMapOps.html","searchKeys":["StrictOptimizedSortedMapOps"]},{"name":"trait BigDecimalOrdering extends Ordering[BigDecimal]","description":"scala.math.Ordering$$BigDecimalOrdering","location":"api/scala/math/Ordering$$BigDecimalOrdering.html","searchKeys":["BigDecimalOrdering"]},{"name":"val headless: BooleanProp","description":"scala.sys.SystemProperties$","location":"api/scala/sys/SystemProperties$.html","searchKeys":["headless"]},{"name":"def this(defaultEntry: K => V)","description":"scala.collection.mutable.AnyRefMap","location":"api/scala/collection/mutable/AnyRefMap.html","searchKeys":["this"]},{"name":"val LAZY_LOCAL_SUFFIX_STRING: \"$lzy\"","description":"scala.reflect.NameTransformer$","location":"api/scala/reflect/NameTransformer$.html","searchKeys":["LAZY_LOCAL_SUFFIX_STRING"]},{"name":"def toStream: Stream[A]","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["toStream"]},{"name":"def abs(x: Long): Long","description":"scala.math","location":"api/scala/math.html","searchKeys":["abs"]},{"name":"def toTry(ev: A <:< Throwable): Try[B]","description":"scala.util.Either","location":"api/scala/util/Either.html","searchKeys":["toTry"]},{"name":"def <=(x: Long): Boolean","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["<="]},{"name":"def apply(array: Array[Byte])(using Quotes): Expr[Array[Byte]]","description":"scala.quoted.ToExpr$$ArrayOfByteToExpr$","location":"api/scala/quoted/ToExpr$$ArrayOfByteToExpr$.html","searchKeys":["apply"]},{"name":"given given_FromString_Boolean: FromString[Boolean]","description":"scala.util.CommandLineParser$$FromString$$given_FromString_Boolean$","location":"api/scala/util/CommandLineParser$$FromString$$given_FromString_Boolean$.html","searchKeys":["given_FromString_Boolean"]},{"name":"def unapply(tree: PackageClause): (Ref, List[Tree])","description":"scala.quoted.Quotes$reflectModule$PackageClauseModule","location":"api/scala/quoted/Quotes$reflectModule$PackageClauseModule.html","searchKeys":["unapply"]},{"name":"Kind Polymorphism","description":"","location":"docs/reference/other-new-features/kind-polymorphism.html","searchKeys":["Kind Polymorphism"]},{"name":"def update(@deprecatedName(\"n\", \"2.13.0\") index: Int, elem: A): Unit","description":"scala.collection.mutable.ArrayBuffer","location":"api/scala/collection/mutable/ArrayBuffer.html","searchKeys":["update"]},{"name":"def next(): Seq[B]","description":"scala.collection.Iterator$GroupedIterator","location":"api/scala/collection/Iterator$GroupedIterator.html","searchKeys":["next"]},{"name":"def assertFailed(message: Any): Nothing","description":"scala.runtime.Scala3RunTime$","location":"api/scala/runtime/Scala3RunTime$.html","searchKeys":["assertFailed"]},{"name":"given BooleanToExpr[T <: Boolean]: ToExpr[T]","description":"scala.quoted.ToExpr$$BooleanToExpr","location":"api/scala/quoted/ToExpr$.html","searchKeys":["BooleanToExpr"]},{"name":"def takeWhile(p: A => Boolean): C","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["takeWhile"]},{"name":"class RichFloat(val self: Float) extends AnyVal with FractionalProxy[Float]","description":"scala.runtime.RichFloat","location":"api/scala/runtime/RichFloat.html","searchKeys":["RichFloat"]},{"name":"def fromComparator[T](cmp: Comparator[T]): Equiv[T]","description":"scala.math.Equiv$","location":"api/scala/math/Equiv$.html","searchKeys":["fromComparator"]},{"name":"class InsertionPoint(insertionPoint: Int) extends SearchResult","description":"scala.collection.Searching$$InsertionPoint","location":"api/scala/collection/Searching$$InsertionPoint.html","searchKeys":["InsertionPoint"]},{"name":"class RichBoolean(val self: Boolean) extends AnyVal with OrderedProxy[Boolean]","description":"scala.runtime.RichBoolean","location":"api/scala/runtime/RichBoolean.html","searchKeys":["RichBoolean"]},{"name":"def newBuilder[K, V](initialCapacity: Int, loadFactor: Double)(evidence$4: Ordering[K]): Builder[(K, V), CollisionProofHashMap[K, V]]","description":"scala.collection.mutable.CollisionProofHashMap$","location":"api/scala/collection/mutable/CollisionProofHashMap$.html","searchKeys":["newBuilder"]},{"name":"def ==(x: Float): Boolean","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["=="]},{"name":"val intOptionShape: OptionShape[Int, OptionalInt]","description":"scala.jdk.OptionShape$","location":"api/scala/jdk/OptionShape$.html","searchKeys":["intOptionShape"]},{"name":"def #||(other: ProcessBuilder): ProcessBuilder","description":"scala.sys.process.ProcessBuilder","location":"api/scala/sys/process/ProcessBuilder.html","searchKeys":["#||"]},{"name":"val Nothing: Manifest[Nothing]","description":"scala.reflect.ClassManifestFactory$","location":"api/scala/reflect/ClassManifestFactory$.html","searchKeys":["Nothing"]},{"name":"def tails: Iterator[String]","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["tails"]},{"name":"def fromStringOption(s: String): Option[T]","description":"scala.util.CommandLineParser$$FromString","location":"api/scala/util/CommandLineParser$$FromString.html","searchKeys":["fromStringOption"]},{"name":"def _4: T4","description":"scala.Product10","location":"api/scala/Product10.html","searchKeys":["_4"]},{"name":"def isImplicit: Boolean","description":"scala.quoted.Quotes$reflectModule$MethodTypeMethods","location":"api/scala/quoted/Quotes$reflectModule$MethodTypeMethods.html","searchKeys":["isImplicit"]},{"name":"def unapplySeq(s: CharSequence): Option[List[String]]","description":"scala.util.matching.Regex","location":"api/scala/util/matching/Regex.html","searchKeys":["unapplySeq"]},{"name":"def >=(x: Byte): Boolean","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":[">="]},{"name":"def fromNanos(nanos: Long): FiniteDuration","description":"scala.concurrent.duration.Duration$","location":"api/scala/concurrent/duration/Duration$.html","searchKeys":["fromNanos"]},{"name":"val x$18: FromExpr[T2]","description":"scala.quoted.FromExpr$$Tuple16FromExpr","location":"api/scala/quoted/FromExpr$$Tuple16FromExpr.html","searchKeys":["x$18"]},{"name":"def unapply(x: TypeIdent): Some[String]","description":"scala.quoted.Quotes$reflectModule$TypeIdentModule","location":"api/scala/quoted/Quotes$reflectModule$TypeIdentModule.html","searchKeys":["unapply"]},{"name":"trait IndexedSeq[+A] extends Seq[A] with IndexedSeqOps[A, [A] =>> IndexedSeq[A], IndexedSeq[A]] with IterableFactoryDefaults[A, [A] =>> IndexedSeq[A]]","description":"scala.collection.IndexedSeq","location":"api/scala/collection/IndexedSeq.html","searchKeys":["IndexedSeq"]},{"name":"def hash(v: T): Int","description":"scala.util.hashing.ByteswapHashing","location":"api/scala/util/hashing/ByteswapHashing.html","searchKeys":["hash"]},{"name":"def iterator: Iterator[(K, V)]","description":"scala.collection.mutable.Map$$WithDefault","location":"api/scala/collection/mutable/Map$$WithDefault.html","searchKeys":["iterator"]},{"name":"def bootstrap(lookup: Lookup, invokedName: String, invokedType: MethodType, reflectiveCallType: MethodType): CallSite","description":"scala.runtime.StructuralCallSite$","location":"api/scala/runtime/StructuralCallSite$.html","searchKeys":["bootstrap"]},{"name":"val x$5: Type[T5]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["x$5"]},{"name":"def ==(x: Char): Boolean","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["=="]},{"name":"def newBuilder[K, V]: Builder[(K, V), TreeSeqMap[K, V]]","description":"scala.collection.immutable.TreeSeqMap$","location":"api/scala/collection/immutable/TreeSeqMap$.html","searchKeys":["newBuilder"]},{"name":"def AnyClass: Symbol","description":"scala.quoted.Quotes$reflectModule$defnModule","location":"api/scala/quoted/Quotes$reflectModule$defnModule.html","searchKeys":["AnyClass"]},{"name":"class FromJavaConsumer[T](jf: Consumer[T]) extends T => Unit","description":"scala.jdk.FunctionWrappers$$FromJavaConsumer","location":"api/scala/jdk/FunctionWrappers$$FromJavaConsumer.html","searchKeys":["FromJavaConsumer"]},{"name":"def ++[B >: A](suffix: IterableOnce[B]): CC[B]","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["++"]},{"name":"type CanBuildFrom[-From, -A, +C] = BuildFrom[From, A, C]","description":"scala.collection.generic","location":"api/scala/collection/generic.html","searchKeys":["CanBuildFrom"]},{"name":"def unfold[A, S](init: S)(f: S => Option[(A, S)])(evidence$21: Ev[A]): CC[A]","description":"scala.collection.EvidenceIterableFactory","location":"api/scala/collection/EvidenceIterableFactory.html","searchKeys":["unfold"]},{"name":"def isOverdue(): Boolean","description":"scala.concurrent.duration.Deadline","location":"api/scala/concurrent/duration/Deadline.html","searchKeys":["isOverdue"]},{"name":"def AnyValClass: Symbol","description":"scala.quoted.Quotes$reflectModule$defnModule","location":"api/scala/quoted/Quotes$reflectModule$defnModule.html","searchKeys":["AnyValClass"]},{"name":"def !=(x: Int): Boolean","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["!="]},{"name":"val groupNames: Seq[String]","description":"scala.util.matching.Regex$$Match","location":"api/scala/util/matching/Regex$$Match.html","searchKeys":["groupNames"]},{"name":"def this(bigDecimal: BigDecimal)","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["this"]},{"name":"object PartialFunction","description":"scala.PartialFunction$","location":"api/scala/PartialFunction$.html","searchKeys":["PartialFunction"]},{"name":"Soft Keywords","description":"","location":"docs/reference/soft-modifier.html","searchKeys":["Soft Keywords"]},{"name":"given UnapplyMethods","description":"scala.quoted.Quotes$reflectModule$UnapplyMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["UnapplyMethods"]},{"name":"trait FlagsModule","description":"scala.quoted.Quotes$reflectModule$FlagsModule","location":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html","searchKeys":["FlagsModule"]},{"name":"def apply$mcDII$sp(v1: Int, v2: Int): Double","description":"scala.runtime.java8.JFunction2$mcDII$sp","location":"api/scala/runtime/java8/JFunction2$mcDII$sp.html","searchKeys":["apply$mcDII$sp"]},{"name":"given TermRefTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TermRefTypeTest"]},{"name":"def from[A](it: IterableOnce[A])(evidence$3: ClassTag[A]): Array[A]","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["from"]},{"name":"class FromJavaFunction[T, R](jf: Function[T, R]) extends T => R","description":"scala.jdk.FunctionWrappers$$FromJavaFunction","location":"api/scala/jdk/FunctionWrappers$$FromJavaFunction.html","searchKeys":["FromJavaFunction"]},{"name":"def pattern: TypeTree","description":"scala.quoted.Quotes$reflectModule$TypeCaseDefMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeCaseDefMethods.html","searchKeys":["pattern"]},{"name":"def fromFile(name: String, enc: String): BufferedSource","description":"scala.io.Source$","location":"api/scala/io/Source$.html","searchKeys":["fromFile"]},{"name":"def tupled[T1, T2, T3, T4, T5, R](f: (T1, T2, T3, T4, T5) => R): (T1, T2, T3, T4, T5) => R","description":"scala.Function$","location":"api/scala/Function$.html","searchKeys":["tupled"]},{"name":"trait OrderBy","description":"scala.collection.immutable.TreeSeqMap$$OrderBy","location":"api/scala/collection/immutable/TreeSeqMap$$OrderBy.html","searchKeys":["OrderBy"]},{"name":"def dropRight[T](n: Int): IArray[T]","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["dropRight"]},{"name":"type Applied <: TypeTree","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Applied"]},{"name":"def iterator: Iterator[A]","description":"scala.Option","location":"api/scala/Option.html","searchKeys":["iterator"]},{"name":"def length: Int","description":"scala.collection.SeqView$$Concat","location":"api/scala/collection/SeqView$$Concat.html","searchKeys":["length"]},{"name":"def plus(x: Float, y: Float): Float","description":"scala.math.Numeric$$FloatIsFractional","location":"api/scala/math/Numeric$$FloatIsFractional.html","searchKeys":["plus"]},{"name":"val x$1: Type[T1]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["x$1"]},{"name":"def unzip[A1, A2](asPair: A => (A1, A2)): (CC[A1], CC[A2])","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["unzip"]},{"name":"def apply(i: Int): A","description":"scala.collection.SeqView$$Drop","location":"api/scala/collection/SeqView$$Drop.html","searchKeys":["apply"]},{"name":"def apply$mcDJ$sp(v1: Long): Double","description":"scala.runtime.java8.JFunction1$mcDJ$sp","location":"api/scala/runtime/java8/JFunction1$mcDJ$sp.html","searchKeys":["apply$mcDJ$sp"]},{"name":"val x$20: Type[T20]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["x$20"]},{"name":"class FromJavaBooleanSupplier(jf: BooleanSupplier) extends () => Boolean","description":"scala.jdk.FunctionWrappers$$FromJavaBooleanSupplier","location":"api/scala/jdk/FunctionWrappers$$FromJavaBooleanSupplier.html","searchKeys":["FromJavaBooleanSupplier"]},{"name":"trait AssignModule","description":"scala.quoted.Quotes$reflectModule$AssignModule","location":"api/scala/quoted/Quotes$reflectModule$AssignModule.html","searchKeys":["AssignModule"]},{"name":"def enrichAsJavaLongPredicate[A0](sf: A0 => Boolean)(evA0: A0 =:= Long): RichFunction1AsLongPredicate","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsJavaLongPredicate"]},{"name":"val x$28: FromExpr[T6]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["x$28"]},{"name":"class Regex extends Serializable","description":"scala.util.matching.Regex","location":"api/scala/util/matching/Regex.html","searchKeys":["Regex"]},{"name":"def formatted(fmtstr: String): String","description":"scala.Predef$$StringFormat","location":"api/scala/Predef$$StringFormat.html","searchKeys":["formatted"]},{"name":"def apply(v1: T1): R","description":"scala.Function1","location":"api/scala/Function1.html","searchKeys":["apply"]},{"name":"def #:::[B >: A](prefix: LazyList[B]): LazyList[B]","description":"scala.collection.immutable.LazyList$$Deferrer","location":"api/scala/collection/immutable/LazyList$$Deferrer.html","searchKeys":["#:::"]},{"name":"object IsMap","description":"scala.collection.generic.IsMap$","location":"api/scala/collection/generic/IsMap$.html","searchKeys":["IsMap"]},{"name":"package scala.compat","description":"scala.compat","location":"api/scala/compat.html","searchKeys":["scala.compat"]},{"name":"def toLong: Long","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["toLong"]},{"name":"def deserializeLambdaOrNull(lookup: Lookup, cache: Map[String, MethodHandle], targetMethodMap: Map[String, MethodHandle], serialized: SerializedLambda): AnyRef","description":"scala.runtime.LambdaDeserializer$","location":"api/scala/runtime/LambdaDeserializer$.html","searchKeys":["deserializeLambdaOrNull"]},{"name":"def remove(idx: Int, count: Int): Unit","description":"scala.collection.mutable.UnrolledBuffer","location":"api/scala/collection/mutable/UnrolledBuffer.html","searchKeys":["remove"]},{"name":"def defaultCharsetCodec: Codec","description":"scala.io.Codec$","location":"api/scala/io/Codec$.html","searchKeys":["defaultCharsetCodec"]},{"name":"def equiv(x: Double, y: Double): Boolean","description":"scala.math.Equiv$$Double$$StrictEquiv","location":"api/scala/math/Equiv$$Double$$StrictEquiv.html","searchKeys":["equiv"]},{"name":"def memberFields: List[Symbol]","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["memberFields"]},{"name":"type SummonFrom <: Term","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["SummonFrom"]},{"name":"def prependedAll[B >: A](prefix: SeqOps[B, AnyConstr, ]): SeqView[B]","description":"scala.collection.SeqView","location":"api/scala/collection/SeqView.html","searchKeys":["prependedAll"]},{"name":"class LeftProjection[+A, +B](e: Either[A, B])","description":"scala.util.Either$$LeftProjection","location":"api/scala/util/Either$$LeftProjection.html","searchKeys":["LeftProjection"]},{"name":"def /(divisor: Duration): Double","description":"scala.concurrent.duration.Duration","location":"api/scala/concurrent/duration/Duration.html","searchKeys":["/"]},{"name":"object #::","description":"scala.collection.immutable.LazyList$$#::$","location":"api/scala/collection/immutable/LazyList$$#::$.html","searchKeys":["#::"]},{"name":"def addExact(x: Long, y: Long): Long","description":"scala.math","location":"api/scala/math.html","searchKeys":["addExact"]},{"name":"val x$3: Type[T3]","description":"scala.quoted.FromExpr$$Tuple14FromExpr","location":"api/scala/quoted/FromExpr$$Tuple14FromExpr.html","searchKeys":["x$3"]},{"name":"def unapply(constant: FloatConstant): Some[Float]","description":"scala.quoted.Quotes$reflectModule$FloatConstantModule","location":"api/scala/quoted/Quotes$reflectModule$FloatConstantModule.html","searchKeys":["unapply"]},{"name":"def reportFailure(@deprecatedName(\"t\") cause: Throwable): Unit","description":"scala.concurrent.ExecutionContext","location":"api/scala/concurrent/ExecutionContext.html","searchKeys":["reportFailure"]},{"name":"def isEnqueued: Boolean","description":"scala.ref.Reference","location":"api/scala/ref/Reference.html","searchKeys":["isEnqueued"]},{"name":"var nextId: Int","description":"scala.Enumeration","location":"api/scala/Enumeration.html","searchKeys":["nextId"]},{"name":"trait ByteConstantModule","description":"scala.quoted.Quotes$reflectModule$ByteConstantModule","location":"api/scala/quoted/Quotes$reflectModule$ByteConstantModule.html","searchKeys":["ByteConstantModule"]},{"name":"def padTo[B >: A](len: Int, elem: B)(evidence$25: ClassTag[B]): Array[B]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["padTo"]},{"name":"def <(x: Long): Boolean","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["<"]},{"name":"given Tuple15FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15](using val x$1: Type[T1], val x$2: Type[T2], val x$3: Type[T3], val x$4: Type[T4], val x$5: Type[T5], val x$6: Type[T6], val x$7: Type[T7], val x$8: Type[T8], val x$9: Type[T9], val x$10: Type[T10], val x$11: Type[T11], val x$12: Type[T12], val x$13: Type[T13], val x$14: Type[T14], val x$15: Type[T15], val x$16: FromExpr[T1], val x$17: FromExpr[T2], val x$18: FromExpr[T3], val x$19: FromExpr[T4], val x$20: FromExpr[T5], val x$21: FromExpr[T6], val x$22: FromExpr[T7], val x$23: FromExpr[T8], val x$24: FromExpr[T9], val x$25: FromExpr[T10], val x$26: FromExpr[T11], val x$27: FromExpr[T12], val x$28: FromExpr[T13], val x$29: FromExpr[T14], val x$30: FromExpr[T15]): FromExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)]","description":"scala.quoted.FromExpr$$Tuple15FromExpr","location":"api/scala/quoted/FromExpr$.html","searchKeys":["Tuple15FromExpr"]},{"name":"type ResultWithoutStep","description":"scala.runtime.RangedProxy","location":"api/scala/runtime/RangedProxy.html","searchKeys":["ResultWithoutStep"]},{"name":"class RichConsumerAsFunction1[T](underlying: Consumer[T]) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichConsumerAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichConsumerAsFunction1.html","searchKeys":["RichConsumerAsFunction1"]},{"name":"trait Ordered[A] extends Comparable[A]","description":"scala.math.Ordered","location":"api/scala/math/Ordered.html","searchKeys":["Ordered"]},{"name":"given IntToExpr[T <: Int]: ToExpr[T]","description":"scala.quoted.ToExpr$$IntToExpr","location":"api/scala/quoted/ToExpr$.html","searchKeys":["IntToExpr"]},{"name":"def asJavaBiPredicate[T, U](sf: (T, U) => Boolean): BiPredicate[T, U]","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asJavaBiPredicate"]},{"name":"class MutableSeqHasAsJava[A](s: Seq[A])","description":"scala.collection.convert.AsJavaExtensions$MutableSeqHasAsJava","location":"api/scala/collection/convert/AsJavaExtensions$MutableSeqHasAsJava.html","searchKeys":["MutableSeqHasAsJava"]},{"name":"type Integral[T] = Integral[T]","description":"scala","location":"api/scala.html","searchKeys":["Integral"]},{"name":"var nwarnings: Int","description":"scala.io.Source","location":"api/scala/io/Source.html","searchKeys":["nwarnings"]},{"name":"def fromSpecific(it: IterableOnce[Value]): ValueSet","description":"scala.Enumeration$ValueSet$","location":"api/scala/Enumeration$ValueSet$.html","searchKeys":["fromSpecific"]},{"name":"given TypeProjectionMethods","description":"scala.quoted.Quotes$reflectModule$TypeProjectionMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeProjectionMethods.html","searchKeys":["TypeProjectionMethods"]},{"name":"def |(that: BigInt): BigInt","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["|"]},{"name":"Multiversal Equality","description":"","location":"docs/reference/contextual/multiversal-equality.html","searchKeys":["Multiversal Equality"]},{"name":"class RichFunction1AsToDoubleFunction[T](underlying: T => Double) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichFunction1AsToDoubleFunction","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsToDoubleFunction.html","searchKeys":["RichFunction1AsToDoubleFunction"]},{"name":"def by(x: T): R","description":"scala.util.control.Exception$$By","location":"api/scala/util/control/Exception$$By.html","searchKeys":["by"]},{"name":"def info: TypeRepr","description":"scala.quoted.Quotes$reflectModule$RefinementMethods","location":"api/scala/quoted/Quotes$reflectModule$RefinementMethods.html","searchKeys":["info"]},{"name":"def apply$mcVF$sp(v1: Float): Unit","description":"scala.runtime.java8.JFunction1$mcVF$sp","location":"api/scala/runtime/java8/JFunction1$mcVF$sp.html","searchKeys":["apply$mcVF$sp"]},{"name":"def _10: T10","description":"scala.Product17","location":"api/scala/Product17.html","searchKeys":["_10"]},{"name":"def %(x: Float): Float","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["%"]},{"name":"def contains[A1 >: A](elem: A1): Boolean","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["contains"]},{"name":"def setSeed(seed: Long): Unit","description":"scala.util.Random","location":"api/scala/util/Random.html","searchKeys":["setSeed"]},{"name":"def -(elem: A): C","description":"scala.collection.SetOps","location":"api/scala/collection/SetOps.html","searchKeys":["-"]},{"name":"val x$16: FromExpr[T1]","description":"scala.quoted.FromExpr$$Tuple15FromExpr","location":"api/scala/quoted/FromExpr$$Tuple15FromExpr.html","searchKeys":["x$16"]},{"name":"def test(x1: Long): Boolean","description":"scala.jdk.FunctionWrappers$$AsJavaLongPredicate","location":"api/scala/jdk/FunctionWrappers$$AsJavaLongPredicate.html","searchKeys":["test"]},{"name":"def minus(x: BigDecimal, y: BigDecimal): BigDecimal","description":"scala.math.Numeric$$BigDecimalIsConflicted","location":"api/scala/math/Numeric$$BigDecimalIsConflicted.html","searchKeys":["minus"]},{"name":"def empty[K, V]: C[K, V]","description":"scala.collection.MapFactory$$Delegate","location":"api/scala/collection/MapFactory$$Delegate.html","searchKeys":["empty"]},{"name":"val EXPANDED: 3","description":"dotty.tools.tasty.TastyFormat$$NameTags","location":"api/dotty/tools/tasty/TastyFormat$$NameTags.html","searchKeys":["EXPANDED"]},{"name":"def repr: Repr","description":"scala.collection.generic.Subtractable","location":"api/scala/collection/generic/Subtractable.html","searchKeys":["repr"]},{"name":"def !<(log: ProcessLogger): Int","description":"scala.sys.process.ProcessBuilder","location":"api/scala/sys/process/ProcessBuilder.html","searchKeys":["!<"]},{"name":"def tabulate[A](n: Int)(f: Int => A): CC[A]","description":"scala.collection.IterableFactory","location":"api/scala/collection/IterableFactory.html","searchKeys":["tabulate"]},{"name":"val ERASED: 34","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["ERASED"]},{"name":"def remove(key: K): Option[V]","description":"scala.collection.mutable.MapOps","location":"api/scala/collection/mutable/MapOps.html","searchKeys":["remove"]},{"name":"def /(divisor: Double): Duration","description":"scala.concurrent.duration.Duration$$Infinite","location":"api/scala/concurrent/duration/Duration$$Infinite.html","searchKeys":["/"]},{"name":"def option: Option[T]","description":"scala.sys.Prop","location":"api/scala/sys/Prop.html","searchKeys":["option"]},{"name":"def _7: T7","description":"scala.Product22","location":"api/scala/Product22.html","searchKeys":["_7"]},{"name":"trait FromString[T]","description":"scala.util.CommandLineParser$$FromString","location":"api/scala/util/CommandLineParser$$FromString.html","searchKeys":["FromString"]},{"name":"def decimal(l: Long, mc: MathContext): BigDecimal","description":"scala.math.BigDecimal$","location":"api/scala/math/BigDecimal$.html","searchKeys":["decimal"]},{"name":"object Product22","description":"scala.Product22$","location":"api/scala/Product22$.html","searchKeys":["Product22"]},{"name":"def inclusive(start: Int, end: Int): Inclusive","description":"scala.collection.immutable.Range$","location":"api/scala/collection/immutable/Range$.html","searchKeys":["inclusive"]},{"name":"object Product15","description":"scala.Product15$","location":"api/scala/Product15$.html","searchKeys":["Product15"]},{"name":"def isBinaryDouble: Boolean","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["isBinaryDouble"]},{"name":"def addOne(elem: A): PriorityQueue[A]","description":"scala.collection.mutable.PriorityQueue","location":"api/scala/collection/mutable/PriorityQueue.html","searchKeys":["addOne"]},{"name":"def nonEmpty: Boolean","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["nonEmpty"]},{"name":"def >>>(x: Int): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":[">>>"]},{"name":"def singleton[T](key: Long, value: T): LongMap[T]","description":"scala.collection.immutable.LongMap$","location":"api/scala/collection/immutable/LongMap$.html","searchKeys":["singleton"]},{"name":"type Closure <: Term","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Closure"]},{"name":"def hashing: Hashing[K]","description":"scala.collection.concurrent.TrieMap","location":"api/scala/collection/concurrent/TrieMap.html","searchKeys":["hashing"]},{"name":"def filter[To1, To2](f: (El1, El2) => Boolean)(bf1: BuildFrom[It1, El1, To1], bf2: BuildFrom[It2, El2, To2]): (To1, To2)","description":"scala.runtime.Tuple2Zipped","location":"api/scala/runtime/Tuple2Zipped.html","searchKeys":["filter"]},{"name":"def from[K, V](it: IterableOnce[(K, V)]): LinkedHashMap[K, V]","description":"scala.collection.mutable.LinkedHashMap$","location":"api/scala/collection/mutable/LinkedHashMap$.html","searchKeys":["from"]},{"name":"trait JFunction2$mcIJI$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcIJI$sp","location":"api/scala/runtime/java8/JFunction2$mcIJI$sp.html","searchKeys":["JFunction2$mcIJI$sp"]},{"name":"def _7: T7","description":"scala.Product15","location":"api/scala/Product15.html","searchKeys":["_7"]},{"name":"def >(x: Short): Boolean","description":"scala.Long","location":"api/scala/Long.html","searchKeys":[">"]},{"name":"val x$1: Type[L]","description":"scala.quoted.FromExpr$$LeftFromExpr","location":"api/scala/quoted/FromExpr$$LeftFromExpr.html","searchKeys":["x$1"]},{"name":"def findAllMatchIn(source: CharSequence): Iterator[Match]","description":"scala.util.matching.Regex","location":"api/scala/util/matching/Regex.html","searchKeys":["findAllMatchIn"]},{"name":"def readFullHeader(): TastyHeader","description":"dotty.tools.tasty.TastyHeaderUnpickler","location":"api/dotty/tools/tasty/TastyHeaderUnpickler.html","searchKeys":["readFullHeader"]},{"name":"Dotc's concept of time","description":"","location":"docs/internals/periods.html","searchKeys":["Dotc's concept of time"]},{"name":"class ofDouble(val array: Array[Double]) extends ArraySeq[Double]","description":"scala.collection.mutable.ArraySeq$$ofDouble","location":"api/scala/collection/mutable/ArraySeq$$ofDouble.html","searchKeys":["ofDouble"]},{"name":"def unapply(x: TypeSelect): (Term, String)","description":"scala.quoted.Quotes$reflectModule$TypeSelectModule","location":"api/scala/quoted/Quotes$reflectModule$TypeSelectModule.html","searchKeys":["unapply"]},{"name":"given Tuple1FromExpr[T1](using val x$1: Type[T1], val x$2: FromExpr[T1]): FromExpr[(T1)]","description":"scala.quoted.FromExpr$$Tuple1FromExpr","location":"api/scala/quoted/FromExpr$$Tuple1FromExpr.html","searchKeys":["Tuple1FromExpr"]},{"name":"def iterate[T](start: T)(f: T => T): Iterator[T]","description":"scala.collection.Iterator$","location":"api/scala/collection/Iterator$.html","searchKeys":["iterate"]},{"name":"def >=(x: Double): Boolean","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":[">="]},{"name":"trait CharIsIntegral extends Integral[Char]","description":"scala.math.Numeric$$CharIsIntegral","location":"api/scala/math/Numeric$$CharIsIntegral.html","searchKeys":["CharIsIntegral"]},{"name":"def apply$mcVI$sp(v1: Int): Unit","description":"scala.runtime.java8.JFunction1$mcVI$sp","location":"api/scala/runtime/java8/JFunction1$mcVI$sp.html","searchKeys":["apply$mcVI$sp"]},{"name":"class IteratorHasAsScala[A](i: Iterator[A])","description":"scala.collection.convert.AsScalaExtensions$IteratorHasAsScala","location":"api/scala/collection/convert/AsScalaExtensions$IteratorHasAsScala.html","searchKeys":["IteratorHasAsScala"]},{"name":"def ordinal: Int","description":"scala.reflect.Enum","location":"api/scala/reflect/Enum.html","searchKeys":["ordinal"]},{"name":"def subtractOne(elem: T, buffer: UnrolledBuffer[T]): Boolean","description":"scala.collection.mutable.UnrolledBuffer$$Unrolled","location":"api/scala/collection/mutable/UnrolledBuffer$$Unrolled.html","searchKeys":["subtractOne"]},{"name":"class ValueSet extends AbstractSet[Value] with SortedSet[Value] with SortedSetOps[Value, SortedSet, ValueSet] with StrictOptimizedIterableOps[Value, Set, ValueSet] with Serializable","description":"scala.Enumeration$ValueSet","location":"api/scala/Enumeration$ValueSet.html","searchKeys":["ValueSet"]},{"name":"def mutableMapAsJavaMapConverter[K, V](m: Map[K, V]): AsJava[Map[K, V]]","description":"scala.collection.JavaConverters$","location":"api/scala/collection/JavaConverters$.html","searchKeys":["mutableMapAsJavaMapConverter"]},{"name":"def identity[A](x: A): A","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["identity"]},{"name":"def >>(x: Int): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":[">>"]},{"name":"def start(i: Int): Int","description":"scala.util.matching.Regex$$MatchData","location":"api/scala/util/matching/Regex$$MatchData.html","searchKeys":["start"]},{"name":"def update(idx: Int, elem: Double): Unit","description":"scala.jdk.DoubleAccumulator","location":"api/scala/jdk/DoubleAccumulator.html","searchKeys":["update"]},{"name":"def get(key: String): Option[String]","description":"scala.sys.SystemProperties","location":"api/scala/sys/SystemProperties.html","searchKeys":["get"]},{"name":"given ByteFromExpr","description":"scala.quoted.FromExpr$","location":"api/scala/quoted/FromExpr$.html","searchKeys":["ByteFromExpr"]},{"name":"def sortedIterableFactory: SortedIterableFactory[[A] =>> SortedSet[A]]","description":"scala.collection.SortedSet","location":"api/scala/collection/SortedSet.html","searchKeys":["sortedIterableFactory"]},{"name":"object Match","description":"scala.util.matching.Regex$$Match$","location":"api/scala/util/matching/Regex$$Match$.html","searchKeys":["Match"]},{"name":"def rhs: TypeRepr","description":"scala.quoted.Quotes$reflectModule$MatchCaseMethods","location":"api/scala/quoted/Quotes$reflectModule$MatchCaseMethods.html","searchKeys":["rhs"]},{"name":"class ShortArrayHasSeqParStream(a: Array[Short])","description":"scala.collection.convert.StreamExtensions$ShortArrayHasSeqParStream","location":"api/scala/collection/convert/StreamExtensions$ShortArrayHasSeqParStream.html","searchKeys":["ShortArrayHasSeqParStream"]},{"name":"def Deferred: Flags","description":"scala.quoted.Quotes$reflectModule$FlagsModule","location":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html","searchKeys":["Deferred"]},{"name":"def seqOrdering[CC <: ([X] =>> Seq[X]), T](ord: Ordering[T]): Ordering[CC[T]]","description":"scala.math.Ordering$$ExtraImplicits","location":"api/scala/math/Ordering$$ExtraImplicits.html","searchKeys":["seqOrdering"]},{"name":"def nextGaussian(): Double","description":"scala.util.Random","location":"api/scala/util/Random.html","searchKeys":["nextGaussian"]},{"name":"def unapply(x: Expr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)])(using Quotes): Option[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)]","description":"scala.quoted.FromExpr$$Tuple11FromExpr","location":"api/scala/quoted/FromExpr$$Tuple11FromExpr.html","searchKeys":["unapply"]},{"name":"val x$8: Type[T8]","description":"scala.quoted.FromExpr$$Tuple16FromExpr","location":"api/scala/quoted/FromExpr$$Tuple16FromExpr.html","searchKeys":["x$8"]},{"name":"val RED_B: \"\\033[41m\"","description":"scala.io.AnsiColor","location":"api/scala/io/AnsiColor.html","searchKeys":["RED_B"]},{"name":"def orElse[A1 <: A, B1 >: B](that: PartialFunction[A1, B1]): PartialFunction[A1, B1]","description":"scala.PartialFunction","location":"api/scala/PartialFunction.html","searchKeys":["orElse"]},{"name":"def blocking[T](body: => T): T","description":"scala.concurrent","location":"api/scala/concurrent.html","searchKeys":["blocking"]},{"name":"def |(that: Set[A]): C","description":"scala.collection.SetOps","location":"api/scala/collection/SetOps.html","searchKeys":["|"]},{"name":"object Random extends Random","description":"scala.util.Random$","location":"api/scala/util/Random$.html","searchKeys":["Random"]},{"name":"given LambdaTypeTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["LambdaTypeTypeTest"]},{"name":"val unsafeArray: Array[T]","description":"scala.collection.immutable.ArraySeq$$ofRef","location":"api/scala/collection/immutable/ArraySeq$$ofRef.html","searchKeys":["unsafeArray"]},{"name":"def fromTry[T](result: Try[T]): Promise[T]","description":"scala.concurrent.Promise$","location":"api/scala/concurrent/Promise$.html","searchKeys":["fromTry"]},{"name":"def asScala: Double => Double","description":"scala.jdk.FunctionWrappers$$RichDoubleUnaryOperatorAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichDoubleUnaryOperatorAsFunction1.html","searchKeys":["asScala"]},{"name":"trait SortedOps[A, +C]","description":"scala.collection.SortedOps","location":"api/scala/collection/SortedOps.html","searchKeys":["SortedOps"]},{"name":"object AutoCloseableIsReleasable extends Releasable[AutoCloseable]","description":"scala.util.Using$$Releasable$$AutoCloseableIsReleasable$","location":"api/scala/util/Using$$Releasable$$AutoCloseableIsReleasable$.html","searchKeys":["AutoCloseableIsReleasable"]},{"name":"def unapply(x: OrType): (TypeRepr, TypeRepr)","description":"scala.quoted.Quotes$reflectModule$OrTypeModule","location":"api/scala/quoted/Quotes$reflectModule$OrTypeModule.html","searchKeys":["unapply"]},{"name":"val MaxValue: 9223372036854775807L","description":"scala.Long$","location":"api/scala/Long$.html","searchKeys":["MaxValue"]},{"name":"val INFIX: 43","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["INFIX"]},{"name":"trait OrderedProxy[T] extends Ordered[T] with Typed[T]","description":"scala.runtime.OrderedProxy","location":"api/scala/runtime/OrderedProxy.html","searchKeys":["OrderedProxy"]},{"name":"def iterate[A](start: A, len: Int)(f: A => A)(evidence$20: Ev[A]): CC[A]","description":"scala.collection.EvidenceIterableFactory","location":"api/scala/collection/EvidenceIterableFactory.html","searchKeys":["iterate"]},{"name":"def unapply(x: ByNameType): Some[TypeRepr]","description":"scala.quoted.Quotes$reflectModule$ByNameTypeModule","location":"api/scala/quoted/Quotes$reflectModule$ByNameTypeModule.html","searchKeys":["unapply"]},{"name":"type TraversableOnce[+X] = IterableOnce[X]","description":"scala.collection","location":"api/scala/collection.html","searchKeys":["TraversableOnce"]},{"name":"def unapply(x: This): Some[Option[String]]","description":"scala.quoted.Quotes$reflectModule$ThisModule","location":"api/scala/quoted/Quotes$reflectModule$ThisModule.html","searchKeys":["unapply"]},{"name":"def transformValues(f: V => V): LongMap[V]","description":"scala.collection.mutable.LongMap","location":"api/scala/collection/mutable/LongMap.html","searchKeys":["transformValues"]},{"name":"def asJavaSeqIntStream(cc: IterableOnce[Integer]): IntStream","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaSeqIntStream"]},{"name":"def apply$mcJDI$sp(v1: Double, v2: Int): Long","description":"scala.runtime.java8.JFunction2$mcJDI$sp","location":"api/scala/runtime/java8/JFunction2$mcJDI$sp.html","searchKeys":["apply$mcJDI$sp"]},{"name":"val x$23: FromExpr[T5]","description":"scala.quoted.FromExpr$$Tuple18FromExpr","location":"api/scala/quoted/FromExpr$$Tuple18FromExpr.html","searchKeys":["x$23"]},{"name":"trait TypeBoundsModule","description":"scala.quoted.Quotes$reflectModule$TypeBoundsModule","location":"api/scala/quoted/Quotes$reflectModule$TypeBoundsModule.html","searchKeys":["TypeBoundsModule"]},{"name":"def map(f: Int => Int): C","description":"scala.collection.BitSetOps","location":"api/scala/collection/BitSetOps.html","searchKeys":["map"]},{"name":"object MapView extends MapViewFactory","description":"scala.collection.MapView$","location":"api/scala/collection/MapView$.html","searchKeys":["MapView"]},{"name":"def decodingReplaceWith(newReplacement: String): Codec","description":"scala.io.Codec","location":"api/scala/io/Codec.html","searchKeys":["decodingReplaceWith"]},{"name":"def dequeueAll[A1 >: A]: Seq[A1]","description":"scala.collection.mutable.PriorityQueue","location":"api/scala/collection/mutable/PriorityQueue.html","searchKeys":["dequeueAll"]},{"name":"def typeSymbol: Symbol","description":"scala.quoted.Quotes$reflectModule$TypeReprMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html","searchKeys":["typeSymbol"]},{"name":"val DOWN: Value","description":"scala.math.BigDecimal$$RoundingMode$","location":"api/scala/math/BigDecimal$$RoundingMode$.html","searchKeys":["DOWN"]},{"name":"def get(key: K): Option[V]","description":"scala.collection.immutable.TreeSeqMap","location":"api/scala/collection/immutable/TreeSeqMap.html","searchKeys":["get"]},{"name":"def mapInPlace(f: A => A): Array[A]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["mapInPlace"]},{"name":"def tree: Tree","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["tree"]},{"name":"def iterator: Iterator[(K, V)]","description":"scala.collection.immutable.Map$$Map3","location":"api/scala/collection/immutable/Map$$Map3.html","searchKeys":["iterator"]},{"name":"val ASSERTION: 2000","description":"scala.annotation.elidable$","location":"api/scala/annotation/elidable$.html","searchKeys":["ASSERTION"]},{"name":"type BigInt = BigInt","description":"scala","location":"api/scala.html","searchKeys":["BigInt"]},{"name":"def nonEmpty: Boolean","description":"scala.collection.immutable.VectorBuilder","location":"api/scala/collection/immutable/VectorBuilder.html","searchKeys":["nonEmpty"]},{"name":"def subtractExact(x: Int, y: Int): Int","description":"scala.math","location":"api/scala/math.html","searchKeys":["subtractExact"]},{"name":"def fromInt(x: Int): Char","description":"scala.math.Numeric$$CharIsIntegral","location":"api/scala/math/Numeric$$CharIsIntegral.html","searchKeys":["fromInt"]},{"name":"def copy(original: Tree)(fun: Term, args: List[Term]): Apply","description":"scala.quoted.Quotes$reflectModule$ApplyModule","location":"api/scala/quoted/Quotes$reflectModule$ApplyModule.html","searchKeys":["copy"]},{"name":"object IeeeEquiv extends IeeeEquiv","description":"scala.math.Equiv$$Double$$IeeeEquiv$","location":"api/scala/math/Equiv$$Double$$IeeeEquiv$.html","searchKeys":["IeeeEquiv"]},{"name":"def erasure: Class[]","description":"scala.reflect.ClassManifestDeprecatedApis","location":"api/scala/reflect/ClassManifestDeprecatedApis.html","searchKeys":["erasure"]},{"name":"def AnyRefClass: Symbol","description":"scala.quoted.Quotes$reflectModule$defnModule","location":"api/scala/quoted/Quotes$reflectModule$defnModule.html","searchKeys":["AnyRefClass"]},{"name":"class WithDefault[K, +V](underlying: SortedMap[K, V], defaultValue: K => V) extends WithDefault[K, V] with SortedMap[K, V] with SortedMapOps[K, V, [K, V] =>> SortedMap[K, V], WithDefault[K, V]] with Serializable","description":"scala.collection.immutable.SortedMap$$WithDefault","location":"api/scala/collection/immutable/SortedMap$$WithDefault.html","searchKeys":["WithDefault"]},{"name":"def charValue: Char","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["charValue"]},{"name":"type S[N <: Int] <: Int","description":"scala.compiletime","location":"api/scala/compiletime.html","searchKeys":["S"]},{"name":"def empty: BitSet","description":"scala.collection.mutable.BitSet$","location":"api/scala/collection/mutable/BitSet$.html","searchKeys":["empty"]},{"name":"def >=(x: Float): Boolean","description":"scala.Char","location":"api/scala/Char.html","searchKeys":[">="]},{"name":"def require(requirement: Boolean, message: => Any): Unit","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["require"]},{"name":"def %(x: Long): Long","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["%"]},{"name":"def stdin: BufferedSource","description":"scala.io.Source$","location":"api/scala/io/Source$.html","searchKeys":["stdin"]},{"name":"def clearBit(n: Int): BigInt","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["clearBit"]},{"name":"def upper(hi: TypeRepr): TypeBounds","description":"scala.quoted.Quotes$reflectModule$TypeBoundsModule","location":"api/scala/quoted/Quotes$reflectModule$TypeBoundsModule.html","searchKeys":["upper"]},{"name":"given Tuple17ToExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17]: ToExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17)]","description":"scala.quoted.ToExpr$$Tuple17ToExpr","location":"api/scala/quoted/ToExpr$.html","searchKeys":["Tuple17ToExpr"]},{"name":"trait SortedSetOps[A, +CC <: ([X] =>> SortedSet[X]), +C <: SortedSetOps[A, CC, C]] extends SetOps[A, [A] =>> Set[A], C] with SortedOps[A, C]","description":"scala.collection.SortedSetOps","location":"api/scala/collection/SortedSetOps.html","searchKeys":["SortedSetOps"]},{"name":"class ScalaDurationOps(duration: FiniteDuration) extends AnyVal","description":"scala.jdk.DurationConverters$$ScalaDurationOps","location":"api/scala/jdk/DurationConverters$$ScalaDurationOps.html","searchKeys":["ScalaDurationOps"]},{"name":"def inits: Iterator[C]","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["inits"]},{"name":"def lastIndexOf(elem: A, end: Int): Int","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["lastIndexOf"]},{"name":"def defaultCharsetName: String","description":"scala.compat.Platform$","location":"api/scala/compat/Platform$.html","searchKeys":["defaultCharsetName"]},{"name":"def incl(element: A): HashSet[A]","description":"scala.collection.immutable.HashSet","location":"api/scala/collection/immutable/HashSet.html","searchKeys":["incl"]},{"name":"def forall(p: A => Boolean): Boolean","description":"scala.Option","location":"api/scala/Option.html","searchKeys":["forall"]},{"name":"def value: Int","description":"scala.runtime.LazyInt","location":"api/scala/runtime/LazyInt.html","searchKeys":["value"]},{"name":"object macros extends macros","description":"scala.languageFeature$$experimental$$macros$","location":"api/scala/languageFeature$$experimental$$macros$.html","searchKeys":["macros"]},{"name":"def asJava: Set[A]","description":"scala.collection.convert.AsJavaExtensions$MutableSetHasAsJava","location":"api/scala/collection/convert/AsJavaExtensions$MutableSetHasAsJava.html","searchKeys":["asJava"]},{"name":"trait JFunction2$mcFDI$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcFDI$sp","location":"api/scala/runtime/java8/JFunction2$mcFDI$sp.html","searchKeys":["JFunction2$mcFDI$sp"]},{"name":"val TYPEREFin: 175","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["TYPEREFin"]},{"name":"def unapply(x: Expr[List[T]])(using Quotes): Option[List[T]]","description":"scala.quoted.FromExpr$$ListFromExpr","location":"api/scala/quoted/FromExpr$$ListFromExpr.html","searchKeys":["unapply"]},{"name":"def apply(thistpe: TypeRepr, supertpe: TypeRepr): SuperType","description":"scala.quoted.Quotes$reflectModule$SuperTypeModule","location":"api/scala/quoted/Quotes$reflectModule$SuperTypeModule.html","searchKeys":["apply"]},{"name":"val TYPELAMBDAtype: 170","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["TYPELAMBDAtype"]},{"name":"def result(): Array[Boolean]","description":"scala.collection.mutable.ArrayBuilder$$ofBoolean","location":"api/scala/collection/mutable/ArrayBuilder$$ofBoolean.html","searchKeys":["result"]},{"name":"object Float","description":"scala.math.Ordering$$Float$","location":"api/scala/math/Ordering$$Float$.html","searchKeys":["Float"]},{"name":"def toUnit(u: TimeUnit): Double","description":"scala.concurrent.duration.FiniteDuration","location":"api/scala/concurrent/duration/FiniteDuration.html","searchKeys":["toUnit"]},{"name":"def distinct: String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["distinct"]},{"name":"val x$11: FromExpr[T2]","description":"scala.quoted.FromExpr$$Tuple9FromExpr","location":"api/scala/quoted/FromExpr$$Tuple9FromExpr.html","searchKeys":["x$11"]},{"name":"object BigInt","description":"scala.math.BigInt$","location":"api/scala/math/BigInt$.html","searchKeys":["BigInt"]},{"name":"def asJavaSeqLongStream(cc: IterableOnce[Long]): LongStream","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaSeqLongStream"]},{"name":"def map[F <: ([_$1] =>> Any)](f: [t] => (x$1: t) => F[t]): Map[Tuple, F]","description":"scala.Tuple","location":"api/scala/Tuple.html","searchKeys":["map"]},{"name":"trait DurationConversions","description":"scala.concurrent.duration.DurationConversions","location":"api/scala/concurrent/duration/DurationConversions.html","searchKeys":["DurationConversions"]},{"name":"def asJavaSeqValueDoubleStreamFromFloat[K](m: Map[K, Float]): DoubleStream","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaSeqValueDoubleStreamFromFloat"]},{"name":"object Implicits extends ExtraImplicits","description":"scala.math.Fractional$$Implicits$","location":"api/scala/math/Fractional$$Implicits$.html","searchKeys":["Implicits"]},{"name":"val ABSTRACT: 9","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["ABSTRACT"]},{"name":"def /(x: Char): Int","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["/"]},{"name":"def asScala: Int => R","description":"scala.jdk.FunctionWrappers$$RichIntFunctionAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichIntFunctionAsFunction1.html","searchKeys":["asScala"]},{"name":"def *(factor: Double): Duration","description":"scala.concurrent.duration.Duration$$Infinite","location":"api/scala/concurrent/duration/Duration$$Infinite.html","searchKeys":["*"]},{"name":"def reduceLeft[T, R >: T](futures: Iterable[Future[T]])(op: (R, T) => R)(executor: ExecutionContext): Future[R]","description":"scala.concurrent.Future$","location":"api/scala/concurrent/Future$.html","searchKeys":["reduceLeft"]},{"name":"def >(x: Float): Boolean","description":"scala.Char","location":"api/scala/Char.html","searchKeys":[">"]},{"name":"def times(x: Char, y: Char): Char","description":"scala.math.Numeric$$CharIsIntegral","location":"api/scala/math/Numeric$$CharIsIntegral.html","searchKeys":["times"]},{"name":"def apply(idx: Int): A","description":"scala.collection.mutable.ArrayDeque","location":"api/scala/collection/mutable/ArrayDeque.html","searchKeys":["apply"]},{"name":"Dependent Function Types - More Details","description":"","location":"docs/reference/new-types/dependent-function-types-spec.html","searchKeys":["Dependent Function Types - More Details"]},{"name":"def forall(p: (El1, El2, El3) => Boolean): Boolean","description":"scala.collection.LazyZip3","location":"api/scala/collection/LazyZip3.html","searchKeys":["forall"]},{"name":"def insertAll(index: Int, xs: Array[Char]): StringBuilder","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["insertAll"]},{"name":"val Primitives: Group[(Byte, Short, Int, Long, Char, Float, Double, Boolean, Unit)]","description":"scala.Specializable$","location":"api/scala/Specializable$.html","searchKeys":["Primitives"]},{"name":"def exists(f: A => Boolean): Boolean","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["exists"]},{"name":"def >=(x: Short): Boolean","description":"scala.Long","location":"api/scala/Long.html","searchKeys":[">="]},{"name":"class FromJavaObjDoubleConsumer[T](jf: ObjDoubleConsumer[T]) extends (T, Double) => Unit","description":"scala.jdk.FunctionWrappers$$FromJavaObjDoubleConsumer","location":"api/scala/jdk/FunctionWrappers$$FromJavaObjDoubleConsumer.html","searchKeys":["FromJavaObjDoubleConsumer"]},{"name":"def this(ordering: Ordering[K])","description":"scala.collection.immutable.TreeMap","location":"api/scala/collection/immutable/TreeMap.html","searchKeys":["this"]},{"name":"val SEALED: 11","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["SEALED"]},{"name":"trait SymbolModule","description":"scala.quoted.Quotes$reflectModule$SymbolModule","location":"api/scala/quoted/Quotes$reflectModule$SymbolModule.html","searchKeys":["SymbolModule"]},{"name":"def antisymm[A, B](l: A <:< B, r: B <:< A): A =:= B","description":"scala.<:<$","location":"api/scala/<:<$.html","searchKeys":["antisymm"]},{"name":"val ENUM: 21","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["ENUM"]},{"name":"Scala3doc","description":"","location":"docs/usage/scala3doc/index.html","searchKeys":["Scala3doc"]},{"name":"def _5: T5","description":"scala.Product10","location":"api/scala/Product10.html","searchKeys":["_5"]},{"name":"def toIArray: IArray[Object]","description":"scala.Tuple","location":"api/scala/Tuple.html","searchKeys":["toIArray"]},{"name":"class AnySeqDelegate[CC <: ([A] =>> SeqOps[A, [A] =>> Seq[A], Seq[A]])](delegate: ClassTagSeqFactory[CC]) extends AnyIterableDelegate[CC] with SeqFactory[CC]","description":"scala.collection.ClassTagSeqFactory$$AnySeqDelegate","location":"api/scala/collection/ClassTagSeqFactory$$AnySeqDelegate.html","searchKeys":["AnySeqDelegate"]},{"name":"def values: Iterable[V]","description":"scala.collection.MapOps","location":"api/scala/collection/MapOps.html","searchKeys":["values"]},{"name":"def asJava: Iterator[A]","description":"scala.collection.convert.AsJavaExtensions$IteratorHasAsJava","location":"api/scala/collection/convert/AsJavaExtensions$IteratorHasAsJava.html","searchKeys":["asJava"]},{"name":"def compare(that: A): Int","description":"scala.math.Ordered","location":"api/scala/math/Ordered.html","searchKeys":["compare"]},{"name":"val byteStepperShape: StepperShape[Byte, IntStepper]","description":"scala.collection.StepperShape$","location":"api/scala/collection/StepperShape$.html","searchKeys":["byteStepperShape"]},{"name":"val x$4: Type[T4]","description":"scala.quoted.FromExpr$$Tuple16FromExpr","location":"api/scala/quoted/FromExpr$$Tuple16FromExpr.html","searchKeys":["x$4"]},{"name":"def universalEquiv[T]: Equiv[T]","description":"scala.math.LowPriorityEquiv","location":"api/scala/math/LowPriorityEquiv.html","searchKeys":["universalEquiv"]},{"name":"given amb2","description":"scala.util.NotGiven$","location":"api/scala/util/NotGiven$.html","searchKeys":["amb2"]},{"name":"type AbstractMethodError = AbstractMethodError","description":"scala","location":"api/scala.html","searchKeys":["AbstractMethodError"]},{"name":"def _12: T12","description":"scala.Product12","location":"api/scala/Product12.html","searchKeys":["_12"]},{"name":"given DoubleConstantTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["DoubleConstantTypeTest"]},{"name":"def map[B, C](f: (El1, El2) => B)(bf: BuildFrom[C1, B, C]): C","description":"scala.collection.LazyZip2","location":"api/scala/collection/LazyZip2.html","searchKeys":["map"]},{"name":"def nonEmpty: Boolean","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["nonEmpty"]},{"name":"val BLUE_B: \"\\033[44m\"","description":"scala.io.AnsiColor","location":"api/scala/io/AnsiColor.html","searchKeys":["BLUE_B"]},{"name":"def _13: T13","description":"scala.Product15","location":"api/scala/Product15.html","searchKeys":["_13"]},{"name":"def front: A","description":"scala.collection.immutable.Queue","location":"api/scala/collection/immutable/Queue.html","searchKeys":["front"]},{"name":"def ^(x: Byte): Int","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["^"]},{"name":"val x$13: Type[T13]","description":"scala.quoted.FromExpr$$Tuple13FromExpr","location":"api/scala/quoted/FromExpr$$Tuple13FromExpr.html","searchKeys":["x$13"]},{"name":"def +(delta: Int): Addr","description":"dotty.tools.tasty.TastyBuffer$$Addr","location":"api/dotty/tools/tasty/TastyBuffer$$Addr.html","searchKeys":["+"]},{"name":"def /%(rhs: T): (T, T)","description":"scala.math.Integral$IntegralOps","location":"api/scala/math/Integral$IntegralOps.html","searchKeys":["/%"]},{"name":"trait SortedSetOps[A, +CC <: ([X] =>> SortedSet[X]), +C <: SortedSetOps[A, CC, C]] extends SetOps[A, [A] =>> Set[A], C] with SortedSetOps[A, CC, C]","description":"scala.collection.mutable.SortedSetOps","location":"api/scala/collection/mutable/SortedSetOps.html","searchKeys":["SortedSetOps"]},{"name":"given AssignTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["AssignTypeTest"]},{"name":"val x$5: Type[T5]","description":"scala.quoted.FromExpr$$Tuple8FromExpr","location":"api/scala/quoted/FromExpr$$Tuple8FromExpr.html","searchKeys":["x$5"]},{"name":"def indexOf[B >: A](elem: B): Int","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["indexOf"]},{"name":"def result[T](awaitable: Awaitable[T], atMost: Duration): T","description":"scala.concurrent.Await$","location":"api/scala/concurrent/Await$.html","searchKeys":["result"]},{"name":"def +(that: BigDecimal): BigDecimal","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["+"]},{"name":"class LazyRef[T] extends Serializable","description":"scala.runtime.LazyRef","location":"api/scala/runtime/LazyRef.html","searchKeys":["LazyRef"]},{"name":"Match Types","description":"","location":"docs/reference/new-types/match-types.html","searchKeys":["Match Types"]},{"name":"def apply(inline x: Float, inline xs: Float*): IArray[Float]","description":"scala.IArray$package$$IArray$","location":"api/scala/IArray$package$$IArray$.html","searchKeys":["apply"]},{"name":"def /(x: Byte): Double","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["/"]},{"name":"given WhileMethods","description":"scala.quoted.Quotes$reflectModule$WhileMethods","location":"api/scala/quoted/Quotes$reflectModule$WhileMethods.html","searchKeys":["WhileMethods"]},{"name":"def apply(numbits: Int, rnd: Random): BigInt","description":"scala.math.BigInt$","location":"api/scala/math/BigInt$.html","searchKeys":["apply"]},{"name":"class BitSet2(val elems0: Long, val elems1: Long) extends BitSet","description":"scala.collection.immutable.BitSet$$BitSet2","location":"api/scala/collection/immutable/BitSet$$BitSet2.html","searchKeys":["BitSet2"]},{"name":"def apply[U >: T](body: => U): U","description":"scala.util.control.Exception$$Catch","location":"api/scala/util/control/Exception$$Catch.html","searchKeys":["apply"]},{"name":"def tabulate[A, C](n1: Int, n2: Int, n3: Int, n4: Int)(f: (Int, Int, Int, Int) => A)(canAccumulate: AccumulatorFactoryShape[A, C]): AnyAccumulator[AnyAccumulator[AnyAccumulator[C]]]","description":"scala.jdk.Accumulator$","location":"api/scala/jdk/Accumulator$.html","searchKeys":["tabulate"]},{"name":"def nameTagToString(tag: Int): String","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["nameTagToString"]},{"name":"val xs: Array[Char]","description":"scala.runtime.ArrayCharSequence","location":"api/scala/runtime/ArrayCharSequence.html","searchKeys":["xs"]},{"name":"def fromInt(x: Int): Short","description":"scala.math.Numeric$$ShortIsIntegral","location":"api/scala/math/Numeric$$ShortIsIntegral.html","searchKeys":["fromInt"]},{"name":"def asScala[T](cs: CompletionStage[T]): Future[T]","description":"scala.jdk.javaapi.FutureConverters$","location":"api/scala/jdk/javaapi/FutureConverters$.html","searchKeys":["asScala"]},{"name":"type MirroredElemLabels = EmptyTuple","description":"scala.deriving.Mirror$$SingletonProxy","location":"api/scala/deriving/Mirror$$SingletonProxy.html","searchKeys":["MirroredElemLabels"]},{"name":"val x$12: Type[T12]","description":"scala.quoted.FromExpr$$Tuple16FromExpr","location":"api/scala/quoted/FromExpr$$Tuple16FromExpr.html","searchKeys":["x$12"]},{"name":"def getOrElse[B >: A](default: => B): B","description":"scala.Option","location":"api/scala/Option.html","searchKeys":["getOrElse"]},{"name":"def *(d: Duration): Duration","description":"scala.concurrent.duration.package$$IntMult","location":"api/scala/concurrent/duration/package$$IntMult.html","searchKeys":["*"]},{"name":"def >=(x: Int): Boolean","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":[">="]},{"name":"def toInt: Int","description":"scala.math.ScalaNumericAnyConversions","location":"api/scala/math/ScalaNumericAnyConversions.html","searchKeys":["toInt"]},{"name":"given Tuple20ToExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20]: ToExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20)]","description":"scala.quoted.ToExpr$$Tuple20ToExpr","location":"api/scala/quoted/ToExpr$.html","searchKeys":["Tuple20ToExpr"]},{"name":"given ArrayOfByteToExpr: ToExpr[Array[Byte]]","description":"scala.quoted.ToExpr$$ArrayOfByteToExpr$","location":"api/scala/quoted/ToExpr$.html","searchKeys":["ArrayOfByteToExpr"]},{"name":"def unit: TimeUnit","description":"scala.concurrent.duration.Duration","location":"api/scala/concurrent/duration/Duration.html","searchKeys":["unit"]},{"name":"def unapply(x: Super): (Term, Option[String])","description":"scala.quoted.Quotes$reflectModule$SuperModule","location":"api/scala/quoted/Quotes$reflectModule$SuperModule.html","searchKeys":["unapply"]},{"name":"def subtractOne(key: Key): OpenHashMap[Key, Value]","description":"scala.collection.mutable.OpenHashMap","location":"api/scala/collection/mutable/OpenHashMap.html","searchKeys":["subtractOne"]},{"name":"def |(x: Byte): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["|"]},{"name":"class TrieMap[K, V] extends AbstractMap[K, V] with Map[K, V] with MapOps[K, V, [K, V] =>> TrieMap[K, V], TrieMap[K, V]] with MapFactoryDefaults[K, V, [K, V] =>> TrieMap[K, V], Iterable] with DefaultSerializable","description":"scala.collection.concurrent.TrieMap","location":"api/scala/collection/concurrent/TrieMap.html","searchKeys":["TrieMap"]},{"name":"def contains(elem: A): Boolean","description":"scala.collection.immutable.Set$$Set1","location":"api/scala/collection/immutable/Set$$Set1.html","searchKeys":["contains"]},{"name":"trait JFunction2$mcZDI$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcZDI$sp","location":"api/scala/runtime/java8/JFunction2$mcZDI$sp.html","searchKeys":["JFunction2$mcZDI$sp"]},{"name":"val x$1: Type[T1]","description":"scala.quoted.FromExpr$$Tuple4FromExpr","location":"api/scala/quoted/FromExpr$$Tuple4FromExpr.html","searchKeys":["x$1"]},{"name":"def toCoarsest: Duration","description":"scala.concurrent.duration.Duration","location":"api/scala/concurrent/duration/Duration.html","searchKeys":["toCoarsest"]},{"name":"def appended[B >: Char](elem: B): IndexedSeq[B]","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["appended"]},{"name":"def takeWhile(p: A => Boolean): Array[A]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["takeWhile"]},{"name":"def collect(pf: PartialFunction[Double, Double]): DoubleAccumulator","description":"scala.jdk.DoubleAccumulator","location":"api/scala/jdk/DoubleAccumulator.html","searchKeys":["collect"]},{"name":"given SelectTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["SelectTypeTest"]},{"name":"def ConstantCode: Printer[Constant]","description":"scala.quoted.Quotes$reflectModule$PrinterModule","location":"api/scala/quoted/Quotes$reflectModule$PrinterModule.html","searchKeys":["ConstantCode"]},{"name":"def tabulate[A](n1: Int, n2: Int)(f: (Int, Int) => A)(evidence$11: ClassTag[A]): CC[CC[A]]","description":"scala.collection.ClassTagIterableFactory","location":"api/scala/collection/ClassTagIterableFactory.html","searchKeys":["tabulate"]},{"name":"class TreeSet[A] extends AbstractSet[A] with SortedSet[A] with SortedSetOps[A, [A] =>> TreeSet[A], TreeSet[A]] with StrictOptimizedSortedSetOps[A, [A] =>> TreeSet[A], TreeSet[A]] with SortedSetFactoryDefaults[A, [A] =>> TreeSet[A], [A] =>> Set[A]] with DefaultSerializable","description":"scala.collection.immutable.TreeSet","location":"api/scala/collection/immutable/TreeSet.html","searchKeys":["TreeSet"]},{"name":"def RootPackage: Symbol","description":"scala.quoted.Quotes$reflectModule$defnModule","location":"api/scala/quoted/Quotes$reflectModule$defnModule.html","searchKeys":["RootPackage"]},{"name":"Explicit Nulls","description":"","location":"docs/reference/other-new-features/explicit-nulls.html","searchKeys":["Explicit Nulls"]},{"name":"def iterableFactory: IterableFactory[CC]","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["iterableFactory"]},{"name":"class AbstractSeq[+A] extends AbstractIterable[A] with Seq[A]","description":"scala.collection.AbstractSeq","location":"api/scala/collection/AbstractSeq.html","searchKeys":["AbstractSeq"]},{"name":"class Default[T] extends Hashing[T]","description":"scala.util.hashing.Hashing$$Default","location":"api/scala/util/hashing/Hashing$$Default.html","searchKeys":["Default"]},{"name":"def toFloatOption: Option[Float]","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["toFloatOption"]},{"name":"def asScalaFromBiConsumer[T, U](jf: BiConsumer[T, U]): (T, U) => BoxedUnit","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asScalaFromBiConsumer"]},{"name":"def mapFactory: MapFactory[CC]","description":"scala.collection.MapOps","location":"api/scala/collection/MapOps.html","searchKeys":["mapFactory"]},{"name":"def floorDiv(x: Long, y: Long): Long","description":"scala.math","location":"api/scala/math.html","searchKeys":["floorDiv"]},{"name":"val PARAMalias: 41","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["PARAMalias"]},{"name":"val doubleStreamUnboxer: StreamUnboxer[Double, DoubleStream]","description":"scala.collection.convert.StreamExtensions$$StreamUnboxer$","location":"api/scala/collection/convert/StreamExtensions$$StreamUnboxer$.html","searchKeys":["doubleStreamUnboxer"]},{"name":"val x$21: FromExpr[T4]","description":"scala.quoted.FromExpr$$Tuple17FromExpr","location":"api/scala/quoted/FromExpr$$Tuple17FromExpr.html","searchKeys":["x$21"]},{"name":"def compose[C](r: C =:= From): C =:= To","description":"scala.=:=","location":"api/scala/=:=.html","searchKeys":["compose"]},{"name":"def insertAll(@deprecatedName(\"n\", \"2.13.0\") index: Int, elems: IterableOnce[A]): Unit","description":"scala.collection.mutable.ArrayBuffer","location":"api/scala/collection/mutable/ArrayBuffer.html","searchKeys":["insertAll"]},{"name":"def isControl: Boolean","description":"scala.runtime.RichChar","location":"api/scala/runtime/RichChar.html","searchKeys":["isControl"]},{"name":"def toFactory[A, CC <: ([_$14] =>> Any)](factory: IterableFactory[CC]): Factory[A, CC[A]]","description":"scala.collection.IterableFactory$","location":"api/scala/collection/IterableFactory$.html","searchKeys":["toFactory"]},{"name":"def hi: TypeRepr","description":"scala.quoted.Quotes$reflectModule$TypeBoundsMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeBoundsMethods.html","searchKeys":["hi"]},{"name":"class FromJavaToIntFunction[T](jf: ToIntFunction[T]) extends T => Int","description":"scala.jdk.FunctionWrappers$$FromJavaToIntFunction","location":"api/scala/jdk/FunctionWrappers$$FromJavaToIntFunction.html","searchKeys":["FromJavaToIntFunction"]},{"name":"given Tuple1ToExpr[T1]: ToExpr[(T1)]","description":"scala.quoted.ToExpr$$Tuple1ToExpr","location":"api/scala/quoted/ToExpr$.html","searchKeys":["Tuple1ToExpr"]},{"name":"type V","description":"scala.collection.generic.IsMap","location":"api/scala/collection/generic/IsMap.html","searchKeys":["V"]},{"name":"given AlternativesTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["AlternativesTypeTest"]},{"name":"def _8: T8","description":"scala.Product22","location":"api/scala/Product22.html","searchKeys":["_8"]},{"name":"def -(rhs: T): T","description":"scala.math.Numeric$NumericOps","location":"api/scala/math/Numeric$NumericOps.html","searchKeys":["-"]},{"name":"val x$44: FromExpr[T22]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["x$44"]},{"name":"def lastIndexOfSlice[B >: A](that: Seq[B]): Int","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["lastIndexOfSlice"]},{"name":"def ==(x: Int): Boolean","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["=="]},{"name":"def apply(x: String): BigInt","description":"scala.math.BigInt$","location":"api/scala/math/BigInt$.html","searchKeys":["apply"]},{"name":"def get: UnapplySeqWrapper[A]","description":"scala.collection.SeqFactory$$UnapplySeqWrapper","location":"api/scala/collection/SeqFactory$$UnapplySeqWrapper.html","searchKeys":["get"]},{"name":"def >=(x: Short): Boolean","description":"scala.Double","location":"api/scala/Double.html","searchKeys":[">="]},{"name":"def unary_-: Duration","description":"scala.concurrent.duration.Duration","location":"api/scala/concurrent/duration/Duration.html","searchKeys":["unary_-"]},{"name":"def |(x: Long): Long","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["|"]},{"name":"def apply(x: BigDecimal)(using Quotes): Expr[BigDecimal]","description":"scala.quoted.ToExpr$$BigDecimalToExpr$","location":"api/scala/quoted/ToExpr$$BigDecimalToExpr$.html","searchKeys":["apply"]},{"name":"var elems: C","description":"scala.collection.mutable.ImmutableBuilder","location":"api/scala/collection/mutable/ImmutableBuilder.html","searchKeys":["elems"]},{"name":"val NamedArg: NamedArgModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["NamedArg"]},{"name":"def |(x: Byte): Int","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["|"]},{"name":"val x$2: Type[T2]","description":"scala.quoted.FromExpr$$Tuple17FromExpr","location":"api/scala/quoted/FromExpr$$Tuple17FromExpr.html","searchKeys":["x$2"]},{"name":"type TypeRef <: NamedType","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeRef"]},{"name":"def unapply[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14](x: Product14[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14]): Option[Product14[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14]]","description":"scala.Product14$","location":"api/scala/Product14$.html","searchKeys":["unapply"]},{"name":"def reversed: Iterable[A]","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["reversed"]},{"name":"def foldTree(x: X, tree: Tree)(owner: Symbol): X","description":"scala.quoted.Quotes$reflectModule$TreeAccumulator","location":"api/scala/quoted/Quotes$reflectModule$TreeAccumulator.html","searchKeys":["foldTree"]},{"name":"given AssignMethods","description":"scala.quoted.Quotes$reflectModule$AssignMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["AssignMethods"]},{"name":"type Shrinkable[-A] = Shrinkable[A]","description":"scala.collection.generic","location":"api/scala/collection/generic.html","searchKeys":["Shrinkable"]},{"name":"def elemTag: ClassTag[]","description":"scala.collection.mutable.ArraySeq$$ofChar","location":"api/scala/collection/mutable/ArraySeq$$ofChar.html","searchKeys":["elemTag"]},{"name":"def _14: T14","description":"scala.Product18","location":"api/scala/Product18.html","searchKeys":["_14"]},{"name":"given Tuple11FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11](using val x$1: Type[T1], val x$2: Type[T2], val x$3: Type[T3], val x$4: Type[T4], val x$5: Type[T5], val x$6: Type[T6], val x$7: Type[T7], val x$8: Type[T8], val x$9: Type[T9], val x$10: Type[T10], val x$11: Type[T11], val x$12: FromExpr[T1], val x$13: FromExpr[T2], val x$14: FromExpr[T3], val x$15: FromExpr[T4], val x$16: FromExpr[T5], val x$17: FromExpr[T6], val x$18: FromExpr[T7], val x$19: FromExpr[T8], val x$20: FromExpr[T9], val x$21: FromExpr[T10], val x$22: FromExpr[T11]): FromExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)]","description":"scala.quoted.FromExpr$$Tuple11FromExpr","location":"api/scala/quoted/FromExpr$.html","searchKeys":["Tuple11FromExpr"]},{"name":"def _16: T16","description":"scala.Product20","location":"api/scala/Product20.html","searchKeys":["_16"]},{"name":"def _1: T1","description":"scala.Product15","location":"api/scala/Product15.html","searchKeys":["_1"]},{"name":"def toLong: Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["toLong"]},{"name":"def count(start: Int, end: Int, step: Int): Int","description":"scala.collection.immutable.Range$","location":"api/scala/collection/immutable/Range$.html","searchKeys":["count"]},{"name":"def plus(x: BigDecimal, y: BigDecimal): BigDecimal","description":"scala.math.Numeric$$BigDecimalIsConflicted","location":"api/scala/math/Numeric$$BigDecimalIsConflicted.html","searchKeys":["plus"]},{"name":"def subSequence(start0: Int, end0: Int): CharSequence","description":"scala.runtime.ArrayCharSequence","location":"api/scala/runtime/ArrayCharSequence.html","searchKeys":["subSequence"]},{"name":"def inclusive(start: Long, end: Long, step: Long): Inclusive[Long]","description":"scala.collection.immutable.Range$$Long$","location":"api/scala/collection/immutable/Range$$Long$.html","searchKeys":["inclusive"]},{"name":"def /%(that: BigInt): (BigInt, BigInt)","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["/%"]},{"name":"def applyAsInt(x1: Int, x2: Int): Int","description":"scala.jdk.FunctionWrappers$$AsJavaIntBinaryOperator","location":"api/scala/jdk/FunctionWrappers$$AsJavaIntBinaryOperator.html","searchKeys":["applyAsInt"]},{"name":"def toMinutes: Long","description":"scala.concurrent.duration.Duration","location":"api/scala/concurrent/duration/Duration.html","searchKeys":["toMinutes"]},{"name":"def infixOrderingOps[T](x: T)(ord: Ordering[T]): OrderingOps","description":"scala.math.Ordering$$ExtraImplicits","location":"api/scala/math/Ordering$$ExtraImplicits.html","searchKeys":["infixOrderingOps"]},{"name":"object ArrayBuffer extends StrictOptimizedSeqFactory[[A] =>> ArrayBuffer[A]]","description":"scala.collection.mutable.ArrayBuffer$","location":"api/scala/collection/mutable/ArrayBuffer$.html","searchKeys":["ArrayBuffer"]},{"name":"type FloatConstant <: Constant","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["FloatConstant"]},{"name":"class FromJavaBiConsumer[T, U](jf: BiConsumer[T, U]) extends (T, U) => Unit","description":"scala.jdk.FunctionWrappers$$FromJavaBiConsumer","location":"api/scala/jdk/FunctionWrappers$$FromJavaBiConsumer.html","searchKeys":["FromJavaBiConsumer"]},{"name":"def toSeq: Seq[A]","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["toSeq"]},{"name":"object StreamExtensions","description":"scala.collection.convert.StreamExtensions$","location":"api/scala/collection/convert/StreamExtensions$.html","searchKeys":["StreamExtensions"]},{"name":"def enrichAsJavaLongUnaryOperator[A0](sf: A0 => Long)(evA0: A0 =:= Long): RichFunction1AsLongUnaryOperator","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsJavaLongUnaryOperator"]},{"name":"def enrichAsJavaLongConsumer[A0](sf: A0 => Unit)(evA0: A0 =:= Long): RichFunction1AsLongConsumer","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsJavaLongConsumer"]},{"name":"object Float extends AnyValCompanion","description":"scala.Float$","location":"api/scala/Float$.html","searchKeys":["Float"]},{"name":"def _5: T5","description":"scala.Product21","location":"api/scala/Product21.html","searchKeys":["_5"]},{"name":"def toLong(x: BigDecimal): Long","description":"scala.math.Numeric$$BigDecimalIsConflicted","location":"api/scala/math/Numeric$$BigDecimalIsConflicted.html","searchKeys":["toLong"]},{"name":"given BooleanConstantTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["BooleanConstantTypeTest"]},{"name":"def _22: T22","description":"scala.Product22","location":"api/scala/Product22.html","searchKeys":["_22"]},{"name":"def !=(x: Long): Boolean","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["!="]},{"name":"def empty[A](evidence$1: ClassTag[A]): ArraySeq[A]","description":"scala.collection.immutable.ArraySeq$","location":"api/scala/collection/immutable/ArraySeq$.html","searchKeys":["empty"]},{"name":"def int2bigDecimal(i: Int): BigDecimal","description":"scala.math.BigDecimal$","location":"api/scala/math/BigDecimal$.html","searchKeys":["int2bigDecimal"]},{"name":"def withName(s: String): Value","description":"scala.Enumeration","location":"api/scala/Enumeration.html","searchKeys":["withName"]},{"name":"def trySplit(): Stepper[A]","description":"scala.collection.Stepper","location":"api/scala/collection/Stepper.html","searchKeys":["trySplit"]},{"name":"def iterableFactory[V]: Factory[(Long, V), LongMap[V]]","description":"scala.collection.immutable.LongMap$","location":"api/scala/collection/immutable/LongMap$.html","searchKeys":["iterableFactory"]},{"name":"trait JFunction1$mcVD$sp extends Any => Any with Serializable","description":"scala.runtime.java8.JFunction1$mcVD$sp","location":"api/scala/runtime/java8/JFunction1$mcVD$sp.html","searchKeys":["JFunction1$mcVD$sp"]},{"name":"val conversion: Repr => SeqOps[A, [A] =>> Iterable[A], C]","description":"scala.collection.generic.IsSeq","location":"api/scala/collection/generic/IsSeq.html","searchKeys":["conversion"]},{"name":"def concat(suffix: String): String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["concat"]},{"name":"def insert(index: Int, x: Float): StringBuilder","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["insert"]},{"name":"def toArray: Array[Double]","description":"scala.jdk.DoubleAccumulator","location":"api/scala/jdk/DoubleAccumulator.html","searchKeys":["toArray"]},{"name":"val buff: UnrolledBuffer[T]","description":"scala.collection.mutable.UnrolledBuffer$$Unrolled","location":"api/scala/collection/mutable/UnrolledBuffer$$Unrolled.html","searchKeys":["buff"]},{"name":"def asJavaIntToDoubleFunction(sf: Integer => Double): IntToDoubleFunction","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asJavaIntToDoubleFunction"]},{"name":"val longAccumulatorFactoryInfo: AccumulatorFactoryInfo[Long, LongAccumulator]","description":"scala.collection.convert.StreamExtensions$$AccumulatorFactoryInfo$","location":"api/scala/collection/convert/StreamExtensions$$AccumulatorFactoryInfo$.html","searchKeys":["longAccumulatorFactoryInfo"]},{"name":"def empty[A]: Stack[A]","description":"scala.collection.mutable.Stack$","location":"api/scala/collection/mutable/Stack$.html","searchKeys":["empty"]},{"name":"def drop[T](n: Int): IArray[T]","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["drop"]},{"name":"def substituteContra[F <: ([_$5] =>> Any)](ft: F[To]): F[From]","description":"scala.<:<","location":"api/scala/<:<.html","searchKeys":["substituteContra"]},{"name":"def *(x: Float): Float","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["*"]},{"name":"def apply(ix: Long): Int","description":"scala.jdk.IntAccumulator","location":"api/scala/jdk/IntAccumulator.html","searchKeys":["apply"]},{"name":"def !=(x: Char): Boolean","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["!="]},{"name":"def charStepper: IntStepper & EfficientSplit","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["charStepper"]},{"name":"def partition(p: A => Boolean): (Array[A], Array[A])","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["partition"]},{"name":"var pos: Int","description":"scala.io.Source$Positioner","location":"api/scala/io/Source$Positioner.html","searchKeys":["pos"]},{"name":"def self: Any","description":"scala.Proxy","location":"api/scala/Proxy.html","searchKeys":["self"]},{"name":"def stripSuffix(suffix: String): String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["stripSuffix"]},{"name":"def seqToArray[T](xs: Seq[T], clazz: Class[]): Array[T]","description":"scala.runtime.Arrays$","location":"api/scala/runtime/Arrays$.html","searchKeys":["seqToArray"]},{"name":"def apply(v1: T1, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, v7: T7, v8: T8, v9: T9, v10: T10, v11: T11, v12: T12, v13: T13, v14: T14, v15: T15, v16: T16, v17: T17, v18: T18, v19: T19, v20: T20, v21: T21, v22: T22): R","description":"scala.Function22","location":"api/scala/Function22.html","searchKeys":["apply"]},{"name":"val UNDERLINED: \"\\033[4m\"","description":"scala.io.AnsiColor","location":"api/scala/io/AnsiColor.html","searchKeys":["UNDERLINED"]},{"name":"val underlying: Map[K, V]","description":"scala.collection.immutable.Map$$WithDefault","location":"api/scala/collection/immutable/Map$$WithDefault.html","searchKeys":["underlying"]},{"name":"def this()","description":"scala.NotImplementedError","location":"api/scala/NotImplementedError.html","searchKeys":["this"]},{"name":"def length: Int","description":"scala.collection.SeqView$$Appended","location":"api/scala/collection/SeqView$$Appended.html","searchKeys":["length"]},{"name":"def days[C](c: C)(ev: Classifier[C]): R","description":"scala.concurrent.duration.DurationConversions","location":"api/scala/concurrent/duration/DurationConversions.html","searchKeys":["days"]},{"name":"def round(x: Long): Long","description":"scala.math","location":"api/scala/math.html","searchKeys":["round"]},{"name":"def withFilter(q: A => Boolean): WithFilter","description":"scala.Option$WithFilter","location":"api/scala/Option$WithFilter.html","searchKeys":["withFilter"]},{"name":"def asJava[A](s: Set[A]): Set[A]","description":"scala.collection.convert.AsJavaConverters","location":"api/scala/collection/convert/AsJavaConverters.html","searchKeys":["asJava"]},{"name":"def setLength(len: Int): Unit","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["setLength"]},{"name":"given RecursiveTypeTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["RecursiveTypeTypeTest"]},{"name":"trait BufferedIterator[+A] extends Iterator[A]","description":"scala.collection.BufferedIterator","location":"api/scala/collection/BufferedIterator.html","searchKeys":["BufferedIterator"]},{"name":"def subtractOne(key: String): SystemProperties","description":"scala.sys.SystemProperties","location":"api/scala/sys/SystemProperties.html","searchKeys":["subtractOne"]},{"name":"val x$25: FromExpr[T6]","description":"scala.quoted.FromExpr$$Tuple19FromExpr","location":"api/scala/quoted/FromExpr$$Tuple19FromExpr.html","searchKeys":["x$25"]},{"name":"def equiv(x: Short, y: Short): Boolean","description":"scala.math.Equiv$$Short$","location":"api/scala/math/Equiv$$Short$.html","searchKeys":["equiv"]},{"name":"def apply$mcJI$sp(v1: Int): Long","description":"scala.runtime.java8.JFunction1$mcJI$sp","location":"api/scala/runtime/java8/JFunction1$mcJI$sp.html","searchKeys":["apply$mcJI$sp"]},{"name":"def newArray2(len: Int): Array[Array[T]]","description":"scala.reflect.ClassManifestDeprecatedApis","location":"api/scala/reflect/ClassManifestDeprecatedApis.html","searchKeys":["newArray2"]},{"name":"class RichFunction1AsIntUnaryOperator(underlying: Int => Int) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichFunction1AsIntUnaryOperator","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsIntUnaryOperator.html","searchKeys":["RichFunction1AsIntUnaryOperator"]},{"name":"def :::[B >: A](prefix: List[B]): List[B]","description":"scala.collection.immutable.List","location":"api/scala/collection/immutable/List.html","searchKeys":[":::"]},{"name":"def toSeq: Seq[B]","description":"scala.util.Either$$RightProjection","location":"api/scala/util/Either$$RightProjection.html","searchKeys":["toSeq"]},{"name":"trait TypeApplyModule","description":"scala.quoted.Quotes$reflectModule$TypeApplyModule","location":"api/scala/quoted/Quotes$reflectModule$TypeApplyModule.html","searchKeys":["TypeApplyModule"]},{"name":"def reportError(pos: Int, msg: String, out: PrintStream): Unit","description":"scala.io.Source","location":"api/scala/io/Source.html","searchKeys":["reportError"]},{"name":"val x$37: FromExpr[T15]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["x$37"]},{"name":"trait Product8[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8] extends Product","description":"scala.Product8","location":"api/scala/Product8.html","searchKeys":["Product8"]},{"name":"def empty[K, V]: TrieMap[K, V]","description":"scala.collection.concurrent.TrieMap$","location":"api/scala/collection/concurrent/TrieMap$.html","searchKeys":["empty"]},{"name":"def sorted[B >: Char](ord: Ordering[B]): String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["sorted"]},{"name":"def unapply(x: TypeBlock): (List[TypeDef], TypeTree)","description":"scala.quoted.Quotes$reflectModule$TypeBlockModule","location":"api/scala/quoted/Quotes$reflectModule$TypeBlockModule.html","searchKeys":["unapply"]},{"name":"def start: Int","description":"scala.quoted.Quotes$reflectModule$PositionMethods","location":"api/scala/quoted/Quotes$reflectModule$PositionMethods.html","searchKeys":["start"]},{"name":"val x$7: Type[T7]","description":"scala.quoted.FromExpr$$Tuple19FromExpr","location":"api/scala/quoted/FromExpr$$Tuple19FromExpr.html","searchKeys":["x$7"]},{"name":"def singleType[T <: AnyRef](value: AnyRef): Manifest[T]","description":"scala.reflect.ManifestFactory$","location":"api/scala/reflect/ManifestFactory$.html","searchKeys":["singleType"]},{"name":"val x$4: Type[T4]","description":"scala.quoted.FromExpr$$Tuple12FromExpr","location":"api/scala/quoted/FromExpr$$Tuple12FromExpr.html","searchKeys":["x$4"]},{"name":"def fill[T](n1: Int, n2: Int, n3: Int)(elem: => T)(evidence$20: ClassTag[T]): IArray[IArray[IArray[T]]]","description":"scala.IArray$package$$IArray$","location":"api/scala/IArray$package$$IArray$.html","searchKeys":["fill"]},{"name":"def toIterator: Iterator[A]","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["toIterator"]},{"name":"val Object: ClassTag[Object]","description":"scala.reflect.ClassTag$","location":"api/scala/reflect/ClassTag$.html","searchKeys":["Object"]},{"name":"def withRight[B1 >: B]: Either[A, B1]","description":"scala.util.Left","location":"api/scala/util/Left.html","searchKeys":["withRight"]},{"name":"class AsJavaCollection[A](i: Iterable[A])","description":"scala.collection.JavaConverters$$AsJavaCollection","location":"api/scala/collection/JavaConverters$$AsJavaCollection.html","searchKeys":["AsJavaCollection"]},{"name":"def xor(other: BitSet): C","description":"scala.collection.BitSetOps","location":"api/scala/collection/BitSetOps.html","searchKeys":["xor"]},{"name":"def isTypeTreeTag(tag: Int): Boolean","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["isTypeTreeTag"]},{"name":"def >=(x: Double): Boolean","description":"scala.Double","location":"api/scala/Double.html","searchKeys":[">="]},{"name":"def f[A = Any](args: A*): String","description":"scala.StringContext","location":"api/scala/StringContext.html","searchKeys":["f"]},{"name":"trait WhileModule","description":"scala.quoted.Quotes$reflectModule$WhileModule","location":"api/scala/quoted/Quotes$reflectModule$WhileModule.html","searchKeys":["WhileModule"]},{"name":"def scala$collection$SortedSet$$super$equals(that: Any): Boolean","description":"scala.collection.SortedSet","location":"api/scala/collection/SortedSet.html","searchKeys":["scala$collection$SortedSet$$super$equals"]},{"name":"def ==(x: Double): Boolean","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["=="]},{"name":"def stableSort[K](a: Array[K], from: Int, until: Int)(evidence$4: Ordering[K]): Unit","description":"scala.util.Sorting$","location":"api/scala/util/Sorting$.html","searchKeys":["stableSort"]},{"name":"given TypeRefTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeRefTypeTest"]},{"name":"def rhs: Option[Term]","description":"scala.quoted.Quotes$reflectModule$ValDefMethods","location":"api/scala/quoted/Quotes$reflectModule$ValDefMethods.html","searchKeys":["rhs"]},{"name":"type MirroredMonoType = AnyRef","description":"scala.deriving.Mirror$$SingletonProxy","location":"api/scala/deriving/Mirror$$SingletonProxy.html","searchKeys":["MirroredMonoType"]},{"name":"def withReset(f: () => Source): Source","description":"scala.io.Source","location":"api/scala/io/Source.html","searchKeys":["withReset"]},{"name":"def _6: T6","description":"scala.Product8","location":"api/scala/Product8.html","searchKeys":["_6"]},{"name":"val x$16: FromExpr[T2]","description":"scala.quoted.FromExpr$$Tuple14FromExpr","location":"api/scala/quoted/FromExpr$$Tuple14FromExpr.html","searchKeys":["x$16"]},{"name":"class Boolean extends AnyVal","description":"scala.Boolean","location":"api/scala/Boolean.html","searchKeys":["Boolean"]},{"name":"val jIntegerStepperShape: StepperShape[Integer, IntStepper]","description":"scala.collection.StepperShape$","location":"api/scala/collection/StepperShape$.html","searchKeys":["jIntegerStepperShape"]},{"name":"def spliterator[B >: A]: Spliterator[B]","description":"scala.collection.AnyStepper","location":"api/scala/collection/AnyStepper.html","searchKeys":["spliterator"]},{"name":"def until(end: Int, step: Int): Range","description":"scala.runtime.RichInt","location":"api/scala/runtime/RichInt.html","searchKeys":["until"]},{"name":"class Tuple10[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10](_1: T1, _2: T2, _3: T3, _4: T4, _5: T5, _6: T6, _7: T7, _8: T8, _9: T9, _10: T10) extends Product10[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]","description":"scala.Tuple10","location":"api/scala/Tuple10.html","searchKeys":["Tuple10"]},{"name":"def transform[W](f: (K, V) => W): CC[K, W]","description":"scala.collection.immutable.MapOps","location":"api/scala/collection/immutable/MapOps.html","searchKeys":["transform"]},{"name":"def intMapIsMap[V0]: IsMap[IntMap[V0]] { type K = Int; type V = V0; type C = IntMap[V0];  }","description":"scala.collection.generic.IsMap$","location":"api/scala/collection/generic/IsMap$.html","searchKeys":["intMapIsMap"]},{"name":"def tpt: TypeTree","description":"scala.quoted.Quotes$reflectModule$AppliedMethods","location":"api/scala/quoted/Quotes$reflectModule$AppliedMethods.html","searchKeys":["tpt"]},{"name":"type Range = Range","description":"scala","location":"api/scala.html","searchKeys":["Range"]},{"name":"type AndType <: AndOrType","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["AndType"]},{"name":"def tryCompleteWith(other: Future[T]): Promise[T]","description":"scala.concurrent.Promise","location":"api/scala/concurrent/Promise.html","searchKeys":["tryCompleteWith"]},{"name":"type Definition <: Statement","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Definition"]},{"name":"def zipAll[A1 >: A, B](that: Iterable[B], thisElem: A1, thatElem: B): Array[(A1, B)]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["zipAll"]},{"name":"object Iterable extends Delegate[[A] =>> Iterable[A]]","description":"scala.collection.immutable.Iterable$","location":"api/scala/collection/immutable/Iterable$.html","searchKeys":["Iterable"]},{"name":"def maxOption[B >: A](ord: Ordering[B]): Option[A]","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["maxOption"]},{"name":"def matcher: Matcher","description":"scala.util.matching.Regex$$MatchData","location":"api/scala/util/matching/Regex$$MatchData.html","searchKeys":["matcher"]},{"name":"val x$3: Type[T3]","description":"scala.quoted.FromExpr$$Tuple19FromExpr","location":"api/scala/quoted/FromExpr$$Tuple19FromExpr.html","searchKeys":["x$3"]},{"name":"def filterNot(pred: A => Boolean): C","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["filterNot"]},{"name":"def apply(length: Long, unit: String): FiniteDuration","description":"scala.concurrent.duration.FiniteDuration$","location":"api/scala/concurrent/duration/FiniteDuration$.html","searchKeys":["apply"]},{"name":"def asJava: DoubleBinaryOperator","description":"scala.jdk.FunctionWrappers$$RichFunction2AsDoubleBinaryOperator","location":"api/scala/jdk/FunctionWrappers$$RichFunction2AsDoubleBinaryOperator.html","searchKeys":["asJava"]},{"name":"trait Product19[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16, +T17, +T18, +T19] extends Product","description":"scala.Product19","location":"api/scala/Product19.html","searchKeys":["Product19"]},{"name":"def LongClass: Symbol","description":"scala.quoted.Quotes$reflectModule$defnModule","location":"api/scala/quoted/Quotes$reflectModule$defnModule.html","searchKeys":["LongClass"]},{"name":"type Inlined <: Term","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Inlined"]},{"name":"def empty[K, V]: HashMap[K, V]","description":"scala.collection.immutable.HashMap$","location":"api/scala/collection/immutable/HashMap$.html","searchKeys":["empty"]},{"name":"def apply(expr: Term, tpt: TypeTree): Typed","description":"scala.quoted.Quotes$reflectModule$TypedModule","location":"api/scala/quoted/Quotes$reflectModule$TypedModule.html","searchKeys":["apply"]},{"name":"def foreachEntry[U](f: (K, V) => U): Unit","description":"scala.collection.MapOps","location":"api/scala/collection/MapOps.html","searchKeys":["foreachEntry"]},{"name":"def empty[A](evidence$1: Ordering[A]): TreeSet[A]","description":"scala.collection.mutable.TreeSet$","location":"api/scala/collection/mutable/TreeSet$.html","searchKeys":["empty"]},{"name":"def >=(x: Double): Boolean","description":"scala.Short","location":"api/scala/Short.html","searchKeys":[">="]},{"name":"val STABLE: 32","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["STABLE"]},{"name":"def iterator: Iterator[A]","description":"scala.collection.View$$DistinctBy","location":"api/scala/collection/View$$DistinctBy.html","searchKeys":["iterator"]},{"name":"def -(x: Short): Int","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["-"]},{"name":"def ++[B >: A](xs: => IterableOnce[B]): Iterator[B]","description":"scala.collection.Iterator","location":"api/scala/collection/Iterator.html","searchKeys":["++"]},{"name":"class RichFunction0AsIntSupplier(underlying: () => Int) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichFunction0AsIntSupplier","location":"api/scala/jdk/FunctionWrappers$$RichFunction0AsIntSupplier.html","searchKeys":["RichFunction0AsIntSupplier"]},{"name":"def asJavaLongToDoubleFunction(sf: Long => Double): LongToDoubleFunction","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asJavaLongToDoubleFunction"]},{"name":"val javaDoubleStreamUnboxer: StreamUnboxer[Double, DoubleStream]","description":"scala.collection.convert.StreamExtensions$$StreamUnboxer$","location":"api/scala/collection/convert/StreamExtensions$$StreamUnboxer$.html","searchKeys":["javaDoubleStreamUnboxer"]},{"name":"val TRY: 146","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["TRY"]},{"name":"trait ZippedIterable3[+El1, +El2, +El3]","description":"scala.runtime.ZippedIterable3","location":"api/scala/runtime/ZippedIterable3.html","searchKeys":["ZippedIterable3"]},{"name":"given AppliedMethods","description":"scala.quoted.Quotes$reflectModule$AppliedMethods","location":"api/scala/quoted/Quotes$reflectModule$AppliedMethods.html","searchKeys":["AppliedMethods"]},{"name":"def err: PrintStream","description":"scala.Console$","location":"api/scala/Console$.html","searchKeys":["err"]},{"name":"def empty[T]: LongMap[T]","description":"scala.collection.immutable.LongMap$","location":"api/scala/collection/immutable/LongMap$.html","searchKeys":["empty"]},{"name":"def asJavaPrimitiveStream[S](unboxer: StreamUnboxer[A, S]): S","description":"scala.collection.convert.StreamExtensions$StreamHasToScala","location":"api/scala/collection/convert/StreamExtensions$StreamHasToScala.html","searchKeys":["asJavaPrimitiveStream"]},{"name":"def leadingTypeParams: List[TypeDef]","description":"scala.quoted.Quotes$reflectModule$DefDefMethods","location":"api/scala/quoted/Quotes$reflectModule$DefDefMethods.html","searchKeys":["leadingTypeParams"]},{"name":"def unapply(x: AnnotatedType): (TypeRepr, Term)","description":"scala.quoted.Quotes$reflectModule$AnnotatedTypeModule","location":"api/scala/quoted/Quotes$reflectModule$AnnotatedTypeModule.html","searchKeys":["unapply"]},{"name":"given ArrayOfBooleanToExpr: ToExpr[Array[Boolean]]","description":"scala.quoted.ToExpr$$ArrayOfBooleanToExpr$","location":"api/scala/quoted/ToExpr$.html","searchKeys":["ArrayOfBooleanToExpr"]},{"name":"trait Map[K, V] extends Map[K, V]","description":"scala.collection.concurrent.Map","location":"api/scala/collection/concurrent/Map.html","searchKeys":["Map"]},{"name":"def ++:[B >: Char](prefix: IterableOnce[B]): IndexedSeq[B]","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["++:"]},{"name":"def ++:[B >: A](prefix: IterableOnce[B])(evidence$14: ClassTag[B]): Array[B]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["++:"]},{"name":"class ofShort(val unsafeArray: Array[Short]) extends ArraySeq[Short]","description":"scala.collection.immutable.ArraySeq$$ofShort","location":"api/scala/collection/immutable/ArraySeq$$ofShort.html","searchKeys":["ofShort"]},{"name":"def apply(result: TypeTree): ByName","description":"scala.quoted.Quotes$reflectModule$ByNameModule","location":"api/scala/quoted/Quotes$reflectModule$ByNameModule.html","searchKeys":["apply"]},{"name":"def supplier: Supplier[LongAccumulator]","description":"scala.jdk.LongAccumulator$","location":"api/scala/jdk/LongAccumulator$.html","searchKeys":["supplier"]},{"name":"def +(x: Short): Int","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["+"]},{"name":"def remove(idx: Int, buffer: UnrolledBuffer[T]): T","description":"scala.collection.mutable.UnrolledBuffer$$Unrolled","location":"api/scala/collection/mutable/UnrolledBuffer$$Unrolled.html","searchKeys":["remove"]},{"name":"def nextUp(d: Double): Double","description":"scala.math","location":"api/scala/math.html","searchKeys":["nextUp"]},{"name":"def ensuring(cond: A => Boolean): A","description":"scala.Predef$$Ensuring","location":"api/scala/Predef$$Ensuring.html","searchKeys":["ensuring"]},{"name":"def applyDynamic(name: String, paramTypes: Class[]*)(args: Any*): Any","description":"scala.reflect.Selectable","location":"api/scala/reflect/Selectable.html","searchKeys":["applyDynamic"]},{"name":"def ==(that: Addr): Boolean","description":"dotty.tools.tasty.TastyBuffer$$Addr","location":"api/dotty/tools/tasty/TastyBuffer$$Addr.html","searchKeys":["=="]},{"name":"def div(x: BigDecimal, y: BigDecimal): BigDecimal","description":"scala.math.Numeric$$BigDecimalIsFractional","location":"api/scala/math/Numeric$$BigDecimalIsFractional.html","searchKeys":["div"]},{"name":"def rangeImpl(from: Option[K], until: Option[K]): SortedSet[K]","description":"scala.collection.immutable.SortedMapOps$ImmutableKeySortedSet","location":"api/scala/collection/immutable/SortedMapOps$ImmutableKeySortedSet.html","searchKeys":["rangeImpl"]},{"name":"def _8: T8","description":"scala.Product15","location":"api/scala/Product15.html","searchKeys":["_8"]},{"name":"def _2: T2","description":"scala.Product2","location":"api/scala/Product2.html","searchKeys":["_2"]},{"name":"val Stream: Stream","description":"scala","location":"api/scala.html","searchKeys":["Stream"]},{"name":"class MutableMapHasAsJava[K, V](m: Map[K, V])","description":"scala.collection.convert.AsJavaExtensions$MutableMapHasAsJava","location":"api/scala/collection/convert/AsJavaExtensions$MutableMapHasAsJava.html","searchKeys":["MutableMapHasAsJava"]},{"name":"def zipWith[U, R](that: Future[U])(f: (T, U) => R)(executor: ExecutionContext): Future[R]","description":"scala.concurrent.Future","location":"api/scala/concurrent/Future.html","searchKeys":["zipWith"]},{"name":"def args: List[TypeTree]","description":"scala.quoted.Quotes$reflectModule$TypeApplyMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeApplyMethods.html","searchKeys":["args"]},{"name":"def fromProduct(xs: Product): Tuple","description":"scala.runtime.Tuples$","location":"api/scala/runtime/Tuples$.html","searchKeys":["fromProduct"]},{"name":"type IndexedOptimizedBuffer[A] = IndexedBuffer[A]","description":"scala.collection.mutable","location":"api/scala/collection/mutable.html","searchKeys":["IndexedOptimizedBuffer"]},{"name":"val SuperType: SuperTypeModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["SuperType"]},{"name":"class RichSupplierAsFunction0[T](underlying: Supplier[T]) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichSupplierAsFunction0","location":"api/scala/jdk/FunctionWrappers$$RichSupplierAsFunction0.html","searchKeys":["RichSupplierAsFunction0"]},{"name":"def addOne(elem: A): TreeSet[A]","description":"scala.collection.mutable.TreeSet","location":"api/scala/collection/mutable/TreeSet.html","searchKeys":["addOne"]},{"name":"val x$14: FromExpr[T1]","description":"scala.quoted.FromExpr$$Tuple13FromExpr","location":"api/scala/quoted/FromExpr$$Tuple13FromExpr.html","searchKeys":["x$14"]},{"name":"def until(end: T, step: T): Exclusive[T]","description":"scala.runtime.IntegralProxy","location":"api/scala/runtime/IntegralProxy.html","searchKeys":["until"]},{"name":"def *(x: Int): Int","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["*"]},{"name":"type K","description":"scala.collection.generic.IsMap","location":"api/scala/collection/generic/IsMap.html","searchKeys":["K"]},{"name":"val x$15: Type[T15]","description":"scala.quoted.FromExpr$$Tuple16FromExpr","location":"api/scala/quoted/FromExpr$$Tuple16FromExpr.html","searchKeys":["x$15"]},{"name":"def >=(x: Char): Boolean","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":[">="]},{"name":"def forall(p: (El1, El2) => Boolean): Boolean","description":"scala.runtime.Tuple2Zipped","location":"api/scala/runtime/Tuple2Zipped.html","searchKeys":["forall"]},{"name":"def this(value: T)","description":"scala.ref.WeakReference","location":"api/scala/ref/WeakReference.html","searchKeys":["this"]},{"name":"Reflection","description":"","location":"docs/reference/metaprogramming/reflection.html","searchKeys":["Reflection"]},{"name":"def negate(x: Float): Float","description":"scala.math.Numeric$$FloatIsFractional","location":"api/scala/math/Numeric$$FloatIsFractional.html","searchKeys":["negate"]},{"name":"val Try: TryModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Try"]},{"name":"def unionWith[S >: T](that: LongMap[S], f: (Long, S, S) => S): LongMap[S]","description":"scala.collection.immutable.LongMap","location":"api/scala/collection/immutable/LongMap.html","searchKeys":["unionWith"]},{"name":"def _1: T1","description":"scala.Product1","location":"api/scala/Product1.html","searchKeys":["_1"]},{"name":"def transform[T](e: Expr[T])(using Type[T])(using Quotes): Expr[T]","description":"scala.quoted.ExprMap","location":"api/scala/quoted/ExprMap.html","searchKeys":["transform"]},{"name":"given Tuple19FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19](using val x$1: Type[T1], val x$2: Type[T2], val x$3: Type[T3], val x$4: Type[T4], val x$5: Type[T5], val x$6: Type[T6], val x$7: Type[T7], val x$8: Type[T8], val x$9: Type[T9], val x$10: Type[T10], val x$11: Type[T11], val x$12: Type[T12], val x$13: Type[T13], val x$14: Type[T14], val x$15: Type[T15], val x$16: Type[T16], val x$17: Type[T17], val x$18: Type[T18], val x$19: Type[T19], val x$20: FromExpr[T1], val x$21: FromExpr[T2], val x$22: FromExpr[T3], val x$23: FromExpr[T4], val x$24: FromExpr[T5], val x$25: FromExpr[T6], val x$26: FromExpr[T7], val x$27: FromExpr[T8], val x$28: FromExpr[T9], val x$29: FromExpr[T10], val x$30: FromExpr[T11], val x$31: FromExpr[T12], val x$32: FromExpr[T13], val x$33: FromExpr[T14], val x$34: FromExpr[T15], val x$35: FromExpr[T16], val x$36: FromExpr[T17], val x$37: FromExpr[T18], val x$38: FromExpr[T19]): FromExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19)]","description":"scala.quoted.FromExpr$$Tuple19FromExpr","location":"api/scala/quoted/FromExpr$.html","searchKeys":["Tuple19FromExpr"]},{"name":"def compare(x: String, y: String): Int","description":"scala.math.Ordering$$StringOrdering","location":"api/scala/math/Ordering$$StringOrdering.html","searchKeys":["compare"]},{"name":"def nameAndDescriptorKey(name: String, descriptor: String): String","description":"scala.runtime.LambdaDeserialize$","location":"api/scala/runtime/LambdaDeserialize$.html","searchKeys":["nameAndDescriptorKey"]},{"name":"def asExecutionContext(exec: Executor): ExecutionContextExecutor","description":"scala.concurrent.JavaConversions$","location":"api/scala/concurrent/JavaConversions$.html","searchKeys":["asExecutionContext"]},{"name":"object TreeMap extends SortedMapFactory[[K, V] =>> TreeMap[K, V]]","description":"scala.collection.mutable.TreeMap$","location":"api/scala/collection/mutable/TreeMap$.html","searchKeys":["TreeMap"]},{"name":"def anyRefMapIsMap[K0 <: AnyRef, V0]: IsMap[AnyRefMap[K0, V0]] { type K = K0; type V = V0; type C = AnyRefMap[K0, V0];  }","description":"scala.collection.generic.IsMap$","location":"api/scala/collection/generic/IsMap$.html","searchKeys":["anyRefMapIsMap"]},{"name":"def insert(index: Int, x: Short): StringBuilder","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["insert"]},{"name":"def isEmpty: Boolean","description":"scala.collection.SeqFactory$$UnapplySeqWrapper","location":"api/scala/collection/SeqFactory$$UnapplySeqWrapper.html","searchKeys":["isEmpty"]},{"name":"trait JFunction1$mcJI$sp extends Any => Any with Serializable","description":"scala.runtime.java8.JFunction1$mcJI$sp","location":"api/scala/runtime/java8/JFunction1$mcJI$sp.html","searchKeys":["JFunction1$mcJI$sp"]},{"name":"Open Classes","description":"","location":"docs/reference/other-new-features/open-classes.html","searchKeys":["Open Classes"]},{"name":"def apply(tup: (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20))(using Quotes): Expr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20)]","description":"scala.quoted.ToExpr$$Tuple20ToExpr","location":"api/scala/quoted/ToExpr$$Tuple20ToExpr.html","searchKeys":["apply"]},{"name":"Announcing Dotty 0.20.0-RC1 – `with` starting indentation blocks, inline given specializations and more","description":"","location":"blog/2019/11/04/20th-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.20.0-RC1 – `with` starting indentation blocks, inline given specializations and more"]},{"name":"val x$12: Type[T12]","description":"scala.quoted.FromExpr$$Tuple12FromExpr","location":"api/scala/quoted/FromExpr$$Tuple12FromExpr.html","searchKeys":["x$12"]},{"name":"val x$35: FromExpr[T16]","description":"scala.quoted.FromExpr$$Tuple19FromExpr","location":"api/scala/quoted/FromExpr$$Tuple19FromExpr.html","searchKeys":["x$35"]},{"name":"given MatchTypeMethods","description":"scala.quoted.Quotes$reflectModule$MatchTypeMethods","location":"api/scala/quoted/Quotes$reflectModule$MatchTypeMethods.html","searchKeys":["MatchTypeMethods"]},{"name":"def ^(x: Byte): Int","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["^"]},{"name":"def ==(x: Long): Boolean","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["=="]},{"name":"def result(): AnyRefMap[K, V]","description":"scala.collection.mutable.AnyRefMap$$AnyRefMapBuilder","location":"api/scala/collection/mutable/AnyRefMap$$AnyRefMapBuilder.html","searchKeys":["result"]},{"name":"val Lambda: LambdaModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Lambda"]},{"name":"def indices: Range","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["indices"]},{"name":"def newBuilder[K, V](evidence$29: Ordering[K]): Builder[(K, V), CC[K, V]]","description":"scala.collection.SortedMapFactory","location":"api/scala/collection/SortedMapFactory.html","searchKeys":["newBuilder"]},{"name":"def cases: List[TypeRepr]","description":"scala.quoted.Quotes$reflectModule$MatchTypeMethods","location":"api/scala/quoted/Quotes$reflectModule$MatchTypeMethods.html","searchKeys":["cases"]},{"name":"def Opaque: Flags","description":"scala.quoted.Quotes$reflectModule$FlagsModule","location":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html","searchKeys":["Opaque"]},{"name":"def result(): String","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["result"]},{"name":"val x$24: FromExpr[T11]","description":"scala.quoted.FromExpr$$Tuple13FromExpr","location":"api/scala/quoted/FromExpr$$Tuple13FromExpr.html","searchKeys":["x$24"]},{"name":"def exact(s: String): BigDecimal","description":"scala.math.BigDecimal$","location":"api/scala/math/BigDecimal$.html","searchKeys":["exact"]},{"name":"val x$11: Type[T11]","description":"scala.quoted.FromExpr$$Tuple15FromExpr","location":"api/scala/quoted/FromExpr$$Tuple15FromExpr.html","searchKeys":["x$11"]},{"name":"def result(): ArrayBuffer[A]","description":"scala.collection.mutable.ArrayBuffer","location":"api/scala/collection/mutable/ArrayBuffer.html","searchKeys":["result"]},{"name":"trait BuildFrom[-From, -A, +C]","description":"scala.collection.BuildFrom","location":"api/scala/collection/BuildFrom.html","searchKeys":["BuildFrom"]},{"name":"def Byte2byte(x: Byte): Byte","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["Byte2byte"]},{"name":"class RichFunction1AsIntToDoubleFunction(underlying: Int => Double) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichFunction1AsIntToDoubleFunction","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsIntToDoubleFunction.html","searchKeys":["RichFunction1AsIntToDoubleFunction"]},{"name":"given LiteralMethods","description":"scala.quoted.Quotes$reflectModule$LiteralMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["LiteralMethods"]},{"name":"class IntStreamHasToScala(stream: IntStream)","description":"scala.collection.convert.StreamExtensions$IntStreamHasToScala","location":"api/scala/collection/convert/StreamExtensions$IntStreamHasToScala.html","searchKeys":["IntStreamHasToScala"]},{"name":"def drain(that: LongAccumulator): Unit","description":"scala.jdk.LongAccumulator","location":"api/scala/jdk/LongAccumulator.html","searchKeys":["drain"]},{"name":"def this()","description":"scala.collection.mutable.OpenHashMap","location":"api/scala/collection/mutable/OpenHashMap.html","searchKeys":["this"]},{"name":"given ListToExpr[T]: ToExpr[List[T]]","description":"scala.quoted.ToExpr$$ListToExpr","location":"api/scala/quoted/ToExpr$$ListToExpr.html","searchKeys":["ListToExpr"]},{"name":"val StringConstant: StringConstantModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["StringConstant"]},{"name":"class AbstractFunction14[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, -T14, +R] extends (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) => R","description":"scala.runtime.AbstractFunction14","location":"api/scala/runtime/AbstractFunction14.html","searchKeys":["AbstractFunction14"]},{"name":"given IdentMethods","description":"scala.quoted.Quotes$reflectModule$IdentMethods","location":"api/scala/quoted/Quotes$reflectModule$IdentMethods.html","searchKeys":["IdentMethods"]},{"name":"val New: NewModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["New"]},{"name":"trait AccumulatorFactoryShape[A, C]","description":"scala.jdk.Accumulator$$AccumulatorFactoryShape","location":"api/scala/jdk/Accumulator$$AccumulatorFactoryShape.html","searchKeys":["AccumulatorFactoryShape"]},{"name":"def Tuple7[T1, T2, T3, T4, T5, T6, T7](eqv1: Equiv[T1], eqv2: Equiv[T2], eqv3: Equiv[T3], eqv4: Equiv[T4], eqv5: Equiv[T5], eqv6: Equiv[T6], eqv7: Equiv[T7]): Equiv[(T1, T2, T3, T4, T5, T6, T7)]","description":"scala.math.Equiv$","location":"api/scala/math/Equiv$.html","searchKeys":["Tuple7"]},{"name":"def equiv(x: Boolean, y: Boolean): Boolean","description":"scala.math.Equiv$$Boolean$","location":"api/scala/math/Equiv$$Boolean$.html","searchKeys":["equiv"]},{"name":"def copyToBuffer(dest: Buffer[A]): Unit","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["copyToBuffer"]},{"name":"def signum: Int","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["signum"]},{"name":"def /(x: Double): Double","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["/"]},{"name":"def apply(tup: (T1, T2, T3))(using Quotes): Expr[(T1, T2, T3)]","description":"scala.quoted.ToExpr$$Tuple3ToExpr","location":"api/scala/quoted/ToExpr$$Tuple3ToExpr.html","searchKeys":["apply"]},{"name":"object Unit extends Equiv[Unit]","description":"scala.math.Equiv$$Unit$","location":"api/scala/math/Equiv$$Unit$.html","searchKeys":["Unit"]},{"name":"class Finally extends Described","description":"scala.util.control.Exception$$Finally","location":"api/scala/util/control/Exception$$Finally.html","searchKeys":["Finally"]},{"name":"def until[T](end: Addr)(op: => T): List[T]","description":"dotty.tools.tasty.TastyReader","location":"api/dotty/tools/tasty/TastyReader.html","searchKeys":["until"]},{"name":"def unary_+: Int","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["unary_+"]},{"name":"def /(x: Double): Double","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["/"]},{"name":"trait ProcessBuilder extends Source with Sink","description":"scala.sys.process.ProcessBuilder","location":"api/scala/sys/process/ProcessBuilder.html","searchKeys":["ProcessBuilder"]},{"name":"def front: A","description":"scala.collection.mutable.Queue","location":"api/scala/collection/mutable/Queue.html","searchKeys":["front"]},{"name":"val GivenSelector: GivenSelectorModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["GivenSelector"]},{"name":"def pjwHash64(data: Array[Byte]): Long","description":"dotty.tools.tasty.TastyHash$","location":"api/dotty/tools/tasty/TastyHash$.html","searchKeys":["pjwHash64"]},{"name":"val x$10: Type[T10]","description":"scala.quoted.FromExpr$$Tuple18FromExpr","location":"api/scala/quoted/FromExpr$$Tuple18FromExpr.html","searchKeys":["x$10"]},{"name":"def result: TypeTree","description":"scala.quoted.Quotes$reflectModule$ByNameMethods","location":"api/scala/quoted/Quotes$reflectModule$ByNameMethods.html","searchKeys":["result"]},{"name":"type Match <: Term","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Match"]},{"name":"val MatchCase: MatchCaseModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["MatchCase"]},{"name":"def +(x: String): String","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["+"]},{"name":"val NoAddr: Addr","description":"dotty.tools.tasty.TastyBuffer$","location":"api/dotty/tools/tasty/TastyBuffer$.html","searchKeys":["NoAddr"]},{"name":"def empty: TypeBounds","description":"scala.quoted.Quotes$reflectModule$TypeBoundsModule","location":"api/scala/quoted/Quotes$reflectModule$TypeBoundsModule.html","searchKeys":["empty"]},{"name":"def enrichAsScalaFromDoubleSupplier(jf: DoubleSupplier): RichDoubleSupplierAsFunction0","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsScalaFromDoubleSupplier"]},{"name":"def fromExecutor(e: Executor, reporter: Throwable => Unit): ExecutionContextExecutor","description":"scala.concurrent.ExecutionContext$","location":"api/scala/concurrent/ExecutionContext$.html","searchKeys":["fromExecutor"]},{"name":"def toBigIntExact: Option[BigInt]","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["toBigIntExact"]},{"name":"object SeqView","description":"scala.collection.SeqView$","location":"api/scala/collection/SeqView$.html","searchKeys":["SeqView"]},{"name":"def toDouble: Double","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["toDouble"]},{"name":"def compare(x: Option[T], y: Option[T]): Int","description":"scala.math.Ordering$$OptionOrdering","location":"api/scala/math/Ordering$$OptionOrdering.html","searchKeys":["compare"]},{"name":"class AsJavaToDoubleFunction[T](sf: T => Double) extends ToDoubleFunction[T]","description":"scala.jdk.FunctionWrappers$$AsJavaToDoubleFunction","location":"api/scala/jdk/FunctionWrappers$$AsJavaToDoubleFunction.html","searchKeys":["AsJavaToDoubleFunction"]},{"name":"def reverseContents(): StringBuilder","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["reverseContents"]},{"name":"def equiv(x: T, y: T): Boolean","description":"scala.math.PartialOrdering","location":"api/scala/math/PartialOrdering.html","searchKeys":["equiv"]},{"name":"def filterInPlace(p: A => Boolean): IndexedBuffer[A]","description":"scala.collection.mutable.IndexedBuffer","location":"api/scala/collection/mutable/IndexedBuffer.html","searchKeys":["filterInPlace"]},{"name":"def isMapLikeIsIterable[Repr](isMapLike: IsMap[Repr]): IsIterable[Repr] { type A = A; type C = C;  }","description":"scala.collection.generic.IsIterableLowPriority","location":"api/scala/collection/generic/IsIterableLowPriority.html","searchKeys":["isMapLikeIsIterable"]},{"name":"def max(x: Float, y: Float): Float","description":"scala.math","location":"api/scala/math.html","searchKeys":["max"]},{"name":"def replStringOf(arg: Any, maxElements: Int): String","description":"scala.runtime.ScalaRunTime$","location":"api/scala/runtime/ScalaRunTime$.html","searchKeys":["replStringOf"]},{"name":"val Double: DoubleManifest","description":"scala.reflect.ManifestFactory$","location":"api/scala/reflect/ManifestFactory$.html","searchKeys":["Double"]},{"name":"def fromLessThan[T](cmp: (T, T) => Boolean): Ordering[T]","description":"scala.math.Ordering$","location":"api/scala/math/Ordering$.html","searchKeys":["fromLessThan"]},{"name":"def atan(x: Double): Double","description":"scala.math","location":"api/scala/math.html","searchKeys":["atan"]},{"name":"class RichLong(val self: Long) extends AnyVal with IntegralProxy[Long]","description":"scala.runtime.RichLong","location":"api/scala/runtime/RichLong.html","searchKeys":["RichLong"]},{"name":"def iterator: Iterator[(El1, El2, El3)]","description":"scala.runtime.ZippedIterable3","location":"api/scala/runtime/ZippedIterable3.html","searchKeys":["iterator"]},{"name":"def distinctBy[B](f: Char => B): String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["distinctBy"]},{"name":"val empty: WrappedString","description":"scala.collection.immutable.WrappedString$","location":"api/scala/collection/immutable/WrappedString$.html","searchKeys":["empty"]},{"name":"type Import <: Statement","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Import"]},{"name":"class Byte extends AnyVal","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["Byte"]},{"name":"val x$18: FromExpr[T3]","description":"scala.quoted.FromExpr$$Tuple15FromExpr","location":"api/scala/quoted/FromExpr$$Tuple15FromExpr.html","searchKeys":["x$18"]},{"name":"def bound: TypeRepr","description":"scala.quoted.Quotes$reflectModule$MatchTypeMethods","location":"api/scala/quoted/Quotes$reflectModule$MatchTypeMethods.html","searchKeys":["bound"]},{"name":"given IfMethods","description":"scala.quoted.Quotes$reflectModule$IfMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["IfMethods"]},{"name":"def _18: T18","description":"scala.Product19","location":"api/scala/Product19.html","searchKeys":["_18"]},{"name":"def apply(x1: Long, x2: Long): Long","description":"scala.jdk.FunctionWrappers$$FromJavaLongBinaryOperator","location":"api/scala/jdk/FunctionWrappers$$FromJavaLongBinaryOperator.html","searchKeys":["apply"]},{"name":"def apply$mcFJ$sp(v1: Long): Float","description":"scala.runtime.java8.JFunction1$mcFJ$sp","location":"api/scala/runtime/java8/JFunction1$mcFJ$sp.html","searchKeys":["apply$mcFJ$sp"]},{"name":"def apply[A](elems: A*): CC[A]","description":"scala.collection.IterableFactory","location":"api/scala/collection/IterableFactory.html","searchKeys":["apply"]},{"name":"def lhs: Term","description":"scala.quoted.Quotes$reflectModule$AssignMethods","location":"api/scala/quoted/Quotes$reflectModule$AssignMethods.html","searchKeys":["lhs"]},{"name":"def tpt: TypeTree","description":"scala.quoted.Quotes$reflectModule$ValDefMethods","location":"api/scala/quoted/Quotes$reflectModule$ValDefMethods.html","searchKeys":["tpt"]},{"name":"def length: Int","description":"scala.Predef$$SeqCharSequence","location":"api/scala/Predef$$SeqCharSequence.html","searchKeys":["length"]},{"name":"type MatchType <: TypeRepr","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["MatchType"]},{"name":"def apply(x1: Int): Unit","description":"scala.jdk.FunctionWrappers$$FromJavaIntConsumer","location":"api/scala/jdk/FunctionWrappers$$FromJavaIntConsumer.html","searchKeys":["apply"]},{"name":"trait DoubleStepper extends Stepper[Double]","description":"scala.collection.DoubleStepper","location":"api/scala/collection/DoubleStepper.html","searchKeys":["DoubleStepper"]},{"name":"def toShort: Short","description":"scala.math.ScalaNumericAnyConversions","location":"api/scala/math/ScalaNumericAnyConversions.html","searchKeys":["toShort"]},{"name":"val x$6: Type[T6]","description":"scala.quoted.FromExpr$$Tuple20FromExpr","location":"api/scala/quoted/FromExpr$$Tuple20FromExpr.html","searchKeys":["x$6"]},{"name":"trait ExprMap","description":"scala.quoted.ExprMap","location":"api/scala/quoted/ExprMap.html","searchKeys":["ExprMap"]},{"name":"type Bind <: Tree","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Bind"]},{"name":"def equals(that: BigDecimal): Boolean","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["equals"]},{"name":"def toDouble: Double","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["toDouble"]},{"name":"def patternHole[T]: T","description":"scala.quoted.runtime.Patterns$","location":"api/scala/quoted/runtime/Patterns$.html","searchKeys":["patternHole"]},{"name":"def merge: A","description":"scala.util.Either$$MergeableEither","location":"api/scala/util/Either$$MergeableEither.html","searchKeys":["merge"]},{"name":"New Year Resolutions","description":"","location":"blog/2016/01/02/new-year-resolutions.html","searchKeys":["New Year Resolutions"]},{"name":"def >:>(that: ClassTag[]): Boolean","description":"scala.reflect.ClassManifestDeprecatedApis","location":"api/scala/reflect/ClassManifestDeprecatedApis.html","searchKeys":[">:>"]},{"name":"val MinPositiveValue: 4.9E-324","description":"scala.Double$","location":"api/scala/Double$.html","searchKeys":["MinPositiveValue"]},{"name":"def copy(start: T, end: T, step: T): NumericRange[T]","description":"scala.collection.immutable.NumericRange","location":"api/scala/collection/immutable/NumericRange.html","searchKeys":["copy"]},{"name":"type ByName <: TypeTree","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ByName"]},{"name":"trait JFunction2$mcFIJ$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcFIJ$sp","location":"api/scala/runtime/java8/JFunction2$mcFIJ$sp.html","searchKeys":["JFunction2$mcFIJ$sp"]},{"name":"def tabulate[T](n1: Int, n2: Int, n3: Int, n4: Int, n5: Int)(f: (Int, Int, Int, Int, Int) => T)(evidence$21: ClassTag[T]): Array[Array[Array[Array[Array[T]]]]]","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["tabulate"]},{"name":"def start_+(idx: Int): Int","description":"scala.collection.mutable.ArrayDequeOps","location":"api/scala/collection/mutable/ArrayDequeOps.html","searchKeys":["start_+"]},{"name":"def underlyingArgument: Term","description":"scala.quoted.Quotes$reflectModule$TermMethods","location":"api/scala/quoted/Quotes$reflectModule$TermMethods.html","searchKeys":["underlyingArgument"]},{"name":"def -(x: Char): Int","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["-"]},{"name":"Announcing Dotty 0.10.0-RC1","description":"","location":"blog/2018/10/10/10th-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.10.0-RC1"]},{"name":"given TypeDefMethods","description":"scala.quoted.Quotes$reflectModule$TypeDefMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeDefMethods"]},{"name":"object MurmurHash3 extends MurmurHash3","description":"scala.util.hashing.MurmurHash3$","location":"api/scala/util/hashing/MurmurHash3$.html","searchKeys":["MurmurHash3"]},{"name":"class implicitAmbiguous(msg: String) extends StaticAnnotation","description":"scala.annotation.implicitAmbiguous","location":"api/scala/annotation/implicitAmbiguous.html","searchKeys":["implicitAmbiguous"]},{"name":"def from[E](it: IterableOnce[E])(evidence$39: Ev[E]): CC[E]","description":"scala.collection.EvidenceIterableFactory$$Delegate","location":"api/scala/collection/EvidenceIterableFactory$$Delegate.html","searchKeys":["from"]},{"name":"def addOne(kv: (K, V)): TrieMap[K, V]","description":"scala.collection.concurrent.TrieMap","location":"api/scala/collection/concurrent/TrieMap.html","searchKeys":["addOne"]},{"name":"def empty[A]: ArrayDeque[A]","description":"scala.collection.mutable.ArrayDeque$","location":"api/scala/collection/mutable/ArrayDeque$.html","searchKeys":["empty"]},{"name":"Announcing Dotty 0.11.0-RC1","description":"","location":"blog/2018/11/30/11th-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.11.0-RC1"]},{"name":"def unapply(constant: BooleanConstant): Some[Boolean]","description":"scala.quoted.Quotes$reflectModule$BooleanConstantModule","location":"api/scala/quoted/Quotes$reflectModule$BooleanConstantModule.html","searchKeys":["unapply"]},{"name":"def requireConst(inline x: Boolean | Byte | Short | Int | Long | Float | Double | Char | String): Unit","description":"scala.compiletime","location":"api/scala/compiletime.html","searchKeys":["requireConst"]},{"name":"def minus(x: Float, y: Float): Float","description":"scala.math.Numeric$$FloatIsFractional","location":"api/scala/math/Numeric$$FloatIsFractional.html","searchKeys":["minus"]},{"name":"def foreachValue[U](f: T => U): Unit","description":"scala.collection.immutable.IntMap","location":"api/scala/collection/immutable/IntMap.html","searchKeys":["foreachValue"]},{"name":"def apply(index: Int): Double","description":"scala.collection.mutable.ArraySeq$$ofDouble","location":"api/scala/collection/mutable/ArraySeq$$ofDouble.html","searchKeys":["apply"]},{"name":"def nextUp(f: Float): Float","description":"scala.math","location":"api/scala/math.html","searchKeys":["nextUp"]},{"name":"Core Data Structures","description":"","location":"docs/internals/core-data-structures.html","searchKeys":["Core Data Structures"]},{"name":"def ScalaPackage: Symbol","description":"scala.quoted.Quotes$reflectModule$defnModule","location":"api/scala/quoted/Quotes$reflectModule$defnModule.html","searchKeys":["ScalaPackage"]},{"name":"val x$10: FromExpr[T2]","description":"scala.quoted.FromExpr$$Tuple8FromExpr","location":"api/scala/quoted/FromExpr$$Tuple8FromExpr.html","searchKeys":["x$10"]},{"name":"def >=(x: Long): Boolean","description":"scala.Int","location":"api/scala/Int.html","searchKeys":[">="]},{"name":"var hash: Int","description":"scala.collection.mutable.CollisionProofHashMap$$RBNode","location":"api/scala/collection/mutable/CollisionProofHashMap$$RBNode.html","searchKeys":["hash"]},{"name":"given ImportTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ImportTypeTest"]},{"name":"def collection AsScalaIterable[A](i: Collection[A]): Iterable[A]","description":"scala.collection.convert.ToScalaImplicits","location":"api/scala/collection/convert/ToScalaImplicits.html","searchKeys":["collection AsScalaIterable"]},{"name":"val TYPED: 138","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["TYPED"]},{"name":"def fromInputStream(is: InputStream)(codec: Codec): BufferedSource","description":"scala.io.Source$","location":"api/scala/io/Source$.html","searchKeys":["fromInputStream"]},{"name":"def TypeReprAnsiCode: Printer[TypeRepr]","description":"scala.quoted.Quotes$reflectModule$PrinterModule","location":"api/scala/quoted/Quotes$reflectModule$PrinterModule.html","searchKeys":["TypeReprAnsiCode"]},{"name":"def %(x: Long): Float","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["%"]},{"name":"def apply$mcDDJ$sp(v1: Double, v2: Long): Double","description":"scala.runtime.java8.JFunction2$mcDDJ$sp","location":"api/scala/runtime/java8/JFunction2$mcDDJ$sp.html","searchKeys":["apply$mcDDJ$sp"]},{"name":"trait TreeModule","description":"scala.quoted.Quotes$reflectModule$TreeModule","location":"api/scala/quoted/Quotes$reflectModule$TreeModule.html","searchKeys":["TreeModule"]},{"name":"def head: A","description":"scala.collection.LinearSeqOps","location":"api/scala/collection/LinearSeqOps.html","searchKeys":["head"]},{"name":"def toInt: Int","description":"scala.math.Numeric$NumericOps","location":"api/scala/math/Numeric$NumericOps.html","searchKeys":["toInt"]},{"name":"def unary_-: Int","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["unary_-"]},{"name":"def mod(that: BigInt): BigInt","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["mod"]},{"name":"val jLongStreamShape: StreamShape[Long, LongStream, LongStepper]","description":"scala.collection.convert.StreamExtensions$$StreamShape$","location":"api/scala/collection/convert/StreamExtensions$$StreamShape$.html","searchKeys":["jLongStreamShape"]},{"name":"def tabulate[T](n1: Int, n2: Int)(f: (Int, Int) => T)(evidence$18: ClassTag[T]): Array[Array[T]]","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["tabulate"]},{"name":"class AbstractFunction7[-T1, -T2, -T3, -T4, -T5, -T6, -T7, +R] extends (T1, T2, T3, T4, T5, T6, T7) => R","description":"scala.runtime.AbstractFunction7","location":"api/scala/runtime/AbstractFunction7.html","searchKeys":["AbstractFunction7"]},{"name":"given TypeParamClauseTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeParamClauseTypeTest"]},{"name":"def <(x: Double): Boolean","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["<"]},{"name":"def _6: T6","description":"scala.Product21","location":"api/scala/Product21.html","searchKeys":["_6"]},{"name":"def buildFromLongMap[V]: BuildFrom[LongMap[], (Long, V), LongMap[V]]","description":"scala.collection.immutable.LongMap$","location":"api/scala/collection/immutable/LongMap$.html","searchKeys":["buildFromLongMap"]},{"name":"trait JFunction2$mcIDI$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcIDI$sp","location":"api/scala/runtime/java8/JFunction2$mcIDI$sp.html","searchKeys":["JFunction2$mcIDI$sp"]},{"name":"def apply(i: Int): T","description":"scala.Array","location":"api/scala/Array.html","searchKeys":["apply"]},{"name":"def &(x: Char): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["&"]},{"name":"def from[K, V](it: IterableOnce[(K, V)]): WeakHashMap[K, V]","description":"scala.collection.mutable.WeakHashMap$","location":"api/scala/collection/mutable/WeakHashMap$.html","searchKeys":["from"]},{"name":"given SignatureMethods","description":"scala.quoted.Quotes$reflectModule$SignatureMethods","location":"api/scala/quoted/Quotes$reflectModule$SignatureMethods.html","searchKeys":["SignatureMethods"]},{"name":"def lengthCompare(len: Int): Int","description":"scala.collection.SeqFactory$$UnapplySeqWrapper","location":"api/scala/collection/SeqFactory$$UnapplySeqWrapper.html","searchKeys":["lengthCompare"]},{"name":"def -(other: FiniteDuration): FiniteDuration","description":"scala.concurrent.duration.FiniteDuration","location":"api/scala/concurrent/duration/FiniteDuration.html","searchKeys":["-"]},{"name":"def enrichAsScalaFromToDoubleBiFunction[T, U](jf: ToDoubleBiFunction[T, U]): RichToDoubleBiFunctionAsFunction2[T, U]","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsScalaFromToDoubleBiFunction"]},{"name":"class FromJavaLongUnaryOperator(jf: LongUnaryOperator) extends Long => Long","description":"scala.jdk.FunctionWrappers$$FromJavaLongUnaryOperator","location":"api/scala/jdk/FunctionWrappers$$FromJavaLongUnaryOperator.html","searchKeys":["FromJavaLongUnaryOperator"]},{"name":"def newBuilder[A]: ReusableBuilder[A, Vector[A]]","description":"scala.collection.immutable.Vector$","location":"api/scala/collection/immutable/Vector$.html","searchKeys":["newBuilder"]},{"name":"trait Manifest[T] extends ClassTag[T] with Equals","description":"scala.reflect.Manifest","location":"api/scala/reflect/Manifest.html","searchKeys":["Manifest"]},{"name":"object DoubleAccumulator extends SpecificIterableFactory[Double, DoubleAccumulator]","description":"scala.jdk.DoubleAccumulator$","location":"api/scala/jdk/DoubleAccumulator$.html","searchKeys":["DoubleAccumulator"]},{"name":"def apply(tpe: TypeRepr): WildcardTypeTree","description":"scala.quoted.Quotes$reflectModule$WildcardTypeTreeModule","location":"api/scala/quoted/Quotes$reflectModule$WildcardTypeTreeModule.html","searchKeys":["apply"]},{"name":"def apply(x: Double): DoubleConstant","description":"scala.quoted.Quotes$reflectModule$DoubleConstantModule","location":"api/scala/quoted/Quotes$reflectModule$DoubleConstantModule.html","searchKeys":["apply"]},{"name":"def writeUncompressedLong(x: Long): Unit","description":"dotty.tools.tasty.TastyBuffer","location":"api/dotty/tools/tasty/TastyBuffer.html","searchKeys":["writeUncompressedLong"]},{"name":"def tail: String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["tail"]},{"name":"def charAt(index: Int): Char","description":"scala.Predef$$SeqCharSequence","location":"api/scala/Predef$$SeqCharSequence.html","searchKeys":["charAt"]},{"name":"def hasAnnotation(annotSym: Symbol): Boolean","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["hasAnnotation"]},{"name":"def ==(x: Double): Boolean","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["=="]},{"name":"def nanosecond[C](c: C)(ev: Classifier[C]): R","description":"scala.concurrent.duration.DurationConversions","location":"api/scala/concurrent/duration/DurationConversions.html","searchKeys":["nanosecond"]},{"name":"def putIfAbsent(k: K, v: V): Option[V]","description":"scala.collection.concurrent.Map","location":"api/scala/collection/concurrent/Map.html","searchKeys":["putIfAbsent"]},{"name":"def copy(original: Tree)(cases: List[CaseDef]): SummonFrom","description":"scala.quoted.Quotes$reflectModule$SummonFromModule","location":"api/scala/quoted/Quotes$reflectModule$SummonFromModule.html","searchKeys":["copy"]},{"name":"def lineStream(capacity: Integer): Stream[String]","description":"scala.sys.process.ProcessBuilder","location":"api/scala/sys/process/ProcessBuilder.html","searchKeys":["lineStream"]},{"name":"def Tuple2[T1, T2](ord1: Ordering[T1], ord2: Ordering[T2]): Ordering[(T1, T2)]","description":"scala.math.Ordering$","location":"api/scala/math/Ordering$.html","searchKeys":["Tuple2"]},{"name":"given LambdaTypeTreeMethods","description":"scala.quoted.Quotes$reflectModule$LambdaTypeTreeMethods","location":"api/scala/quoted/Quotes$reflectModule$LambdaTypeTreeMethods.html","searchKeys":["LambdaTypeTreeMethods"]},{"name":"def changeOwner[ThisTree <: Tree](newOwner: Symbol): ThisTree","description":"scala.quoted.Quotes$reflectModule$TreeMethods","location":"api/scala/quoted/Quotes$reflectModule$TreeMethods.html","searchKeys":["changeOwner"]},{"name":"val x$2: Type[T2]","description":"scala.quoted.FromExpr$$Tuple20FromExpr","location":"api/scala/quoted/FromExpr$$Tuple20FromExpr.html","searchKeys":["x$2"]},{"name":"def >=(x: Char): Boolean","description":"scala.Double","location":"api/scala/Double.html","searchKeys":[">="]},{"name":"def _7: T7","description":"scala.Product9","location":"api/scala/Product9.html","searchKeys":["_7"]},{"name":"def unanchored: UnanchoredRegex","description":"scala.util.matching.Regex","location":"api/scala/util/matching/Regex.html","searchKeys":["unanchored"]},{"name":"trait UnitOrdering extends Ordering[Unit]","description":"scala.math.Ordering$$UnitOrdering","location":"api/scala/math/Ordering$$UnitOrdering.html","searchKeys":["UnitOrdering"]},{"name":"object Char extends Equiv[Char]","description":"scala.math.Equiv$$Char$","location":"api/scala/math/Equiv$$Char$.html","searchKeys":["Char"]},{"name":"class HashMap[K, V](initialCapacity: Int, loadFactor: Double) extends AbstractMap[K, V] with MapOps[K, V, [K, V] =>> HashMap[K, V], HashMap[K, V]] with StrictOptimizedIterableOps[(K, V), [A] =>> Iterable[A], HashMap[K, V]] with StrictOptimizedMapOps[K, V, [K, V] =>> HashMap[K, V], HashMap[K, V]] with MapFactoryDefaults[K, V, [K, V] =>> HashMap[K, V], [A] =>> Iterable[A]] with Serializable","description":"scala.collection.mutable.HashMap","location":"api/scala/collection/mutable/HashMap.html","searchKeys":["HashMap"]},{"name":"def getNode(k: K, h: Int)(ord: Ordering[K]): RBNode[K, V]","description":"scala.collection.mutable.CollisionProofHashMap$$RBNode","location":"api/scala/collection/mutable/CollisionProofHashMap$$RBNode.html","searchKeys":["getNode"]},{"name":"def unapply[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20](x: Product20[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20]): Option[Product20[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20]]","description":"scala.Product20$","location":"api/scala/Product20$.html","searchKeys":["unapply"]},{"name":"def sizeHintBounded(size: Int, boundingColl: Iterable[]): Unit","description":"scala.collection.mutable.Builder","location":"api/scala/collection/mutable/Builder.html","searchKeys":["sizeHintBounded"]},{"name":"def get(key: K): Option[V]","description":"scala.collection.MapOps","location":"api/scala/collection/MapOps.html","searchKeys":["get"]},{"name":"object Symbol extends SymbolOrdering","description":"scala.math.Ordering$$Symbol$","location":"api/scala/math/Ordering$$Symbol$.html","searchKeys":["Symbol"]},{"name":"trait Function6[-T1, -T2, -T3, -T4, -T5, -T6, +R] extends AnyRef","description":"scala.Function6","location":"api/scala/Function6.html","searchKeys":["Function6"]},{"name":"given PackageClauseTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["PackageClauseTypeTest"]},{"name":"def insertAll(idx: Int, elems: IterableOnce[A]): Unit","description":"scala.collection.mutable.Buffer","location":"api/scala/collection/mutable/Buffer.html","searchKeys":["insertAll"]},{"name":"def between(minInclusive: Double, maxExclusive: Double): Double","description":"scala.util.Random","location":"api/scala/util/Random.html","searchKeys":["between"]},{"name":"def map(f: Long => Long): LongAccumulator","description":"scala.jdk.LongAccumulator","location":"api/scala/jdk/LongAccumulator.html","searchKeys":["map"]},{"name":"def fill[A](n1: Int, n2: Int, n3: Int)(elem: => A)(evidence$8: ClassTag[A]): CC[CC[CC[A]]]","description":"scala.collection.ClassTagIterableFactory","location":"api/scala/collection/ClassTagIterableFactory.html","searchKeys":["fill"]},{"name":"object TastyHash","description":"dotty.tools.tasty.TastyHash$","location":"api/dotty/tools/tasty/TastyHash$.html","searchKeys":["TastyHash"]},{"name":"val array: Array[Short]","description":"scala.collection.mutable.ArraySeq$$ofShort","location":"api/scala/collection/mutable/ArraySeq$$ofShort.html","searchKeys":["array"]},{"name":"def isUnicodeIdentifierPart: Boolean","description":"scala.runtime.RichChar","location":"api/scala/runtime/RichChar.html","searchKeys":["isUnicodeIdentifierPart"]},{"name":"def _13: T13","description":"scala.Product21","location":"api/scala/Product21.html","searchKeys":["_13"]},{"name":"def value: NotGiven[Nothing]","description":"scala.util.NotGiven$","location":"api/scala/util/NotGiven$.html","searchKeys":["value"]},{"name":"def %(x: Float): Float","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["%"]},{"name":"def combinations(n: Int): Iterator[Array[A]]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["combinations"]},{"name":"def copySign(magnitude: Double, sign: Double): Double","description":"scala.math","location":"api/scala/math.html","searchKeys":["copySign"]},{"name":"object DeadlineIsOrdered extends Ordering[Deadline]","description":"scala.concurrent.duration.Deadline$$DeadlineIsOrdered$","location":"api/scala/concurrent/duration/Deadline$$DeadlineIsOrdered$.html","searchKeys":["DeadlineIsOrdered"]},{"name":"def _3: T3","description":"scala.Product9","location":"api/scala/Product9.html","searchKeys":["_3"]},{"name":"def indexWhere(p: A => Boolean, from: Int): Int","description":"scala.collection.Iterator","location":"api/scala/collection/Iterator.html","searchKeys":["indexWhere"]},{"name":"val canEqualString: CanEqual[String, String]","description":"scala.CanEqual$","location":"api/scala/CanEqual$.html","searchKeys":["canEqualString"]},{"name":"def scala$collection$BitSetOps$$super$concat(that: IterableOnce[Int]): C","description":"scala.collection.BitSetOps","location":"api/scala/collection/BitSetOps.html","searchKeys":["scala$collection$BitSetOps$$super$concat"]},{"name":"def /(x: Char): Double","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["/"]},{"name":"val x$19: Type[T19]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["x$19"]},{"name":"def by[T, S](f: T => S)(evidence$1: Equiv[S]): Equiv[T]","description":"scala.math.Equiv$","location":"api/scala/math/Equiv$.html","searchKeys":["by"]},{"name":"def this(bytes: Array[Byte])","description":"dotty.tools.tasty.TastyReader","location":"api/dotty/tools/tasty/TastyReader.html","searchKeys":["this"]},{"name":"def length: Int","description":"scala.Array","location":"api/scala/Array.html","searchKeys":["length"]},{"name":"val Equiv: Equiv","description":"scala","location":"api/scala.html","searchKeys":["Equiv"]},{"name":"def >=(x: Byte): Boolean","description":"scala.Double","location":"api/scala/Double.html","searchKeys":[">="]},{"name":"class LazyFloat extends Serializable","description":"scala.runtime.LazyFloat","location":"api/scala/runtime/LazyFloat.html","searchKeys":["LazyFloat"]},{"name":"def initialized: Boolean","description":"scala.runtime.LazyUnit","location":"api/scala/runtime/LazyUnit.html","searchKeys":["initialized"]},{"name":"def mapViewIsMap[CC0 <: ([X, Y] =>> MapView[X, Y]), K0, V0]: IsMap[CC0[K0, V0]] { type K = K0; type V = V0; type C = View[(K0, V0)];  }","description":"scala.collection.generic.IsMap$","location":"api/scala/collection/generic/IsMap$.html","searchKeys":["mapViewIsMap"]},{"name":"def <=(x: Double): Boolean","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["<="]},{"name":"def fromProduct(p: Product): MirroredMonoType","description":"scala.deriving.Mirror$$Singleton","location":"api/scala/deriving/Mirror$$Singleton.html","searchKeys":["fromProduct"]},{"name":"def %(x: Int): Int","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["%"]},{"name":"def -(other: Deadline): FiniteDuration","description":"scala.concurrent.duration.Deadline","location":"api/scala/concurrent/duration/Deadline.html","searchKeys":["-"]},{"name":"trait SeqMap[K, +V] extends Map[K, V] with MapOps[K, V, [K, V] =>> SeqMap[K, V], SeqMap[K, V]] with MapFactoryDefaults[K, V, [K, V] =>> SeqMap[K, V], [A] =>> Iterable[A]]","description":"scala.collection.SeqMap","location":"api/scala/collection/SeqMap.html","searchKeys":["SeqMap"]},{"name":"def +=(key: K, value: V): AnyRefMap[K, V]","description":"scala.collection.mutable.AnyRefMap","location":"api/scala/collection/mutable/AnyRefMap.html","searchKeys":["+="]},{"name":"def /(divisor: Double): Duration","description":"scala.concurrent.duration.Duration","location":"api/scala/concurrent/duration/Duration.html","searchKeys":["/"]},{"name":"def apply(n: Int): Double","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["apply"]},{"name":"def asJavaObjIntConsumer: ObjIntConsumer[T]","description":"scala.jdk.FunctionWrappers$$RichFunction2AsObjIntConsumer","location":"api/scala/jdk/FunctionWrappers$$RichFunction2AsObjIntConsumer.html","searchKeys":["asJavaObjIntConsumer"]},{"name":"def distinctBy[B](f: A => B): C","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["distinctBy"]},{"name":"val x$6: Type[T6]","description":"scala.quoted.FromExpr$$Tuple7FromExpr","location":"api/scala/quoted/FromExpr$$Tuple7FromExpr.html","searchKeys":["x$6"]},{"name":"def foreachValue[A](f: V => A): Unit","description":"scala.collection.mutable.LongMap","location":"api/scala/collection/mutable/LongMap.html","searchKeys":["foreachValue"]},{"name":"def :++[B >: Char](suffix: IterableOnce[B]): IndexedSeq[B]","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":[":++"]},{"name":"type NamedType <: TypeRepr","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["NamedType"]},{"name":"def scale: Int","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["scale"]},{"name":"def !=(x: Float): Boolean","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["!="]},{"name":"def isTerm: Boolean","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["isTerm"]},{"name":"val source: CharSequence","description":"scala.util.matching.Regex$$MatchIterator","location":"api/scala/util/matching/Regex$$MatchIterator.html","searchKeys":["source"]},{"name":"given TypeApplyMethods","description":"scala.quoted.Quotes$reflectModule$TypeApplyMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeApplyMethods"]},{"name":"trait ExtraImplicits","description":"scala.math.Fractional$$ExtraImplicits","location":"api/scala/math/Fractional$$ExtraImplicits.html","searchKeys":["ExtraImplicits"]},{"name":"def unapply(x: ByName): Some[TypeTree]","description":"scala.quoted.Quotes$reflectModule$ByNameModule","location":"api/scala/quoted/Quotes$reflectModule$ByNameModule.html","searchKeys":["unapply"]},{"name":"object Stack extends StrictOptimizedSeqFactory[[A] =>> Stack[A]]","description":"scala.collection.mutable.Stack$","location":"api/scala/collection/mutable/Stack$.html","searchKeys":["Stack"]},{"name":"def map[B](f: A => B)(ct: ClassTag[B]): Array[B]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["map"]},{"name":"type Min[X <: Int, Y <: Int] <: Int","description":"scala.compiletime.ops.int$","location":"api/scala/compiletime/ops/int$.html","searchKeys":["Min"]},{"name":"def empty[A]: Stream[A]","description":"scala.collection.immutable.Stream$","location":"api/scala/collection/immutable/Stream$.html","searchKeys":["empty"]},{"name":"trait TypeLambdaModule","description":"scala.quoted.Quotes$reflectModule$TypeLambdaModule","location":"api/scala/quoted/Quotes$reflectModule$TypeLambdaModule.html","searchKeys":["TypeLambdaModule"]},{"name":"def toShort: Short","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["toShort"]},{"name":"package scala.quoted","description":"scala.quoted","location":"api/scala/quoted.html","searchKeys":["scala.quoted"]},{"name":"val TypeApply: TypeApplyModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeApply"]},{"name":"def valueOf[T](vt: ValueOf[T]): T","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["valueOf"]},{"name":"def collect[B](pf: PartialFunction[A, B]): CC[B]","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["collect"]},{"name":"def iterableFactory[V]: Factory[(Int, V), IntMap[V]]","description":"scala.collection.immutable.IntMap$","location":"api/scala/collection/immutable/IntMap$.html","searchKeys":["iterableFactory"]},{"name":"def put(key: K, value: V): Option[V]","description":"scala.collection.mutable.MapOps","location":"api/scala/collection/mutable/MapOps.html","searchKeys":["put"]},{"name":"def collectGarbage(): Unit","description":"scala.compat.Platform$","location":"api/scala/compat/Platform$.html","searchKeys":["collectGarbage"]},{"name":"def toMap[K, V](ev: A <:< (K, V)): Map[K, V]","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["toMap"]},{"name":"object Long extends LongOrdering","description":"scala.math.Ordering$$Long$","location":"api/scala/math/Ordering$$Long$.html","searchKeys":["Long"]},{"name":"val stringSeed: -137723950","description":"scala.util.hashing.MurmurHash3$","location":"api/scala/util/hashing/MurmurHash3$.html","searchKeys":["stringSeed"]},{"name":"def trimToSize(): Unit","description":"scala.collection.mutable.ArrayBuffer","location":"api/scala/collection/mutable/ArrayBuffer.html","searchKeys":["trimToSize"]},{"name":"def foldRight[B](z: B)(op: (Char, B) => B): B","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["foldRight"]},{"name":"class ByteswapHashing[T] extends Hashing[T]","description":"scala.util.hashing.ByteswapHashing","location":"api/scala/util/hashing/ByteswapHashing.html","searchKeys":["ByteswapHashing"]},{"name":"def apply(fun: Term, args: List[TypeTree]): TypeApply","description":"scala.quoted.Quotes$reflectModule$TypeApplyModule","location":"api/scala/quoted/Quotes$reflectModule$TypeApplyModule.html","searchKeys":["apply"]},{"name":"trait PartiallyOrdered[+A]","description":"scala.math.PartiallyOrdered","location":"api/scala/math/PartiallyOrdered.html","searchKeys":["PartiallyOrdered"]},{"name":"trait JFunction2$mcIIJ$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcIIJ$sp","location":"api/scala/runtime/java8/JFunction2$mcIIJ$sp.html","searchKeys":["JFunction2$mcIIJ$sp"]},{"name":"def unapply(x: Try): (Term, List[CaseDef], Option[Term])","description":"scala.quoted.Quotes$reflectModule$TryModule","location":"api/scala/quoted/Quotes$reflectModule$TryModule.html","searchKeys":["unapply"]},{"name":"Dropped: Class Shadowing","description":"","location":"docs/reference/dropped-features/class-shadowing.html","searchKeys":["Dropped: Class Shadowing"]},{"name":"def toJavaPrimitive[O](shape: OptionShape[A, O]): O","description":"scala.jdk.OptionConverters$$RichOptional","location":"api/scala/jdk/OptionConverters$$RichOptional.html","searchKeys":["toJavaPrimitive"]},{"name":"val AddrWidth: 4","description":"dotty.tools.tasty.TastyBuffer$","location":"api/dotty/tools/tasty/TastyBuffer$.html","searchKeys":["AddrWidth"]},{"name":"def head: A","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["head"]},{"name":"def decimal(f: Float, mc: MathContext): BigDecimal","description":"scala.math.BigDecimal$","location":"api/scala/math/BigDecimal$.html","searchKeys":["decimal"]},{"name":"def arrayClass[A](tp: Class[]): Class[Array[A]]","description":"scala.reflect.ClassManifestDeprecatedApis","location":"api/scala/reflect/ClassManifestDeprecatedApis.html","searchKeys":["arrayClass"]},{"name":"def enrichAsScalaFromBinaryOperator[T](jf: BinaryOperator[T]): RichBinaryOperatorAsFunction2[T]","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsScalaFromBinaryOperator"]},{"name":"def tupled: (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) => R","description":"scala.Function12","location":"api/scala/Function12.html","searchKeys":["tupled"]},{"name":"class RightPartitionMapped[A, A1, A2](underlying: SomeIterableOps[A], f: A => Either[A1, A2]) extends AbstractView[A2]","description":"scala.collection.View$$RightPartitionMapped","location":"api/scala/collection/View$$RightPartitionMapped.html","searchKeys":["RightPartitionMapped"]},{"name":"type Left[+A, +B] = Left[A, B]","description":"scala","location":"api/scala.html","searchKeys":["Left"]},{"name":"given TypeLambdaMethods","description":"scala.quoted.Quotes$reflectModule$TypeLambdaMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeLambdaMethods"]},{"name":"val MinValue: -32768","description":"scala.Short$","location":"api/scala/Short$.html","searchKeys":["MinValue"]},{"name":"def <(x: Int): Boolean","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["<"]},{"name":"def NoInits: Flags","description":"scala.quoted.Quotes$reflectModule$FlagsModule","location":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html","searchKeys":["NoInits"]},{"name":"def TreeShortCode: Printer[Tree]","description":"scala.quoted.Quotes$reflectModule$PrinterModule","location":"api/scala/quoted/Quotes$reflectModule$PrinterModule.html","searchKeys":["TreeShortCode"]},{"name":"def foreach[U](f: T => U): Unit","description":"scala.util.Try$WithFilter","location":"api/scala/util/Try$WithFilter.html","searchKeys":["foreach"]},{"name":"object FiniteDurationIsOrdered extends Ordering[FiniteDuration]","description":"scala.concurrent.duration.FiniteDuration$$FiniteDurationIsOrdered$","location":"api/scala/concurrent/duration/FiniteDuration$$FiniteDurationIsOrdered$.html","searchKeys":["FiniteDurationIsOrdered"]},{"name":"def iterator: Iterator[A]","description":"scala.collection.IterableOnce","location":"api/scala/collection/IterableOnce.html","searchKeys":["iterator"]},{"name":"def endAddr: Addr","description":"dotty.tools.tasty.TastyReader","location":"api/dotty/tools/tasty/TastyReader.html","searchKeys":["endAddr"]},{"name":"class main extends Annotation","description":"scala.main","location":"api/scala/main.html","searchKeys":["main"]},{"name":"def get(key: K): Option[V]","description":"scala.collection.MapView$$Filter","location":"api/scala/collection/MapView$$Filter.html","searchKeys":["get"]},{"name":"Announcing Dotty 0.1.2-RC1, a major step towards Scala 3","description":"","location":"blog/2017/05/31/first-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.1.2-RC1, a major step towards Scala 3"]},{"name":"def foreach[U](f: Char => U): Unit","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["foreach"]},{"name":"object TrieMap extends MapFactory[[K, V] =>> TrieMap[K, V]]","description":"scala.collection.concurrent.TrieMap$","location":"api/scala/collection/concurrent/TrieMap$.html","searchKeys":["TrieMap"]},{"name":"def -(x: Int): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["-"]},{"name":"class GroupedIterator[B >: A](self: Iterator[B], size: Int, step: Int) extends AbstractIterator[Seq[B]]","description":"scala.collection.Iterator$GroupedIterator","location":"api/scala/collection/Iterator$GroupedIterator.html","searchKeys":["GroupedIterator"]},{"name":"def iterator: Iterator[A]","description":"scala.collection.View$$Updated","location":"api/scala/collection/View$$Updated.html","searchKeys":["iterator"]},{"name":"def apply(tup: (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19))(using Quotes): Expr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19)]","description":"scala.quoted.ToExpr$$Tuple19ToExpr","location":"api/scala/quoted/ToExpr$$Tuple19ToExpr.html","searchKeys":["apply"]},{"name":"class FromJavaDoubleToIntFunction(jf: DoubleToIntFunction) extends Double => Int","description":"scala.jdk.FunctionWrappers$$FromJavaDoubleToIntFunction","location":"api/scala/jdk/FunctionWrappers$$FromJavaDoubleToIntFunction.html","searchKeys":["FromJavaDoubleToIntFunction"]},{"name":"def trailingParamss: List[ParamClause]","description":"scala.quoted.Quotes$reflectModule$DefDefMethods","location":"api/scala/quoted/Quotes$reflectModule$DefDefMethods.html","searchKeys":["trailingParamss"]},{"name":"class AsJavaIntBinaryOperator(sf: (Int, Int) => Int) extends IntBinaryOperator","description":"scala.jdk.FunctionWrappers$$AsJavaIntBinaryOperator","location":"api/scala/jdk/FunctionWrappers$$AsJavaIntBinaryOperator.html","searchKeys":["AsJavaIntBinaryOperator"]},{"name":"def iterableFactory[A]: Factory[A, CC[A]]","description":"scala.collection.IterableFactory","location":"api/scala/collection/IterableFactory.html","searchKeys":["iterableFactory"]},{"name":"package scala.util.hashing","description":"scala.util.hashing","location":"api/scala/util/hashing.html","searchKeys":["scala.util.hashing"]},{"name":"val x$9: Type[T9]","description":"scala.quoted.FromExpr$$Tuple14FromExpr","location":"api/scala/quoted/FromExpr$$Tuple14FromExpr.html","searchKeys":["x$9"]},{"name":"Erased Terms Spec","description":"","location":"docs/reference/metaprogramming/erased-terms-spec.html","searchKeys":["Erased Terms Spec"]},{"name":"def bind(thathead: Unrolled[T]): Boolean","description":"scala.collection.mutable.UnrolledBuffer$$Unrolled","location":"api/scala/collection/mutable/UnrolledBuffer$$Unrolled.html","searchKeys":["bind"]},{"name":"def asJavaToLongFunction: ToLongFunction[T]","description":"scala.jdk.FunctionWrappers$$RichFunction1AsToLongFunction","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsToLongFunction.html","searchKeys":["asJavaToLongFunction"]},{"name":"val GREEN: \"\\033[32m\"","description":"scala.io.AnsiColor","location":"api/scala/io/AnsiColor.html","searchKeys":["GREEN"]},{"name":"def fromFunction[T](f: T => Int): Hashing[T]","description":"scala.util.hashing.Hashing$","location":"api/scala/util/hashing/Hashing$.html","searchKeys":["fromFunction"]},{"name":"def body: Term","description":"scala.quoted.Quotes$reflectModule$InlinedMethods","location":"api/scala/quoted/Quotes$reflectModule$InlinedMethods.html","searchKeys":["body"]},{"name":"def -(x: Int): Int","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["-"]},{"name":"val x$23: FromExpr[T6]","description":"scala.quoted.FromExpr$$Tuple17FromExpr","location":"api/scala/quoted/FromExpr$$Tuple17FromExpr.html","searchKeys":["x$23"]},{"name":"Deprecated: Nonlocal Returns","description":"","location":"docs/reference/dropped-features/nonlocal-returns.html","searchKeys":["Deprecated: Nonlocal Returns"]},{"name":"val NaN: NaN","description":"scala.Double$","location":"api/scala/Double$.html","searchKeys":["NaN"]},{"name":"def enrichAsScalaFromLongFunction[R](jf: LongFunction[R]): RichLongFunctionAsFunction1[R]","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsScalaFromLongFunction"]},{"name":"def neg(): Duration","description":"scala.concurrent.duration.Duration","location":"api/scala/concurrent/duration/Duration.html","searchKeys":["neg"]},{"name":"def unsorted: Map[K, V]","description":"scala.collection.SortedMap","location":"api/scala/collection/SortedMap.html","searchKeys":["unsorted"]},{"name":"class Some[+A](value: A) extends Option[A]","description":"scala.Some","location":"api/scala/Some.html","searchKeys":["Some"]},{"name":"def pairIntToDuration(p: (Int, TimeUnit)): Duration","description":"scala.concurrent.duration","location":"api/scala/concurrent/duration.html","searchKeys":["pairIntToDuration"]},{"name":"def splitAt(n: Int): (Ordering[T], Ordering[T])","description":"scala.collection.immutable.TreeSeqMap$$Ordering","location":"api/scala/collection/immutable/TreeSeqMap$$Ordering.html","searchKeys":["splitAt"]},{"name":"def >(x: Long): Boolean","description":"scala.Short","location":"api/scala/Short.html","searchKeys":[">"]},{"name":"def curried: T1 => T2 => T3 => R","description":"scala.Function3","location":"api/scala/Function3.html","searchKeys":["curried"]},{"name":"def negate(x: Int): Int","description":"scala.math.Numeric$$IntIsIntegral","location":"api/scala/math/Numeric$$IntIsIntegral.html","searchKeys":["negate"]},{"name":"def fill[A, C](n1: Int, n2: Int, n3: Int, n4: Int, n5: Int)(elem: => A)(canAccumulate: AccumulatorFactoryShape[A, C]): AnyAccumulator[AnyAccumulator[AnyAccumulator[AnyAccumulator[C]]]]","description":"scala.jdk.Accumulator$","location":"api/scala/jdk/Accumulator$.html","searchKeys":["fill"]},{"name":"def unapply(x: Apply): (Term, List[Term])","description":"scala.quoted.Quotes$reflectModule$ApplyModule","location":"api/scala/quoted/Quotes$reflectModule$ApplyModule.html","searchKeys":["unapply"]},{"name":"type <[X <: Int, Y <: Int] <: Boolean","description":"scala.compiletime.ops.int$","location":"api/scala/compiletime/ops/int$.html","searchKeys":["<"]},{"name":"def :++[B >: A](suffix: Array[ <: B])(evidence$19: ClassTag[B]): Array[B]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":[":++"]},{"name":"def negate(x: Double): Double","description":"scala.math.Numeric$$DoubleIsFractional","location":"api/scala/math/Numeric$$DoubleIsFractional.html","searchKeys":["negate"]},{"name":"def toLong: Long","description":"scala.math.ScalaNumericAnyConversions","location":"api/scala/math/ScalaNumericAnyConversions.html","searchKeys":["toLong"]},{"name":"trait Typed[T] extends Proxy","description":"scala.Proxy$$Typed","location":"api/scala/Proxy$$Typed.html","searchKeys":["Typed"]},{"name":"def flatMap[B, C](f: (El1, El2, El3) => Iterable[B])(bf: BuildFrom[C1, B, C]): C","description":"scala.collection.LazyZip3","location":"api/scala/collection/LazyZip3.html","searchKeys":["flatMap"]},{"name":"val x$5: Type[T5]","description":"scala.quoted.FromExpr$$Tuple14FromExpr","location":"api/scala/quoted/FromExpr$$Tuple14FromExpr.html","searchKeys":["x$5"]},{"name":"def symbol: Symbol","description":"scala.quoted.Quotes$reflectModule$TreeMethods","location":"api/scala/quoted/Quotes$reflectModule$TreeMethods.html","searchKeys":["symbol"]},{"name":"def apply(i: Int): T","description":"scala.collection.immutable.ArraySeq$$ofRef","location":"api/scala/collection/immutable/ArraySeq$$ofRef.html","searchKeys":["apply"]},{"name":"def applySeq[T](builders: Seq[T])(convert: T => Source): Seq[Source]","description":"scala.sys.process.ProcessCreation","location":"api/scala/sys/process/ProcessCreation.html","searchKeys":["applySeq"]},{"name":"def isDefinedInCurrentRun: Boolean","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["isDefinedInCurrentRun"]},{"name":"val x$27: FromExpr[T8]","description":"scala.quoted.FromExpr$$Tuple19FromExpr","location":"api/scala/quoted/FromExpr$$Tuple19FromExpr.html","searchKeys":["x$27"]},{"name":"Announcing Dotty 0.23.0-RC1 - safe initialization checks, type-level bitwise operations and more","description":"","location":"blog/2020/03/18/23rd-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.23.0-RC1 - safe initialization checks, type-level bitwise operations and more"]},{"name":"given AnnotatedMethods","description":"scala.quoted.Quotes$reflectModule$AnnotatedMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["AnnotatedMethods"]},{"name":"def name: String","description":"scala.quoted.Quotes$reflectModule$TypeSelectMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeSelectMethods.html","searchKeys":["name"]},{"name":"object Source","description":"scala.io.Source$","location":"api/scala/io/Source$.html","searchKeys":["Source"]},{"name":"object ImplicitConversionsToScala extends ToScalaImplicits","description":"scala.collection.convert.ImplicitConversionsToScala$","location":"api/scala/collection/convert/ImplicitConversionsToScala$.html","searchKeys":["ImplicitConversionsToScala"]},{"name":"def >=(x: Byte): Boolean","description":"scala.Long","location":"api/scala/Long.html","searchKeys":[">="]},{"name":"trait JFunction0$mcD$sp extends () => Any with Serializable","description":"scala.runtime.java8.JFunction0$mcD$sp","location":"api/scala/runtime/java8/JFunction0$mcD$sp.html","searchKeys":["JFunction0$mcD$sp"]},{"name":"val x$14: Type[T14]","description":"scala.quoted.FromExpr$$Tuple15FromExpr","location":"api/scala/quoted/FromExpr$$Tuple15FromExpr.html","searchKeys":["x$14"]},{"name":"def newBuilder[K, V]: ReusableBuilder[(K, V), HashMap[K, V]]","description":"scala.collection.immutable.HashMap$","location":"api/scala/collection/immutable/HashMap$.html","searchKeys":["newBuilder"]},{"name":"def get: UnapplySeqWrapper[T]","description":"scala.Array$$UnapplySeqWrapper","location":"api/scala/Array$$UnapplySeqWrapper.html","searchKeys":["get"]},{"name":"def toDouble(x: Long): Double","description":"scala.math.Numeric$$LongIsIntegral","location":"api/scala/math/Numeric$$LongIsIntegral.html","searchKeys":["toDouble"]},{"name":"def asJavaBiConsumer: BiConsumer[T, U]","description":"scala.jdk.FunctionWrappers$$RichFunction2AsBiConsumer","location":"api/scala/jdk/FunctionWrappers$$RichFunction2AsBiConsumer.html","searchKeys":["asJavaBiConsumer"]},{"name":"val x$2: Type[T2]","description":"scala.quoted.FromExpr$$Tuple3FromExpr","location":"api/scala/quoted/FromExpr$$Tuple3FromExpr.html","searchKeys":["x$2"]},{"name":"def start: Int","description":"scala.util.matching.Regex$$MatchData","location":"api/scala/util/matching/Regex$$MatchData.html","searchKeys":["start"]},{"name":"def apply(xs: List[T])(using Quotes): Expr[List[T]]","description":"scala.quoted.ToExpr$$ListToExpr","location":"api/scala/quoted/ToExpr$$ListToExpr.html","searchKeys":["apply"]},{"name":"def remove(idx: Int, count: Int): Unit","description":"scala.collection.mutable.ArrayDeque","location":"api/scala/collection/mutable/ArrayDeque.html","searchKeys":["remove"]},{"name":"Static documentation","description":"","location":"docs/usage/scala3doc/staticSite.html","searchKeys":["Static documentation"]},{"name":"val array: Array[Unit]","description":"scala.collection.mutable.ArraySeq$$ofUnit","location":"api/scala/collection/mutable/ArraySeq$$ofUnit.html","searchKeys":["array"]},{"name":"def ++[B >: Char](suffix: Iterable[B]): IndexedSeq[B]","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["++"]},{"name":"def applyAsInt(x1: Double): Int","description":"scala.jdk.FunctionWrappers$$AsJavaDoubleToIntFunction","location":"api/scala/jdk/FunctionWrappers$$AsJavaDoubleToIntFunction.html","searchKeys":["applyAsInt"]},{"name":"def from[A](it: IterableOnce[A])(tag: ClassTag[A]): ArraySeq[A]","description":"scala.collection.immutable.ArraySeq$","location":"api/scala/collection/immutable/ArraySeq$.html","searchKeys":["from"]},{"name":"class LazyUnit extends Serializable","description":"scala.runtime.LazyUnit","location":"api/scala/runtime/LazyUnit.html","searchKeys":["LazyUnit"]},{"name":"We got liftoff!","description":"","location":"blog/2015/10/23/dotty-compiler-bootstraps.html","searchKeys":["We got liftoff!"]},{"name":"def compare(a: Deadline, b: Deadline): Int","description":"scala.concurrent.duration.Deadline$$DeadlineIsOrdered$","location":"api/scala/concurrent/duration/Deadline$$DeadlineIsOrdered$.html","searchKeys":["compare"]},{"name":"def collect[V2](pf: PartialFunction[(Long, V), (Long, V2)]): LongMap[V2]","description":"scala.collection.mutable.LongMap","location":"api/scala/collection/mutable/LongMap.html","searchKeys":["collect"]},{"name":"def emptyByteIArray: IArray[Byte]","description":"scala.IArray$package$$IArray$","location":"api/scala/IArray$package$$IArray$.html","searchKeys":["emptyByteIArray"]},{"name":"val x$13: Type[T13]","description":"scala.quoted.FromExpr$$Tuple18FromExpr","location":"api/scala/quoted/FromExpr$$Tuple18FromExpr.html","searchKeys":["x$13"]},{"name":"def mkString: String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["mkString"]},{"name":"def asScalaFromIntToDoubleFunction(jf: IntToDoubleFunction): Integer => Double","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asScalaFromIntToDoubleFunction"]},{"name":"type Handler = CharacterCodingException => Int","description":"scala.io.Codec","location":"api/scala/io/Codec.html","searchKeys":["Handler"]},{"name":"def millisecond: FiniteDuration","description":"scala.concurrent.duration.DurationConversions","location":"api/scala/concurrent/duration/DurationConversions.html","searchKeys":["millisecond"]},{"name":"def *(x: Short): Int","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["*"]},{"name":"def newSpecificBuilder: Builder[A, CC[A]]","description":"scala.collection.IterableFactoryDefaults","location":"api/scala/collection/IterableFactoryDefaults.html","searchKeys":["newSpecificBuilder"]},{"name":"object spanConvert extends Classifier[span]","description":"scala.concurrent.duration.DurationConversions$$spanConvert$","location":"api/scala/concurrent/duration/DurationConversions$$spanConvert$.html","searchKeys":["spanConvert"]},{"name":"def to(end: BigInt, step: BigInt): Inclusive[BigInt]","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["to"]},{"name":"given AndTypeTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["AndTypeTypeTest"]},{"name":"def !=(x: Double): Boolean","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["!="]},{"name":"def copy(original: Tree)(low: TypeTree, hi: TypeTree): TypeBoundsTree","description":"scala.quoted.Quotes$reflectModule$TypeBoundsTreeModule","location":"api/scala/quoted/Quotes$reflectModule$TypeBoundsTreeModule.html","searchKeys":["copy"]},{"name":"val DefDef: DefDefModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["DefDef"]},{"name":"def floatFromDigits(digits: String): Float","description":"scala.util.FromDigits$","location":"api/scala/util/FromDigits$.html","searchKeys":["floatFromDigits"]},{"name":"def addOne(elem: A): ListBuffer[A]","description":"scala.collection.mutable.ListBuffer","location":"api/scala/collection/mutable/ListBuffer.html","searchKeys":["addOne"]},{"name":"def getOrElse[V1 >: V](key: K, default: => V1): V1","description":"scala.collection.MapOps","location":"api/scala/collection/MapOps.html","searchKeys":["getOrElse"]},{"name":"def fromChars(chars: Array[Char]): Source","description":"scala.io.Source$","location":"api/scala/io/Source$.html","searchKeys":["fromChars"]},{"name":"val x$21: FromExpr[T5]","description":"scala.quoted.FromExpr$$Tuple16FromExpr","location":"api/scala/quoted/FromExpr$$Tuple16FromExpr.html","searchKeys":["x$21"]},{"name":"trait TreeMap","description":"scala.quoted.Quotes$reflectModule$TreeMap","location":"api/scala/quoted/Quotes$reflectModule$TreeMap.html","searchKeys":["TreeMap"]},{"name":"trait BigIntIsIntegral extends Integral[BigInt]","description":"scala.math.Numeric$$BigIntIsIntegral","location":"api/scala/math/Numeric$$BigIntIsIntegral.html","searchKeys":["BigIntIsIntegral"]},{"name":"def product[B >: A](num: Numeric[B]): B","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["product"]},{"name":"def _7: T7","description":"scala.Product21","location":"api/scala/Product21.html","searchKeys":["_7"]},{"name":"trait JFunction1$mcJF$sp extends Any => Any with Serializable","description":"scala.runtime.java8.JFunction1$mcJF$sp","location":"api/scala/runtime/java8/JFunction1$mcJF$sp.html","searchKeys":["JFunction1$mcJF$sp"]},{"name":"def +:(c: Char): String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["+:"]},{"name":"def this(name: Symbol, since: String)","description":"scala.deprecatedName","location":"api/scala/deprecatedName.html","searchKeys":["this"]},{"name":"def /(x: Double): Double","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["/"]},{"name":"def apply(xs: IArray[Object]): Object","description":"scala.runtime.FunctionXXL","location":"api/scala/runtime/FunctionXXL.html","searchKeys":["apply"]},{"name":"def knownSize: Int","description":"scala.collection.IterableOnce","location":"api/scala/collection/IterableOnce.html","searchKeys":["knownSize"]},{"name":"def newBuilder[A]: Builder[A, ListBuffer[A]]","description":"scala.collection.mutable.ListBuffer$","location":"api/scala/collection/mutable/ListBuffer$.html","searchKeys":["newBuilder"]},{"name":"object BitSet extends SpecificIterableFactory[Int, BitSet]","description":"scala.collection.BitSet$","location":"api/scala/collection/BitSet$.html","searchKeys":["BitSet"]},{"name":"given Tuple9ToExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9]: ToExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9)]","description":"scala.quoted.ToExpr$$Tuple9ToExpr","location":"api/scala/quoted/ToExpr$$Tuple9ToExpr.html","searchKeys":["Tuple9ToExpr"]},{"name":"Macros","description":"","location":"docs/reference/metaprogramming/macros.html","searchKeys":["Macros"]},{"name":"val ArrayStack: Stack","description":"scala.collection.mutable","location":"api/scala/collection/mutable.html","searchKeys":["ArrayStack"]},{"name":"val x$10: Type[T10]","description":"scala.quoted.FromExpr$$Tuple14FromExpr","location":"api/scala/quoted/FromExpr$$Tuple14FromExpr.html","searchKeys":["x$10"]},{"name":"def *(x: Long): Long","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["*"]},{"name":"val jDoubleStepperShape: StepperShape[Double, DoubleStepper]","description":"scala.collection.StepperShape$","location":"api/scala/collection/StepperShape$.html","searchKeys":["jDoubleStepperShape"]},{"name":"def byte2short(x: Byte): Short","description":"scala.Byte$","location":"api/scala/Byte$.html","searchKeys":["byte2short"]},{"name":"def fun: Term","description":"scala.quoted.Quotes$reflectModule$ApplyMethods","location":"api/scala/quoted/Quotes$reflectModule$ApplyMethods.html","searchKeys":["fun"]},{"name":"def asJava: CompletionStage[T]","description":"scala.jdk.FutureConverters$$FutureOps","location":"api/scala/jdk/FutureConverters$$FutureOps.html","searchKeys":["asJava"]},{"name":"def range[A](start: A, end: A, step: A)(evidence$25: Integral[A]): CC[A]","description":"scala.collection.IterableFactory","location":"api/scala/collection/IterableFactory.html","searchKeys":["range"]},{"name":"def iterator: Iterator[T]","description":"scala.collection.immutable.TreeSeqMap$$Ordering","location":"api/scala/collection/immutable/TreeSeqMap$$Ordering.html","searchKeys":["iterator"]},{"name":"class LazyInt extends Serializable","description":"scala.runtime.LazyInt","location":"api/scala/runtime/LazyInt.html","searchKeys":["LazyInt"]},{"name":"def apply(i: Int): Short","description":"scala.collection.immutable.ArraySeq$$ofShort","location":"api/scala/collection/immutable/ArraySeq$$ofShort.html","searchKeys":["apply"]},{"name":"given BooleanFromExpr","description":"scala.quoted.FromExpr$","location":"api/scala/quoted/FromExpr$.html","searchKeys":["BooleanFromExpr"]},{"name":"class RichFunction1AsLongConsumer(underlying: Long => Unit) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichFunction1AsLongConsumer","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsLongConsumer.html","searchKeys":["RichFunction1AsLongConsumer"]},{"name":"def fromInt(x: Int): Long","description":"scala.math.Numeric$$LongIsIntegral","location":"api/scala/math/Numeric$$LongIsIntegral.html","searchKeys":["fromInt"]},{"name":"def map[K2, V2](f: (K, V) => (K2, V2))(@implicitNotFound ordering: Ordering[K2]): CollisionProofHashMap[K2, V2]","description":"scala.collection.mutable.CollisionProofHashMap","location":"api/scala/collection/mutable/CollisionProofHashMap.html","searchKeys":["map"]},{"name":"trait JFunction2$mcJDJ$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcJDJ$sp","location":"api/scala/runtime/java8/JFunction2$mcJDJ$sp.html","searchKeys":["JFunction2$mcJDJ$sp"]},{"name":"def args: List[Term]","description":"scala.quoted.Quotes$reflectModule$ApplyMethods","location":"api/scala/quoted/Quotes$reflectModule$ApplyMethods.html","searchKeys":["args"]},{"name":"val x$1: Type[T]","description":"scala.quoted.FromExpr$$OptionFromExpr","location":"api/scala/quoted/FromExpr$$OptionFromExpr.html","searchKeys":["x$1"]},{"name":"given amb1","description":"scala.util.NotGiven$","location":"api/scala/util/NotGiven$.html","searchKeys":["amb1"]},{"name":"val TypeBind: TypeBindModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeBind"]},{"name":"trait JFunction2$mcDID$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcDID$sp","location":"api/scala/runtime/java8/JFunction2$mcDID$sp.html","searchKeys":["JFunction2$mcDID$sp"]},{"name":"val seqSeed: Int","description":"scala.util.hashing.MurmurHash3$","location":"api/scala/util/hashing/MurmurHash3$.html","searchKeys":["seqSeed"]},{"name":"def sizeIs: Int","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["sizeIs"]},{"name":"class deprecatedInheritance(message: String, since: String) extends StaticAnnotation","description":"scala.deprecatedInheritance","location":"api/scala/deprecatedInheritance.html","searchKeys":["deprecatedInheritance"]},{"name":"type Exception = Exception","description":"scala","location":"api/scala.html","searchKeys":["Exception"]},{"name":"def fillAddr(at: Addr, target: Addr): Unit","description":"dotty.tools.tasty.TastyBuffer","location":"api/dotty/tools/tasty/TastyBuffer.html","searchKeys":["fillAddr"]},{"name":"def sortedIterableFactory: SortedIterableFactory[CC]","description":"scala.collection.SortedSetOps","location":"api/scala/collection/SortedSetOps.html","searchKeys":["sortedIterableFactory"]},{"name":"class ofByte(val unsafeArray: Array[Byte]) extends ArraySeq[Byte]","description":"scala.collection.immutable.ArraySeq$$ofByte","location":"api/scala/collection/immutable/ArraySeq$$ofByte.html","searchKeys":["ofByte"]},{"name":"def result: A","description":"scala.util.control.TailCalls$$TailRec","location":"api/scala/util/control/TailCalls$$TailRec.html","searchKeys":["result"]},{"name":"def div(divisor: Double): Duration","description":"scala.concurrent.duration.Duration","location":"api/scala/concurrent/duration/Duration.html","searchKeys":["div"]},{"name":"val Newline: String","description":"scala.sys.process.BasicIO$","location":"api/scala/sys/process/BasicIO$.html","searchKeys":["Newline"]},{"name":"def toBuildFrom[K, V, CC <: ([_$26, _$27] =>> Any)](factory: MapFactory[CC]): BuildFrom[Any, (K, V), CC[K, V]]","description":"scala.collection.MapFactory$","location":"api/scala/collection/MapFactory$.html","searchKeys":["toBuildFrom"]},{"name":"val Unit: UnitManifest","description":"scala.reflect.ClassTag$","location":"api/scala/reflect/ClassTag$.html","searchKeys":["Unit"]},{"name":"def isDefDef: Boolean","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["isDefDef"]},{"name":"object EmptyTuple extends Tuple","description":"scala.Tuple$package$$EmptyTuple$","location":"api/scala/Tuple$package$$EmptyTuple$.html","searchKeys":["EmptyTuple"]},{"name":"def headOption: Option[A]","description":"scala.collection.BufferedIterator","location":"api/scala/collection/BufferedIterator.html","searchKeys":["headOption"]},{"name":"def apply(i: Int): A","description":"scala.collection.SeqView$$TakeRight","location":"api/scala/collection/SeqView$$TakeRight.html","searchKeys":["apply"]},{"name":"class DoubleAccumulator extends Accumulator[Double, [A] =>> AnyAccumulator[A], DoubleAccumulator] with SeqOps[Double, [A] =>> AnyAccumulator[A], DoubleAccumulator] with Serializable","description":"scala.jdk.DoubleAccumulator","location":"api/scala/jdk/DoubleAccumulator.html","searchKeys":["DoubleAccumulator"]},{"name":"trait JFunction0$mcC$sp extends () => Any with Serializable","description":"scala.runtime.java8.JFunction0$mcC$sp","location":"api/scala/runtime/java8/JFunction0$mcC$sp.html","searchKeys":["JFunction0$mcC$sp"]},{"name":"def dropWhile(p: A => Boolean): Iterator[A]","description":"scala.collection.Iterator","location":"api/scala/collection/Iterator.html","searchKeys":["dropWhile"]},{"name":"object DeprecatedDoubleEquiv extends StrictEquiv","description":"scala.math.Equiv$$DeprecatedDoubleEquiv$","location":"api/scala/math/Equiv$$DeprecatedDoubleEquiv$.html","searchKeys":["DeprecatedDoubleEquiv"]},{"name":"class ZipAll[A, B](underlying: SomeIterableOps[A], other: Iterable[B], thisElem: A, thatElem: B) extends AbstractView[(A, B)]","description":"scala.collection.View$$ZipAll","location":"api/scala/collection/View$$ZipAll.html","searchKeys":["ZipAll"]},{"name":"def >(x: Float): Boolean","description":"scala.Short","location":"api/scala/Short.html","searchKeys":[">"]},{"name":"def apply(cond: Term, thenp: Term, elsep: Term): If","description":"scala.quoted.Quotes$reflectModule$IfModule","location":"api/scala/quoted/Quotes$reflectModule$IfModule.html","searchKeys":["apply"]},{"name":"def apply[T](x: T): T *: EmptyTuple","description":"scala.Tuple$","location":"api/scala/Tuple$.html","searchKeys":["apply"]},{"name":"def parseString(str: String): Option[Float]","description":"scala.math.Numeric$$FloatIsFractional","location":"api/scala/math/Numeric$$FloatIsFractional.html","searchKeys":["parseString"]},{"name":"trait TryBlock[T]","description":"scala.util.control.Breaks$TryBlock","location":"api/scala/util/control/Breaks$TryBlock.html","searchKeys":["TryBlock"]},{"name":"def apply$mcZDJ$sp(v1: Double, v2: Long): Boolean","description":"scala.runtime.java8.JFunction2$mcZDJ$sp","location":"api/scala/runtime/java8/JFunction2$mcZDJ$sp.html","searchKeys":["apply$mcZDJ$sp"]},{"name":"def empty[A]: Vector[A]","description":"scala.collection.immutable.Vector$","location":"api/scala/collection/immutable/Vector$.html","searchKeys":["empty"]},{"name":"class StructuralCallSite","description":"scala.runtime.StructuralCallSite","location":"api/scala/runtime/StructuralCallSite.html","searchKeys":["StructuralCallSite"]},{"name":"def -(x: Byte): Int","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["-"]},{"name":"def toJavaOptionalLong(o: Option[Long]): OptionalLong","description":"scala.jdk.javaapi.OptionConverters$","location":"api/scala/jdk/javaapi/OptionConverters$.html","searchKeys":["toJavaOptionalLong"]},{"name":"def apply(n: Int): Short","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["apply"]},{"name":"def <=(rhs: T): Boolean","description":"scala.math.Ordering$OrderingOps","location":"api/scala/math/Ordering$OrderingOps.html","searchKeys":["<="]},{"name":"def >=(x: Long): Boolean","description":"scala.Short","location":"api/scala/Short.html","searchKeys":[">="]},{"name":"def javaIterator[B >: Long]: OfLong","description":"scala.collection.LongStepper","location":"api/scala/collection/LongStepper.html","searchKeys":["javaIterator"]},{"name":"def r(groupNames: String*): Regex","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["r"]},{"name":"def asScala[A](i: Iterable[A]): Iterable[A]","description":"scala.collection.convert.AsScalaConverters","location":"api/scala/collection/convert/AsScalaConverters.html","searchKeys":["asScala"]},{"name":"def unapply(x: Annotated): (TypeTree, Term)","description":"scala.quoted.Quotes$reflectModule$AnnotatedModule","location":"api/scala/quoted/Quotes$reflectModule$AnnotatedModule.html","searchKeys":["unapply"]},{"name":"def _10: T10","description":"scala.Product16","location":"api/scala/Product16.html","searchKeys":["_10"]},{"name":"object JavaConverters extends AsJavaConverters with AsScalaConverters","description":"scala.collection.JavaConverters$","location":"api/scala/collection/JavaConverters$.html","searchKeys":["JavaConverters"]},{"name":"def create(length: Long, unit: String): FiniteDuration","description":"scala.concurrent.duration.Duration$","location":"api/scala/concurrent/duration/Duration$.html","searchKeys":["create"]},{"name":"def permutations: Iterator[String]","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["permutations"]},{"name":"def *(x: Float): Float","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["*"]},{"name":"def head: A","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["head"]},{"name":"val DoubleShape: Shape","description":"scala.collection.StepperShape$","location":"api/scala/collection/StepperShape$.html","searchKeys":["DoubleShape"]},{"name":"class VectorMap[K, +V] extends AbstractMap[K, V] with SeqMap[K, V] with StrictOptimizedMapOps[K, V, [K, V] =>> VectorMap[K, V], VectorMap[K, V]] with MapFactoryDefaults[K, V, [K, V] =>> VectorMap[K, V], [A] =>> Iterable[A]]","description":"scala.collection.immutable.VectorMap","location":"api/scala/collection/immutable/VectorMap.html","searchKeys":["VectorMap"]},{"name":"Context Functions","description":"","location":"docs/reference/contextual/context-functions.html","searchKeys":["Context Functions"]},{"name":"def /:[B](z: B)(op: (B, A) => B): B","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["/:"]},{"name":"given AndOrTypeTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["AndOrTypeTypeTest"]},{"name":"def failed: Future[Throwable]","description":"scala.concurrent.Future","location":"api/scala/concurrent/Future.html","searchKeys":["failed"]},{"name":"def _11: T11","description":"scala.Product19","location":"api/scala/Product19.html","searchKeys":["_11"]},{"name":"def <(x: Long): Boolean","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["<"]},{"name":"def ordering: Ordering[Value]","description":"scala.Enumeration$ValueSet","location":"api/scala/Enumeration$ValueSet.html","searchKeys":["ordering"]},{"name":"type TypeRepr","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeRepr"]},{"name":"def collect[U](pf: PartialFunction[T, U]): Try[U]","description":"scala.util.Try","location":"api/scala/util/Try.html","searchKeys":["collect"]},{"name":"def this(ordering: Ordering[A])","description":"scala.collection.immutable.TreeSet","location":"api/scala/collection/immutable/TreeSet.html","searchKeys":["this"]},{"name":"def iterator: Iterator[A]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["iterator"]},{"name":"val intAccumulatorFactoryShape: AccumulatorFactoryShape[Int, IntAccumulator]","description":"scala.jdk.Accumulator$$AccumulatorFactoryShape$","location":"api/scala/jdk/Accumulator$$AccumulatorFactoryShape$.html","searchKeys":["intAccumulatorFactoryShape"]},{"name":"def addOne(elem: Int): ofInt","description":"scala.collection.mutable.ArrayBuilder$$ofInt","location":"api/scala/collection/mutable/ArrayBuilder$$ofInt.html","searchKeys":["addOne"]},{"name":"class WithDefault[K, +V](val underlying: Map[K, V], val defaultValue: K => V) extends AbstractMap[K, V] with MapOps[K, V, [K, V] =>> Map[K, V], WithDefault[K, V]] with Serializable","description":"scala.collection.immutable.Map$$WithDefault","location":"api/scala/collection/immutable/Map$$WithDefault.html","searchKeys":["WithDefault"]},{"name":"val ordering: Ordering[A]","description":"scala.collection.immutable.TreeSet","location":"api/scala/collection/immutable/TreeSet.html","searchKeys":["ordering"]},{"name":"def Tuple4[T1, T2, T3, T4](ord1: Ordering[T1], ord2: Ordering[T2], ord3: Ordering[T3], ord4: Ordering[T4]): Ordering[(T1, T2, T3, T4)]","description":"scala.math.Ordering$","location":"api/scala/math/Ordering$.html","searchKeys":["Tuple4"]},{"name":"def >(x: Float): Boolean","description":"scala.Int","location":"api/scala/Int.html","searchKeys":[">"]},{"name":"def apply(x: BigInt): BigDecimal","description":"scala.math.BigDecimal$","location":"api/scala/math/BigDecimal$.html","searchKeys":["apply"]},{"name":"def nextStep(): A","description":"scala.collection.Stepper","location":"api/scala/collection/Stepper.html","searchKeys":["nextStep"]},{"name":"type MethodType <: MethodOrPoly","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["MethodType"]},{"name":"def map[K2, V2](f: (K, V) => (K2, V2))(evidence$1: Ordering[K2]): CC[K2, V2]","description":"scala.collection.SortedMapOps$$WithFilter","location":"api/scala/collection/SortedMapOps$$WithFilter.html","searchKeys":["map"]},{"name":"Changes in Type Checking","description":"","location":"docs/reference/changed-features/type-checking.html","searchKeys":["Changes in Type Checking"]},{"name":"def reduceLeftOption(f: (A, A) => A): Option[A]","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["reduceLeftOption"]},{"name":"val MAXIMUM: 2147483647","description":"scala.annotation.elidable$","location":"api/scala/annotation/elidable$.html","searchKeys":["MAXIMUM"]},{"name":"val x$25: FromExpr[T7]","description":"scala.quoted.FromExpr$$Tuple18FromExpr","location":"api/scala/quoted/FromExpr$$Tuple18FromExpr.html","searchKeys":["x$25"]},{"name":"def apply$mcDI$sp(v1: Int): Double","description":"scala.runtime.java8.JFunction1$mcDI$sp","location":"api/scala/runtime/java8/JFunction1$mcDI$sp.html","searchKeys":["apply$mcDI$sp"]},{"name":"def toScala(o: OptionalDouble): Option[Double]","description":"scala.jdk.javaapi.OptionConverters$","location":"api/scala/jdk/javaapi/OptionConverters$.html","searchKeys":["toScala"]},{"name":"def typeChecks(inline code: String): Boolean","description":"scala.compiletime.testing.package$package$","location":"api/scala/compiletime/testing.html","searchKeys":["typeChecks"]},{"name":"def get(key: K): Option[V]","description":"scala.collection.immutable.Map$$Map3","location":"api/scala/collection/immutable/Map$$Map3.html","searchKeys":["get"]},{"name":"class TakeRight[A](underlying: SomeIndexedSeqOps[A], n: Int) extends TakeRight[A] with IndexedSeqView[A]","description":"scala.collection.IndexedSeqView$$TakeRight","location":"api/scala/collection/IndexedSeqView$$TakeRight.html","searchKeys":["TakeRight"]},{"name":"val EOL: String","description":"scala.compat.Platform$","location":"api/scala/compat/Platform$.html","searchKeys":["EOL"]},{"name":"val NEW: 95","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["NEW"]},{"name":"def intersect[B >: Char](that: Seq[B]): String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["intersect"]},{"name":"object Integral","description":"scala.math.Integral$","location":"api/scala/math/Integral$.html","searchKeys":["Integral"]},{"name":"def underlying: BigInteger","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["underlying"]},{"name":"def clearAndShrink(size: Int): ArrayBuffer[A]","description":"scala.collection.mutable.ArrayBuffer","location":"api/scala/collection/mutable/ArrayBuffer.html","searchKeys":["clearAndShrink"]},{"name":"def %(x: Char): Int","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["%"]},{"name":"def appliedToNone: Apply","description":"scala.quoted.Quotes$reflectModule$TermMethods","location":"api/scala/quoted/Quotes$reflectModule$TermMethods.html","searchKeys":["appliedToNone"]},{"name":"trait FromExpr[T]","description":"scala.quoted.FromExpr","location":"api/scala/quoted/FromExpr.html","searchKeys":["FromExpr"]},{"name":"Dropped: Package Objects","description":"","location":"docs/reference/dropped-features/package-objects.html","searchKeys":["Dropped: Package Objects"]},{"name":"trait TypeTest[-S, T] extends Serializable","description":"scala.reflect.TypeTest","location":"api/scala/reflect/TypeTest.html","searchKeys":["TypeTest"]},{"name":"def #<<(f: File): ProcessBuilder","description":"scala.sys.process.ProcessBuilder$$FileBuilder","location":"api/scala/sys/process/ProcessBuilder$$FileBuilder.html","searchKeys":["#<<"]},{"name":"def unzip[A1, A2](asPair: A <:< (A1, A2)): (Option[A1], Option[A2])","description":"scala.Option","location":"api/scala/Option.html","searchKeys":["unzip"]},{"name":"def constant: Constant","description":"scala.quoted.Quotes$reflectModule$ConstantTypeMethods","location":"api/scala/quoted/Quotes$reflectModule$ConstantTypeMethods.html","searchKeys":["constant"]},{"name":"given ImplicitSearchFailureTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ImplicitSearchFailureTypeTest"]},{"name":"val x$3: Type[T3]","description":"scala.quoted.FromExpr$$Tuple15FromExpr","location":"api/scala/quoted/FromExpr$$Tuple15FromExpr.html","searchKeys":["x$3"]},{"name":"trait Cloneable[+C <: AnyRef] extends Cloneable","description":"scala.collection.mutable.Cloneable","location":"api/scala/collection/mutable/Cloneable.html","searchKeys":["Cloneable"]},{"name":"def unconstrained: Set[A]","description":"scala.collection.mutable.TreeSet","location":"api/scala/collection/mutable/TreeSet.html","searchKeys":["unconstrained"]},{"name":"def this(name: String)","description":"scala.Enumeration$Val","location":"api/scala/Enumeration$Val.html","searchKeys":["this"]},{"name":"def baseStepperShape[T]: StepperShape[T, Stepper[T]]","description":"scala.collection.StepperShapeLowPriority2","location":"api/scala/collection/StepperShapeLowPriority2.html","searchKeys":["baseStepperShape"]},{"name":"def get(key: K): Option[V]","description":"scala.collection.immutable.HashMap","location":"api/scala/collection/immutable/HashMap.html","searchKeys":["get"]},{"name":"class Map[+A, +B](underlying: SomeSeqOps[A], f: A => B) extends Map[A, B] with SeqView[B]","description":"scala.collection.SeqView$$Map","location":"api/scala/collection/SeqView$$Map.html","searchKeys":["Map"]},{"name":"def _9: T9","description":"scala.Product15","location":"api/scala/Product15.html","searchKeys":["_9"]},{"name":"class AnyAccumulator[A] extends Accumulator[A, [A] =>> AnyAccumulator[A], AnyAccumulator[A]] with SeqOps[A, [A] =>> AnyAccumulator[A], AnyAccumulator[A]] with IterableFactoryDefaults[A, [A] =>> AnyAccumulator[A]] with Serializable","description":"scala.jdk.AnyAccumulator","location":"api/scala/jdk/AnyAccumulator.html","searchKeys":["AnyAccumulator"]},{"name":"def clear(): Unit","description":"scala.ref.Reference","location":"api/scala/ref/Reference.html","searchKeys":["clear"]},{"name":"class AbstractFunction12[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, +R] extends (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) => R","description":"scala.runtime.AbstractFunction12","location":"api/scala/runtime/AbstractFunction12.html","searchKeys":["AbstractFunction12"]},{"name":"def tabulate[T](n: Int)(f: Int => T)(evidence$23: ClassTag[T]): IArray[T]","description":"scala.IArray$package$$IArray$","location":"api/scala/IArray$package$$IArray$.html","searchKeys":["tabulate"]},{"name":"class RichFunction1AsDoubleFunction[R](underlying: Double => R) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichFunction1AsDoubleFunction","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsDoubleFunction.html","searchKeys":["RichFunction1AsDoubleFunction"]},{"name":"def one: T","description":"scala.math.Numeric","location":"api/scala/math/Numeric.html","searchKeys":["one"]},{"name":"def intValue: Int","description":"scala.runtime.ScalaNumberProxy","location":"api/scala/runtime/ScalaNumberProxy.html","searchKeys":["intValue"]},{"name":"def &(x: Int): Int","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["&"]},{"name":"val MATCH: 143","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["MATCH"]},{"name":"given RenameSelectorTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["RenameSelectorTypeTest"]},{"name":"val APPLIEDtype: 161","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["APPLIEDtype"]},{"name":"def fromString(s: String): Float","description":"scala.util.CommandLineParser$$FromString$$given_FromString_Float$","location":"api/scala/util/CommandLineParser$$FromString$$given_FromString_Float$.html","searchKeys":["fromString"]},{"name":"def boxedAdder: BiConsumer[LongAccumulator, Long]","description":"scala.jdk.LongAccumulator$","location":"api/scala/jdk/LongAccumulator$.html","searchKeys":["boxedAdder"]},{"name":"def apply(x: T1): R","description":"scala.runtime.AbstractPartialFunction","location":"api/scala/runtime/AbstractPartialFunction.html","searchKeys":["apply"]},{"name":"def exclusively[T](body: => T): T","description":"scala.sys.SystemProperties$","location":"api/scala/sys/SystemProperties$.html","searchKeys":["exclusively"]},{"name":"def apply(n: Int): Char","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["apply"]},{"name":"def apply(params: List[TypeDef]): TypeParamClause","description":"scala.quoted.Quotes$reflectModule$TypeParamClauseModule","location":"api/scala/quoted/Quotes$reflectModule$TypeParamClauseModule.html","searchKeys":["apply"]},{"name":"val x$30: FromExpr[T10]","description":"scala.quoted.FromExpr$$Tuple20FromExpr","location":"api/scala/quoted/FromExpr$$Tuple20FromExpr.html","searchKeys":["x$30"]},{"name":"def throwReturn[T](result: T)(using returner: ReturnThrowable[T]): Nothing","description":"scala.util.control.NonLocalReturns$","location":"api/scala/util/control/NonLocalReturns$.html","searchKeys":["throwReturn"]},{"name":"val emptyByteArray: Array[Byte]","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["emptyByteArray"]},{"name":"package scala.collection","description":"scala.collection","location":"api/scala/collection.html","searchKeys":["scala.collection"]},{"name":"object NumericRange","description":"scala.collection.immutable.NumericRange$","location":"api/scala/collection/immutable/NumericRange$.html","searchKeys":["NumericRange"]},{"name":"def insertAll(idx: Int, t: IterableOnce[T], buffer: UnrolledBuffer[T]): Int","description":"scala.collection.mutable.UnrolledBuffer$$Unrolled","location":"api/scala/collection/mutable/UnrolledBuffer$$Unrolled.html","searchKeys":["insertAll"]},{"name":"class RichFunction1AsDoubleUnaryOperator(underlying: Double => Double) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichFunction1AsDoubleUnaryOperator","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsDoubleUnaryOperator.html","searchKeys":["RichFunction1AsDoubleUnaryOperator"]},{"name":"given ValDefMethods","description":"scala.quoted.Quotes$reflectModule$ValDefMethods","location":"api/scala/quoted/Quotes$reflectModule$ValDefMethods.html","searchKeys":["ValDefMethods"]},{"name":"def asScalaFromToDoubleBiFunction[T, U](jf: ToDoubleBiFunction[T, U]): (T, U) => Double","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asScalaFromToDoubleBiFunction"]},{"name":"def isInclusive: Boolean","description":"scala.collection.immutable.Range$$Exclusive","location":"api/scala/collection/immutable/Range$$Exclusive.html","searchKeys":["isInclusive"]},{"name":"def -(x: Char): Int","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["-"]},{"name":"def factory: Factory[A, C]","description":"scala.jdk.Accumulator$$AccumulatorFactoryShape","location":"api/scala/jdk/Accumulator$$AccumulatorFactoryShape.html","searchKeys":["factory"]},{"name":"def incl(elem: Int): BitSet","description":"scala.collection.immutable.BitSet","location":"api/scala/collection/immutable/BitSet.html","searchKeys":["incl"]},{"name":"def keysIteratorFrom(start: K): Iterator[K]","description":"scala.collection.immutable.SortedMap$$WithDefault","location":"api/scala/collection/immutable/SortedMap$$WithDefault.html","searchKeys":["keysIteratorFrom"]},{"name":"Announcing Dotty 0.18.1-RC1 – switch to the 2.13 standard library, indentation-based syntax and other experiments","description":"","location":"blog/2019/08/30/18th-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.18.1-RC1 – switch to the 2.13 standard library, indentation-based syntax and other experiments"]},{"name":"def toNanos: Long","description":"scala.concurrent.duration.FiniteDuration","location":"api/scala/concurrent/duration/FiniteDuration.html","searchKeys":["toNanos"]},{"name":"given Tuple7FromExpr[T1, T2, T3, T4, T5, T6, T7](using val x$1: Type[T1], val x$2: Type[T2], val x$3: Type[T3], val x$4: Type[T4], val x$5: Type[T5], val x$6: Type[T6], val x$7: Type[T7], val x$8: FromExpr[T1], val x$9: FromExpr[T2], val x$10: FromExpr[T3], val x$11: FromExpr[T4], val x$12: FromExpr[T5], val x$13: FromExpr[T6], val x$14: FromExpr[T7]): FromExpr[(T1, T2, T3, T4, T5, T6, T7)]","description":"scala.quoted.FromExpr$$Tuple7FromExpr","location":"api/scala/quoted/FromExpr$.html","searchKeys":["Tuple7FromExpr"]},{"name":"def apply(xs: Seq[T])(using Quotes): Expr[Seq[T]]","description":"scala.quoted.ToExpr$$SeqToExpr","location":"api/scala/quoted/ToExpr$$SeqToExpr.html","searchKeys":["apply"]},{"name":"def enrichAsJavaIntPredicate[A0](sf: A0 => Boolean)(evA0: A0 =:= Int): RichFunction1AsIntPredicate","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsJavaIntPredicate"]},{"name":"def asJava[A](i: Iterator[A]): Iterator[A]","description":"scala.collection.convert.AsJavaConverters","location":"api/scala/collection/convert/AsJavaConverters.html","searchKeys":["asJava"]},{"name":"def collect[B](pf: PartialFunction[Char, B]): IndexedSeq[B]","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["collect"]},{"name":"given ApplyTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ApplyTypeTest"]},{"name":"def diff(that: Set[A]): C","description":"scala.collection.immutable.SetOps","location":"api/scala/collection/immutable/SetOps.html","searchKeys":["diff"]},{"name":"def this()","description":"scala.io.Source$Positioner","location":"api/scala/io/Source$Positioner.html","searchKeys":["this"]},{"name":"def from[K, V](it: IterableOnce[(K, V)]): SeqMap[K, V]","description":"scala.collection.immutable.SeqMap$","location":"api/scala/collection/immutable/SeqMap$.html","searchKeys":["from"]},{"name":"trait AnyStepper[+A] extends Stepper[A]","description":"scala.collection.AnyStepper","location":"api/scala/collection/AnyStepper.html","searchKeys":["AnyStepper"]},{"name":"def micros: FiniteDuration","description":"scala.concurrent.duration.DurationConversions","location":"api/scala/concurrent/duration/DurationConversions.html","searchKeys":["micros"]},{"name":"def div(divisor: Long): FiniteDuration","description":"scala.concurrent.duration.FiniteDuration","location":"api/scala/concurrent/duration/FiniteDuration.html","searchKeys":["div"]},{"name":"val Bind: BindModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Bind"]},{"name":"def asJavaSeqValueIntStreamFromShort[K](m: Map[K, Short]): IntStream","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaSeqValueIntStreamFromShort"]},{"name":"def <(x: Float): Boolean","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["<"]},{"name":"def low: TypeRepr","description":"scala.quoted.Quotes$reflectModule$TypeBoundsMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeBoundsMethods.html","searchKeys":["low"]},{"name":"type Union[T <: Tuple] = Fold[T, Nothing, [x, y] =>> x | y]","description":"scala.Tuple$","location":"api/scala/Tuple$.html","searchKeys":["Union"]},{"name":"def estimateSize(): Long","description":"scala.collection.DoubleStepper$$DoubleStepperSpliterator","location":"api/scala/collection/DoubleStepper$$DoubleStepperSpliterator.html","searchKeys":["estimateSize"]},{"name":"type ParamClause <: AnyRef","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ParamClause"]},{"name":"def singleType[T <: AnyRef](value: AnyRef): Manifest[T]","description":"scala.reflect.ClassManifestFactory$","location":"api/scala/reflect/ClassManifestFactory$.html","searchKeys":["singleType"]},{"name":"def withFilter(f: A => Boolean): Iterator[A]","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["withFilter"]},{"name":"given OmitSelectorMethods","description":"scala.quoted.Quotes$reflectModule$OmitSelectorMethods","location":"api/scala/quoted/Quotes$reflectModule$OmitSelectorMethods.html","searchKeys":["OmitSelectorMethods"]},{"name":"def productElement(n: Int): Any","description":"scala.runtime.TupleXXL","location":"api/scala/runtime/TupleXXL.html","searchKeys":["productElement"]},{"name":"def copy(original: Tree)(stats: List[Statement], expr: Term): Block","description":"scala.quoted.Quotes$reflectModule$BlockModule","location":"api/scala/quoted/Quotes$reflectModule$BlockModule.html","searchKeys":["copy"]},{"name":"class AbstractPartialFunction[@specialized -T1, @specialized +R] extends T1 => R with PartialFunction[T1, R]","description":"scala.runtime.AbstractPartialFunction","location":"api/scala/runtime/AbstractPartialFunction.html","searchKeys":["AbstractPartialFunction"]},{"name":"def gt(x: T, y: T): Boolean","description":"scala.math.PartialOrdering","location":"api/scala/math/PartialOrdering.html","searchKeys":["gt"]},{"name":"val LAZY: 14","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["LAZY"]},{"name":"class SetHasAsJava[A](s: Set[A])","description":"scala.collection.convert.AsJavaExtensions$SetHasAsJava","location":"api/scala/collection/convert/AsJavaExtensions$SetHasAsJava.html","searchKeys":["SetHasAsJava"]},{"name":"trait Function18[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, -T14, -T15, -T16, -T17, -T18, +R] extends AnyRef","description":"scala.Function18","location":"api/scala/Function18.html","searchKeys":["Function18"]},{"name":"def iterator: Iterator[(K, V)]","description":"scala.collection.immutable.Map$$Map2","location":"api/scala/collection/immutable/Map$$Map2.html","searchKeys":["iterator"]},{"name":"class RichFunction0AsSupplier[T](underlying: () => T) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichFunction0AsSupplier","location":"api/scala/jdk/FunctionWrappers$$RichFunction0AsSupplier.html","searchKeys":["RichFunction0AsSupplier"]},{"name":"def signum(x: Double): Double","description":"scala.math","location":"api/scala/math.html","searchKeys":["signum"]},{"name":"object SoftReference","description":"scala.ref.SoftReference$","location":"api/scala/ref/SoftReference$.html","searchKeys":["SoftReference"]},{"name":"def curried: T1 => T2 => T3 => T4 => T5 => R","description":"scala.Function5","location":"api/scala/Function5.html","searchKeys":["curried"]},{"name":"def content: Option[String]","description":"scala.quoted.Quotes$reflectModule$SourceFileMethods","location":"api/scala/quoted/Quotes$reflectModule$SourceFileMethods.html","searchKeys":["content"]},{"name":"val BYTEconst: 67","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["BYTEconst"]},{"name":"def unapplySeq[T](x: IArray[T]): UnapplySeqWrapper[ <: T]","description":"scala.IArray$package$$IArray$","location":"api/scala/IArray$package$$IArray$.html","searchKeys":["unapplySeq"]},{"name":"def updatedWith[V1 >: V](key: K)(remappingFunction: Option[V] => Option[V1]): CC[K, V1]","description":"scala.collection.immutable.MapOps","location":"api/scala/collection/immutable/MapOps.html","searchKeys":["updatedWith"]},{"name":"def toTraversable: Iterable[A]","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["toTraversable"]},{"name":"class Id[+A](underlying: SomeIndexedSeqOps[A]) extends Id[A] with IndexedSeqView[A]","description":"scala.collection.IndexedSeqView$$Id","location":"api/scala/collection/IndexedSeqView$$Id.html","searchKeys":["Id"]},{"name":"object DurationIsOrdered extends Ordering[Duration]","description":"scala.concurrent.duration.Duration$$DurationIsOrdered$","location":"api/scala/concurrent/duration/Duration$$DurationIsOrdered$.html","searchKeys":["DurationIsOrdered"]},{"name":"def <=(size: Int): Boolean","description":"scala.collection.IterableOps$$SizeCompareOps","location":"api/scala/collection/IterableOps$$SizeCompareOps.html","searchKeys":["<="]},{"name":"def toSeconds: Long","description":"scala.concurrent.duration.FiniteDuration","location":"api/scala/concurrent/duration/FiniteDuration.html","searchKeys":["toSeconds"]},{"name":"def prepend(elem: T): Unrolled[T]","description":"scala.collection.mutable.UnrolledBuffer$$Unrolled","location":"api/scala/collection/mutable/UnrolledBuffer$$Unrolled.html","searchKeys":["prepend"]},{"name":"val global: ExecutionContextExecutor","description":"scala.concurrent.ExecutionContext$","location":"api/scala/concurrent/ExecutionContext$.html","searchKeys":["global"]},{"name":"def unsorted: Set[A]","description":"scala.collection.SortedSet","location":"api/scala/collection/SortedSet.html","searchKeys":["unsorted"]},{"name":"def *(x: Double): Double","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["*"]},{"name":"val x$37: FromExpr[T16]","description":"scala.quoted.FromExpr$$Tuple21FromExpr","location":"api/scala/quoted/FromExpr$$Tuple21FromExpr.html","searchKeys":["x$37"]},{"name":"def underlying: Term","description":"scala.quoted.Quotes$reflectModule$TermMethods","location":"api/scala/quoted/Quotes$reflectModule$TermMethods.html","searchKeys":["underlying"]},{"name":"object ArraySeq extends StrictOptimizedClassTagSeqFactory[[T] =>> ArraySeq[T]]","description":"scala.collection.mutable.ArraySeq$","location":"api/scala/collection/mutable/ArraySeq$.html","searchKeys":["ArraySeq"]},{"name":"def %(x: Int): Float","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["%"]},{"name":"val Long: LongManifest","description":"scala.reflect.ClassTag$","location":"api/scala/reflect/ClassTag$.html","searchKeys":["Long"]},{"name":"def isTitleCase: Boolean","description":"scala.runtime.RichChar","location":"api/scala/runtime/RichChar.html","searchKeys":["isTitleCase"]},{"name":"def DoubleClass: Symbol","description":"scala.quoted.Quotes$reflectModule$defnModule","location":"api/scala/quoted/Quotes$reflectModule$defnModule.html","searchKeys":["DoubleClass"]},{"name":"def ofParLongStepper(st: LongStepper & EfficientSplit): AnyStepper[Long] & EfficientSplit","description":"scala.collection.AnyStepper$","location":"api/scala/collection/AnyStepper$.html","searchKeys":["ofParLongStepper"]},{"name":"def abs: BigDecimal","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["abs"]},{"name":"def !=(size: Int): Boolean","description":"scala.collection.IterableOps$$SizeCompareOps","location":"api/scala/collection/IterableOps$$SizeCompareOps.html","searchKeys":["!="]},{"name":"def sliding(size: Int, step: Int): Iterator[C]","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["sliding"]},{"name":"def wrap(body: => Int): Int","description":"scala.io.Codec","location":"api/scala/io/Codec.html","searchKeys":["wrap"]},{"name":"val x$8: Type[T8]","description":"scala.quoted.FromExpr$$Tuple17FromExpr","location":"api/scala/quoted/FromExpr$$Tuple17FromExpr.html","searchKeys":["x$8"]},{"name":"def +(x: Char): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["+"]},{"name":"class RichBiConsumerAsFunction2[T, U](underlying: BiConsumer[T, U]) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichBiConsumerAsFunction2","location":"api/scala/jdk/FunctionWrappers$$RichBiConsumerAsFunction2.html","searchKeys":["RichBiConsumerAsFunction2"]},{"name":"def zippedIterable2ToIterable[El1, El2](zz: ZippedIterable2[El1, El2]): Iterable[(El1, El2)]","description":"scala.runtime.ZippedIterable2$","location":"api/scala/runtime/ZippedIterable2$.html","searchKeys":["zippedIterable2ToIterable"]},{"name":"class StopMacroExpansion extends Throwable","description":"scala.quoted.runtime.StopMacroExpansion","location":"api/scala/quoted/runtime/StopMacroExpansion.html","searchKeys":["StopMacroExpansion"]},{"name":"def tupled: (T1, T2, T3, T4, T5, T6) => R","description":"scala.Function6","location":"api/scala/Function6.html","searchKeys":["tupled"]},{"name":"trait ClassTagSeqFactory[+CC <: ([A] =>> SeqOps[A, [A] =>> Seq[A], Seq[A]])] extends ClassTagIterableFactory[CC]","description":"scala.collection.ClassTagSeqFactory","location":"api/scala/collection/ClassTagSeqFactory.html","searchKeys":["ClassTagSeqFactory"]},{"name":"class ofChar extends ArrayBuilder[Char]","description":"scala.collection.mutable.ArrayBuilder$$ofChar","location":"api/scala/collection/mutable/ArrayBuilder$$ofChar.html","searchKeys":["ofChar"]},{"name":"val source: CharSequence","description":"scala.util.matching.Regex$$MatchData","location":"api/scala/util/matching/Regex$$MatchData.html","searchKeys":["source"]},{"name":"def asJava: LongToIntFunction","description":"scala.jdk.FunctionWrappers$$RichFunction1AsLongToIntFunction","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsLongToIntFunction.html","searchKeys":["asJava"]},{"name":"val x$16: FromExpr[T3]","description":"scala.quoted.FromExpr$$Tuple13FromExpr","location":"api/scala/quoted/FromExpr$$Tuple13FromExpr.html","searchKeys":["x$16"]},{"name":"object NameTransformer","description":"scala.reflect.NameTransformer$","location":"api/scala/reflect/NameTransformer$.html","searchKeys":["NameTransformer"]},{"name":"def asScala: T => Long","description":"scala.jdk.FunctionWrappers$$RichToLongFunctionAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichToLongFunctionAsFunction1.html","searchKeys":["asScala"]},{"name":"def asScala: Int => Long","description":"scala.jdk.FunctionWrappers$$RichIntToLongFunctionAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichIntToLongFunctionAsFunction1.html","searchKeys":["asScala"]},{"name":"val x$27: FromExpr[T6]","description":"scala.quoted.FromExpr$$Tuple21FromExpr","location":"api/scala/quoted/FromExpr$$Tuple21FromExpr.html","searchKeys":["x$27"]},{"name":"class Set3[A] extends AbstractSet[A] with StrictOptimizedIterableOps[A, [A] =>> Set[A], Set[A]] with Serializable","description":"scala.collection.immutable.Set$$Set3","location":"api/scala/collection/immutable/Set$$Set3.html","searchKeys":["Set3"]},{"name":"val setFlag: \"setFlag\"","description":"scala.runtime.LazyVals$$Names$","location":"api/scala/runtime/LazyVals$$Names$.html","searchKeys":["setFlag"]},{"name":"type FlatMap[Tup <: Tuple, F <: ([_$5] =>> Tuple)] = Tup match {\n  case EmptyTuple => EmptyTuple\n  case h *: t => Concat[F[h], FlatMap[t, F]]\n}","description":"scala.Tuple$","location":"api/scala/Tuple$.html","searchKeys":["FlatMap"]},{"name":"trait BlockContext","description":"scala.concurrent.BlockContext","location":"api/scala/concurrent/BlockContext.html","searchKeys":["BlockContext"]},{"name":"trait NonEmptyTuple extends Tuple","description":"scala.NonEmptyTuple","location":"api/scala/NonEmptyTuple.html","searchKeys":["NonEmptyTuple"]},{"name":"def collect[B](pf: PartialFunction[A, B])(evidence$7: ClassTag[B]): Array[B]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["collect"]},{"name":"def iterator: Iterator[(K, V)]","description":"scala.collection.immutable.ListMap","location":"api/scala/collection/immutable/ListMap.html","searchKeys":["iterator"]},{"name":"class SyncChannel[A]","description":"scala.concurrent.SyncChannel","location":"api/scala/concurrent/SyncChannel.html","searchKeys":["SyncChannel"]},{"name":"given EitherFromExpr[L, R](using val x$1: Type[L], val x$2: Type[R], val x$3: FromExpr[L], val x$4: FromExpr[R]): FromExpr[Either[L, R]]","description":"scala.quoted.FromExpr$$EitherFromExpr","location":"api/scala/quoted/FromExpr$$EitherFromExpr.html","searchKeys":["EitherFromExpr"]},{"name":"def doubleValue: Double","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["doubleValue"]},{"name":"class BigDecimal(val bigDecimal: BigDecimal, val mc: MathContext) extends ScalaNumber with ScalaNumericConversions with Serializable with Ordered[BigDecimal]","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["BigDecimal"]},{"name":"val CASE: 12","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["CASE"]},{"name":"def next(): String","description":"scala.util.matching.Regex$$MatchIterator","location":"api/scala/util/matching/Regex$$MatchIterator.html","searchKeys":["next"]},{"name":"def toDays: Long","description":"scala.concurrent.duration.Duration$$Infinite","location":"api/scala/concurrent/duration/Duration$$Infinite.html","searchKeys":["toDays"]},{"name":"def fill[T](n1: Int, n2: Int)(elem: => T)(evidence$13: ClassTag[T]): Array[Array[T]]","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["fill"]},{"name":"def copy(src: AnyRef, srcPos: Int, dest: AnyRef, destPos: Int, length: Int): Unit","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["copy"]},{"name":"val ordering: Ordering[K]","description":"scala.collection.mutable.TreeMap","location":"api/scala/collection/mutable/TreeMap.html","searchKeys":["ordering"]},{"name":"def &~(that: BigInt): BigInt","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["&~"]},{"name":"def %(x: Int): Int","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["%"]},{"name":"val x$4: Type[T4]","description":"scala.quoted.FromExpr$$Tuple17FromExpr","location":"api/scala/quoted/FromExpr$$Tuple17FromExpr.html","searchKeys":["x$4"]},{"name":"def fromURL(s: String)(codec: Codec): BufferedSource","description":"scala.io.Source$","location":"api/scala/io/Source$.html","searchKeys":["fromURL"]},{"name":"def newBuilder[A]: Builder[A, ArrayBuffer[A]]","description":"scala.collection.mutable.ArrayBuffer$","location":"api/scala/collection/mutable/ArrayBuffer$.html","searchKeys":["newBuilder"]},{"name":"type RecursiveThis <: TypeRepr","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["RecursiveThis"]},{"name":"val Float: FloatManifest","description":"scala.reflect.ClassTag$","location":"api/scala/reflect/ClassTag$.html","searchKeys":["Float"]},{"name":"def toDouble: Double","description":"scala.math.ScalaNumericAnyConversions","location":"api/scala/math/ScalaNumericAnyConversions.html","searchKeys":["toDouble"]},{"name":"object SortedSet extends Delegate[[A] =>> SortedSet[A]]","description":"scala.collection.mutable.SortedSet$","location":"api/scala/collection/mutable/SortedSet$.html","searchKeys":["SortedSet"]},{"name":"def wrapCharArray(xs: Array[Char]): ArraySeq[Char]","description":"scala.runtime.ScalaRunTime$","location":"api/scala/runtime/ScalaRunTime$.html","searchKeys":["wrapCharArray"]},{"name":"def foreach[U](f: T => U)(executor: ExecutionContext): Unit","description":"scala.concurrent.Future","location":"api/scala/concurrent/Future.html","searchKeys":["foreach"]},{"name":"def empty[A]: LazyList[A]","description":"scala.collection.immutable.LazyList$","location":"api/scala/collection/immutable/LazyList$.html","searchKeys":["empty"]},{"name":"val x$13: Type[T13]","description":"scala.quoted.FromExpr$$Tuple14FromExpr","location":"api/scala/quoted/FromExpr$$Tuple14FromExpr.html","searchKeys":["x$13"]},{"name":"def fromResource(resource: String, classLoader: ClassLoader)(codec: Codec): BufferedSource","description":"scala.io.Source$","location":"api/scala/io/Source$.html","searchKeys":["fromResource"]},{"name":"val x$5: Type[T5]","description":"scala.quoted.FromExpr$$Tuple9FromExpr","location":"api/scala/quoted/FromExpr$$Tuple9FromExpr.html","searchKeys":["x$5"]},{"name":"def createBufferedSource(inputStream: InputStream, bufferSize: Int, reset: () => Source, close: () => Unit)(codec: Codec): BufferedSource","description":"scala.io.Source$","location":"api/scala/io/Source$.html","searchKeys":["createBufferedSource"]},{"name":"def toMillis: Long","description":"scala.concurrent.duration.Duration","location":"api/scala/concurrent/duration/Duration.html","searchKeys":["toMillis"]},{"name":"def replace(start: Int, end: Int, str: String): StringBuilder","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["replace"]},{"name":"def apply(tup: (T1, T2))(using Quotes): Expr[(T1, T2)]","description":"scala.quoted.ToExpr$$Tuple2ToExpr","location":"api/scala/quoted/ToExpr$$Tuple2ToExpr.html","searchKeys":["apply"]},{"name":"def from[A](coll: IterableOnce[A]): LazyList[A]","description":"scala.collection.immutable.LazyList$","location":"api/scala/collection/immutable/LazyList$.html","searchKeys":["from"]},{"name":"given TypeParamClauseMethods","description":"scala.quoted.Quotes$reflectModule$TypeParamClauseMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeParamClauseMethods"]},{"name":"given TypeTreeMethods","description":"scala.quoted.Quotes$reflectModule$TypeTreeMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeTreeMethods"]},{"name":"val Char: CharManifest","description":"scala.reflect.ClassTag$","location":"api/scala/reflect/ClassTag$.html","searchKeys":["Char"]},{"name":"def unionWith[S >: T](that: IntMap[S], f: (Int, S, S) => S): IntMap[S]","description":"scala.collection.immutable.IntMap","location":"api/scala/collection/immutable/IntMap.html","searchKeys":["unionWith"]},{"name":"package scala.collection.immutable","description":"scala.collection.immutable","location":"api/scala/collection/immutable.html","searchKeys":["scala.collection.immutable"]},{"name":"def _13: T13","description":"scala.Product14","location":"api/scala/Product14.html","searchKeys":["_13"]},{"name":"class IntArrayHasSeqParStream(a: Array[Int])","description":"scala.collection.convert.StreamExtensions$IntArrayHasSeqParStream","location":"api/scala/collection/convert/StreamExtensions$IntArrayHasSeqParStream.html","searchKeys":["IntArrayHasSeqParStream"]},{"name":"def classTagCompanion: UnrolledBuffer","description":"scala.collection.mutable.UnrolledBuffer","location":"api/scala/collection/mutable/UnrolledBuffer.html","searchKeys":["classTagCompanion"]},{"name":"given ThisMethods","description":"scala.quoted.Quotes$reflectModule$ThisMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ThisMethods"]},{"name":"given ArrayOfBooleanToExpr: ToExpr[Array[Boolean]]","description":"scala.quoted.ToExpr$$ArrayOfBooleanToExpr$","location":"api/scala/quoted/ToExpr$$ArrayOfBooleanToExpr$.html","searchKeys":["ArrayOfBooleanToExpr"]},{"name":"def asJavaParStream: IntStream","description":"scala.collection.convert.StreamExtensions$CharArrayHasSeqParStream","location":"api/scala/collection/convert/StreamExtensions$CharArrayHasSeqParStream.html","searchKeys":["asJavaParStream"]},{"name":"def equiv(x: BigDecimal, y: BigDecimal): Boolean","description":"scala.math.Equiv$$BigDecimal$","location":"api/scala/math/Equiv$$BigDecimal$.html","searchKeys":["equiv"]},{"name":"def box(x: Byte): Byte","description":"scala.Byte$","location":"api/scala/Byte$.html","searchKeys":["box"]},{"name":"given Tuple13ToExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13]: ToExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)]","description":"scala.quoted.ToExpr$$Tuple13ToExpr","location":"api/scala/quoted/ToExpr$.html","searchKeys":["Tuple13ToExpr"]},{"name":"trait Product11[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11] extends Product","description":"scala.Product11","location":"api/scala/Product11.html","searchKeys":["Product11"]},{"name":"val x$12: Type[T12]","description":"scala.quoted.FromExpr$$Tuple17FromExpr","location":"api/scala/quoted/FromExpr$$Tuple17FromExpr.html","searchKeys":["x$12"]},{"name":"def bitSetFactory: SpecificIterableFactory[Int, C]","description":"scala.collection.BitSetOps","location":"api/scala/collection/BitSetOps.html","searchKeys":["bitSetFactory"]},{"name":"def flatMapInPlace(f: A => IterableOnce[A]): ListBuffer[A]","description":"scala.collection.mutable.ListBuffer","location":"api/scala/collection/mutable/ListBuffer.html","searchKeys":["flatMapInPlace"]},{"name":"class TailRec[+A]","description":"scala.util.control.TailCalls$$TailRec","location":"api/scala/util/control/TailCalls$$TailRec.html","searchKeys":["TailRec"]},{"name":"def +(x: Int): Int","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["+"]},{"name":"def compareTo(that: A): Int","description":"scala.math.Ordered","location":"api/scala/math/Ordered.html","searchKeys":["compareTo"]},{"name":"val Refined: RefinedModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Refined"]},{"name":"def classTag[T](ctag: ClassTag[T]): ClassTag[T]","description":"scala.reflect","location":"api/scala/reflect.html","searchKeys":["classTag"]},{"name":"def isRight: Boolean","description":"scala.util.Left","location":"api/scala/util/Left.html","searchKeys":["isRight"]},{"name":"object Console extends AnsiColor","description":"scala.Console$","location":"api/scala/Console$.html","searchKeys":["Console"]},{"name":"class AsJavaBinaryOperator[T](sf: (T, T) => T) extends BinaryOperator[T]","description":"scala.jdk.FunctionWrappers$$AsJavaBinaryOperator","location":"api/scala/jdk/FunctionWrappers$$AsJavaBinaryOperator.html","searchKeys":["AsJavaBinaryOperator"]},{"name":"def between(minInclusive: Float, maxExclusive: Float): Float","description":"scala.util.Random","location":"api/scala/util/Random.html","searchKeys":["between"]},{"name":"val UNITconst: 2","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["UNITconst"]},{"name":"def _3: T3","description":"scala.Product19","location":"api/scala/Product19.html","searchKeys":["_3"]},{"name":"val MAGENTA: \"\\033[35m\"","description":"scala.io.AnsiColor","location":"api/scala/io/AnsiColor.html","searchKeys":["MAGENTA"]},{"name":"def asScala: (T, U) => Unit","description":"scala.jdk.FunctionWrappers$$RichBiConsumerAsFunction2","location":"api/scala/jdk/FunctionWrappers$$RichBiConsumerAsFunction2.html","searchKeys":["asScala"]},{"name":"def findPrefixMatchOf(source: CharSequence): Option[Match]","description":"scala.util.matching.Regex","location":"api/scala/util/matching/Regex.html","searchKeys":["findPrefixMatchOf"]},{"name":"object IsSeq","description":"scala.collection.generic.IsSeq$","location":"api/scala/collection/generic/IsSeq$.html","searchKeys":["IsSeq"]},{"name":"class Take[A](underlying: SomeIndexedSeqOps[A], n: Int) extends Take[A] with IndexedSeqView[A]","description":"scala.collection.IndexedSeqView$$Take","location":"api/scala/collection/IndexedSeqView$$Take.html","searchKeys":["Take"]},{"name":"def setAsJavaSetConverter[A](s: Set[A]): AsJava[Set[A]]","description":"scala.collection.JavaConverters$","location":"api/scala/collection/JavaConverters$.html","searchKeys":["setAsJavaSetConverter"]},{"name":"def nestedSplice[T](q: Quotes)(x: Quotes => Expr[T]): T","description":"scala.quoted.runtime.Expr$","location":"api/scala/quoted/runtime/Expr$.html","searchKeys":["nestedSplice"]},{"name":"def alphanumeric: LazyList[Char]","description":"scala.util.Random","location":"api/scala/util/Random.html","searchKeys":["alphanumeric"]},{"name":"def newArray[Arr](componentType: Class[], returnType: Class[Arr], dimensions: Array[Int]): Arr","description":"scala.runtime.Arrays$","location":"api/scala/runtime/Arrays$.html","searchKeys":["newArray"]},{"name":"Contributing Knowledge","description":"","location":"docs/contributing/contribute-knowledge.html","searchKeys":["Contributing Knowledge"]},{"name":"class Take[+A](underlying: SomeIterableOps[A], n: Int) extends AbstractView[A]","description":"scala.collection.View$$Take","location":"api/scala/collection/View$$Take.html","searchKeys":["Take"]},{"name":"def isTypeDef: Boolean","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["isTypeDef"]},{"name":"val x$5: Type[T5]","description":"scala.quoted.FromExpr$$Tuple10FromExpr","location":"api/scala/quoted/FromExpr$$Tuple10FromExpr.html","searchKeys":["x$5"]},{"name":"def max(that: BigInt): BigInt","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["max"]},{"name":"def +(x: Short): Int","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["+"]},{"name":"def !=(x: Short): Boolean","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["!="]},{"name":"def param(idx: Int): TypeRepr","description":"scala.quoted.Quotes$reflectModule$TypeLambdaMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeLambdaMethods.html","searchKeys":["param"]},{"name":"def <=(x: Float): Boolean","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["<="]},{"name":"def apply(tup: (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17))(using Quotes): Expr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17)]","description":"scala.quoted.ToExpr$$Tuple17ToExpr","location":"api/scala/quoted/ToExpr$$Tuple17ToExpr.html","searchKeys":["apply"]},{"name":"trait IntStepper extends Stepper[Int]","description":"scala.collection.IntStepper","location":"api/scala/collection/IntStepper.html","searchKeys":["IntStepper"]},{"name":"def >(x: Long): Boolean","description":"scala.Double","location":"api/scala/Double.html","searchKeys":[">"]},{"name":"def withDefaultValue[V1 >: V](d: V1): Map[K, V1]","description":"scala.collection.immutable.Map","location":"api/scala/collection/immutable/Map.html","searchKeys":["withDefaultValue"]},{"name":"def asScalaFromFunction[T, R](jf: Function[T, R]): T => R","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asScalaFromFunction"]},{"name":"def <(x: Double): Boolean","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["<"]},{"name":"def negate(x: Short): Short","description":"scala.math.Numeric$$ShortIsIntegral","location":"api/scala/math/Numeric$$ShortIsIntegral.html","searchKeys":["negate"]},{"name":"trait JFunction1$mcZI$sp extends Any => Any with Serializable","description":"scala.runtime.java8.JFunction1$mcZI$sp","location":"api/scala/runtime/java8/JFunction1$mcZI$sp.html","searchKeys":["JFunction1$mcZI$sp"]},{"name":"class RichFunction1AsDoubleToLongFunction(underlying: Double => Long) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichFunction1AsDoubleToLongFunction","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsDoubleToLongFunction.html","searchKeys":["RichFunction1AsDoubleToLongFunction"]},{"name":"def _8: T8","description":"scala.Product21","location":"api/scala/Product21.html","searchKeys":["_8"]},{"name":"def gcd(that: BigInt): BigInt","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["gcd"]},{"name":"def newBuilder[A]: Builder[A, List[A]]","description":"scala.collection.immutable.List$","location":"api/scala/collection/immutable/List$.html","searchKeys":["newBuilder"]},{"name":"val x$35: FromExpr[T17]","description":"scala.quoted.FromExpr$$Tuple18FromExpr","location":"api/scala/quoted/FromExpr$$Tuple18FromExpr.html","searchKeys":["x$35"]},{"name":"given ClassTagToExpr[T]: ToExpr[ClassTag[T]]","description":"scala.quoted.ToExpr$$ClassTagToExpr","location":"api/scala/quoted/ToExpr$$ClassTagToExpr.html","searchKeys":["ClassTagToExpr"]},{"name":"class RichBiFunctionAsFunction2[T, U, R](underlying: BiFunction[T, U, R]) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichBiFunctionAsFunction2","location":"api/scala/jdk/FunctionWrappers$$RichBiFunctionAsFunction2.html","searchKeys":["RichBiFunctionAsFunction2"]},{"name":"def putIfAbsent(k: K, v: V): Option[V]","description":"scala.collection.concurrent.TrieMap","location":"api/scala/collection/concurrent/TrieMap.html","searchKeys":["putIfAbsent"]},{"name":"def elems: IArray[Object]","description":"scala.runtime.TupleXXL","location":"api/scala/runtime/TupleXXL.html","searchKeys":["elems"]},{"name":"def quickSort(a: Array[Double]): Unit","description":"scala.util.Sorting$","location":"api/scala/util/Sorting$.html","searchKeys":["quickSort"]},{"name":"def skipZeroes(at: Addr): Addr","description":"dotty.tools.tasty.TastyBuffer","location":"api/dotty/tools/tasty/TastyBuffer.html","searchKeys":["skipZeroes"]},{"name":"def *(x: Long): Long","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["*"]},{"name":"val x$1: Type[T1]","description":"scala.quoted.FromExpr$$Tuple10FromExpr","location":"api/scala/quoted/FromExpr$$Tuple10FromExpr.html","searchKeys":["x$1"]},{"name":"Metaprogramming","description":"","location":"docs/Metaprogramming/index.html","searchKeys":["Metaprogramming"]},{"name":"class targetName(name: String) extends StaticAnnotation","description":"scala.annotation.targetName","location":"api/scala/annotation/targetName.html","searchKeys":["targetName"]},{"name":"def seconds[C](c: C)(ev: Classifier[C]): R","description":"scala.concurrent.duration.DurationConversions","location":"api/scala/concurrent/duration/DurationConversions.html","searchKeys":["seconds"]},{"name":"def value: Boolean","description":"scala.runtime.LazyBoolean","location":"api/scala/runtime/LazyBoolean.html","searchKeys":["value"]},{"name":"def unapply(x: Applied): (TypeTree, List[Tree])","description":"scala.quoted.Quotes$reflectModule$AppliedModule","location":"api/scala/quoted/Quotes$reflectModule$AppliedModule.html","searchKeys":["unapply"]},{"name":"object Product18","description":"scala.Product18$","location":"api/scala/Product18$.html","searchKeys":["Product18"]},{"name":"given ExportMethods","description":"scala.quoted.Quotes$reflectModule$ExportMethods","location":"api/scala/quoted/Quotes$reflectModule$ExportMethods.html","searchKeys":["ExportMethods"]},{"name":"def take[T](n: Int): IArray[T]","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["take"]},{"name":"type Fold[T <: Tuple, Z, F <: ([_$2, _$3] =>> Any)] = T match {\n  case EmptyTuple => Z\n  case h *: t => F[h, Fold[t, Z, F]]\n}","description":"scala.Tuple$","location":"api/scala/Tuple$.html","searchKeys":["Fold"]},{"name":"val x$24: FromExpr[T12]","description":"scala.quoted.FromExpr$$Tuple12FromExpr","location":"api/scala/quoted/FromExpr$$Tuple12FromExpr.html","searchKeys":["x$24"]},{"name":"class StringOps(s: String) extends AnyVal","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["StringOps"]},{"name":"val MATCHtype: 190","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["MATCHtype"]},{"name":"def apply(v1: T1, v2: T2): R","description":"scala.Function2","location":"api/scala/Function2.html","searchKeys":["apply"]},{"name":"class RichFunction1AsConsumer[T](underlying: T => Unit) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichFunction1AsConsumer","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsConsumer.html","searchKeys":["RichFunction1AsConsumer"]},{"name":"def find[T](p: T => Boolean): Option[T]","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["find"]},{"name":"def unapply(x: WildcardTypeTree): true","description":"scala.quoted.Quotes$reflectModule$WildcardTypeTreeModule","location":"api/scala/quoted/Quotes$reflectModule$WildcardTypeTreeModule.html","searchKeys":["unapply"]},{"name":"def apply(i: Int): Byte","description":"scala.collection.immutable.ArraySeq$$ofByte","location":"api/scala/collection/immutable/ArraySeq$$ofByte.html","searchKeys":["apply"]},{"name":"val IndexedSeq: IndexedSeq","description":"scala","location":"api/scala.html","searchKeys":["IndexedSeq"]},{"name":"def map[U](f: T => U): Try[U]","description":"scala.util.Try$WithFilter","location":"api/scala/util/Try$WithFilter.html","searchKeys":["map"]},{"name":"def _1: T1","description":"scala.Product14","location":"api/scala/Product14.html","searchKeys":["_1"]},{"name":"def apply(x: Int, xs: Int*): Array[Int]","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["apply"]},{"name":"def unfold[A, S](init: S)(f: S => Option[(A, S)]): CC[A]","description":"scala.collection.IterableFactory","location":"api/scala/collection/IterableFactory.html","searchKeys":["unfold"]},{"name":"given ByNameTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ByNameTypeTest"]},{"name":"def apply(x: String): StringConstant","description":"scala.quoted.Quotes$reflectModule$StringConstantModule","location":"api/scala/quoted/Quotes$reflectModule$StringConstantModule.html","searchKeys":["apply"]},{"name":"def _14: T14","description":"scala.Product17","location":"api/scala/Product17.html","searchKeys":["_14"]},{"name":"def isInstanceOfNonEmptyTuple(x: Any): Boolean","description":"scala.runtime.Tuples$","location":"api/scala/runtime/Tuples$.html","searchKeys":["isInstanceOfNonEmptyTuple"]},{"name":"def apply(x: Short, xs: Short*): Array[Short]","description":"scala.Array$","location":"api/scala/Array$.html","searchKeys":["apply"]},{"name":"Opaque Type Aliases","description":"","location":"docs/reference/other-new-features/opaques.html","searchKeys":["Opaque Type Aliases"]},{"name":"def unsorted: Map[K, V]","description":"scala.collection.SortedMapOps","location":"api/scala/collection/SortedMapOps.html","searchKeys":["unsorted"]},{"name":"def !=(x: Long): Boolean","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["!="]},{"name":"val x$1: Type[T1]","description":"scala.quoted.FromExpr$$Tuple5FromExpr","location":"api/scala/quoted/FromExpr$$Tuple5FromExpr.html","searchKeys":["x$1"]},{"name":"def intersectionWith[S, R](that: IntMap[S], f: (Int, T, S) => R): IntMap[R]","description":"scala.collection.immutable.IntMap","location":"api/scala/collection/immutable/IntMap.html","searchKeys":["intersectionWith"]},{"name":"val preferIPv6Addresses: BooleanProp","description":"scala.sys.SystemProperties$","location":"api/scala/sys/SystemProperties$.html","searchKeys":["preferIPv6Addresses"]},{"name":"given TermParamClauseMethods","description":"scala.quoted.Quotes$reflectModule$TermParamClauseMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TermParamClauseMethods"]},{"name":"def matched: String","description":"scala.util.matching.Regex$$MatchData","location":"api/scala/util/matching/Regex$$MatchData.html","searchKeys":["matched"]},{"name":"def _5: T5","description":"scala.Product20","location":"api/scala/Product20.html","searchKeys":["_5"]},{"name":"def unapply[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13](x: Product13[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13]): Option[Product13[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13]]","description":"scala.Product13$","location":"api/scala/Product13$.html","searchKeys":["unapply"]},{"name":"val x$25: FromExpr[T5]","description":"scala.quoted.FromExpr$$Tuple20FromExpr","location":"api/scala/quoted/FromExpr$$Tuple20FromExpr.html","searchKeys":["x$25"]},{"name":"def find(receiver: Class[]): Method","description":"scala.runtime.StructuralCallSite","location":"api/scala/runtime/StructuralCallSite.html","searchKeys":["find"]},{"name":"def enrichAsJavaLongSupplier(sf: () => Long): RichFunction0AsLongSupplier","description":"scala.jdk.Priority0FunctionExtensions","location":"api/scala/jdk/Priority0FunctionExtensions.html","searchKeys":["enrichAsJavaLongSupplier"]},{"name":"def isPosInfinity: Boolean","description":"scala.runtime.RichFloat","location":"api/scala/runtime/RichFloat.html","searchKeys":["isPosInfinity"]},{"name":"def update(index: Int, elem: Double): Unit","description":"scala.collection.mutable.ArraySeq$$ofDouble","location":"api/scala/collection/mutable/ArraySeq$$ofDouble.html","searchKeys":["update"]},{"name":"def returning[T](op: ReturnThrowable[T] => T): T","description":"scala.util.control.NonLocalReturns$","location":"api/scala/util/control/NonLocalReturns$.html","searchKeys":["returning"]},{"name":"def ^(x: Short): Int","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["^"]},{"name":"def removeAll(p: A => Boolean): Seq[A]","description":"scala.collection.mutable.ArrayDeque","location":"api/scala/collection/mutable/ArrayDeque.html","searchKeys":["removeAll"]},{"name":"def floorMod(x: Int, y: Int): Int","description":"scala.math","location":"api/scala/math.html","searchKeys":["floorMod"]},{"name":"val x$14: FromExpr[T2]","description":"scala.quoted.FromExpr$$Tuple12FromExpr","location":"api/scala/quoted/FromExpr$$Tuple12FromExpr.html","searchKeys":["x$14"]},{"name":"def apply(cond: Term, body: Term): While","description":"scala.quoted.Quotes$reflectModule$WhileModule","location":"api/scala/quoted/Quotes$reflectModule$WhileModule.html","searchKeys":["apply"]},{"name":"trait Function4[-T1, -T2, -T3, -T4, +R] extends AnyRef","description":"scala.Function4","location":"api/scala/Function4.html","searchKeys":["Function4"]},{"name":"def sqrt(x: Double): Double","description":"scala.math","location":"api/scala/math.html","searchKeys":["sqrt"]},{"name":"def keyExists[T](key: String): BooleanProp","description":"scala.sys.BooleanProp$","location":"api/scala/sys/BooleanProp$.html","searchKeys":["keyExists"]},{"name":"def last: Char","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["last"]},{"name":"def apply(n: Int): Float","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["apply"]},{"name":"def from[K, V](it: IterableOnce[(K, V)])(evidence$1: Ordering[K]): TreeMap[K, V]","description":"scala.collection.mutable.TreeMap$","location":"api/scala/collection/mutable/TreeMap$.html","searchKeys":["from"]},{"name":"trait Product18[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16, +T17, +T18] extends Product","description":"scala.Product18","location":"api/scala/Product18.html","searchKeys":["Product18"]},{"name":"def tailXXL: TupleXXL","description":"scala.runtime.TupleXXL","location":"api/scala/runtime/TupleXXL.html","searchKeys":["tailXXL"]},{"name":"def asJavaSeqStream: IntStream","description":"scala.collection.convert.StreamExtensions$ShortArrayHasSeqParStream","location":"api/scala/collection/convert/StreamExtensions$ShortArrayHasSeqParStream.html","searchKeys":["asJavaSeqStream"]},{"name":"trait TotalOrdering extends Ordering[Double]","description":"scala.math.Ordering$$Double$$TotalOrdering","location":"api/scala/math/Ordering$$Double$$TotalOrdering.html","searchKeys":["TotalOrdering"]},{"name":"def toDouble: Double","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["toDouble"]},{"name":"def #<<(i: => InputStream): ProcessBuilder","description":"scala.sys.process.ProcessBuilder$$FileBuilder","location":"api/scala/sys/process/ProcessBuilder$$FileBuilder.html","searchKeys":["#<<"]},{"name":"def asJava: BiFunction[T, U, R]","description":"scala.jdk.FunctionWrappers$$RichFunction2AsBiFunction","location":"api/scala/jdk/FunctionWrappers$$RichFunction2AsBiFunction.html","searchKeys":["asJava"]},{"name":"class RichIntUnaryOperatorAsFunction1(underlying: IntUnaryOperator) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichIntUnaryOperatorAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichIntUnaryOperatorAsFunction1.html","searchKeys":["RichIntUnaryOperatorAsFunction1"]},{"name":"def nano[C](c: C)(ev: Classifier[C]): R","description":"scala.concurrent.duration.DurationConversions","location":"api/scala/concurrent/duration/DurationConversions.html","searchKeys":["nano"]},{"name":"def asJava: ToLongBiFunction[T, U]","description":"scala.jdk.FunctionWrappers$$RichFunction2AsToLongBiFunction","location":"api/scala/jdk/FunctionWrappers$$RichFunction2AsToLongBiFunction.html","searchKeys":["asJava"]},{"name":"def emptyFloatIArray: IArray[Float]","description":"scala.IArray$package$$IArray$","location":"api/scala/IArray$package$$IArray$.html","searchKeys":["emptyFloatIArray"]},{"name":"def seqEquiv[CC <: ([X] =>> Seq[X]), T](eqv: Equiv[T]): Equiv[CC[T]]","description":"scala.math.Equiv$$ExtraImplicits","location":"api/scala/math/Equiv$$ExtraImplicits.html","searchKeys":["seqEquiv"]},{"name":"def addOne(x: Char): StringBuilder","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["addOne"]},{"name":"def ==(x: Long): Boolean","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["=="]},{"name":"Scala Syntax Summary","description":"","location":"docs/internals/syntax-3.1.html","searchKeys":["Scala Syntax Summary"]},{"name":"def pos: Int","description":"scala.io.Source","location":"api/scala/io/Source.html","searchKeys":["pos"]},{"name":"given TermTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TermTypeTest"]},{"name":"def apply$mcZF$sp(v1: Float): Boolean","description":"scala.runtime.java8.JFunction1$mcZF$sp","location":"api/scala/runtime/java8/JFunction1$mcZF$sp.html","searchKeys":["apply$mcZF$sp"]},{"name":"object FromDigits","description":"scala.util.FromDigits$","location":"api/scala/util/FromDigits$.html","searchKeys":["FromDigits"]},{"name":"def asScala: () => Long","description":"scala.jdk.FunctionWrappers$$RichLongSupplierAsFunction0","location":"api/scala/jdk/FunctionWrappers$$RichLongSupplierAsFunction0.html","searchKeys":["asScala"]},{"name":"trait Ordering[T] extends Comparator[T] with PartialOrdering[T] with Serializable","description":"scala.math.Ordering","location":"api/scala/math/Ordering.html","searchKeys":["Ordering"]},{"name":"def last[T]: T","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["last"]},{"name":"def map[K2 <: AnyRef, V2](f: (K, V) => (K2, V2))(dummy: DummyImplicit): AnyRefMap[K2, V2]","description":"scala.collection.mutable.AnyRefMap","location":"api/scala/collection/mutable/AnyRefMap.html","searchKeys":["map"]},{"name":"def supplier[A]: Supplier[AnyAccumulator[A]]","description":"scala.jdk.AnyAccumulator$","location":"api/scala/jdk/AnyAccumulator$.html","searchKeys":["supplier"]},{"name":"class Map[+A, +B](underlying: SomeIterableOps[A], f: A => B) extends AbstractView[B]","description":"scala.collection.View$$Map","location":"api/scala/collection/View$$Map.html","searchKeys":["Map"]},{"name":"val groupNames: Seq[String]","description":"scala.util.matching.Regex$$MatchData","location":"api/scala/util/matching/Regex$$MatchData.html","searchKeys":["groupNames"]},{"name":"object Implicits","description":"scala.concurrent.ExecutionContext$$Implicits$","location":"api/scala/concurrent/ExecutionContext$$Implicits$.html","searchKeys":["Implicits"]},{"name":"def >(x: Int): Boolean","description":"scala.Short","location":"api/scala/Short.html","searchKeys":[">"]},{"name":"val end: Int","description":"scala.collection.immutable.Range","location":"api/scala/collection/immutable/Range.html","searchKeys":["end"]},{"name":"trait DefaultSerializable extends Serializable","description":"scala.collection.generic.DefaultSerializable","location":"api/scala/collection/generic/DefaultSerializable.html","searchKeys":["DefaultSerializable"]},{"name":"trait SuperModule","description":"scala.quoted.Quotes$reflectModule$SuperModule","location":"api/scala/quoted/Quotes$reflectModule$SuperModule.html","searchKeys":["SuperModule"]},{"name":"def toLong: Long","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["toLong"]},{"name":"def round: Long","description":"scala.runtime.RichLong","location":"api/scala/runtime/RichLong.html","searchKeys":["round"]},{"name":"def _7: T7","description":"scala.Product14","location":"api/scala/Product14.html","searchKeys":["_7"]},{"name":"def newBuilder[A](evidence$3: ClassTag[A]): UnrolledBuffer[A]","description":"scala.collection.mutable.UnrolledBuffer$","location":"api/scala/collection/mutable/UnrolledBuffer$.html","searchKeys":["newBuilder"]},{"name":"def apply$mcIJJ$sp(v1: Long, v2: Long): Int","description":"scala.runtime.java8.JFunction2$mcIJJ$sp","location":"api/scala/runtime/java8/JFunction2$mcIJJ$sp.html","searchKeys":["apply$mcIJJ$sp"]},{"name":"def ==(x: Char): Boolean","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["=="]},{"name":"package scala.collection.convert","description":"scala.collection.convert","location":"api/scala/collection/convert.html","searchKeys":["scala.collection.convert"]},{"name":"def newBuilder[A]: Builder[A, LinkedHashSet[A]]","description":"scala.collection.mutable.LinkedHashSet$","location":"api/scala/collection/mutable/LinkedHashSet$.html","searchKeys":["newBuilder"]},{"name":"def length: Int","description":"scala.collection.mutable.ArraySeq$$ofInt","location":"api/scala/collection/mutable/ArraySeq$$ofInt.html","searchKeys":["length"]},{"name":"def replaceAllIn(target: CharSequence, replacer: Match => String): String","description":"scala.util.matching.Regex","location":"api/scala/util/matching/Regex.html","searchKeys":["replaceAllIn"]},{"name":"def tupled: (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) => R","description":"scala.Function11","location":"api/scala/Function11.html","searchKeys":["tupled"]},{"name":"val PRIVATEqualified: 98","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["PRIVATEqualified"]},{"name":"def asJava: LongToDoubleFunction","description":"scala.jdk.FunctionWrappers$$RichFunction1AsLongToDoubleFunction","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsLongToDoubleFunction.html","searchKeys":["asJava"]},{"name":"def unapply(tree: Ident): Some[String]","description":"scala.quoted.Quotes$reflectModule$IdentModule","location":"api/scala/quoted/Quotes$reflectModule$IdentModule.html","searchKeys":["unapply"]},{"name":"trait InferredModule","description":"scala.quoted.Quotes$reflectModule$InferredModule","location":"api/scala/quoted/Quotes$reflectModule$InferredModule.html","searchKeys":["InferredModule"]},{"name":"trait WildcardTypeTreeModule","description":"scala.quoted.Quotes$reflectModule$WildcardTypeTreeModule","location":"api/scala/quoted/Quotes$reflectModule$WildcardTypeTreeModule.html","searchKeys":["WildcardTypeTreeModule"]},{"name":"Announcing Dotty 0.3.0-RC2","description":"","location":"blog/2017/09/07/third-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.3.0-RC2"]},{"name":"def collect[B](pf: PartialFunction[A, B]): Option[B]","description":"scala.Option","location":"api/scala/Option.html","searchKeys":["collect"]},{"name":"def asScala: Double => Boolean","description":"scala.jdk.FunctionWrappers$$RichDoublePredicateAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichDoublePredicateAsFunction1.html","searchKeys":["asScala"]},{"name":"def apply(index: Int): Unit","description":"scala.collection.mutable.ArraySeq$$ofUnit","location":"api/scala/collection/mutable/ArraySeq$$ofUnit.html","searchKeys":["apply"]},{"name":"def &(x: Byte): Int","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["&"]},{"name":"def Tuple5[T1, T2, T3, T4, T5](ord1: Ordering[T1], ord2: Ordering[T2], ord3: Ordering[T3], ord4: Ordering[T4], ord5: Ordering[T5]): Ordering[(T1, T2, T3, T4, T5)]","description":"scala.math.Ordering$","location":"api/scala/math/Ordering$.html","searchKeys":["Tuple5"]},{"name":"def _17: T17","description":"scala.Product22","location":"api/scala/Product22.html","searchKeys":["_17"]},{"name":"val x$12: FromExpr[T1]","description":"scala.quoted.FromExpr$$Tuple11FromExpr","location":"api/scala/quoted/FromExpr$$Tuple11FromExpr.html","searchKeys":["x$12"]},{"name":"class Left[+A, +B](value: A) extends Either[A, B]","description":"scala.util.Left","location":"api/scala/util/Left.html","searchKeys":["Left"]},{"name":"def unzip[A1, A2](asPair: A => (A1, A2), ct1: ClassTag[A1], ct2: ClassTag[A2]): (Array[A1], Array[A2])","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["unzip"]},{"name":"def log1p(x: Double): Double","description":"scala.math","location":"api/scala/math.html","searchKeys":["log1p"]},{"name":"def ensureAccessible(m: Method): Method","description":"scala.runtime.ScalaRunTime$","location":"api/scala/runtime/ScalaRunTime$.html","searchKeys":["ensureAccessible"]},{"name":"Announcing Dotty 0.7.0 and 0.8.0-RC1","description":"","location":"blog/2018/04/27/eighth-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.7.0 and 0.8.0-RC1"]},{"name":"def apply$mcVDI$sp(v1: Double, v2: Int): Unit","description":"scala.runtime.java8.JFunction2$mcVDI$sp","location":"api/scala/runtime/java8/JFunction2$mcVDI$sp.html","searchKeys":["apply$mcVDI$sp"]},{"name":"class ofChar(val array: Array[Char]) extends ArraySeq[Char]","description":"scala.collection.mutable.ArraySeq$$ofChar","location":"api/scala/collection/mutable/ArraySeq$$ofChar.html","searchKeys":["ofChar"]},{"name":"val x$40: FromExpr[T18]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["x$40"]},{"name":"given given_FromString_Long: FromString[Long]","description":"scala.util.CommandLineParser$$FromString$$given_FromString_Long$","location":"api/scala/util/CommandLineParser$$FromString$$given_FromString_Long$.html","searchKeys":["given_FromString_Long"]},{"name":"def !!: String","description":"scala.sys.process.ProcessBuilder","location":"api/scala/sys/process/ProcessBuilder.html","searchKeys":["!!"]},{"name":"def fileToProcess(file: File): FileBuilder","description":"scala.sys.process.ProcessImplicits","location":"api/scala/sys/process/ProcessImplicits.html","searchKeys":["fileToProcess"]},{"name":"val Constant: ConstantModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["Constant"]},{"name":"def isFunctionType: Boolean","description":"scala.quoted.Quotes$reflectModule$TypeReprMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html","searchKeys":["isFunctionType"]},{"name":"def asJavaParKeyIntStream[V](m: Map[Integer, V]): IntStream","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaParKeyIntStream"]},{"name":"def flatMap[B](f: Char => IterableOnce[B]): IndexedSeq[B]","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["flatMap"]},{"name":"def apply$mcJF$sp(v1: Float): Long","description":"scala.runtime.java8.JFunction1$mcJF$sp","location":"api/scala/runtime/java8/JFunction1$mcJF$sp.html","searchKeys":["apply$mcJF$sp"]},{"name":"given ValDefMethods","description":"scala.quoted.Quotes$reflectModule$ValDefMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["ValDefMethods"]},{"name":"def unapply(x: RecursiveThis): Some[RecursiveType]","description":"scala.quoted.Quotes$reflectModule$RecursiveThisModule","location":"api/scala/quoted/Quotes$reflectModule$RecursiveThisModule.html","searchKeys":["unapply"]},{"name":"def dropRightInPlace(n: Int): Buffer[A]","description":"scala.collection.mutable.Buffer","location":"api/scala/collection/mutable/Buffer.html","searchKeys":["dropRightInPlace"]},{"name":"class ofRef[T <: AnyRef](val unsafeArray: Array[T]) extends ArraySeq[T]","description":"scala.collection.immutable.ArraySeq$$ofRef","location":"api/scala/collection/immutable/ArraySeq$$ofRef.html","searchKeys":["ofRef"]},{"name":"def take(n: Int): String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["take"]},{"name":"def clear(): Unit","description":"scala.collection.mutable.ImmutableBuilder","location":"api/scala/collection/mutable/ImmutableBuilder.html","searchKeys":["clear"]},{"name":"def %(that: BigInt): BigInt","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["%"]},{"name":"def resType: TypeRepr","description":"scala.quoted.Quotes$reflectModule$LambdaTypeMethods","location":"api/scala/quoted/Quotes$reflectModule$LambdaTypeMethods.html","searchKeys":["resType"]},{"name":"def apply$mcIIJ$sp(v1: Int, v2: Long): Int","description":"scala.runtime.java8.JFunction2$mcIIJ$sp","location":"api/scala/runtime/java8/JFunction2$mcIIJ$sp.html","searchKeys":["apply$mcIIJ$sp"]},{"name":"def flatMap[A1 >: A, B1](f: B => Either[A1, B1]): Either[A1, B1]","description":"scala.util.Either$$RightProjection","location":"api/scala/util/Either$$RightProjection.html","searchKeys":["flatMap"]},{"name":"def asJava[K, V](m: Map[K, V]): Map[K, V]","description":"scala.collection.convert.AsJavaConverters","location":"api/scala/collection/convert/AsJavaConverters.html","searchKeys":["asJava"]},{"name":"def addOne(elem: (K, V)): TreeMap[K, V]","description":"scala.collection.mutable.TreeMap","location":"api/scala/collection/mutable/TreeMap.html","searchKeys":["addOne"]},{"name":"given Tuple10FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10](using val x$1: Type[T1], val x$2: Type[T2], val x$3: Type[T3], val x$4: Type[T4], val x$5: Type[T5], val x$6: Type[T6], val x$7: Type[T7], val x$8: Type[T8], val x$9: Type[T9], val x$10: Type[T10], val x$11: FromExpr[T1], val x$12: FromExpr[T2], val x$13: FromExpr[T3], val x$14: FromExpr[T4], val x$15: FromExpr[T5], val x$16: FromExpr[T6], val x$17: FromExpr[T7], val x$18: FromExpr[T8], val x$19: FromExpr[T9], val x$20: FromExpr[T10]): FromExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)]","description":"scala.quoted.FromExpr$$Tuple10FromExpr","location":"api/scala/quoted/FromExpr$$Tuple10FromExpr.html","searchKeys":["Tuple10FromExpr"]},{"name":"def setScale(scale: Int): BigDecimal","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["setScale"]},{"name":"val x$18: FromExpr[T4]","description":"scala.quoted.FromExpr$$Tuple14FromExpr","location":"api/scala/quoted/FromExpr$$Tuple14FromExpr.html","searchKeys":["x$18"]},{"name":"val shortStreamShape: StreamShape[Short, IntStream, IntStepper]","description":"scala.collection.convert.StreamExtensions$$StreamShape$","location":"api/scala/collection/convert/StreamExtensions$$StreamShape$.html","searchKeys":["shortStreamShape"]},{"name":"def rangeImpl(from: Option[K], until: Option[K]): WithDefault[K, V]","description":"scala.collection.immutable.SortedMap$$WithDefault","location":"api/scala/collection/immutable/SortedMap$$WithDefault.html","searchKeys":["rangeImpl"]},{"name":"def updated[B >: A](index: Int, elem: B)(evidence$28: ClassTag[B]): Array[B]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["updated"]},{"name":"def abs(x: Double): Double","description":"scala.math","location":"api/scala/math.html","searchKeys":["abs"]},{"name":"def toInt: Int","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["toInt"]},{"name":"def %(x: Long): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["%"]},{"name":"def astTagToString(tag: Int): String","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["astTagToString"]},{"name":"def unapply[TypeBindings <: Tuple, Tup <: Tuple](scrutinee: Type[ <: AnyKind])(using pattern: Type[ <: AnyKind]): Option[Tup]","description":"scala.quoted.runtime.QuoteMatching$TypeMatchModule","location":"api/scala/quoted/runtime/QuoteMatching$TypeMatchModule.html","searchKeys":["unapply"]},{"name":"trait Set[A] extends Iterable[A] with SetOps[A, [A] =>> Set[A], Set[A]] with Equals with IterableFactoryDefaults[A, [A] =>> Set[A]]","description":"scala.collection.Set","location":"api/scala/collection/Set.html","searchKeys":["Set"]},{"name":"given TypeBoundsTreeMethods","description":"scala.quoted.Quotes$reflectModule$TypeBoundsTreeMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeBoundsTreeMethods.html","searchKeys":["TypeBoundsTreeMethods"]},{"name":"given TypeTreeMethods","description":"scala.quoted.Quotes$reflectModule$TypeTreeMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeTreeMethods.html","searchKeys":["TypeTreeMethods"]},{"name":"class Tuple16[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16](_1: T1, _2: T2, _3: T3, _4: T4, _5: T5, _6: T6, _7: T7, _8: T8, _9: T9, _10: T10, _11: T11, _12: T12, _13: T13, _14: T14, _15: T15, _16: T16) extends Product16[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]","description":"scala.Tuple16","location":"api/scala/Tuple16.html","searchKeys":["Tuple16"]},{"name":"def toScala[C1](factory: Factory[Int, C1])(info: AccumulatorFactoryInfo[Int, C1]): C1","description":"scala.collection.convert.StreamExtensions$IntStreamHasToScala","location":"api/scala/collection/convert/StreamExtensions$IntStreamHasToScala.html","searchKeys":["toScala"]},{"name":"def asJava: IntToDoubleFunction","description":"scala.jdk.FunctionWrappers$$RichFunction1AsIntToDoubleFunction","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsIntToDoubleFunction.html","searchKeys":["asJava"]},{"name":"def <=(x: Short): Boolean","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["<="]},{"name":"trait MapOps[K, +V, +CC <: ([X, Y] =>> MapOps[X, Y, CC, ]), +C <: MapOps[K, V, CC, C]] extends IterableOps[(K, V), [A] =>> Iterable[A], C] with MapOps[K, V, CC, C]","description":"scala.collection.immutable.MapOps","location":"api/scala/collection/immutable/MapOps.html","searchKeys":["MapOps"]},{"name":"val shortStepperShape: StepperShape[Short, IntStepper]","description":"scala.collection.StepperShape$","location":"api/scala/collection/StepperShape$.html","searchKeys":["shortStepperShape"]},{"name":"def from[K, V](it: IterableOnce[(K, V)])(evidence$46: Ordering[K]): CC[K, V]","description":"scala.collection.SortedMapFactory$$Delegate","location":"api/scala/collection/SortedMapFactory$$Delegate.html","searchKeys":["from"]},{"name":"def span(p: Char => Boolean): (String, String)","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["span"]},{"name":"object FromExpr","description":"scala.quoted.FromExpr$","location":"api/scala/quoted/FromExpr$.html","searchKeys":["FromExpr"]},{"name":"def box(x: Boolean): Boolean","description":"scala.Boolean$","location":"api/scala/Boolean$.html","searchKeys":["box"]},{"name":"def %(x: Float): Float","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["%"]},{"name":"def supplier: Supplier[DoubleAccumulator]","description":"scala.jdk.DoubleAccumulator$","location":"api/scala/jdk/DoubleAccumulator$.html","searchKeys":["supplier"]},{"name":"val Null: ClassTag[Null]","description":"scala.reflect.ClassTag$","location":"api/scala/reflect/ClassTag$.html","searchKeys":["Null"]},{"name":"def split(separators: Array[Char]): Array[String]","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["split"]},{"name":"def apply(v1: T1, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, v7: T7, v8: T8): R","description":"scala.Function8","location":"api/scala/Function8.html","searchKeys":["apply"]},{"name":"def _10: T10","description":"scala.Product22","location":"api/scala/Product22.html","searchKeys":["_10"]},{"name":"val jByteStepperShape: StepperShape[Byte, IntStepper]","description":"scala.collection.StepperShape$","location":"api/scala/collection/StepperShape$.html","searchKeys":["jByteStepperShape"]},{"name":"def apply(map: Map[T, U])(using Quotes): Expr[Map[T, U]]","description":"scala.quoted.ToExpr$$MapToExpr","location":"api/scala/quoted/ToExpr$$MapToExpr.html","searchKeys":["apply"]},{"name":"trait UnanchoredRegex extends Regex","description":"scala.util.matching.UnanchoredRegex","location":"api/scala/util/matching/UnanchoredRegex.html","searchKeys":["UnanchoredRegex"]},{"name":"def fromSpecific(it: IterableOnce[Int]): BitSet","description":"scala.collection.BitSet$","location":"api/scala/collection/BitSet$.html","searchKeys":["fromSpecific"]},{"name":"def Local: Flags","description":"scala.quoted.Quotes$reflectModule$FlagsModule","location":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html","searchKeys":["Local"]},{"name":"given arrayOps","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["arrayOps"]},{"name":"def +(x: Int): Double","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["+"]},{"name":"object LambdaDeserialize","description":"scala.runtime.LambdaDeserialize$","location":"api/scala/runtime/LambdaDeserialize$.html","searchKeys":["LambdaDeserialize"]},{"name":"object Stream extends SeqFactory[[A] =>> Stream[A]]","description":"scala.collection.immutable.Stream$","location":"api/scala/collection/immutable/Stream$.html","searchKeys":["Stream"]},{"name":"trait postfixOps","description":"scala.languageFeature$$postfixOps","location":"api/scala/languageFeature$$postfixOps.html","searchKeys":["postfixOps"]},{"name":"val SELECTin: 176","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["SELECTin"]},{"name":"class RichOptionalLong(o: OptionalLong) extends AnyVal","description":"scala.jdk.OptionConverters$$RichOptionalLong","location":"api/scala/jdk/OptionConverters$$RichOptionalLong.html","searchKeys":["RichOptionalLong"]},{"name":"def apply$mcVJJ$sp(v1: Long, v2: Long): Unit","description":"scala.runtime.java8.JFunction2$mcVJJ$sp","location":"api/scala/runtime/java8/JFunction2$mcVJJ$sp.html","searchKeys":["apply$mcVJJ$sp"]},{"name":"def distinct: Iterator[A]","description":"scala.collection.Iterator","location":"api/scala/collection/Iterator.html","searchKeys":["distinct"]},{"name":"def filterToOption[A1](p: B => Boolean): Option[Either[A1, B]]","description":"scala.util.Either$$RightProjection","location":"api/scala/util/Either$$RightProjection.html","searchKeys":["filterToOption"]},{"name":"def groupCount: Int","description":"scala.util.matching.Regex$$MatchData","location":"api/scala/util/matching/Regex$$MatchData.html","searchKeys":["groupCount"]},{"name":"val x$30: FromExpr[T8]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["x$30"]},{"name":"def sorted[B >: A](ord: Ordering[B]): C","description":"scala.collection.SeqOps","location":"api/scala/collection/SeqOps.html","searchKeys":["sorted"]},{"name":"def _4: T4","description":"scala.Product19","location":"api/scala/Product19.html","searchKeys":["_4"]},{"name":"given TypeProjectionMethods","description":"scala.quoted.Quotes$reflectModule$TypeProjectionMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["TypeProjectionMethods"]},{"name":"trait ApplyModule","description":"scala.quoted.Quotes$reflectModule$ApplyModule","location":"api/scala/quoted/Quotes$reflectModule$ApplyModule.html","searchKeys":["ApplyModule"]},{"name":"def select(sym: Symbol): TypeRepr","description":"scala.quoted.Quotes$reflectModule$TypeReprMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html","searchKeys":["select"]},{"name":"def apply(x: T)(using Quotes): Expr[T]","description":"scala.quoted.ToExpr$$ByteToExpr","location":"api/scala/quoted/ToExpr$$ByteToExpr.html","searchKeys":["apply"]},{"name":"trait CanAwait","description":"scala.concurrent.CanAwait","location":"api/scala/concurrent/CanAwait.html","searchKeys":["CanAwait"]},{"name":"def filter(f: A => Boolean): Iterator[A]","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["filter"]},{"name":"class DoubleMult(f: Double) extends AnyVal","description":"scala.concurrent.duration.package$$DoubleMult","location":"api/scala/concurrent/duration/package$$DoubleMult.html","searchKeys":["DoubleMult"]},{"name":"def uncurried[T1, T2, T3, R](f: T1 => T2 => T3 => R): (T1, T2, T3) => R","description":"scala.Function$","location":"api/scala/Function$.html","searchKeys":["uncurried"]},{"name":"def atan2(y: Double, x: Double): Double","description":"scala.math","location":"api/scala/math.html","searchKeys":["atan2"]},{"name":"def iterator: Iterator[A]","description":"scala.collection.immutable.Set$$Set1","location":"api/scala/collection/immutable/Set$$Set1.html","searchKeys":["iterator"]},{"name":"class ElementWiseExtractor[-A, +B] extends AnyVal","description":"scala.PartialFunction$$ElementWiseExtractor","location":"api/scala/PartialFunction$$ElementWiseExtractor.html","searchKeys":["ElementWiseExtractor"]},{"name":"given NewMethods","description":"scala.quoted.Quotes$reflectModule$NewMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["NewMethods"]},{"name":"val defaultMathContext: MathContext","description":"scala.math.BigDecimal$","location":"api/scala/math/BigDecimal$.html","searchKeys":["defaultMathContext"]},{"name":"def %(x: Byte): Int","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["%"]},{"name":"val APPLY: 136","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["APPLY"]},{"name":"def toInt(x: Long): Int","description":"scala.math.Numeric$$LongIsIntegral","location":"api/scala/math/Numeric$$LongIsIntegral.html","searchKeys":["toInt"]},{"name":"def unapply(m: Match): Some[String]","description":"scala.util.matching.Regex$$Match$","location":"api/scala/util/matching/Regex$$Match$.html","searchKeys":["unapply"]},{"name":"trait IndexedSeqOps[+A, +CC <: ([_$2] =>> Any), +C] extends SeqOps[A, CC, C] with IndexedSeqOps[A, CC, C]","description":"scala.collection.immutable.IndexedSeqOps","location":"api/scala/collection/immutable/IndexedSeqOps.html","searchKeys":["IndexedSeqOps"]},{"name":"def foldRight[T](z: U)(op: (T, U) => U)(evidence$6: ClassTag[U]): U","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["foldRight"]},{"name":"def successful[T](result: T): Future[T]","description":"scala.concurrent.Future$","location":"api/scala/concurrent/Future$.html","searchKeys":["successful"]},{"name":"def sliding(size: Int, step: Int): Iterator[String]","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["sliding"]},{"name":"val x$29: FromExpr[T10]","description":"scala.quoted.FromExpr$$Tuple19FromExpr","location":"api/scala/quoted/FromExpr$$Tuple19FromExpr.html","searchKeys":["x$29"]},{"name":"val FALSEconst: 3","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["FALSEconst"]},{"name":"trait JFunction2$mcJID$sp extends (Any, Any) => Any with Serializable","description":"scala.runtime.java8.JFunction2$mcJID$sp","location":"api/scala/runtime/java8/JFunction2$mcJID$sp.html","searchKeys":["JFunction2$mcJID$sp"]},{"name":"class AsJavaBiPredicate[T, U](sf: (T, U) => Boolean) extends BiPredicate[T, U]","description":"scala.jdk.FunctionWrappers$$AsJavaBiPredicate","location":"api/scala/jdk/FunctionWrappers$$AsJavaBiPredicate.html","searchKeys":["AsJavaBiPredicate"]},{"name":"def assert(assertion: Boolean, message: => Any): Unit","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["assert"]},{"name":"val intStreamShape: StreamShape[Int, IntStream, IntStepper]","description":"scala.collection.convert.StreamExtensions$$StreamShape$","location":"api/scala/collection/convert/StreamExtensions$$StreamShape$.html","searchKeys":["intStreamShape"]},{"name":"def isExprOf(using Type[X]): Boolean","description":"scala.quoted.Quotes","location":"api/scala/quoted/Quotes.html","searchKeys":["isExprOf"]},{"name":"def apply(x1: Int): R","description":"scala.jdk.FunctionWrappers$$AsJavaIntFunction","location":"api/scala/jdk/FunctionWrappers$$AsJavaIntFunction.html","searchKeys":["apply"]},{"name":"def toCharArray: Array[Char]","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["toCharArray"]},{"name":"val doubleAccumulatorFactoryShape: AccumulatorFactoryShape[Double, DoubleAccumulator]","description":"scala.jdk.Accumulator$$AccumulatorFactoryShape$","location":"api/scala/jdk/Accumulator$$AccumulatorFactoryShape$.html","searchKeys":["doubleAccumulatorFactoryShape"]},{"name":"val HALF_DOWN: Value","description":"scala.math.BigDecimal$$RoundingMode$","location":"api/scala/math/BigDecimal$$RoundingMode$.html","searchKeys":["HALF_DOWN"]},{"name":"def take(self: Tuple, n: Int): Tuple","description":"scala.runtime.Tuples$","location":"api/scala/runtime/Tuples$.html","searchKeys":["take"]},{"name":"def |(x: Short): Int","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["|"]},{"name":"val x$25: FromExpr[T8]","description":"scala.quoted.FromExpr$$Tuple17FromExpr","location":"api/scala/quoted/FromExpr$$Tuple17FromExpr.html","searchKeys":["x$25"]},{"name":"def classSymbol(fullName: String): Symbol","description":"scala.quoted.Quotes$reflectModule$SymbolModule","location":"api/scala/quoted/Quotes$reflectModule$SymbolModule.html","searchKeys":["classSymbol"]},{"name":"def empty[T]: Iterator[T]","description":"scala.collection.Iterator$","location":"api/scala/collection/Iterator$.html","searchKeys":["empty"]},{"name":"def negateExact(x: Int): Int","description":"scala.math","location":"api/scala/math.html","searchKeys":["negateExact"]},{"name":"def sorted[T](using Ordering[T]): IArray[T]","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["sorted"]},{"name":"def keysIteratorFrom(start: K): Iterator[K]","description":"scala.collection.mutable.TreeMap","location":"api/scala/collection/mutable/TreeMap.html","searchKeys":["keysIteratorFrom"]},{"name":"def summonFrom[T](f: Nothing => T): T","description":"scala.compiletime","location":"api/scala/compiletime.html","searchKeys":["summonFrom"]},{"name":"object SeqMap extends Delegate[[K, V] =>> SeqMap[K, V]]","description":"scala.collection.mutable.SeqMap$","location":"api/scala/collection/mutable/SeqMap$.html","searchKeys":["SeqMap"]},{"name":"def asScalaFromSupplier[T](jf: Supplier[T]): () => T","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asScalaFromSupplier"]},{"name":"val underlying: PhantomReference[ <: T]","description":"scala.ref.PhantomReference","location":"api/scala/ref/PhantomReference.html","searchKeys":["underlying"]},{"name":"def unapply(sig: Signature): (List[String | Int], String)","description":"scala.quoted.Quotes$reflectModule$SignatureModule","location":"api/scala/quoted/Quotes$reflectModule$SignatureModule.html","searchKeys":["unapply"]},{"name":"def iterator: Iterator[Int]","description":"scala.jdk.IntAccumulator","location":"api/scala/jdk/IntAccumulator.html","searchKeys":["iterator"]},{"name":"given Tuple6ToExpr[T1, T2, T3, T4, T5, T6]: ToExpr[(T1, T2, T3, T4, T5, T6)]","description":"scala.quoted.ToExpr$$Tuple6ToExpr","location":"api/scala/quoted/ToExpr$.html","searchKeys":["Tuple6ToExpr"]},{"name":"def get: String","description":"scala.sys.Prop","location":"api/scala/sys/Prop.html","searchKeys":["get"]},{"name":"def body: Tree","description":"scala.quoted.Quotes$reflectModule$LambdaTypeTreeMethods","location":"api/scala/quoted/Quotes$reflectModule$LambdaTypeTreeMethods.html","searchKeys":["body"]},{"name":"def isDefinedAt(key: K): Boolean","description":"scala.collection.MapOps","location":"api/scala/collection/MapOps.html","searchKeys":["isDefinedAt"]},{"name":"def flatMap[B, C](f: (El1, El2, El3, El4) => Iterable[B])(bf: BuildFrom[C1, B, C]): C","description":"scala.collection.LazyZip4","location":"api/scala/collection/LazyZip4.html","searchKeys":["flatMap"]},{"name":"def /(x: Short): Int","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["/"]},{"name":"def unapply(x: Expr[(T1, T2, T3, T4)])(using Quotes): Option[(T1, T2, T3, T4)]","description":"scala.quoted.FromExpr$$Tuple4FromExpr","location":"api/scala/quoted/FromExpr$$Tuple4FromExpr.html","searchKeys":["unapply"]},{"name":"def asScalaFromDoublePredicate(jf: DoublePredicate): Double => Boolean","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asScalaFromDoublePredicate"]},{"name":"IDEs and Tools","description":"","location":"docs/IDEs and Tools/index.html","searchKeys":["IDEs and Tools"]},{"name":"def >(x: Double): Boolean","description":"scala.Double","location":"api/scala/Double.html","searchKeys":[">"]},{"name":"val x$4: Type[T4]","description":"scala.quoted.FromExpr$$Tuple13FromExpr","location":"api/scala/quoted/FromExpr$$Tuple13FromExpr.html","searchKeys":["x$4"]},{"name":"val x$15: Type[T15]","description":"scala.quoted.FromExpr$$Tuple17FromExpr","location":"api/scala/quoted/FromExpr$$Tuple17FromExpr.html","searchKeys":["x$15"]},{"name":"def apply(key: String): Prop[T]","description":"scala.sys.Prop$$Creator","location":"api/scala/sys/Prop$$Creator.html","searchKeys":["apply"]},{"name":"def elemTag: ClassTag[]","description":"scala.collection.immutable.ArraySeq$$ofRef","location":"api/scala/collection/immutable/ArraySeq$$ofRef.html","searchKeys":["elemTag"]},{"name":"def rangeImpl(from: Option[K], until: Option[K]): TreeMap[K, V]","description":"scala.collection.immutable.TreeMap","location":"api/scala/collection/immutable/TreeMap.html","searchKeys":["rangeImpl"]},{"name":"def when[A](cond: Boolean)(a: => A): Option[A]","description":"scala.Option$","location":"api/scala/Option$.html","searchKeys":["when"]},{"name":"def decimal(d: Double): BigDecimal","description":"scala.math.BigDecimal$","location":"api/scala/math/BigDecimal$.html","searchKeys":["decimal"]},{"name":"trait Buffer[A] extends Seq[A] with SeqOps[A, [A] =>> Buffer[A], Buffer[A]] with Growable[A] with Shrinkable[A] with IterableFactoryDefaults[A, [A] =>> Buffer[A]]","description":"scala.collection.mutable.Buffer","location":"api/scala/collection/mutable/Buffer.html","searchKeys":["Buffer"]},{"name":"def apply(start: BigDecimal, end: BigDecimal, step: BigDecimal): Exclusive[BigDecimal]","description":"scala.collection.immutable.Range$$BigDecimal$","location":"api/scala/collection/immutable/Range$$BigDecimal$.html","searchKeys":["apply"]},{"name":"given IntFromExpr","description":"scala.quoted.FromExpr$","location":"api/scala/quoted/FromExpr$.html","searchKeys":["IntFromExpr"]},{"name":"val x$35: FromExpr[T15]","description":"scala.quoted.FromExpr$$Tuple20FromExpr","location":"api/scala/quoted/FromExpr$$Tuple20FromExpr.html","searchKeys":["x$35"]},{"name":"class transparentTrait extends StaticAnnotation","description":"scala.annotation.transparentTrait","location":"api/scala/annotation/transparentTrait.html","searchKeys":["transparentTrait"]},{"name":"class RichLongPredicateAsFunction1(underlying: LongPredicate) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichLongPredicateAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichLongPredicateAsFunction1.html","searchKeys":["RichLongPredicateAsFunction1"]},{"name":"def split(toSplit: CharSequence): Array[String]","description":"scala.util.matching.Regex","location":"api/scala/util/matching/Regex.html","searchKeys":["split"]},{"name":"def ensureSize(hint: Int): Unit","description":"scala.collection.mutable.ArrayDeque","location":"api/scala/collection/mutable/ArrayDeque.html","searchKeys":["ensureSize"]},{"name":"def array: Array[]","description":"scala.collection.mutable.ArraySeq","location":"api/scala/collection/mutable/ArraySeq.html","searchKeys":["array"]},{"name":"def removed(key: K): WithDefault[K, V]","description":"scala.collection.immutable.Map$$WithDefault","location":"api/scala/collection/immutable/Map$$WithDefault.html","searchKeys":["removed"]},{"name":"def subSequence(start: Int, end: Int): CharSequence","description":"scala.Predef$$ArrayCharSequence","location":"api/scala/Predef$$ArrayCharSequence.html","searchKeys":["subSequence"]},{"name":"def asScalaFromDoubleUnaryOperator(jf: DoubleUnaryOperator): Double => Double","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asScalaFromDoubleUnaryOperator"]},{"name":"def incl(elem: K): Set[K]","description":"scala.collection.immutable.MapOps$ImmutableKeySet","location":"api/scala/collection/immutable/MapOps$ImmutableKeySet.html","searchKeys":["incl"]},{"name":"Main Methods","description":"","location":"docs/reference/changed-features/main-functions.html","searchKeys":["Main Methods"]},{"name":"val Range: Range","description":"scala","location":"api/scala.html","searchKeys":["Range"]},{"name":"def unary_-: BigInt","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["unary_-"]},{"name":"def floor(x: Double): Double","description":"scala.math","location":"api/scala/math.html","searchKeys":["floor"]},{"name":"def unapply(x: Expr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17)])(using Quotes): Option[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17)]","description":"scala.quoted.FromExpr$$Tuple17FromExpr","location":"api/scala/quoted/FromExpr$$Tuple17FromExpr.html","searchKeys":["unapply"]},{"name":"def asScalaFromToLongFunction[T](jf: ToLongFunction[T]): T => Long","description":"scala.jdk.javaapi.FunctionConverters$","location":"api/scala/jdk/javaapi/FunctionConverters$.html","searchKeys":["asScalaFromToLongFunction"]},{"name":"def /(x: Long): Long","description":"scala.Byte","location":"api/scala/Byte.html","searchKeys":["/"]},{"name":"def apply(x1: T, x2: T): T","description":"scala.jdk.FunctionWrappers$$AsJavaBinaryOperator","location":"api/scala/jdk/FunctionWrappers$$AsJavaBinaryOperator.html","searchKeys":["apply"]},{"name":"def →[B](y: B): (A, B)","description":"scala.Predef$$ArrowAssoc","location":"api/scala/Predef$$ArrowAssoc.html","searchKeys":["→"]},{"name":"class Tuple2Zipped[El1, It1 <: Iterable[El1], El2, It2 <: Iterable[El2]](colls: (It1, It2)) extends AnyVal with ZippedIterable2[El1, El2]","description":"scala.runtime.Tuple2Zipped","location":"api/scala/runtime/Tuple2Zipped.html","searchKeys":["Tuple2Zipped"]},{"name":"def _6: T6","description":"scala.Product20","location":"api/scala/Product20.html","searchKeys":["_6"]},{"name":"def /(rhs: T): T","description":"scala.math.Fractional$FractionalOps","location":"api/scala/math/Fractional$FractionalOps.html","searchKeys":["/"]},{"name":"def unary_+: Int","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["unary_+"]},{"name":"def takeRightInPlace(n: Int): Buffer[A]","description":"scala.collection.mutable.Buffer","location":"api/scala/collection/mutable/Buffer.html","searchKeys":["takeRightInPlace"]},{"name":"def asJava: DoublePredicate","description":"scala.jdk.FunctionWrappers$$RichFunction1AsDoublePredicate","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsDoublePredicate.html","searchKeys":["asJava"]},{"name":"def patch(from: Int, other: String, replaced: Int): String","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["patch"]},{"name":"def copy(original: Tree)(qualifier: Term, name: String): TypeSelect","description":"scala.quoted.Quotes$reflectModule$TypeSelectModule","location":"api/scala/quoted/Quotes$reflectModule$TypeSelectModule.html","searchKeys":["copy"]},{"name":"def toMicros: Long","description":"scala.concurrent.duration.Duration$$Infinite","location":"api/scala/concurrent/duration/Duration$$Infinite.html","searchKeys":["toMicros"]},{"name":"class Delegate[CC <: ([A] =>> SeqOps[A, [A] =>> Seq[A], Seq[A]])](delegate: SeqFactory[CC]) extends SeqFactory[CC]","description":"scala.collection.SeqFactory$$Delegate","location":"api/scala/collection/SeqFactory$$Delegate.html","searchKeys":["Delegate"]},{"name":"type GenTraversableOnce[+X] = IterableOnce[X]","description":"scala.collection","location":"api/scala/collection.html","searchKeys":["GenTraversableOnce"]},{"name":"given IArrayToExpr[T](evidence$5: Type[T], val ltArray: ToExpr[Array[T]]): ToExpr[IArray[T]]","description":"scala.quoted.ToExpr$$IArrayToExpr","location":"api/scala/quoted/ToExpr$$IArrayToExpr.html","searchKeys":["IArrayToExpr"]},{"name":"given Tuple2FromExpr[T1, T2](using val x$1: Type[T1], val x$2: Type[T2], val x$3: FromExpr[T1], val x$4: FromExpr[T2]): FromExpr[(T1, T2)]","description":"scala.quoted.FromExpr$$Tuple2FromExpr","location":"api/scala/quoted/FromExpr$$Tuple2FromExpr.html","searchKeys":["Tuple2FromExpr"]},{"name":"class constructorOnly extends StaticAnnotation","description":"scala.annotation.constructorOnly","location":"api/scala/annotation/constructorOnly.html","searchKeys":["constructorOnly"]},{"name":"def range(start: Int, end: Int): Iterator[Int]","description":"scala.collection.Iterator$","location":"api/scala/collection/Iterator$.html","searchKeys":["range"]},{"name":"def clear(): Unit","description":"scala.collection.mutable.ListBuffer","location":"api/scala/collection/mutable/ListBuffer.html","searchKeys":["clear"]},{"name":"def apply[T](elems: (Long, T)*): LongMap[T]","description":"scala.collection.immutable.LongMap$","location":"api/scala/collection/immutable/LongMap$.html","searchKeys":["apply"]},{"name":"def asScala: Option[Double]","description":"scala.jdk.OptionConverters$$RichOptionalDouble","location":"api/scala/jdk/OptionConverters$$RichOptionalDouble.html","searchKeys":["asScala"]},{"name":"val x$12: Type[T12]","description":"scala.quoted.FromExpr$$Tuple13FromExpr","location":"api/scala/quoted/FromExpr$$Tuple13FromExpr.html","searchKeys":["x$12"]},{"name":"given LongToExpr[T <: Long]: ToExpr[T]","description":"scala.quoted.ToExpr$$LongToExpr","location":"api/scala/quoted/ToExpr$.html","searchKeys":["LongToExpr"]},{"name":"def enumeration AsScalaIterator[A](i: Enumeration[A]): Iterator[A]","description":"scala.collection.convert.ToScalaImplicits","location":"api/scala/collection/convert/ToScalaImplicits.html","searchKeys":["enumeration AsScalaIterator"]},{"name":"def toDegrees(x: Double): Double","description":"scala.math","location":"api/scala/math.html","searchKeys":["toDegrees"]},{"name":"val x$23: FromExpr[T7]","description":"scala.quoted.FromExpr$$Tuple16FromExpr","location":"api/scala/quoted/FromExpr$$Tuple16FromExpr.html","searchKeys":["x$23"]},{"name":"given Tuple18ToExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18]: ToExpr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18)]","description":"scala.quoted.ToExpr$$Tuple18ToExpr","location":"api/scala/quoted/ToExpr$$Tuple18ToExpr.html","searchKeys":["Tuple18ToExpr"]},{"name":"def subReader(start: Addr, end: Addr): TastyReader","description":"dotty.tools.tasty.TastyReader","location":"api/dotty/tools/tasty/TastyReader.html","searchKeys":["subReader"]},{"name":"def #::[B >: A](elem: => B): LazyList[B]","description":"scala.collection.immutable.LazyList$$Deferrer","location":"api/scala/collection/immutable/LazyList$$Deferrer.html","searchKeys":["#::"]},{"name":"def ==(x: Float): Boolean","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["=="]},{"name":"val ->: Tuple2","description":"scala.Predef$","location":"api/scala/Predef$.html","searchKeys":["->"]},{"name":"def &(x: Byte): Long","description":"scala.Long","location":"api/scala/Long.html","searchKeys":["&"]},{"name":"object Boolean extends BooleanOrdering","description":"scala.math.Ordering$$Boolean$","location":"api/scala/math/Ordering$$Boolean$.html","searchKeys":["Boolean"]},{"name":"def constant: Constant","description":"scala.quoted.Quotes$reflectModule$LiteralMethods","location":"api/scala/quoted/Quotes$reflectModule$LiteralMethods.html","searchKeys":["constant"]},{"name":"def _18: T18","description":"scala.Product18","location":"api/scala/Product18.html","searchKeys":["_18"]},{"name":"def probablePrime(bitLength: Int, rnd: Random): BigInt","description":"scala.math.BigInt$","location":"api/scala/math/BigInt$.html","searchKeys":["probablePrime"]},{"name":"class RichIntPredicateAsFunction1(underlying: IntPredicate) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichIntPredicateAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichIntPredicateAsFunction1.html","searchKeys":["RichIntPredicateAsFunction1"]},{"name":"val x$11: Type[T11]","description":"scala.quoted.FromExpr$$Tuple16FromExpr","location":"api/scala/quoted/FromExpr$$Tuple16FromExpr.html","searchKeys":["x$11"]},{"name":"given NoMatchingImplicitsTypeTest: Serializable","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["NoMatchingImplicitsTypeTest"]},{"name":"given TypeBoundsMethods","description":"scala.quoted.Quotes$reflectModule$TypeBoundsMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeBoundsMethods.html","searchKeys":["TypeBoundsMethods"]},{"name":"object ListMap extends MapFactory[[K, V] =>> ListMap[K, V]]","description":"scala.collection.immutable.ListMap$","location":"api/scala/collection/immutable/ListMap$.html","searchKeys":["ListMap"]},{"name":"def ^(that: BigInt): BigInt","description":"scala.math.BigInt","location":"api/scala/math/BigInt.html","searchKeys":["^"]},{"name":"given ArrayOfFloatToExpr: ToExpr[Array[Float]]","description":"scala.quoted.ToExpr$$ArrayOfFloatToExpr$","location":"api/scala/quoted/ToExpr$$ArrayOfFloatToExpr$.html","searchKeys":["ArrayOfFloatToExpr"]},{"name":"def apply(idx: Int): A","description":"scala.collection.SeqView$$Concat","location":"api/scala/collection/SeqView$$Concat.html","searchKeys":["apply"]},{"name":"def asScala: T => Int","description":"scala.jdk.FunctionWrappers$$RichToIntFunctionAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichToIntFunctionAsFunction1.html","searchKeys":["asScala"]},{"name":"class TastyReader(val bytes: Array[Byte], start: Int, end: Int, val base: Int)","description":"dotty.tools.tasty.TastyReader","location":"api/dotty/tools/tasty/TastyReader.html","searchKeys":["TastyReader"]},{"name":"val BYNAMEtpt: 94","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["BYNAMEtpt"]},{"name":"def unique(qualifier: Term, name: String): Select","description":"scala.quoted.Quotes$reflectModule$SelectModule","location":"api/scala/quoted/Quotes$reflectModule$SelectModule.html","searchKeys":["unique"]},{"name":"type SelectOuter <: Term","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["SelectOuter"]},{"name":"def end: Int","description":"scala.util.matching.Regex$$MatchIterator","location":"api/scala/util/matching/Regex$$MatchIterator.html","searchKeys":["end"]},{"name":"def removeHead(resizeInternalRepr: Boolean): A","description":"scala.collection.mutable.ArrayDeque","location":"api/scala/collection/mutable/ArrayDeque.html","searchKeys":["removeHead"]},{"name":"def length: Int","description":"scala.collection.mutable.ArraySeq$$ofRef","location":"api/scala/collection/mutable/ArraySeq$$ofRef.html","searchKeys":["length"]},{"name":"val x$9: Type[T9]","description":"scala.quoted.FromExpr$$Tuple19FromExpr","location":"api/scala/quoted/FromExpr$$Tuple19FromExpr.html","searchKeys":["x$9"]},{"name":"def enrichAsJavaToIntBiFunction[T, U](sf: (T, U) => Int): RichFunction2AsToIntBiFunction[T, U]","description":"scala.jdk.Priority2FunctionExtensions","location":"api/scala/jdk/Priority2FunctionExtensions.html","searchKeys":["enrichAsJavaToIntBiFunction"]},{"name":"def foreach[U](f: A => U): Unit","description":"scala.util.Either$$LeftProjection","location":"api/scala/util/Either$$LeftProjection.html","searchKeys":["foreach"]},{"name":"Lazy Vals initialization","description":"","location":"docs/reference/changed-features/lazy-vals-init.html","searchKeys":["Lazy Vals initialization"]},{"name":"def _8: T8","description":"scala.Product14","location":"api/scala/Product14.html","searchKeys":["_8"]},{"name":"class JavaDurationOps(duration: Duration) extends AnyVal","description":"scala.jdk.DurationConverters$$JavaDurationOps","location":"api/scala/jdk/DurationConverters$$JavaDurationOps.html","searchKeys":["JavaDurationOps"]},{"name":"def newBuilder[K, V]: Builder[(K, V), OpenHashMap[K, V]]","description":"scala.collection.mutable.OpenHashMap$","location":"api/scala/collection/mutable/OpenHashMap$.html","searchKeys":["newBuilder"]},{"name":"def unapply[T <: AnyRef](sr: SoftReference[T]): Option[T]","description":"scala.ref.SoftReference$","location":"api/scala/ref/SoftReference$.html","searchKeys":["unapply"]},{"name":"def asJava: IntBinaryOperator","description":"scala.jdk.FunctionWrappers$$RichFunction2AsIntBinaryOperator","location":"api/scala/jdk/FunctionWrappers$$RichFunction2AsIntBinaryOperator.html","searchKeys":["asJava"]},{"name":"def stepper[S <: Stepper[]](shape: StepperShape[A, S]): S & EfficientSplit","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["stepper"]},{"name":"def -(elem1: A, elem2: A, elems: A*): Repr","description":"scala.collection.generic.Subtractable","location":"api/scala/collection/generic/Subtractable.html","searchKeys":["-"]},{"name":"val Int: IntManifest","description":"scala.reflect.ManifestFactory$","location":"api/scala/reflect/ManifestFactory$.html","searchKeys":["Int"]},{"name":"def _7: T7","description":"scala.Product8","location":"api/scala/Product8.html","searchKeys":["_7"]},{"name":"object Vector extends StrictOptimizedSeqFactory[[A] =>> Vector[A]]","description":"scala.collection.immutable.Vector$","location":"api/scala/collection/immutable/Vector$.html","searchKeys":["Vector"]},{"name":"val x$6: Type[T6]","description":"scala.quoted.FromExpr$$Tuple12FromExpr","location":"api/scala/quoted/FromExpr$$Tuple12FromExpr.html","searchKeys":["x$6"]},{"name":"def map[B](f: A => B)(evidence$29: ClassTag[B]): Array[B]","description":"scala.collection.ArrayOps$$WithFilter","location":"api/scala/collection/ArrayOps$$WithFilter.html","searchKeys":["map"]},{"name":"val x$10: Type[T10]","description":"scala.quoted.FromExpr$$Tuple19FromExpr","location":"api/scala/quoted/FromExpr$$Tuple19FromExpr.html","searchKeys":["x$10"]},{"name":"def error(inline msg: String): Nothing","description":"scala.compiletime","location":"api/scala/compiletime.html","searchKeys":["error"]},{"name":"def minOption[B >: A](ord: Ordering[B]): Option[A]","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["minOption"]},{"name":"val BufferSize: 8192","description":"scala.sys.process.BasicIO$","location":"api/scala/sys/process/BasicIO$.html","searchKeys":["BufferSize"]},{"name":"def efficientStepper[S <: Stepper[]](shape: StepperShape[Int, S]): S & EfficientSplit","description":"scala.jdk.IntAccumulator","location":"api/scala/jdk/IntAccumulator.html","searchKeys":["efficientStepper"]},{"name":"class FromJavaIntToDoubleFunction(jf: IntToDoubleFunction) extends Int => Double","description":"scala.jdk.FunctionWrappers$$FromJavaIntToDoubleFunction","location":"api/scala/jdk/FunctionWrappers$$FromJavaIntToDoubleFunction.html","searchKeys":["FromJavaIntToDoubleFunction"]},{"name":"val underlying: SoftReference[ <: T]","description":"scala.ref.SoftReference","location":"api/scala/ref/SoftReference.html","searchKeys":["underlying"]},{"name":"def rhs: Tree","description":"scala.quoted.Quotes$reflectModule$TypeDefMethods","location":"api/scala/quoted/Quotes$reflectModule$TypeDefMethods.html","searchKeys":["rhs"]},{"name":"def apply(x1: Int): Double","description":"scala.jdk.FunctionWrappers$$FromJavaIntToDoubleFunction","location":"api/scala/jdk/FunctionWrappers$$FromJavaIntToDoubleFunction.html","searchKeys":["apply"]},{"name":"def longValue: Long","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["longValue"]},{"name":"object span","description":"scala.concurrent.duration.package$$span$","location":"api/scala/concurrent/duration/package$$span$.html","searchKeys":["span"]},{"name":"val step: Int","description":"scala.collection.immutable.Range","location":"api/scala/collection/immutable/Range.html","searchKeys":["step"]},{"name":"given Tuple4FromExpr[T1, T2, T3, T4](using val x$1: Type[T1], val x$2: Type[T2], val x$3: Type[T3], val x$4: Type[T4], val x$5: FromExpr[T1], val x$6: FromExpr[T2], val x$7: FromExpr[T3], val x$8: FromExpr[T4]): FromExpr[(T1, T2, T3, T4)]","description":"scala.quoted.FromExpr$$Tuple4FromExpr","location":"api/scala/quoted/FromExpr$.html","searchKeys":["Tuple4FromExpr"]},{"name":"def copyToArray[T](xs: Array[U], start: Int, len: Int): Int","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["copyToArray"]},{"name":"def apply(elem: A): Boolean","description":"scala.collection.SetOps","location":"api/scala/collection/SetOps.html","searchKeys":["apply"]},{"name":"def key: String","description":"scala.sys.Prop","location":"api/scala/sys/Prop.html","searchKeys":["key"]},{"name":"def empty[X, Y]: MapView[X, Y]","description":"scala.collection.MapViewFactory","location":"api/scala/collection/MapViewFactory.html","searchKeys":["empty"]},{"name":"def exists(p: Char => Boolean): Boolean","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["exists"]},{"name":"def -(x: Double): Double","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["-"]},{"name":"def nextDown(d: Double): Double","description":"scala.math","location":"api/scala/math.html","searchKeys":["nextDown"]},{"name":"def addString(b: StringBuilder, start: String, sep: String, end: String): StringBuilder","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["addString"]},{"name":"def classType[T](prefix: Manifest[], clazz: Class[], args: Manifest[]*): Manifest[T]","description":"scala.reflect.ManifestFactory$","location":"api/scala/reflect/ManifestFactory$.html","searchKeys":["classType"]},{"name":"class AsJavaEnumeration[A](i: Iterator[A])","description":"scala.collection.JavaConverters$$AsJavaEnumeration","location":"api/scala/collection/JavaConverters$$AsJavaEnumeration.html","searchKeys":["AsJavaEnumeration"]},{"name":"def toDouble(x: T): Double","description":"scala.math.Numeric","location":"api/scala/math/Numeric.html","searchKeys":["toDouble"]},{"name":"given SignatureMethods","description":"scala.quoted.Quotes$reflectModule$SignatureMethods","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["SignatureMethods"]},{"name":"def newArray5(len: Int): Array[Array[Array[Array[Array[T]]]]]","description":"scala.reflect.ClassManifestDeprecatedApis","location":"api/scala/reflect/ClassManifestDeprecatedApis.html","searchKeys":["newArray5"]},{"name":"val MinPositiveValue: 1.4E-45","description":"scala.Float$","location":"api/scala/Float$.html","searchKeys":["MinPositiveValue"]},{"name":"def _6: T6","description":"scala.Product7","location":"api/scala/Product7.html","searchKeys":["_6"]},{"name":"def copy(original: Tree)(arg: TypeTree, annotation: Term): Annotated","description":"scala.quoted.Quotes$reflectModule$AnnotatedModule","location":"api/scala/quoted/Quotes$reflectModule$AnnotatedModule.html","searchKeys":["copy"]},{"name":"val noCatch: Catch[Nothing]","description":"scala.util.control.Exception$","location":"api/scala/util/control/Exception$.html","searchKeys":["noCatch"]},{"name":"def runtimeClass: Class[]","description":"scala.reflect.ClassTag","location":"api/scala/reflect/ClassTag.html","searchKeys":["runtimeClass"]},{"name":"class FromDigitsException(msg: String) extends NumberFormatException","description":"scala.util.FromDigits$$FromDigitsException","location":"api/scala/util/FromDigits$$FromDigitsException.html","searchKeys":["FromDigitsException"]},{"name":"object ZippedIterable2","description":"scala.runtime.ZippedIterable2$","location":"api/scala/runtime/ZippedIterable2$.html","searchKeys":["ZippedIterable2"]},{"name":"def signum(x: Float): Float","description":"scala.math","location":"api/scala/math.html","searchKeys":["signum"]},{"name":"trait JFunction1$mcZF$sp extends Any => Any with Serializable","description":"scala.runtime.java8.JFunction1$mcZF$sp","location":"api/scala/runtime/java8/JFunction1$mcZF$sp.html","searchKeys":["JFunction1$mcZF$sp"]},{"name":"val x$6: Type[T6]","description":"scala.quoted.FromExpr$$Tuple21FromExpr","location":"api/scala/quoted/FromExpr$$Tuple21FromExpr.html","searchKeys":["x$6"]},{"name":"def #>(b: ProcessBuilder): ProcessBuilder","description":"scala.sys.process.ProcessBuilder$$Source","location":"api/scala/sys/process/ProcessBuilder$$Source.html","searchKeys":["#>"]},{"name":"def subsetOf(that: Set[A]): Boolean","description":"scala.collection.immutable.HashSet","location":"api/scala/collection/immutable/HashSet.html","searchKeys":["subsetOf"]},{"name":"class SerializationProxy[A](acc: IntAccumulator) extends Serializable","description":"scala.jdk.IntAccumulator$$SerializationProxy","location":"api/scala/jdk/IntAccumulator$$SerializationProxy.html","searchKeys":["SerializationProxy"]},{"name":"def plus(other: FiniteDuration): FiniteDuration","description":"scala.concurrent.duration.FiniteDuration","location":"api/scala/concurrent/duration/FiniteDuration.html","searchKeys":["plus"]},{"name":"val Unit: Group[(Unit)]","description":"scala.Specializable$","location":"api/scala/Specializable$.html","searchKeys":["Unit"]},{"name":"def unary_-: Int","description":"scala.Char","location":"api/scala/Char.html","searchKeys":["unary_-"]},{"name":"val PROTECTED: 8","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["PROTECTED"]},{"name":"trait IeeeEquiv extends Equiv[Float]","description":"scala.math.Equiv$$Float$$IeeeEquiv","location":"api/scala/math/Equiv$$Float$$IeeeEquiv.html","searchKeys":["IeeeEquiv"]},{"name":"def s(args: Any*): String","description":"scala.StringContext","location":"api/scala/StringContext.html","searchKeys":["s"]},{"name":"def fold[U](fa: Throwable => U, fb: T => U): U","description":"scala.util.Try","location":"api/scala/util/Try.html","searchKeys":["fold"]},{"name":"type LambdaTypeTree <: TypeTree","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["LambdaTypeTree"]},{"name":"trait SortedSet[A] extends Set[A] with SortedSet[A] with SortedSetOps[A, [A] =>> SortedSet[A], SortedSet[A]] with SortedSetFactoryDefaults[A, [A] =>> SortedSet[A], [A] =>> Set[A]]","description":"scala.collection.mutable.SortedSet","location":"api/scala/collection/mutable/SortedSet.html","searchKeys":["SortedSet"]},{"name":"def asScala: Option[A]","description":"scala.jdk.OptionConverters$$RichOptional","location":"api/scala/jdk/OptionConverters$$RichOptional.html","searchKeys":["asScala"]},{"name":"def StableRealizable: Flags","description":"scala.quoted.Quotes$reflectModule$FlagsModule","location":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html","searchKeys":["StableRealizable"]},{"name":"def trimEnd(n: Int): Unit","description":"scala.collection.mutable.Buffer","location":"api/scala/collection/mutable/Buffer.html","searchKeys":["trimEnd"]},{"name":"def apply$mcZDD$sp(v1: Double, v2: Double): Boolean","description":"scala.runtime.java8.JFunction2$mcZDD$sp","location":"api/scala/runtime/java8/JFunction2$mcZDD$sp.html","searchKeys":["apply$mcZDD$sp"]},{"name":"def valueOf(x: Long): BigDecimal","description":"scala.math.BigDecimal$","location":"api/scala/math/BigDecimal$.html","searchKeys":["valueOf"]},{"name":"def zipWithIndex: CC[(A, Int)]","description":"scala.collection.IterableOps","location":"api/scala/collection/IterableOps.html","searchKeys":["zipWithIndex"]},{"name":"class RichUnaryOperatorAsFunction1[T](underlying: UnaryOperator[T]) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichUnaryOperatorAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichUnaryOperatorAsFunction1.html","searchKeys":["RichUnaryOperatorAsFunction1"]},{"name":"def tail: Array[A]","description":"scala.collection.ArrayOps","location":"api/scala/collection/ArrayOps.html","searchKeys":["tail"]},{"name":"class RichToLongFunctionAsFunction1[T](underlying: ToLongFunction[T]) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichToLongFunctionAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichToLongFunctionAsFunction1.html","searchKeys":["RichToLongFunctionAsFunction1"]},{"name":"def deleteCharAt(index: Int): StringBuilder","description":"scala.collection.mutable.StringBuilder","location":"api/scala/collection/mutable/StringBuilder.html","searchKeys":["deleteCharAt"]},{"name":"val LazyList: LazyList","description":"scala","location":"api/scala.html","searchKeys":["LazyList"]},{"name":"def flatten[B](ev: A <:< Option[B]): Option[B]","description":"scala.Option","location":"api/scala/Option.html","searchKeys":["flatten"]},{"name":"def reduceLeft(f: (A, A) => A): A","description":"scala.collection.IterableOnceExtensionMethods","location":"api/scala/collection/IterableOnceExtensionMethods.html","searchKeys":["reduceLeft"]},{"name":"def >=(x: Int): Boolean","description":"scala.Int","location":"api/scala/Int.html","searchKeys":[">="]},{"name":"class RichToIntFunctionAsFunction1[T](underlying: ToIntFunction[T]) extends AnyVal","description":"scala.jdk.FunctionWrappers$$RichToIntFunctionAsFunction1","location":"api/scala/jdk/FunctionWrappers$$RichToIntFunctionAsFunction1.html","searchKeys":["RichToIntFunctionAsFunction1"]},{"name":"val x$22: Type[T22]","description":"scala.quoted.FromExpr$$Tuple22FromExpr","location":"api/scala/quoted/FromExpr$$Tuple22FromExpr.html","searchKeys":["x$22"]},{"name":"type MirroredElemTypes = EmptyTuple","description":"scala.deriving.Mirror$$Singleton","location":"api/scala/deriving/Mirror$$Singleton.html","searchKeys":["MirroredElemTypes"]},{"name":"def quot(x: Short, y: Short): Short","description":"scala.math.Numeric$$ShortIsIntegral","location":"api/scala/math/Numeric$$ShortIsIntegral.html","searchKeys":["quot"]},{"name":"def invert[El1, It1 <: ([a] =>> Iterable[a]), El2, It2 <: ([a] =>> Iterable[a]), That](w1: T1 <:< It1[El1], w2: T2 <:< It2[El2], bf: BuildFrom[T1, (El1, El2), That]): That","description":"scala.runtime.Tuple2Zipped$$Ops","location":"api/scala/runtime/Tuple2Zipped$$Ops.html","searchKeys":["invert"]},{"name":"class FromJavaLongSupplier(jf: LongSupplier) extends () => Long","description":"scala.jdk.FunctionWrappers$$FromJavaLongSupplier","location":"api/scala/jdk/FunctionWrappers$$FromJavaLongSupplier.html","searchKeys":["FromJavaLongSupplier"]},{"name":"def EmptyFlags: Flags","description":"scala.quoted.Quotes$reflectModule$FlagsModule","location":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html","searchKeys":["EmptyFlags"]},{"name":"given LeftFromExpr[L, R](using val x$1: Type[L], val x$2: Type[R], val x$3: FromExpr[L]): FromExpr[Left[L, R]]","description":"scala.quoted.FromExpr$$LeftFromExpr","location":"api/scala/quoted/FromExpr$$LeftFromExpr.html","searchKeys":["LeftFromExpr"]},{"name":"val x$27: FromExpr[T9]","description":"scala.quoted.FromExpr$$Tuple18FromExpr","location":"api/scala/quoted/FromExpr$$Tuple18FromExpr.html","searchKeys":["x$27"]},{"name":"def javaIterator[B >: Int]: OfInt","description":"scala.collection.IntStepper","location":"api/scala/collection/IntStepper.html","searchKeys":["javaIterator"]},{"name":"def toOption: Option[B]","description":"scala.util.Either","location":"api/scala/util/Either.html","searchKeys":["toOption"]},{"name":"def numRefs(tag: Int): Int","description":"dotty.tools.tasty.TastyFormat$","location":"api/dotty/tools/tasty/TastyFormat$.html","searchKeys":["numRefs"]},{"name":"def from(start: Int, step: Int): Iterator[Int]","description":"scala.collection.Iterator$","location":"api/scala/collection/Iterator$.html","searchKeys":["from"]},{"name":"def minus(x: Int, y: Int): Int","description":"scala.math.Numeric$$IntIsIntegral","location":"api/scala/math/Numeric$$IntIsIntegral.html","searchKeys":["minus"]},{"name":"object implicitConversions extends implicitConversions","description":"scala.languageFeature$$implicitConversions$","location":"api/scala/languageFeature$$implicitConversions$.html","searchKeys":["implicitConversions"]},{"name":"class LinkedHashMap[K, V] extends AbstractMap[K, V] with SeqMap[K, V] with MapOps[K, V, [K, V] =>> LinkedHashMap[K, V], LinkedHashMap[K, V]] with StrictOptimizedIterableOps[(K, V), [A] =>> Iterable[A], LinkedHashMap[K, V]] with StrictOptimizedMapOps[K, V, [K, V] =>> LinkedHashMap[K, V], LinkedHashMap[K, V]] with MapFactoryDefaults[K, V, [K, V] =>> LinkedHashMap[K, V], [A] =>> Iterable[A]] with DefaultSerializable","description":"scala.collection.mutable.LinkedHashMap","location":"api/scala/collection/mutable/LinkedHashMap.html","searchKeys":["LinkedHashMap"]},{"name":"def unapply[A](s: Stream[A]): Option[(A, Stream[A])]","description":"scala.collection.immutable.Stream$$#::$","location":"api/scala/collection/immutable/Stream$$#::$.html","searchKeys":["unapply"]},{"name":"type >>>[X <: Int, Y <: Int] <: Int","description":"scala.compiletime.ops.int$","location":"api/scala/compiletime/ops/int$.html","searchKeys":[">>>"]},{"name":"val x$2: Type[T2]","description":"scala.quoted.FromExpr$$Tuple21FromExpr","location":"api/scala/quoted/FromExpr$$Tuple21FromExpr.html","searchKeys":["x$2"]},{"name":"def remove(idx: Int): A","description":"scala.collection.mutable.Buffer","location":"api/scala/collection/mutable/Buffer.html","searchKeys":["remove"]},{"name":"def current: SourceFile","description":"scala.quoted.Quotes$reflectModule$SourceFileModule","location":"api/scala/quoted/Quotes$reflectModule$SourceFileModule.html","searchKeys":["current"]},{"name":"trait SimpleSelectorModule","description":"scala.quoted.Quotes$reflectModule$SimpleSelectorModule","location":"api/scala/quoted/Quotes$reflectModule$SimpleSelectorModule.html","searchKeys":["SimpleSelectorModule"]},{"name":"def usingBlockContext[I, T](blockContext: BlockContext)(f: BlockContext => T): T","description":"scala.concurrent.BlockContext$","location":"api/scala/concurrent/BlockContext$.html","searchKeys":["usingBlockContext"]},{"name":"def apply[A](op: Manager => A): Try[A]","description":"scala.util.Using$$Manager$","location":"api/scala/util/Using$$Manager$.html","searchKeys":["apply"]},{"name":"def lastOption[T]: Option[T]","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["lastOption"]},{"name":"def shuffle[T, C](xs: IterableOnce[T])(bf: BuildFrom[xs, T, C]): C","description":"scala.util.Random","location":"api/scala/util/Random.html","searchKeys":["shuffle"]},{"name":"def >=(x: Byte): Boolean","description":"scala.Char","location":"api/scala/Char.html","searchKeys":[">="]},{"name":"class OrderingOps(lhs: T)","description":"scala.math.Ordering$OrderingOps","location":"api/scala/math/Ordering$OrderingOps.html","searchKeys":["OrderingOps"]},{"name":"def hash(k: K): Int","description":"scala.collection.concurrent.TrieMap$$MangledHashing","location":"api/scala/collection/concurrent/TrieMap$$MangledHashing.html","searchKeys":["hash"]},{"name":"def apply(index: Int): Byte","description":"scala.collection.mutable.ArraySeq$$ofByte","location":"api/scala/collection/mutable/ArraySeq$$ofByte.html","searchKeys":["apply"]},{"name":"def shortValue: Short","description":"scala.math.ScalaNumericAnyConversions","location":"api/scala/math/ScalaNumericAnyConversions.html","searchKeys":["shortValue"]},{"name":"def fromInputStream(is: InputStream, enc: String): BufferedSource","description":"scala.io.Source$","location":"api/scala/io/Source$.html","searchKeys":["fromInputStream"]},{"name":"def linesIterator: Iterator[String]","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["linesIterator"]},{"name":"object NotGiven extends LowPriorityNotGiven","description":"scala.util.NotGiven$","location":"api/scala/util/NotGiven$.html","searchKeys":["NotGiven"]},{"name":"class TakeRight[+A](underlying: SomeIterableOps[A], n: Int) extends AbstractView[A]","description":"scala.collection.View$$TakeRight","location":"api/scala/collection/View$$TakeRight.html","searchKeys":["TakeRight"]},{"name":"var key: K","description":"scala.collection.mutable.CollisionProofHashMap$$RBNode","location":"api/scala/collection/mutable/CollisionProofHashMap$$RBNode.html","searchKeys":["key"]},{"name":"def copy(original: Tree)(fun: Term, implicits: List[Term], patterns: List[Tree]): Unapply","description":"scala.quoted.Quotes$reflectModule$UnapplyModule","location":"api/scala/quoted/Quotes$reflectModule$UnapplyModule.html","searchKeys":["copy"]},{"name":"def tupled: (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) => R","description":"scala.Function13","location":"api/scala/Function13.html","searchKeys":["tupled"]},{"name":"def <=(x: Byte): Boolean","description":"scala.Double","location":"api/scala/Double.html","searchKeys":["<="]},{"name":"def fill[A](n1: Int, n2: Int, n3: Int, n4: Int)(elem: => A)(evidence$9: ClassTag[A]): CC[CC[CC[CC[A]]]]","description":"scala.collection.ClassTagIterableFactory","location":"api/scala/collection/ClassTagIterableFactory.html","searchKeys":["fill"]},{"name":"def unapply[H, T <: Tuple](x: H *: T): (H, T)","description":"scala.*:$","location":"api/scala/*:$.html","searchKeys":["unapply"]},{"name":"def size: Int","description":"scala.collection.StringOps","location":"api/scala/collection/StringOps.html","searchKeys":["size"]},{"name":"def <=(x: Char): Boolean","description":"scala.Float","location":"api/scala/Float.html","searchKeys":["<="]},{"name":"def ==(x: Int): Boolean","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["=="]},{"name":"def asJavaSeqKeyDoubleStream[V](m: Map[Double, V]): DoubleStream","description":"scala.jdk.javaapi.StreamConverters$","location":"api/scala/jdk/javaapi/StreamConverters$.html","searchKeys":["asJavaSeqKeyDoubleStream"]},{"name":"def stdin: InputStream","description":"scala.sys.process","location":"api/scala/sys/process.html","searchKeys":["stdin"]},{"name":"type !=[X, Y] <: Boolean","description":"scala.compiletime.ops.any$","location":"api/scala/compiletime/ops/any$.html","searchKeys":["!="]},{"name":"def ofParDoubleStepper(st: DoubleStepper & EfficientSplit): AnyStepper[Double] & EfficientSplit","description":"scala.collection.AnyStepper$","location":"api/scala/collection/AnyStepper$.html","searchKeys":["ofParDoubleStepper"]},{"name":"def flatMap[T](f: T => IterableOnce[U])(evidence$2: ClassTag[U]): IArray[U]","description":"scala.opaques$$arrayOps$","location":"api/scala/opaques$$arrayOps$.html","searchKeys":["flatMap"]},{"name":"def create(length: Long, unit: TimeUnit): FiniteDuration","description":"scala.concurrent.duration.Duration$","location":"api/scala/concurrent/duration/Duration$.html","searchKeys":["create"]},{"name":"val Short: ShortManifest","description":"scala.reflect.Manifest$","location":"api/scala/reflect/Manifest$.html","searchKeys":["Short"]},{"name":"def length: Int","description":"scala.collection.mutable.ArraySeq$$ofBoolean","location":"api/scala/collection/mutable/ArraySeq$$ofBoolean.html","searchKeys":["length"]},{"name":"object ImplicitConversionsToJava extends ToJavaImplicits","description":"scala.collection.convert.ImplicitConversionsToJava$","location":"api/scala/collection/convert/ImplicitConversionsToJava$.html","searchKeys":["ImplicitConversionsToJava"]},{"name":"def fromInt(x: Int): Float","description":"scala.math.Numeric$$FloatIsFractional","location":"api/scala/math/Numeric$$FloatIsFractional.html","searchKeys":["fromInt"]},{"name":"class Exclusive(start: Int, end: Int, step: Int) extends Range","description":"scala.collection.immutable.Range$$Exclusive","location":"api/scala/collection/immutable/Range$$Exclusive.html","searchKeys":["Exclusive"]},{"name":"def withPartial(x: Boolean): GroupedIterator[B]","description":"scala.collection.Iterator$GroupedIterator","location":"api/scala/collection/Iterator$GroupedIterator.html","searchKeys":["withPartial"]},{"name":"trait IndexedBuffer[A] extends IndexedSeq[A] with IndexedSeqOps[A, [A] =>> IndexedBuffer[A], IndexedBuffer[A]] with Buffer[A] with IterableFactoryDefaults[A, [A] =>> IndexedBuffer[A]]","description":"scala.collection.mutable.IndexedBuffer","location":"api/scala/collection/mutable/IndexedBuffer.html","searchKeys":["IndexedBuffer"]},{"name":"type <<[X <: Int, Y <: Int] <: Int","description":"scala.compiletime.ops.int$","location":"api/scala/compiletime/ops/int$.html","searchKeys":["<<"]},{"name":"def term(tp: TermRef): Ref","description":"scala.quoted.Quotes$reflectModule$RefModule","location":"api/scala/quoted/Quotes$reflectModule$RefModule.html","searchKeys":["term"]},{"name":"val PolyType: PolyTypeModule","description":"scala.quoted.Quotes$reflectModule","location":"api/scala/quoted/Quotes$reflectModule.html","searchKeys":["PolyType"]},{"name":"def reduceOption[B >: A](op: (B, B) => B): Option[B]","description":"scala.collection.IterableOnceOps","location":"api/scala/collection/IterableOnceOps.html","searchKeys":["reduceOption"]},{"name":"def newWrappedArray(len: Int): ArraySeq[T]","description":"scala.reflect.ClassManifestDeprecatedApis","location":"api/scala/reflect/ClassManifestDeprecatedApis.html","searchKeys":["newWrappedArray"]},{"name":"def iterator: Iterator[A]","description":"scala.collection.View$$Fill","location":"api/scala/collection/View$$Fill.html","searchKeys":["iterator"]},{"name":"def apply(tup: (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16))(using Quotes): Expr[(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)]","description":"scala.quoted.ToExpr$$Tuple16ToExpr","location":"api/scala/quoted/ToExpr$$Tuple16ToExpr.html","searchKeys":["apply"]},{"name":"def from[A](source: IterableOnce[A]): HashSet[A]","description":"scala.collection.immutable.HashSet$","location":"api/scala/collection/immutable/HashSet$.html","searchKeys":["from"]},{"name":"class Stream[+A] extends AbstractSeq[A] with LinearSeq[A] with LinearSeqOps[A, [A] =>> Stream[A], Stream[A]] with IterableFactoryDefaults[A, [A] =>> Stream[A]] with Serializable","description":"scala.collection.immutable.Stream","location":"api/scala/collection/immutable/Stream.html","searchKeys":["Stream"]},{"name":"val x$21: FromExpr[T6]","description":"scala.quoted.FromExpr$$Tuple15FromExpr","location":"api/scala/quoted/FromExpr$$Tuple15FromExpr.html","searchKeys":["x$21"]},{"name":"object Stepper","description":"scala.collection.Stepper$","location":"api/scala/collection/Stepper$.html","searchKeys":["Stepper"]},{"name":"def declaredMethod(name: String): List[Symbol]","description":"scala.quoted.Quotes$reflectModule$SymbolMethods","location":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html","searchKeys":["declaredMethod"]},{"name":"def unifiedPrimitiveEquals(x: Any): Boolean","description":"scala.math.ScalaNumericAnyConversions","location":"api/scala/math/ScalaNumericAnyConversions.html","searchKeys":["unifiedPrimitiveEquals"]},{"name":"def fromString(s: String): Source","description":"scala.io.Source$","location":"api/scala/io/Source$.html","searchKeys":["fromString"]},{"name":"def fromSpecific(it: IterableOnce[A]): C","description":"scala.collection.Factory","location":"api/scala/collection/Factory.html","searchKeys":["fromSpecific"]},{"name":"def delayedInit(x: => Unit): Unit","description":"scala.DelayedInit","location":"api/scala/DelayedInit.html","searchKeys":["delayedInit"]},{"name":"def unsafeWrapArray[T](x: Array[T]): ArraySeq[T]","description":"scala.collection.immutable.ArraySeq$","location":"api/scala/collection/immutable/ArraySeq$.html","searchKeys":["unsafeWrapArray"]},{"name":"object ArrayOps","description":"scala.collection.ArrayOps$","location":"api/scala/collection/ArrayOps$.html","searchKeys":["ArrayOps"]},{"name":"given SuperMethods","description":"scala.quoted.Quotes$reflectModule$SuperMethods","location":"api/scala/quoted/Quotes$reflectModule$SuperMethods.html","searchKeys":["SuperMethods"]},{"name":"def apply(body: => Unit): ShutdownHookThread","description":"scala.sys.ShutdownHookThread$","location":"api/scala/sys/ShutdownHookThread$.html","searchKeys":["apply"]},{"name":"type Elem[X <: Tuple, N <: Int] = X match {\n  case x *: xs => N match {\n  case 0 => x\n  case S[n1] => Elem[xs, n1]\n}\n}","description":"scala.Tuple$","location":"api/scala/Tuple$.html","searchKeys":["Elem"]},{"name":"def quotes(using inline q: Quotes): q","description":"scala.quoted.Quotes$package$","location":"api/scala/quoted.html","searchKeys":["quotes"]},{"name":"def unapply(x: Literal): Some[Constant]","description":"scala.quoted.Quotes$reflectModule$LiteralModule","location":"api/scala/quoted/Quotes$reflectModule$LiteralModule.html","searchKeys":["unapply"]},{"name":"type A","description":"scala.collection.generic.IsIterableOnce","location":"api/scala/collection/generic/IsIterableOnce.html","searchKeys":["A"]},{"name":"def *(that: BigDecimal): BigDecimal","description":"scala.math.BigDecimal","location":"api/scala/math/BigDecimal.html","searchKeys":["*"]},{"name":"class PriorityQueue[A](val ord: Ordering[A]) extends AbstractIterable[A] with Iterable[A] with IterableOps[A, [A] =>> Iterable[A], PriorityQueue[A]] with StrictOptimizedIterableOps[A, [A] =>> Iterable[A], PriorityQueue[A]] with Builder[A, PriorityQueue[A]] with Cloneable[PriorityQueue[A]] with Growable[A] with Serializable","description":"scala.collection.mutable.PriorityQueue","location":"api/scala/collection/mutable/PriorityQueue.html","searchKeys":["PriorityQueue"]},{"name":"def %(x: Short): Int","description":"scala.Short","location":"api/scala/Short.html","searchKeys":["%"]},{"name":"def ^(x: Short): Int","description":"scala.Int","location":"api/scala/Int.html","searchKeys":["^"]},{"name":"def asJavaLongFunction: LongFunction[R]","description":"scala.jdk.FunctionWrappers$$RichFunction1AsLongFunction","location":"api/scala/jdk/FunctionWrappers$$RichFunction1AsLongFunction.html","searchKeys":["asJavaLongFunction"]},{"name":"def unapplySeq(m: Match): Option[Seq[String]]","description":"scala.util.matching.Regex$$Groups$","location":"api/scala/util/matching/Regex$$Groups$.html","searchKeys":["unapplySeq"]},{"name":"trait TypeRefModule","description":"scala.quoted.Quotes$reflectModule$TypeRefModule","location":"api/scala/quoted/Quotes$reflectModule$TypeRefModule.html","searchKeys":["TypeRefModule"]},{"name":"trait IterableFactory[+CC <: ([_$1] =>> Any)] extends Serializable","description":"scala.collection.IterableFactory","location":"api/scala/collection/IterableFactory.html","searchKeys":["IterableFactory"]}]
