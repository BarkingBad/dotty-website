var pages = [{"name":"def namePos: Position","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-simple-selector-methods/name-pos.html","searchKeys":["namePos"]},{"name":"Implicit Conversions - More Details","description":"","location":"docs/reference/changed-features/implicit-conversions-spec.html","searchKeys":["Implicit Conversions - More Details"]},{"name":"def productArity: Int","description":"scala.deriving","location":"-scala 3/-a-p-i/scala/deriving/-array-product/product-arity.html","searchKeys":["productArity"]},{"name":"def isType: Boolean","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/is-type.html","searchKeys":["isType"]},{"name":"def binder: RecursiveType","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-recursive-this-methods/binder.html","searchKeys":["binder"]},{"name":"object noAutoTupling","description":"scala.runtime.stdLibPatches","location":"-scala 3/-a-p-i/scala/runtime/stdLibPatches/language/no-auto-tupling.html","searchKeys":["noAutoTupling"]},{"name":"def selectors: List[ImportSelector]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-import-methods/selectors.html","searchKeys":["selectors"]},{"name":"def fromDigits(digits: String): BigDecimal","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-from-digits$/-big-decimal-from-digits/from-digits.html","searchKeys":["fromDigits"]},{"name":"def copy(original: Tree)(expr: Term, selectors: List[ImportSelector]): Import","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-import-module/copy.html","searchKeys":["copy"]},{"name":"def AnyRefClass: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/defn-module/-any-ref-class.html","searchKeys":["AnyRefClass"]},{"name":"def +(delta: Int): Addr","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-buffer$/-addr/+.html","searchKeys":["+"]},{"name":"trait FromDigits[T]","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-from-digits.html","searchKeys":["FromDigits"]},{"name":"def productElement(n: Int): Any","description":"scala.deriving","location":"-scala 3/-a-p-i/scala/deriving/-array-product/product-element.html","searchKeys":["productElement"]},{"name":"given of","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-type$/of.html","searchKeys":["of"]},{"name":"def moduleClass: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/module-class.html","searchKeys":["moduleClass"]},{"name":"def CaseAccessor: Flags","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-module/-case-accessor.html","searchKeys":["CaseAccessor"]},{"name":"def canEqualAny[L, R]: CanEqual[L, R]","description":"scala","location":"-scala 3/-a-p-i/scala/-can-equal$/can-equal-any.html","searchKeys":["canEqualAny"]},{"name":"def unapply(tree: LambdaTypeTree): Option[(List[TypeDef], Tree)]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-lambda-type-tree-module/unapply.html","searchKeys":["unapply"]},{"name":"trait LambdaTypeTreeModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-lambda-type-tree-module.html","searchKeys":["LambdaTypeTreeModule"]},{"name":"def unapply(x: Repeated): Option[(List[Term], TypeTree)]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-repeated-module/unapply.html","searchKeys":["unapply"]},{"name":"class SplicedType extends Annotation","description":"scala.quoted.runtime","location":"-scala 3/-a-p-i/scala/quoted/runtime/-spliced-type.html","searchKeys":["SplicedType"]},{"name":"def writeByte(b: Int): Unit","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-buffer/write-byte.html","searchKeys":["writeByte"]},{"name":"def fun: Term","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-apply-methods/fun.html","searchKeys":["fun"]},{"name":"def foldTrees(x: X, trees: Iterable[Tree])(owner: Symbol): X","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-tree-accumulator/fold-trees.html","searchKeys":["foldTrees"]},{"name":"object 3.0","description":"scala.runtime.stdLibPatches","location":"-scala 3/-a-p-i/scala/runtime/stdLibPatches/language/3.0.html","searchKeys":["3.0"]},{"name":"def transformTerms(trees: List[Term])(owner: Symbol): List[Term]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-tree-map/transform-terms.html","searchKeys":["transformTerms"]},{"name":"trait MethodTypeMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-method-type-methods.html","searchKeys":["MethodTypeMethods"]},{"name":"def productPrefix: String","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-tuple-x-x-l/product-prefix.html","searchKeys":["productPrefix"]},{"name":"Macros Spec","description":"","location":"docs/reference/metaprogramming/macros-spec.html","searchKeys":["Macros Spec"]},{"name":"def returnTpt: TypeTree","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-def-def-methods/return-tpt.html","searchKeys":["returnTpt"]},{"name":"Type Lambdas - More Details","description":"","location":"docs/reference/new-types/type-lambdas-spec.html","searchKeys":["Type Lambdas - More Details"]},{"name":"def unapply(x: ThisType): Option[TypeRepr]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-this-type-module/unapply.html","searchKeys":["unapply"]},{"name":"def longFromDigits(digits: String, radix: Int): Long","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-from-digits$/long-from-digits.html","searchKeys":["longFromDigits"]},{"name":"trait BindMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-bind-methods.html","searchKeys":["BindMethods"]},{"name":"trait TypeIdentModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-ident-module.html","searchKeys":["TypeIdentModule"]},{"name":"def typeSymbol: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-repr-methods/type-symbol.html","searchKeys":["typeSymbol"]},{"name":"def count[T](p: T => Boolean): Int","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/count.html","searchKeys":["count"]},{"name":"def isClassConstructor: Boolean","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/is-class-constructor.html","searchKeys":["isClassConstructor"]},{"name":"def elems: List[Term]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-repeated-methods/elems.html","searchKeys":["elems"]},{"name":"trait GivenSelectorModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-given-selector-module.html","searchKeys":["GivenSelectorModule"]},{"name":"trait RefinedMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-refined-methods.html","searchKeys":["RefinedMethods"]},{"name":"trait TreeAccumulator[X]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-tree-accumulator.html","searchKeys":["TreeAccumulator"]},{"name":"class TupleXXL extends Product","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-tuple-x-x-l.html","searchKeys":["TupleXXL"]},{"name":"def appliedToTypeTrees(targs: List[TypeTree]): Term","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-term-methods/applied-to-type-trees.html","searchKeys":["appliedToTypeTrees"]},{"name":"def betaReduce(term: Term): Option[Term]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-term-module/beta-reduce.html","searchKeys":["betaReduce"]},{"name":"def param(idx: Int): TypeRepr","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-lambda-methods/param.html","searchKeys":["param"]},{"name":"trait defnModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/defn-module.html","searchKeys":["defnModule"]},{"name":"object Parser extends ErrorKind","description":"scala.compiletime.testing","location":"-scala 3/-a-p-i/scala/compiletime/testing/-error-kind$/-parser.html","searchKeys":["Parser"]},{"name":"The @targetName annotation","description":"","location":"docs/reference/other-new-features/targetName.html","searchKeys":["The @targetName annotation"]},{"name":"def name: String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-refinement-methods/name.html","searchKeys":["name"]},{"name":"object strictEquality","description":"scala.runtime.stdLibPatches","location":"-scala 3/-a-p-i/scala/runtime/stdLibPatches/language/strict-equality.html","searchKeys":["strictEquality"]},{"name":"object string","description":"scala.compiletime.ops","location":"-scala 3/-a-p-i/scala/compiletime/ops/string.html","searchKeys":["string"]},{"name":"trait TypeSelectMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-select-methods.html","searchKeys":["TypeSelectMethods"]},{"name":"def unapply(tdef: TypeDef): Option[(String, Tree)]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-def-module/unapply.html","searchKeys":["unapply"]},{"name":"def rhs: Option[Term]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-val-def-methods/rhs.html","searchKeys":["rhs"]},{"name":"def constValue[T]: T","description":"scala.compiletime","location":"-scala 3/-a-p-i/scala/compiletime/const-value.html","searchKeys":["constValue"]},{"name":"def apply(cond: Term, body: Term): While","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-while-module/apply.html","searchKeys":["apply"]},{"name":"def isImplicit: Boolean","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-method-type-methods/is-implicit.html","searchKeys":["isImplicit"]},{"name":"Overview","description":"","location":"docs/reference/contextual/motivation.html","searchKeys":["Overview"]},{"name":"trait AlternativesMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-alternatives-methods.html","searchKeys":["AlternativesMethods"]},{"name":"def ifBefore[T](end: Addr)(op: => T, default: T): T","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-reader/if-before.html","searchKeys":["ifBefore"]},{"name":"def apply(name: String, arg: Term): NamedArg","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-named-arg-module/apply.html","searchKeys":["apply"]},{"name":"Other New Features","description":"","location":"docs/Other New Features/index.html","searchKeys":["Other New Features"]},{"name":"def erasedValue[T]: T","description":"scala.compiletime","location":"-scala 3/-a-p-i/scala/compiletime/erased-value.html","searchKeys":["erasedValue"]},{"name":"given SetLiftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-set-liftable.html","searchKeys":["SetLiftable"]},{"name":"Dropped: Scala 2 Macros","description":"","location":"docs/reference/dropped-features/macros.html","searchKeys":["Dropped: Scala 2 Macros"]},{"name":"trait ErrorKind","description":"scala.compiletime.testing","location":"-scala 3/-a-p-i/scala/compiletime/testing/-error-kind.html","searchKeys":["ErrorKind"]},{"name":"def floatFromDigits(digits: String): Float","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-from-digits$/float-from-digits.html","searchKeys":["floatFromDigits"]},{"name":"object NonLocalReturns","description":"scala.util.control","location":"-scala 3/-a-p-i/scala/util/control/-non-local-returns.html","searchKeys":["NonLocalReturns"]},{"name":"def resultSig: String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-signature-methods/result-sig.html","searchKeys":["resultSig"]},{"name":"def isInstanceOfNonEmptyTuple(x: Any): Boolean","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-tuple/is-instance-of-non-empty-tuple.html","searchKeys":["isInstanceOfNonEmptyTuple"]},{"name":"object Predef","description":"scala.runtime.stdLibPatches","location":"-scala 3/-a-p-i/scala/runtime/stdLibPatches/-predef.html","searchKeys":["Predef"]},{"name":"trait RecursiveTypeMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-recursive-type-methods.html","searchKeys":["RecursiveTypeMethods"]},{"name":"def unapply(x: Assign): Option[(Term, Term)]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-assign-module/unapply.html","searchKeys":["unapply"]},{"name":"given Tuple6Liftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-tuple6-liftable.html","searchKeys":["Tuple6Liftable"]},{"name":"trait TypeReprMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-repr-methods.html","searchKeys":["TypeReprMethods"]},{"name":"object opaques","description":"scala","location":"-scala 3/-a-p-i/scala/opaques.html","searchKeys":["opaques"]},{"name":"object Consts","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-consts.html","searchKeys":["Consts"]},{"name":"def IntClass: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/defn-module/-int-class.html","searchKeys":["IntClass"]},{"name":"def codeOf(arg: Any): String","description":"scala.compiletime","location":"-scala 3/-a-p-i/scala/compiletime/code-of.html","searchKeys":["codeOf"]},{"name":"trait TryMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-try-methods.html","searchKeys":["TryMethods"]},{"name":"def unapply(x: OmitSelector): Option[String]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-omit-selector-module/unapply.html","searchKeys":["unapply"]},{"name":"def exists: Boolean","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-position-methods/exists.html","searchKeys":["exists"]},{"name":"def tpt: TypeTree","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-val-def-methods/tpt.html","searchKeys":["tpt"]},{"name":"def apply(expr: Term, cases: List[CaseDef], finalizer: Option[Term]): Try","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-try-module/apply.html","searchKeys":["apply"]},{"name":"trait PolyFunction","description":"scala","location":"-scala 3/-a-p-i/scala/-poly-function.html","searchKeys":["PolyFunction"]},{"name":"trait ReturnMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-return-methods.html","searchKeys":["ReturnMethods"]},{"name":"class StopMacroExpansion extends Throwable","description":"scala.quoted.runtime","location":"-scala 3/-a-p-i/scala/quoted/runtime/-stop-macro-expansion.html","searchKeys":["StopMacroExpansion"]},{"name":"trait NamedArgMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-named-arg-methods.html","searchKeys":["NamedArgMethods"]},{"name":"def ParamAccessor: Flags","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-module/-param-accessor.html","searchKeys":["ParamAccessor"]},{"name":"def unapply[TypeBindings <: Tuple, Tup <: Tuple](scrutinee: Type[ <: AnyKind])(pattern: Type[ <: AnyKind]): Option[Tup]","description":"scala.quoted.runtime","location":"-scala 3/-a-p-i/scala/quoted/runtime/-quote-matching/-type-match-module/unapply.html","searchKeys":["unapply"]},{"name":"def Mutable: Flags","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-module/-mutable.html","searchKeys":["Mutable"]},{"name":"def apply(x: Double): Constant","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-module/-double-module/apply.html","searchKeys":["apply"]},{"name":"def quotes(q: Quotes): q.type","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/quotes.html","searchKeys":["quotes"]},{"name":"def simplified: TypeRepr","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-repr-methods/simplified.html","searchKeys":["simplified"]},{"name":"trait TypeBlockMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-block-methods.html","searchKeys":["TypeBlockMethods"]},{"name":"def EmptyPackageClass: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/defn-module/-empty-package-class.html","searchKeys":["EmptyPackageClass"]},{"name":"class TastyHeaderUnpickler(reader: TastyReader)","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-header-unpickler.html","searchKeys":["TastyHeaderUnpickler"]},{"name":"trait AnnotatedModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-annotated-module.html","searchKeys":["AnnotatedModule"]},{"name":"Implicit Conversions","description":"","location":"docs/reference/changed-features/implicit-conversions.html","searchKeys":["Implicit Conversions"]},{"name":"def transform[T](e: Expr[T])(x$2: Type[T])(x$3: Quotes): Expr[T]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-expr-map/transform.html","searchKeys":["transform"]},{"name":"class ParseError(val idx: Int, val msg: String) extends Exception","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-command-line-parser/-parse-error.html","searchKeys":["ParseError"]},{"name":"trait TryModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-try-module.html","searchKeys":["TryModule"]},{"name":"def EmptyFlags: Flags","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-module/-empty-flags.html","searchKeys":["EmptyFlags"]},{"name":"def copy(original: Tree)(qual: Term, mix: Option[String]): Super","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-super-module/copy.html","searchKeys":["copy"]},{"name":"def dealias: TypeRepr","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-repr-methods/dealias.html","searchKeys":["dealias"]},{"name":"def copy(original: Tree)(tparams: List[TypeDef], body: Tree): LambdaTypeTree","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-lambda-type-tree-module/copy.html","searchKeys":["copy"]},{"name":"def ScalaPrimitiveValueClasses: List[Symbol]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/defn-module/-scala-primitive-value-classes.html","searchKeys":["ScalaPrimitiveValueClasses"]},{"name":"def lhs: Term","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-assign-methods/lhs.html","searchKeys":["lhs"]},{"name":"trait TreeTraverser extends TreeAccumulator[Unit]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-tree-traverser.html","searchKeys":["TreeTraverser"]},{"name":"def apply(): Constant","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-module/-unit-module/apply.html","searchKeys":["apply"]},{"name":"def apply(pattern: TypeTree, rhs: TypeTree): TypeCaseDef","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-case-def-module/apply.html","searchKeys":["apply"]},{"name":"def apply(lhs: TypeRepr, rhs: TypeRepr): AndType","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-and-type-module/apply.html","searchKeys":["apply"]},{"name":"def recThis: RecursiveThis","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-recursive-type-methods/rec-this.html","searchKeys":["recThis"]},{"name":"def children: List[Symbol]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/children.html","searchKeys":["children"]},{"name":"def isNoSymbol: Boolean","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/is-no-symbol.html","searchKeys":["isNoSymbol"]},{"name":"def isTupleClass(sym: Symbol): Boolean","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/defn-module/is-tuple-class.html","searchKeys":["isTupleClass"]},{"name":"def ArrayClass: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/defn-module/-array-class.html","searchKeys":["ArrayClass"]},{"name":"def isInstanceOfTuple(x: Any): Boolean","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-tuple/is-instance-of-tuple.html","searchKeys":["isInstanceOfTuple"]},{"name":"def typeChecks(code: String): Boolean","description":"scala.compiletime.testing","location":"-scala 3/-a-p-i/scala/compiletime/testing/type-checks.html","searchKeys":["typeChecks"]},{"name":"trait TypeApplyModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-apply-module.html","searchKeys":["TypeApplyModule"]},{"name":"def iterate[T](start: T, len: Int)(f: T => T)(evidence$13: ClassTag[T]): IArray[T]","description":"scala","location":"-scala 3/-a-p-i/scala/-i-array/iterate.html","searchKeys":["iterate"]},{"name":"def typeCheckErrors(code: String): List[Error]","description":"scala.compiletime.testing","location":"-scala 3/-a-p-i/scala/compiletime/testing/type-check-errors.html","searchKeys":["typeCheckErrors"]},{"name":"def filterNot[T](p: T => Boolean): IArray[T]","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/filter-not.html","searchKeys":["filterNot"]},{"name":"trait AppliedTypeMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-applied-type-methods.html","searchKeys":["AppliedTypeMethods"]},{"name":"def unapply(x: ParamRef): Option[(LambdaType, Int)]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-param-ref-module/unapply.html","searchKeys":["unapply"]},{"name":"def unapply(tree: Block): Option[(List[ValDef], Term)]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-lambda-module/unapply.html","searchKeys":["unapply"]},{"name":"def canEqual(that: Any): Boolean","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-enum-value/can-equal.html","searchKeys":["canEqual"]},{"name":"object TypeTest","description":"scala.reflect","location":"-scala 3/-a-p-i/scala/reflect/-type-test$.html","searchKeys":["TypeTest"]},{"name":"def summonFrom[T](f: Nothing => T): T","description":"scala.compiletime","location":"-scala 3/-a-p-i/scala/compiletime/summon-from.html","searchKeys":["summonFrom"]},{"name":"def param(idx: Int): TypeRepr","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-poly-type-methods/param.html","searchKeys":["param"]},{"name":"def tpt: TypeTree","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-typed-methods/tpt.html","searchKeys":["tpt"]},{"name":"def value: Any","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-methods/value.html","searchKeys":["value"]},{"name":"def throwReturn(result: T): Nothing","description":"scala.util.control","location":"-scala 3/-a-p-i/scala/util/control/-non-local-returns/-return-throwable/throw-return.html","searchKeys":["throwReturn"]},{"name":"def unapply(pattern: Bind): Option[(String, Tree)]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-bind-module/unapply.html","searchKeys":["unapply"]},{"name":"object Expr","description":"scala.quoted.runtime","location":"-scala 3/-a-p-i/scala/quoted/runtime/-expr.html","searchKeys":["Expr"]},{"name":"def dropWhile[T](p: T => Boolean): IArray[T]","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/drop-while.html","searchKeys":["dropWhile"]},{"name":"def unapply(x: PolyType): Option[(List[String], List[TypeBounds], TypeRepr)]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-poly-type-module/unapply.html","searchKeys":["unapply"]},{"name":"def partition[T](p: T => Boolean): (IArray[T], IArray[T])","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/partition.html","searchKeys":["partition"]},{"name":"Announcing Dotty 0.26.0-RC1 - unified extension methods and more","description":"","location":"blog/2020/07/27/26th-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.26.0-RC1 - unified extension methods and more"]},{"name":"def identity[T]: TypeTest[T, T]","description":"scala.reflect","location":"-scala 3/-a-p-i/scala/reflect/-type-test$/identity.html","searchKeys":["identity"]},{"name":"Working with Scalafix","description":"","location":"docs/contributing/tools/scalafix.html","searchKeys":["Working with Scalafix"]},{"name":"trait TypeTreeModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-tree-module.html","searchKeys":["TypeTreeModule"]},{"name":"given given_FromString_String as FromString[String]","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-command-line-parser/-from-string$/given_-from-string_-string.html","searchKeys":["given_FromString_String"]},{"name":"def Contravariant: Flags","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-module/-contravariant.html","searchKeys":["Contravariant"]},{"name":"trait RepeatedMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-repeated-methods.html","searchKeys":["RepeatedMethods"]},{"name":"def ArrayModule: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/defn-module/-array-module.html","searchKeys":["ArrayModule"]},{"name":"def drop(self: Tuple, n: Int): Tuple","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-tuple/drop.html","searchKeys":["drop"]},{"name":"Announcing Dotty 0.17.0-RC1 – new implicit scoping rules and more","description":"","location":"blog/2019/07/25/17th-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.17.0-RC1 – new implicit scoping rules and more"]},{"name":"def constant: Constant","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-type-methods/constant.html","searchKeys":["constant"]},{"name":"def fromProduct(p: Product): MirroredMonoType","description":"scala.deriving","location":"-scala 3/-a-p-i/scala/deriving/-mirror$/-singleton-proxy/from-product.html","searchKeys":["fromProduct"]},{"name":"def HasDefault: Flags","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-module/-has-default.html","searchKeys":["HasDefault"]},{"name":"def productArity: Int","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-tuple-x-x-l/product-arity.html","searchKeys":["productArity"]},{"name":"def apply(cases: List[CaseDef]): SummonFrom","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-summon-from-module/apply.html","searchKeys":["apply"]},{"name":"def Object: Flags","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-module/-object.html","searchKeys":["Object"]},{"name":"def readNameRef(): NameRef","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-reader/read-name-ref.html","searchKeys":["readNameRef"]},{"name":"def unsafeFromArray[T](s: Array[T]): IArray[T]","description":"scala","location":"-scala 3/-a-p-i/scala/-i-array/unsafe-from-array.html","searchKeys":["unsafeFromArray"]},{"name":"trait AndTypeMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-and-type-methods.html","searchKeys":["AndTypeMethods"]},{"name":"trait CanEqual[-L, -R]","description":"scala","location":"-scala 3/-a-p-i/scala/-can-equal.html","searchKeys":["CanEqual"]},{"name":"Algebraic Data Types","description":"","location":"docs/reference/enums/adts.html","searchKeys":["Algebraic Data Types"]},{"name":"object TupleXXL","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-tuple-x-x-l$.html","searchKeys":["TupleXXL"]},{"name":"def isTypeParam: Boolean","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/is-type-param.html","searchKeys":["isTypeParam"]},{"name":"given BigIntFromDigits as WithRadix[BigInt]","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-from-digits$/-big-int-from-digits.html","searchKeys":["BigIntFromDigits"]},{"name":"def unapply(x: Return): Option[(Term, Symbol)]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-return-module/unapply.html","searchKeys":["unapply"]},{"name":"trait AssignModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-assign-module.html","searchKeys":["AssignModule"]},{"name":"def splitAt[T](n: Int): (IArray[T], IArray[T])","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/split-at.html","searchKeys":["splitAt"]},{"name":"def copy(original: Tree)(cases: List[CaseDef]): SummonFrom","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-summon-from-module/copy.html","searchKeys":["copy"]},{"name":"Dropped: Delayedinit","description":"","location":"docs/reference/dropped-features/delayed-init.html","searchKeys":["Dropped: Delayedinit"]},{"name":"Dotty","description":"","location":"index.html","searchKeys":["Dotty"]},{"name":"def apply(owner: Symbol, tpe: MethodType, rhsFn: (Symbol, List[Tree]) => Tree): Block","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-lambda-module/apply.html","searchKeys":["apply"]},{"name":"def flatMap[T, U](f: T => IterableOnce[U])(evidence$15: ClassTag[U]): IArray[U]","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/flat-map.html","searchKeys":["flatMap"]},{"name":"def apply(stats: List[Statement], expr: Term): Block","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-block-module/apply.html","searchKeys":["apply"]},{"name":"trait TermRefMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-term-ref-methods.html","searchKeys":["TermRefMethods"]},{"name":"trait EnumValue extends Product with Serializable","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-enum-value.html","searchKeys":["EnumValue"]},{"name":"def ShortClass: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/defn-module/-short-class.html","searchKeys":["ShortClass"]},{"name":"object Mirror","description":"scala.deriving","location":"-scala 3/-a-p-i/scala/deriving/-mirror$.html","searchKeys":["Mirror"]},{"name":"trait MatchMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-match-methods.html","searchKeys":["MatchMethods"]},{"name":"def unapply(tree: If): Option[(Term, Term, Term)]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-if-module/unapply.html","searchKeys":["unapply"]},{"name":"def unique(qualifier: Term, name: String): Select","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-select-module/unique.html","searchKeys":["unique"]},{"name":"def qualifier: Term","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-select-outer-methods/qualifier.html","searchKeys":["qualifier"]},{"name":"def contains[T](elem: T): Boolean","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/contains.html","searchKeys":["contains"]},{"name":"def nonEmpty[T]: Boolean","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/non-empty.html","searchKeys":["nonEmpty"]},{"name":"def copy(original: Tree)(patterns: List[Tree]): Alternatives","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-alternatives-module/copy.html","searchKeys":["copy"]},{"name":"def self: Option[ValDef]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-class-def-methods/self.html","searchKeys":["self"]},{"name":"def showAnsiColored: String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/show-ansi-colored.html","searchKeys":["showAnsiColored"]},{"name":"def ordinal: Int","description":"scala.reflect","location":"-scala 3/-a-p-i/scala/reflect/-enum/ordinal.html","searchKeys":["ordinal"]},{"name":"def productElement[T](x: Any, idx: Int): T","description":"scala.deriving","location":"-scala 3/-a-p-i/scala/deriving/product-element.html","searchKeys":["productElement"]},{"name":"def currentAddr: Addr","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-reader/current-addr.html","searchKeys":["currentAddr"]},{"name":"def unapply(x: CaseDef): Option[(Tree, Option[Term], Term)]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-case-def-module/unapply.html","searchKeys":["unapply"]},{"name":"trait SymbolMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods.html","searchKeys":["SymbolMethods"]},{"name":"Implicit Function Types","description":"","location":"blog/2016/12/05/implicit-function-types.html","searchKeys":["Implicit Function Types"]},{"name":"def tail[T]: IArray[T]","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/tail.html","searchKeys":["tail"]},{"name":"object Unliftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-unliftable$.html","searchKeys":["Unliftable"]},{"name":"def path: Path","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-source-module/path.html","searchKeys":["path"]},{"name":"trait TreeMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-tree-methods.html","searchKeys":["TreeMethods"]},{"name":"def apply(x: Char): Constant","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-module/-char-module/apply.html","searchKeys":["apply"]},{"name":"def appliedToType(targ: TypeRepr): Term","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-term-methods/applied-to-type.html","searchKeys":["appliedToType"]},{"name":"def fromIterator(elems: Iterator[Any]): TupleXXL","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-tuple-x-x-l$/from-iterator.html","searchKeys":["fromIterator"]},{"name":"given CharLiftable[T <: Char] as Liftable[T]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-char-liftable.html","searchKeys":["CharLiftable"]},{"name":"Pattern Bindings","description":"","location":"docs/reference/changed-features/pattern-bindings.html","searchKeys":["Pattern Bindings"]},{"name":"def qualifier: TypeRepr","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-term-ref-methods/qualifier.html","searchKeys":["qualifier"]},{"name":"class Conversion[-T, +U] extends T => U","description":"scala","location":"-scala 3/-a-p-i/scala/-conversion.html","searchKeys":["Conversion"]},{"name":"def body: Tree","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-lambda-type-tree-methods/body.html","searchKeys":["body"]},{"name":"class alpha(externalName: String) extends StaticAnnotation","description":"scala.annotation","location":"-scala 3/-a-p-i/scala/annotation/alpha.html","searchKeys":["alpha"]},{"name":"def apply(symbol: Symbol): TypeDef","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-def-module/apply.html","searchKeys":["apply"]},{"name":"def rhs: Term","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-assign-methods/rhs.html","searchKeys":["rhs"]},{"name":"def copy(original: Tree)(expr: Term, from: Symbol): Return","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-return-module/copy.html","searchKeys":["copy"]},{"name":"def Open: Flags","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-module/-open.html","searchKeys":["Open"]},{"name":"def left: TypeRepr","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-or-type-methods/left.html","searchKeys":["left"]},{"name":"def apply(sym: Symbol, pattern: Tree): Bind","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-bind-module/apply.html","searchKeys":["apply"]},{"name":"def parseRemainingArguments[T](args: Array[String], n: Int)(fs: FromString[T]): List[T]","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-command-line-parser/parse-remaining-arguments.html","searchKeys":["parseRemainingArguments"]},{"name":"def unapplySeq(x: TupleXXL): Option[Seq[Any]]","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-tuple-x-x-l$/unapply-seq.html","searchKeys":["unapplySeq"]},{"name":"def name: String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-simple-selector-methods/name.html","searchKeys":["name"]},{"name":"def summon[T](x: T): x.type","description":"scala","location":"-scala 3/-a-p-i/scala/runtime/stdLibPatches/-predef/summon.html","searchKeys":["summon"]},{"name":"def Protected: Flags","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-module/-protected.html","searchKeys":["Protected"]},{"name":"def showExtractors: String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/show-extractors.html","searchKeys":["showExtractors"]},{"name":"def showAnsiColored: String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-methods/show-ansi-colored.html","searchKeys":["showAnsiColored"]},{"name":"def newBind(parent: Symbol, name: String, flags: Flags, tpe: TypeRepr): Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-module/new-bind.html","searchKeys":["newBind"]},{"name":"class Expr[+T]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-expr.html","searchKeys":["Expr"]},{"name":"def fromString(s: String): Long","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-command-line-parser/-from-string$/given_-from-string_-long/from-string.html","searchKeys":["fromString"]},{"name":"def rhs: TypeTree","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-case-def-methods/rhs.html","searchKeys":["rhs"]},{"name":"trait DefinitionMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-definition-methods.html","searchKeys":["DefinitionMethods"]},{"name":"def concat[T](xss: IArray[T]*)(evidence$2: ClassTag[T]): IArray[T]","description":"scala","location":"-scala 3/-a-p-i/scala/-i-array/concat.html","searchKeys":["concat"]},{"name":"def *:[H, This >: Tuple <: Tuple](x: H): H *: This","description":"scala","location":"-scala 3/-a-p-i/scala/-tuple/[42][58].html","searchKeys":["*:"]},{"name":"trait NoPrefixModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-no-prefix-module.html","searchKeys":["NoPrefixModule"]},{"name":"def requiredClass(path: String): Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-module/required-class.html","searchKeys":["requiredClass"]},{"name":"def requiredPackage(path: String): Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-module/required-package.html","searchKeys":["requiredPackage"]},{"name":"trait IntModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-module/-int-module.html","searchKeys":["IntModule"]},{"name":"object Const","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-const.html","searchKeys":["Const"]},{"name":"def unapply(x: TypeApply): Option[(Term, List[TypeTree])]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-apply-module/unapply.html","searchKeys":["unapply"]},{"name":"def qualifier: TypeRepr","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-ref-methods/qualifier.html","searchKeys":["qualifier"]},{"name":"def copy(original: Tree)(fun: Term, args: List[TypeTree]): TypeApply","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-apply-module/copy.html","searchKeys":["copy"]},{"name":"def Package: Flags","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-module/-package.html","searchKeys":["Package"]},{"name":"object EmptyTuple extends Tuple","description":"scala","location":"-scala 3/-a-p-i/scala/-empty-tuple.html","searchKeys":["EmptyTuple"]},{"name":"given SomeLiftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-some-liftable.html","searchKeys":["SomeLiftable"]},{"name":"def appliedToArgs(args: List[Term]): Apply","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-term-methods/applied-to-args.html","searchKeys":["appliedToArgs"]},{"name":"def CharClass: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/defn-module/-char-class.html","searchKeys":["CharClass"]},{"name":"def name: String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-definition-methods/name.html","searchKeys":["name"]},{"name":"def copy(original: Tree)(qualifier: TypeTree, name: String): TypeProjection","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-projection-module/copy.html","searchKeys":["copy"]},{"name":"def assemble(): Unit","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-buffer/assemble.html","searchKeys":["assemble"]},{"name":"def startAddr: Addr","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-reader/start-addr.html","searchKeys":["startAddr"]},{"name":"def NullClass: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/defn-module/-null-class.html","searchKeys":["NullClass"]},{"name":"trait ThisTypeMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-this-type-methods.html","searchKeys":["ThisTypeMethods"]},{"name":"def unapply(x: TypeBounds): Option[(TypeRepr, TypeRepr)]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-bounds-module/unapply.html","searchKeys":["unapply"]},{"name":"def apply(expr: Term, from: Symbol): Return","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-return-module/apply.html","searchKeys":["apply"]},{"name":"def unapply(x: While): Option[(Term, Term)]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-while-module/unapply.html","searchKeys":["unapply"]},{"name":"Dependent Function Types","description":"","location":"docs/reference/new-types/dependent-function-types.html","searchKeys":["Dependent Function Types"]},{"name":"def tree: Tree","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/tree.html","searchKeys":["tree"]},{"name":"def nestedSplice[T](q: Quotes)(x: Nested => Expr[T]): T","description":"scala.quoted.runtime","location":"-scala 3/-a-p-i/scala/quoted/runtime/-expr/nested-splice.html","searchKeys":["nestedSplice"]},{"name":"Import Given","description":"","location":"docs/reference/contextual/import-delegate.html","searchKeys":["Import Given"]},{"name":"def fun: Term","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-apply-methods/fun.html","searchKeys":["fun"]},{"name":"def goto(addr: Addr): Unit","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-reader/goto.html","searchKeys":["goto"]},{"name":"Type Class Derivation","description":"","location":"docs/reference/contextual/derivation.html","searchKeys":["Type Class Derivation"]},{"name":"def unapply(x: SimpleSelector): Option[String]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-simple-selector-module/unapply.html","searchKeys":["unapply"]},{"name":"given canEqualSet","description":"scala","location":"-scala 3/-a-p-i/scala/-can-equal$/can-equal-set.html","searchKeys":["canEqualSet"]},{"name":"def apply(paramNames: List[String])(paramBoundsExp: PolyType => List[TypeBounds], resultTypeExp: PolyType => TypeRepr): PolyType","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-poly-type-module/apply.html","searchKeys":["apply"]},{"name":"def transformTerm(tree: Term)(owner: Symbol): Term","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-tree-map/transform-term.html","searchKeys":["transformTerm"]},{"name":"trait ByNameMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-by-name-methods.html","searchKeys":["ByNameMethods"]},{"name":"The Essence of Scala","description":"","location":"blog/2016/02/03/essence-of-scala.html","searchKeys":["The Essence of Scala"]},{"name":"trait TypeApplyMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-apply-methods.html","searchKeys":["TypeApplyMethods"]},{"name":"def methods: List[Symbol]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/methods.html","searchKeys":["methods"]},{"name":"def copy(original: Tree)(meth: Tree, tpe: Option[TypeRepr]): Closure","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-closure-module/copy.html","searchKeys":["copy"]},{"name":"Debug Macros","description":"","location":"docs/internals/debug-macros.html","searchKeys":["Debug Macros"]},{"name":"Blog","description":"","location":"blog/index.html","searchKeys":["Blog"]},{"name":"def apply(bound: TypeRepr, scrutinee: TypeRepr, cases: List[TypeRepr]): MatchType","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-match-type-module/apply.html","searchKeys":["apply"]},{"name":"def toExpr(iarray: IArray[T]): Quotes => Expr[IArray[T]]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-i-array-liftable/to-expr.html","searchKeys":["toExpr"]},{"name":"Import Implied","description":"","location":"docs/reference/contextual/import-implied.html","searchKeys":["Import Implied"]},{"name":"trait InlinedMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-inlined-methods.html","searchKeys":["InlinedMethods"]},{"name":"def <:<(that: TypeRepr): Boolean","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-repr-methods/[60][58][60].html","searchKeys":["<:<"]},{"name":"def emptyObjectIArray: IArray[Object]","description":"scala","location":"-scala 3/-a-p-i/scala/-i-array/empty-object-i-array.html","searchKeys":["emptyObjectIArray"]},{"name":"trait TypeCaseDefMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-case-def-methods.html","searchKeys":["TypeCaseDefMethods"]},{"name":"def tpt: TypeTree","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-refined-methods/tpt.html","searchKeys":["tpt"]},{"name":"class patternType extends Annotation","description":"scala.quoted.runtime","location":"-scala 3/-a-p-i/scala/quoted/runtime/-patterns/pattern-type.html","searchKeys":["patternType"]},{"name":"Announcing Dotty 0.15.0-RC1 – the fully bootstrapped compiler","description":"","location":"blog/2019/05/23/15th-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.15.0-RC1 – the fully bootstrapped compiler"]},{"name":"def transformCaseDefs(trees: List[CaseDef])(owner: Symbol): List[CaseDef]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-tree-map/transform-case-defs.html","searchKeys":["transformCaseDefs"]},{"name":"def unapply(x: This): Option[Option[String]]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-this-module/unapply.html","searchKeys":["unapply"]},{"name":"def RepeatedAnnot: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/defn-module/-repeated-annot.html","searchKeys":["RepeatedAnnot"]},{"name":"trait BlockModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-block-module.html","searchKeys":["BlockModule"]},{"name":"def pos: Position","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/pos.html","searchKeys":["pos"]},{"name":"def typeMembers: List[Symbol]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/type-members.html","searchKeys":["typeMembers"]},{"name":"def takeRight[T](n: Int): IArray[T]","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/take-right.html","searchKeys":["takeRight"]},{"name":"trait WildcardTypeTreeModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-wildcard-type-tree-module.html","searchKeys":["WildcardTypeTreeModule"]},{"name":"def bound: TypeRepr","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-match-type-methods/bound.html","searchKeys":["bound"]},{"name":"object 3.0-migration","description":"scala.runtime.stdLibPatches","location":"-scala 3/-a-p-i/scala/runtime/stdLibPatches/language/3.0-migration.html","searchKeys":["3.0-migration"]},{"name":"trait BooleanModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-module/-boolean-module.html","searchKeys":["BooleanModule"]},{"name":"Usage","description":"","location":"docs/Usage/index.html","searchKeys":["Usage"]},{"name":"def unapply(x: New): Option[TypeTree]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-new-module/unapply.html","searchKeys":["unapply"]},{"name":"def betaReduce[T](expr: Expr[T])(x$2: Quotes): Expr[T]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-expr$/beta-reduce.html","searchKeys":["betaReduce"]},{"name":"def toExpr(x: T): Quotes => Expr[T]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-float-liftable/to-expr.html","searchKeys":["toExpr"]},{"name":"def getByte(at: Addr): Int","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-buffer/get-byte.html","searchKeys":["getByte"]},{"name":"given MapLiftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-map-liftable.html","searchKeys":["MapLiftable"]},{"name":"object *:","description":"scala","location":"-scala 3/-a-p-i/scala/[42][58]$.html","searchKeys":["*:"]},{"name":"given Tuple7Unliftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-unliftable$/-tuple7-unliftable.html","searchKeys":["Tuple7Unliftable"]},{"name":"def unapply(x: AndType): Option[(TypeRepr, TypeRepr)]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-and-type-module/unapply.html","searchKeys":["unapply"]},{"name":"How to write a type class `derived` method using macros","description":"","location":"docs/reference/contextual/derivation-macro.html","searchKeys":["How to write a type class `derived` method using macros"]},{"name":"def copy(original: Tree)(constant: Constant): Literal","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-literal-module/copy.html","searchKeys":["copy"]},{"name":"def isAtEnd: Boolean","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-reader/is-at-end.html","searchKeys":["isAtEnd"]},{"name":"object Names","description":"dotty.runtime","location":"-scala 3/-a-p-i/dotty/runtime/-lazy-vals/-names.html","searchKeys":["Names"]},{"name":"def unapply(sc: Expr[StringContext])(x$2: Quotes): Option[Seq[Expr[String]]]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-expr$/-string-context/unapply.html","searchKeys":["unapply"]},{"name":"def showShort[T](x$1: Type[T])(x$2: Quotes): String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-type$/show-short.html","searchKeys":["showShort"]},{"name":"trait SelectOuterMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-select-outer-methods.html","searchKeys":["SelectOuterMethods"]},{"name":"class transparentTrait extends StaticAnnotation","description":"scala.annotation","location":"-scala 3/-a-p-i/scala/annotation/transparent-trait.html","searchKeys":["transparentTrait"]},{"name":"def takeWhile[T](p: T => Boolean): IArray[T]","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/take-while.html","searchKeys":["takeWhile"]},{"name":"def collectWhile[T](cond: => Boolean)(op: => T): List[T]","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-reader/collect-while.html","searchKeys":["collectWhile"]},{"name":"trait MatchTypeTreeMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-match-type-tree-methods.html","searchKeys":["MatchTypeTreeMethods"]},{"name":"trait RefinementModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-refinement-module.html","searchKeys":["RefinementModule"]},{"name":"def patterns: List[Tree]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-unapply-methods/patterns.html","searchKeys":["patterns"]},{"name":"trait QuoteMatching","description":"scala.quoted.runtime","location":"-scala 3/-a-p-i/scala/quoted/runtime/-quote-matching.html","searchKeys":["QuoteMatching"]},{"name":"trait FloatModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-module/-float-module.html","searchKeys":["FloatModule"]},{"name":"def isDependentFunctionType: Boolean","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-repr-methods/is-dependent-function-type.html","searchKeys":["isDependentFunctionType"]},{"name":"TASTy Inspection","description":"","location":"docs/reference/metaprogramming/tasty-inspect.html","searchKeys":["TASTy Inspection"]},{"name":"def reverse[T]: IArray[T]","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/reverse.html","searchKeys":["reverse"]},{"name":"def flags: Flags","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/flags.html","searchKeys":["flags"]},{"name":"def show: String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/show.html","searchKeys":["show"]},{"name":"def args: List[TypeRepr]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-applied-type-methods/args.html","searchKeys":["args"]},{"name":"def unapply(x: NoPrefix): Boolean","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-no-prefix-module/unapply.html","searchKeys":["unapply"]},{"name":"given Tuple14Unliftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-unliftable$/-tuple14-unliftable.html","searchKeys":["Tuple14Unliftable"]},{"name":"trait IdentMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-ident-methods.html","searchKeys":["IdentMethods"]},{"name":"Dotty Overall Structure","description":"","location":"docs/internals/overall-structure.html","searchKeys":["Dotty Overall Structure"]},{"name":"Announcing Dotty 0.21.0-RC1 - explicit nulls, new syntax for `match` and conditional givens, and more","description":"","location":"blog/2019/12/20/21th-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.21.0-RC1 - explicit nulls, new syntax for `match` and conditional givens, and more"]},{"name":"trait ImportSelectorModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-import-selector-module.html","searchKeys":["ImportSelectorModule"]},{"name":"object CommandLineParser","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-command-line-parser.html","searchKeys":["CommandLineParser"]},{"name":"def unapply(constant: Constant): Option[String]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-module/-string-module/unapply.html","searchKeys":["unapply"]},{"name":"def maybeOwner: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/maybe-owner.html","searchKeys":["maybeOwner"]},{"name":"given Tuple22Unliftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-unliftable$/-tuple22-unliftable.html","searchKeys":["Tuple22Unliftable"]},{"name":"def expr: Term","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-block-methods/expr.html","searchKeys":["expr"]},{"name":"def =:=(that: TypeRepr): Boolean","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-repr-methods/=[58]=.html","searchKeys":["=:="]},{"name":"Vararg Patterns","description":"","location":"docs/reference/changed-features/vararg-patterns.html","searchKeys":["Vararg Patterns"]},{"name":"object TastyFormat","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-format.html","searchKeys":["TastyFormat"]},{"name":"def apply(paramNames: List[String])(paramInfosExp: MethodType => List[TypeRepr], resultTypeExp: MethodType => TypeRepr): MethodType","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-method-type-module/apply.html","searchKeys":["apply"]},{"name":"def unapply(constant: Constant): Boolean","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-module/-null-module/unapply.html","searchKeys":["unapply"]},{"name":"def showShort: String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-methods/show-short.html","searchKeys":["showShort"]},{"name":"def startColumn: Int","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-position-methods/start-column.html","searchKeys":["startColumn"]},{"name":"def apply(symbol: Symbol, rhs: Option[Term]): ValDef","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-val-def-module/apply.html","searchKeys":["apply"]},{"name":"Worksheet Mode - Implementation details","description":"","location":"docs/usage/worksheet-mode-implementation-details.html","searchKeys":["Worksheet Mode - Implementation details"]},{"name":"def apply(qual: Term, mix: Option[String]): Super","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-super-module/apply.html","searchKeys":["apply"]},{"name":"given Tuple21Unliftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-unliftable$/-tuple21-unliftable.html","searchKeys":["Tuple21Unliftable"]},{"name":"Overview","description":"","location":"docs/reference/overview.html","searchKeys":["Overview"]},{"name":"def sortBy[T, U](f: T => U)(evidence$24: ClassTag[U], x$2: Ordering[U]): IArray[T]","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/sort-by.html","searchKeys":["sortBy"]},{"name":"trait RecursiveThisModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-recursive-this-module.html","searchKeys":["RecursiveThisModule"]},{"name":"def copy(original: Tree)(tpt: TypeTree): New","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-new-module/copy.html","searchKeys":["copy"]},{"name":"def transformStats(trees: List[Statement])(owner: Symbol): List[Statement]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-tree-map/transform-stats.html","searchKeys":["transformStats"]},{"name":"def patterns: List[Tree]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-alternatives-methods/patterns.html","searchKeys":["patterns"]},{"name":"def splice[T](x: Quotes => Expr[T]): T","description":"scala.quoted.runtime","location":"-scala 3/-a-p-i/scala/quoted/runtime/-expr/splice.html","searchKeys":["splice"]},{"name":"def skipNat(at: Addr): Addr","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-buffer/skip-nat.html","searchKeys":["skipNat"]},{"name":"def unapply(tree: TypeCaseDef): Option[(TypeTree, TypeTree)]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-case-def-module/unapply.html","searchKeys":["unapply"]},{"name":"def ofSeq[T](xs: Seq[Expr[T]])(x$2: Type[T])(x$3: Quotes): Expr[Seq[T]]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-expr$/of-seq.html","searchKeys":["ofSeq"]},{"name":"def apply(symbol: Symbol, rhsFn: List[TypeRepr] => List[List[Term]] => Option[Term]): DefDef","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-def-def-module/apply.html","searchKeys":["apply"]},{"name":"def bound: Option[TypeTree]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-given-selector-methods/bound.html","searchKeys":["bound"]},{"name":"Announcing Dotty 0.24.0-RC1 - 2.13.2 standard library, better error messages and more","description":"","location":"blog/2020/04/29/24th-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.24.0-RC1 - 2.13.2 standard library, better error messages and more"]},{"name":"def tail(self: NonEmptyTuple): Tuple","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-tuple/tail.html","searchKeys":["tail"]},{"name":"object FromDigits","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-from-digits$.html","searchKeys":["FromDigits"]},{"name":"Dropped: Procedure Syntax","description":"","location":"docs/reference/dropped-features/procedure-syntax.html","searchKeys":["Dropped: Procedure Syntax"]},{"name":"def apply(elems: List[Term], tpt: TypeTree): Repeated","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-repeated-module/apply.html","searchKeys":["apply"]},{"name":"def showShort: String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-tree-methods/show-short.html","searchKeys":["showShort"]},{"name":"def idPos: Position","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-super-methods/id-pos.html","searchKeys":["idPos"]},{"name":"def valueOf[T]: T","description":"scala","location":"-scala 3/-a-p-i/scala/runtime/stdLibPatches/-predef/value-of.html","searchKeys":["valueOf"]},{"name":"def refinements: List[Definition]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-refined-methods/refinements.html","searchKeys":["refinements"]},{"name":"object namedTypeArguments","description":"scala.runtime.stdLibPatches","location":"-scala 3/-a-p-i/scala/runtime/stdLibPatches/language/experimental/named-type-arguments.html","searchKeys":["namedTypeArguments"]},{"name":"object LazyVals","description":"dotty.runtime","location":"-scala 3/-a-p-i/dotty/runtime/-lazy-vals.html","searchKeys":["LazyVals"]},{"name":"def rhs: Tree","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-def-methods/rhs.html","searchKeys":["rhs"]},{"name":"def copy(original: Tree)(expr: Term, tpt: TypeTree): Typed","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-typed-module/copy.html","searchKeys":["copy"]},{"name":"given Tuple13Unliftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-unliftable$/-tuple13-unliftable.html","searchKeys":["Tuple13Unliftable"]},{"name":"object Unlifted","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-unlifted.html","searchKeys":["Unlifted"]},{"name":"given canEqualSeq","description":"scala","location":"-scala 3/-a-p-i/scala/-can-equal$/can-equal-seq.html","searchKeys":["canEqualSeq"]},{"name":"def apply(result: TypeTree): ByName","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-by-name-module/apply.html","searchKeys":["apply"]},{"name":"given Tuple17Liftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-tuple17-liftable.html","searchKeys":["Tuple17Liftable"]},{"name":"def requiredModule(path: String): Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-module/required-module.html","searchKeys":["requiredModule"]},{"name":"trait WhileModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-while-module.html","searchKeys":["WhileModule"]},{"name":"object Typer extends ErrorKind","description":"scala.compiletime.testing","location":"-scala 3/-a-p-i/scala/compiletime/testing/-error-kind$/-typer.html","searchKeys":["Typer"]},{"name":"Reference","description":"","location":"docs/Reference/index.html","searchKeys":["Reference"]},{"name":"def filter[T](p: T => Boolean): IArray[T]","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/filter.html","searchKeys":["filter"]},{"name":"def elemtpt: TypeTree","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-repeated-methods/elemtpt.html","searchKeys":["elemtpt"]},{"name":"def apply(x: String): Constant","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-module/-string-module/apply.html","searchKeys":["apply"]},{"name":"def apply(meth: Term, tpe: Option[TypeRepr]): Closure","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-closure-module/apply.html","searchKeys":["apply"]},{"name":"def apply(ref: Term): Singleton","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-singleton-module/apply.html","searchKeys":["apply"]},{"name":"trait PositionMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-position-methods.html","searchKeys":["PositionMethods"]},{"name":"def copy(original: Tree)(lhs: Term, rhs: Term): Assign","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-assign-module/copy.html","searchKeys":["copy"]},{"name":"Announcing Dotty 0.12.0-RC1","description":"","location":"blog/2019/01/21/12th-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.12.0-RC1"]},{"name":"def copy(original: Tree)(name: String, rhs: Tree): TypeDef","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-def-module/copy.html","searchKeys":["copy"]},{"name":"def tpe: TypeRepr","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-term-methods/tpe.html","searchKeys":["tpe"]},{"name":"trait LambdaTypeTreeMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-lambda-type-tree-methods.html","searchKeys":["LambdaTypeTreeMethods"]},{"name":"def apply(xs: IArray[Object]): Object","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-function-x-x-l/apply.html","searchKeys":["apply"]},{"name":"object derived extends CanEqual[Any, Any]","description":"scala","location":"-scala 3/-a-p-i/scala/-can-equal$/derived.html","searchKeys":["derived"]},{"name":"def isLegalTag(tag: Int): Boolean","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-format/is-legal-tag.html","searchKeys":["isLegalTag"]},{"name":"def fromString(s: String): Double","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-command-line-parser/-from-string$/given_-from-string_-double/from-string.html","searchKeys":["fromString"]},{"name":"Query Types Spec","description":"","location":"docs/reference/contextual/query-types-spec.html","searchKeys":["Query Types Spec"]},{"name":"def endLine: Int","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-position-methods/end-line.html","searchKeys":["endLine"]},{"name":"def showAnsiColored: String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-repr-methods/show-ansi-colored.html","searchKeys":["showAnsiColored"]},{"name":"def show: String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-repr-methods/show.html","searchKeys":["show"]},{"name":"Implementing Type classes","description":"","location":"docs/reference/contextual/type-classes.html","searchKeys":["Implementing Type classes"]},{"name":"given BooleanLiftable[T <: Boolean] as Liftable[T]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-boolean-liftable.html","searchKeys":["BooleanLiftable"]},{"name":"Automatic Eta Expansion","description":"","location":"docs/reference/changed-features/eta-expansion.html","searchKeys":["Automatic Eta Expansion"]},{"name":"trait ImplicitSearchFailureMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-implicit-search-failure-methods.html","searchKeys":["ImplicitSearchFailureMethods"]},{"name":"def transformCaseDef(tree: CaseDef)(owner: Symbol): CaseDef","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-tree-map/transform-case-def.html","searchKeys":["transformCaseDef"]},{"name":"trait TypeTest[-S, T] extends Serializable","description":"scala.reflect","location":"-scala 3/-a-p-i/scala/reflect/-type-test.html","searchKeys":["TypeTest"]},{"name":"def unapply(x: RecursiveThis): Option[RecursiveType]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-recursive-this-module/unapply.html","searchKeys":["unapply"]},{"name":"trait PositionModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-position-module.html","searchKeys":["PositionModule"]},{"name":"given Tuple19Unliftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-unliftable$/-tuple19-unliftable.html","searchKeys":["Tuple19Unliftable"]},{"name":"def name: String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-omit-selector-methods/name.html","searchKeys":["name"]},{"name":"def qualifier: Term","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-select-methods/qualifier.html","searchKeys":["qualifier"]},{"name":"def unapply(x: TypeSelect): Option[(Term, String)]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-select-module/unapply.html","searchKeys":["unapply"]},{"name":"def copy(original: Tree)(name: String, tpt: TypeTree, rhs: Option[Term]): ValDef","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-val-def-module/copy.html","searchKeys":["copy"]},{"name":"given StringLiftable[T <: String] as Liftable[T]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-string-liftable.html","searchKeys":["StringLiftable"]},{"name":"def dropRight[T](n: Int): IArray[T]","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/drop-right.html","searchKeys":["dropRight"]},{"name":"def apply(parentExp: RecursiveType => TypeRepr): RecursiveType","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-recursive-type-module/apply.html","searchKeys":["apply"]},{"name":"def resType: TypeRepr","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-lambda-methods/res-type.html","searchKeys":["resType"]},{"name":"object TastyHash","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-hash.html","searchKeys":["TastyHash"]},{"name":"def apply(x: Long): Constant","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-module/-long-module/apply.html","searchKeys":["apply"]},{"name":"def result: TypeTree","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-by-name-methods/result.html","searchKeys":["result"]},{"name":"def FunctionClass(arity: Int, isImplicit: Boolean, isErased: Boolean): Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/defn-module/-function-class.html","searchKeys":["FunctionClass"]},{"name":"def classSymbol: Option[Symbol]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-repr-methods/class-symbol.html","searchKeys":["classSymbol"]},{"name":"given Tuple4Unliftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-unliftable$/-tuple4-unliftable.html","searchKeys":["Tuple4Unliftable"]},{"name":"def startLine: Int","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-position-methods/start-line.html","searchKeys":["startLine"]},{"name":"class Addr(index: Int) extends AnyVal","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-buffer$/-addr.html","searchKeys":["Addr"]},{"name":"given amb2","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-not$/amb2.html","searchKeys":["amb2"]},{"name":"trait Tuple extends Product","description":"scala","location":"-scala 3/-a-p-i/scala/-tuple.html","searchKeys":["Tuple"]},{"name":"def paramNum: Int","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-param-ref-methods/param-num.html","searchKeys":["paramNum"]},{"name":"def update(n: Int, x: Any): Unit","description":"scala.deriving","location":"-scala 3/-a-p-i/scala/deriving/-array-product/update.html","searchKeys":["update"]},{"name":"def indexWhere[T](p: T => Boolean, from: Int): Int","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/index-where.html","searchKeys":["indexWhere"]},{"name":"Importing Givens","description":"","location":"docs/reference/contextual/given-imports.html","searchKeys":["Importing Givens"]},{"name":"def unapply(x: Try): Option[(Term, List[CaseDef], Option[Term])]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-try-module/unapply.html","searchKeys":["unapply"]},{"name":"object 3.1","description":"scala.runtime.stdLibPatches","location":"-scala 3/-a-p-i/scala/runtime/stdLibPatches/language/3.1.html","searchKeys":["3.1"]},{"name":"Differences between Scalac and Dotty","description":"","location":"docs/internals/dotc-scalac.html","searchKeys":["Differences between Scalac and Dotty"]},{"name":"def Override: Flags","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-module/-override.html","searchKeys":["Override"]},{"name":"class MatchCase[Pat, +Body]","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-match-case.html","searchKeys":["MatchCase"]},{"name":"def fromArray(xs: Array[Object]): Tuple","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-tuple/from-array.html","searchKeys":["fromArray"]},{"name":"def returning[T](op: ReturnThrowable[T] => T): T","description":"scala.util.control","location":"-scala 3/-a-p-i/scala/util/control/-non-local-returns/returning.html","searchKeys":["returning"]},{"name":"def apply(pid: Ref, stats: List[Tree]): PackageClause","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-package-clause-module/apply.html","searchKeys":["apply"]},{"name":"def constValueTuple[T <: Tuple]: Widen[T]","description":"scala.compiletime","location":"-scala 3/-a-p-i/scala/compiletime/const-value-tuple.html","searchKeys":["constValueTuple"]},{"name":"given Tuple12Liftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-tuple12-liftable.html","searchKeys":["Tuple12Liftable"]},{"name":"Safe Initialization","description":"","location":"docs/reference/other-new-features/safe-initialization.html","searchKeys":["Safe Initialization"]},{"name":"trait reportModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/report-module.html","searchKeys":["reportModule"]},{"name":"def unapply(constant: Constant): Option[Long]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-module/-long-module/unapply.html","searchKeys":["unapply"]},{"name":"def show[T]: String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/show.html","searchKeys":["show"]},{"name":"def zip(t1: Tuple, t2: Tuple): Tuple","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-tuple/zip.html","searchKeys":["zip"]},{"name":"given TupleConsLiftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-tuple-cons-liftable.html","searchKeys":["TupleConsLiftable"]},{"name":"given given_FromString_Byte as FromString[Byte]","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-command-line-parser/-from-string$/given_-from-string_-byte.html","searchKeys":["given_FromString_Byte"]},{"name":"Using Clauses","description":"","location":"docs/reference/contextual/using-clauses.html","searchKeys":["Using Clauses"]},{"name":"given Tuple18Unliftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-unliftable$/-tuple18-unliftable.html","searchKeys":["Tuple18Unliftable"]},{"name":"def unapply(x: SelectOuter): Option[(Term, String, Int)]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-select-outer-module/unapply.html","searchKeys":["unapply"]},{"name":"def UnitClass: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/defn-module/-unit-class.html","searchKeys":["UnitClass"]},{"name":"trait ThisTypeModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-this-type-module.html","searchKeys":["ThisTypeModule"]},{"name":"class Body() extends Annotation","description":"scala.annotation.internal","location":"-scala 3/-a-p-i/scala/annotation/internal/-body.html","searchKeys":["Body"]},{"name":"def showExtractors: String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-repr-methods/show-extractors.html","searchKeys":["showExtractors"]},{"name":"trait NewModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-new-module.html","searchKeys":["NewModule"]},{"name":"def bindings: List[Definition]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-inlined-methods/bindings.html","searchKeys":["bindings"]},{"name":"def toExpr(x: T): Quotes => Expr[T]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable/to-expr.html","searchKeys":["toExpr"]},{"name":"trait ClassOfModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-module/-class-of-module.html","searchKeys":["ClassOfModule"]},{"name":"given Tuple21Liftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-tuple21-liftable.html","searchKeys":["Tuple21Liftable"]},{"name":"def pattern: Tree","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-case-def-methods/pattern.html","searchKeys":["pattern"]},{"name":"Changes in Overload Resolution","description":"","location":"docs/reference/changed-features/overload-resolution.html","searchKeys":["Changes in Overload Resolution"]},{"name":"def qualifier: TypeTree","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-projection-methods/qualifier.html","searchKeys":["qualifier"]},{"name":"def emptyBooleanIArray: IArray[Boolean]","description":"scala","location":"-scala 3/-a-p-i/scala/-i-array/empty-boolean-i-array.html","searchKeys":["emptyBooleanIArray"]},{"name":"def apply(low: TypeRepr, hi: TypeRepr): TypeBounds","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-bounds-module/apply.html","searchKeys":["apply"]},{"name":"trait TypeMatchModule","description":"scala.quoted.runtime","location":"-scala 3/-a-p-i/scala/quoted/runtime/-quote-matching/-type-match-module.html","searchKeys":["TypeMatchModule"]},{"name":"given given_FromString_Boolean as FromString[Boolean]","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-command-line-parser/-from-string$/given_-from-string_-boolean.html","searchKeys":["given_FromString_Boolean"]},{"name":"trait SimpleSelectorModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-simple-selector-module.html","searchKeys":["SimpleSelectorModule"]},{"name":"def from: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-return-methods/from.html","searchKeys":["from"]},{"name":"Procedures","description":"","location":"docs/Procedures/index.html","searchKeys":["Procedures"]},{"name":"def apply(sym: Symbol): TypeTree","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-ident-module/apply.html","searchKeys":["apply"]},{"name":"given Tuple1Liftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-tuple1-liftable.html","searchKeys":["Tuple1Liftable"]},{"name":"def unapply(x: Block): Option[(List[Statement], Term)]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-block-module/unapply.html","searchKeys":["unapply"]},{"name":"Dropped: Weak Conformance","description":"","location":"docs/reference/dropped-features/weak-conformance.html","searchKeys":["Dropped: Weak Conformance"]},{"name":"given DoubleLiftable[T <: Double] as Liftable[T]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-double-liftable.html","searchKeys":["DoubleLiftable"]},{"name":"Language Versions","description":"","location":"docs/usage/language-versions.html","searchKeys":["Language Versions"]},{"name":"def classMethod(name: String): List[Symbol]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/class-method.html","searchKeys":["classMethod"]},{"name":"def jpath: Path","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-source-file-methods/jpath.html","searchKeys":["jpath"]},{"name":"def copy(original: Tree)(qual: Option[String]): This","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-this-module/copy.html","searchKeys":["copy"]},{"name":"trait TermModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-term-module.html","searchKeys":["TermModule"]},{"name":"Explicit Nulls","description":"","location":"docs/internals/explicit-nulls.html","searchKeys":["Explicit Nulls"]},{"name":"Other Changed Features","description":"","location":"docs/Other Changed Features/index.html","searchKeys":["Other Changed Features"]},{"name":"class Alias(aliased: Any) extends Annotation","description":"scala.annotation.internal","location":"-scala 3/-a-p-i/scala/annotation/internal/-alias.html","searchKeys":["Alias"]},{"name":"trait FunctionXXL","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-function-x-x-l.html","searchKeys":["FunctionXXL"]},{"name":"Testing in Dotty","description":"","location":"docs/contributing/testing.html","searchKeys":["Testing in Dotty"]},{"name":"def take[T](n: Int): IArray[T]","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/take.html","searchKeys":["take"]},{"name":"def qualifier: Term","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-select-methods/qualifier.html","searchKeys":["qualifier"]},{"name":"def empty: TypeBounds","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-bounds-module/empty.html","searchKeys":["empty"]},{"name":"def show: String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-methods/show.html","searchKeys":["show"]},{"name":"def head[This >: NonEmptyTuple <: NonEmptyTuple]: Head[This]","description":"scala","location":"-scala 3/-a-p-i/scala/-non-empty-tuple/head.html","searchKeys":["head"]},{"name":"def equals(that: Any): Boolean","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-tuple-x-x-l/equals.html","searchKeys":["equals"]},{"name":"trait BindModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-bind-module.html","searchKeys":["BindModule"]},{"name":"def isAbstractType: Boolean","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/is-abstract-type.html","searchKeys":["isAbstractType"]},{"name":"trait TypeCaseDefModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-case-def-module.html","searchKeys":["TypeCaseDefModule"]},{"name":"TASTy Reflect","description":"","location":"docs/reference/metaprogramming/tasty-reflect.html","searchKeys":["TASTy Reflect"]},{"name":"def toPos: Position","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-rename-selector-methods/to-pos.html","searchKeys":["toPos"]},{"name":"def protectedWithin: Option[TypeRepr]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/protected-within.html","searchKeys":["protectedWithin"]},{"name":"def isErased: Boolean","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-method-type-methods/is-erased.html","searchKeys":["isErased"]},{"name":"given ListUnliftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-unliftable$/-list-unliftable.html","searchKeys":["ListUnliftable"]},{"name":"def isDefinedInCurrentRun: Boolean","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/is-defined-in-current-run.html","searchKeys":["isDefinedInCurrentRun"]},{"name":"class NameRef(index: Int) extends AnyVal","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-buffer$/-name-ref.html","searchKeys":["NameRef"]},{"name":"def block[T](statements: List[Expr[Any]], expr: Expr[T])(x$3: Quotes): Expr[T]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-expr$/block.html","searchKeys":["block"]},{"name":"Export Clauses","description":"","location":"docs/reference/other-new-features/export.html","searchKeys":["Export Clauses"]},{"name":"def name: String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-select-methods/name.html","searchKeys":["name"]},{"name":"trait SourceModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-source-module.html","searchKeys":["SourceModule"]},{"name":"trait WithRadix[T] extends FromDigits[T]","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-from-digits$/-with-radix.html","searchKeys":["WithRadix"]},{"name":"def nextByte: Int","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-reader/next-byte.html","searchKeys":["nextByte"]},{"name":"def usecases: List[(String, Option[DefDef])]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-documentation-methods/usecases.html","searchKeys":["usecases"]},{"name":"def tree: Term","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-implicit-search-success-methods/tree.html","searchKeys":["tree"]},{"name":"def resType: TypeRepr","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-method-type-methods/res-type.html","searchKeys":["resType"]},{"name":"def cons(x: Any, self: Tuple): Tuple","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-tuple/cons.html","searchKeys":["cons"]},{"name":"def ofTuple[T <: Tuple](tup: T)(evidence$1: IsMappedBy[[T] =>> Expr[T]][T], evidence$2: Type[T], x$2: Quotes): Expr[InverseMap[T, [T] =>> Expr[T]]]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-expr$/of-tuple.html","searchKeys":["ofTuple"]},{"name":"def copy(original: Tree)(qualifier: Term, name: String): Select","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-select-module/copy.html","searchKeys":["copy"]},{"name":"def apply(bound: Option[TypeTree], selector: TypeTree, cases: List[TypeCaseDef]): MatchTypeTree","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-match-type-tree-module/apply.html","searchKeys":["apply"]},{"name":"def isDefDef: Boolean","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/is-def-def.html","searchKeys":["isDefDef"]},{"name":"def isEmpty[T]: Boolean","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/is-empty.html","searchKeys":["isEmpty"]},{"name":"def isRefinementClass: Boolean","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/is-refinement-class.html","searchKeys":["isRefinementClass"]},{"name":"def widen: TypeRepr","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-repr-methods/widen.html","searchKeys":["widen"]},{"name":"def select(sym: Symbol): Select","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-term-methods/select.html","searchKeys":["select"]},{"name":"def copy(original: Tree)(stats: List[Statement], expr: Term): Block","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-block-module/copy.html","searchKeys":["copy"]},{"name":"Announcing Dotty 0.4.0-RC1","description":"","location":"blog/2017/10/16/fourth-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.4.0-RC1"]},{"name":"def unapply(x: RenameSelector): Option[(String, String)]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-rename-selector-module/unapply.html","searchKeys":["unapply"]},{"name":"Translation of Enums and ADTs","description":"","location":"docs/reference/enums/desugarEnums.html","searchKeys":["Translation of Enums and ADTs"]},{"name":"def Macro: Flags","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-module/-macro.html","searchKeys":["Macro"]},{"name":"Dotty becomes Scala 3","description":"","location":"blog/2020/09/21/naming-schema-change.html","searchKeys":["Dotty becomes Scala 3"]},{"name":"Creator Applications","description":"","location":"docs/reference/other-new-features/creator-applications.html","searchKeys":["Creator Applications"]},{"name":"def drop[This >: Tuple <: Tuple](n: Int): Drop[This, n.type]","description":"scala","location":"-scala 3/-a-p-i/scala/-tuple/drop.html","searchKeys":["drop"]},{"name":"def RepeatedParamClass: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/defn-module/-repeated-param-class.html","searchKeys":["RepeatedParamClass"]},{"name":"def apply(self: NonEmptyTuple, n: Int): Any","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-tuple/apply.html","searchKeys":["apply"]},{"name":"def scan[T, U >: T](z: U)(op: (U, U) => U)(evidence$21: ClassTag[U]): IArray[U]","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/scan.html","searchKeys":["scan"]},{"name":"def apply(x: Short): Constant","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-module/-short-module/apply.html","searchKeys":["apply"]},{"name":"def fromIArray(elems: IArray[Object]): TupleXXL","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-tuple-x-x-l$/from-i-array.html","searchKeys":["fromIArray"]},{"name":"Givens","description":"","location":"docs/reference/contextual/instance-defs.html","searchKeys":["Givens"]},{"name":"trait AssignMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-assign-methods.html","searchKeys":["AssignMethods"]},{"name":"def unapply(x: MatchType): Option[(TypeRepr, TypeRepr, List[TypeRepr])]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-match-type-module/unapply.html","searchKeys":["unapply"]},{"name":"def showAnsiColored[T](x$1: Type[T])(x$2: Quotes): String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-type$/show-ansi-colored.html","searchKeys":["showAnsiColored"]},{"name":"trait IfModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-if-module.html","searchKeys":["IfModule"]},{"name":"def readHeader(): UUID","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-header-unpickler/read-header.html","searchKeys":["readHeader"]},{"name":"def endAddr: Addr","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-reader/end-addr.html","searchKeys":["endAddr"]},{"name":"Changes in Type Inference","description":"","location":"docs/reference/changed-features/type-inference.html","searchKeys":["Changes in Type Inference"]},{"name":"Getting Started: Users","description":"","location":"docs/usage/getting-started.html","searchKeys":["Getting Started: Users"]},{"name":"def foldTree(x: X, tree: Tree)(owner: Symbol): X","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-tree-accumulator/fold-tree.html","searchKeys":["foldTree"]},{"name":"object Arrays","description":"dotty.runtime","location":"-scala 3/-a-p-i/dotty/runtime/-arrays.html","searchKeys":["Arrays"]},{"name":"def writeLongInt(x: Long): Unit","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-buffer/write-long-int.html","searchKeys":["writeLongInt"]},{"name":"def unapply(vdef: ValDef): Option[(String, TypeTree, Option[Term])]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-val-def-module/unapply.html","searchKeys":["unapply"]},{"name":"def unapply(x: Literal): Option[Constant]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-literal-module/unapply.html","searchKeys":["unapply"]},{"name":"def Artifact: Flags","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-module/-artifact.html","searchKeys":["Artifact"]},{"name":"def ScalaNumericValueClasses: List[Symbol]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/defn-module/-scala-numeric-value-classes.html","searchKeys":["ScalaNumericValueClasses"]},{"name":"Dropped: Do-While","description":"","location":"docs/reference/dropped-features/do-while.html","searchKeys":["Dropped: Do-While"]},{"name":"trait SignatureMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-signature-methods.html","searchKeys":["SignatureMethods"]},{"name":"def expanded: Option[String]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-documentation-methods/expanded.html","searchKeys":["expanded"]},{"name":"given SetUnliftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-unliftable$/-set-unliftable.html","searchKeys":["SetUnliftable"]},{"name":"def isOpaqueAlias: Boolean","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-ref-methods/is-opaque-alias.html","searchKeys":["isOpaqueAlias"]},{"name":"def show: String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-methods/show.html","searchKeys":["show"]},{"name":"def classSymbol(fullName: String): Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-module/class-symbol.html","searchKeys":["classSymbol"]},{"name":"def foldTree(x: Unit, tree: Tree)(owner: Symbol): Unit","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-tree-traverser/fold-tree.html","searchKeys":["foldTree"]},{"name":"def parents: List[Tree]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-class-def-methods/parents.html","searchKeys":["parents"]},{"name":"def id: Option[String]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-this-methods/id.html","searchKeys":["id"]},{"name":"Changes in Compiler Plugins","description":"","location":"docs/reference/changed-features/compiler-plugins.html","searchKeys":["Changes in Compiler Plugins"]},{"name":"def patternHole[T]: T","description":"scala.quoted.runtime","location":"-scala 3/-a-p-i/scala/quoted/runtime/-patterns/pattern-hole.html","searchKeys":["patternHole"]},{"name":"def fromProduct(p: Product): MirroredMonoType","description":"scala.deriving","location":"-scala 3/-a-p-i/scala/deriving/-mirror$/-singleton/from-product.html","searchKeys":["fromProduct"]},{"name":"trait ValDefModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-val-def-module.html","searchKeys":["ValDefModule"]},{"name":"def fullName: String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/full-name.html","searchKeys":["fullName"]},{"name":"given Tuple3Unliftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-unliftable$/-tuple3-unliftable.html","searchKeys":["Tuple3Unliftable"]},{"name":"trait TypeRefModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-ref-module.html","searchKeys":["TypeRefModule"]},{"name":"def lastIndexOf[T](elem: T, end: Int): Int","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/last-index-of.html","searchKeys":["lastIndexOf"]},{"name":"New Control Syntax","description":"","location":"docs/reference/other-new-features/control-syntax.html","searchKeys":["New Control Syntax"]},{"name":"def ScalaPackage: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/defn-module/-scala-package.html","searchKeys":["ScalaPackage"]},{"name":"given IntLiftable[T <: Int] as Liftable[T]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-int-liftable.html","searchKeys":["IntLiftable"]},{"name":"def tref: TypeRepr","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-this-type-methods/tref.html","searchKeys":["tref"]},{"name":"Syntax Changes in Dotty 0.22","description":"","location":"docs/release-notes/syntax-changes-0.22.html","searchKeys":["Syntax Changes in Dotty 0.22"]},{"name":"Context Bounds","description":"","location":"docs/reference/contextual/context-bounds.html","searchKeys":["Context Bounds"]},{"name":"def get(t: Object, off: Long): Long","description":"dotty.runtime","location":"-scala 3/-a-p-i/dotty/runtime/-lazy-vals/get.html","searchKeys":["get"]},{"name":"def fromString(s: String): Int","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-command-line-parser/-from-string$/given_-from-string_-int/from-string.html","searchKeys":["fromString"]},{"name":"def productElement(n: Int): Any","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-tuple-x-x-l/product-element.html","searchKeys":["productElement"]},{"name":"def map[T, U](f: T => U)(evidence$20: ClassTag[U]): IArray[U]","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/map.html","searchKeys":["map"]},{"name":"def memberType(member: Symbol): TypeRepr","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-repr-methods/member-type.html","searchKeys":["memberType"]},{"name":"def unapply(x: Refined): Option[(TypeTree, List[Definition])]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-refined-module/unapply.html","searchKeys":["unapply"]},{"name":"trait RecursiveThisMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-recursive-this-methods.html","searchKeys":["RecursiveThisMethods"]},{"name":"trait ReturnModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-return-module.html","searchKeys":["ReturnModule"]},{"name":"def copy(original: Tree)(name: String): TypeIdent","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-ident-module/copy.html","searchKeys":["copy"]},{"name":"def size(self: Tuple): Int","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-tuple/size.html","searchKeys":["size"]},{"name":"def unapply(constant: Constant): Option[TypeRepr]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-module/-class-of-module/unapply.html","searchKeys":["unapply"]},{"name":"trait ShortModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-module/-short-module.html","searchKeys":["ShortModule"]},{"name":"object Liftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$.html","searchKeys":["Liftable"]},{"name":"class constructorOnly extends StaticAnnotation","description":"scala.annotation","location":"-scala 3/-a-p-i/scala/annotation/constructor-only.html","searchKeys":["constructorOnly"]},{"name":"Overview","description":"","location":"docs/reference/metaprogramming/toc.html","searchKeys":["Overview"]},{"name":"def is(that: Flags): Boolean","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-methods/is.html","searchKeys":["is"]},{"name":"def toList: List[Union[Tuple]]","description":"scala","location":"-scala 3/-a-p-i/scala/-tuple/to-list.html","searchKeys":["toList"]},{"name":"def asExpr: Expr[Any]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-tree-methods/as-expr.html","searchKeys":["asExpr"]},{"name":"def last[T]: T","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/last.html","searchKeys":["last"]},{"name":"Dropped: Early Initializers","description":"","location":"docs/reference/dropped-features/early-initializers.html","searchKeys":["Dropped: Early Initializers"]},{"name":"trait TypeDefMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-def-methods.html","searchKeys":["TypeDefMethods"]},{"name":"def copy(original: Tree)(name: String, pattern: Tree): Bind","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-bind-module/copy.html","searchKeys":["copy"]},{"name":"trait NamedArgModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-named-arg-module.html","searchKeys":["NamedArgModule"]},{"name":"def param(idx: Int): TypeRepr","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-method-type-methods/param.html","searchKeys":["param"]},{"name":"given IArrayLiftable[T](using evidence$5: Type[T], using ltArray: Liftable[Array[T]]) as Liftable[IArray[T]]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-i-array-liftable.html","searchKeys":["IArrayLiftable"]},{"name":"def unapply(constant: Constant): Option[Int]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-module/-int-module/unapply.html","searchKeys":["unapply"]},{"name":"object StringContext","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-expr$/-string-context.html","searchKeys":["StringContext"]},{"name":"def name: String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-ident-methods/name.html","searchKeys":["name"]},{"name":"def name: String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-term-ref-methods/name.html","searchKeys":["name"]},{"name":"def fromIArray[T](xs: IArray[T]): Tuple","description":"scala","location":"-scala 3/-a-p-i/scala/-tuple$/from-i-array.html","searchKeys":["fromIArray"]},{"name":"given Tuple1Unliftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-unliftable$/-tuple1-unliftable.html","searchKeys":["Tuple1Unliftable"]},{"name":"def classMethods: List[Symbol]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/class-methods.html","searchKeys":["classMethods"]},{"name":"def unapply(x: AppliedType): Option[(TypeRepr, List[TypeRepr])]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-applied-type-module/unapply.html","searchKeys":["unapply"]},{"name":"class SingletonProxy(val value: AnyRef) extends Product","description":"scala.deriving","location":"-scala 3/-a-p-i/scala/deriving/-mirror$/-singleton-proxy.html","searchKeys":["SingletonProxy"]},{"name":"def copy(original: Tree)(aliases: List[TypeDef], tpt: TypeTree): TypeBlock","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-block-module/copy.html","searchKeys":["copy"]},{"name":"def unapply(x: Typed): Option[(Term, TypeTree)]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-typed-module/unapply.html","searchKeys":["unapply"]},{"name":"def apply(expr: Term, selectors: List[ImportSelector]): Import","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-import-module/apply.html","searchKeys":["apply"]},{"name":"trait ConstantModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-module.html","searchKeys":["ConstantModule"]},{"name":"A Classification of Proposed Language Features","description":"","location":"docs/reference/features-classification.html","searchKeys":["A Classification of Proposed Language Features"]},{"name":"def name: String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-ident-methods/name.html","searchKeys":["name"]},{"name":"Static docucmentation","description":"","location":"docs/usage/scala3doc/staticSite.html","searchKeys":["Static docucmentation"]},{"name":"def scanLeft[T, U](z: U)(op: (U, T) => U)(evidence$22: ClassTag[U]): IArray[U]","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/scan-left.html","searchKeys":["scanLeft"]},{"name":"Announcing Dotty 0.2.0-RC1, with new optimizations, improved stability and IDE support","description":"","location":"blog/2017/07/12/second-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.2.0-RC1, with new optimizations, improved stability and IDE support"]},{"name":"given OptionLiftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-option-liftable.html","searchKeys":["OptionLiftable"]},{"name":"def transformStatement(tree: Statement)(owner: Symbol): Statement","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-tree-map/transform-statement.html","searchKeys":["transformStatement"]},{"name":"trait MethodTypeModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-method-type-module.html","searchKeys":["MethodTypeModule"]},{"name":"def toExpr(x: T): Quotes => Expr[T]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-string-liftable/to-expr.html","searchKeys":["toExpr"]},{"name":"def until[T](end: Addr)(op: => T): List[T]","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-reader/until.html","searchKeys":["until"]},{"name":"def ofList[T](xs: Seq[Expr[T]])(x$2: Type[T])(x$3: Quotes): Expr[List[T]]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-expr$/of-list.html","searchKeys":["ofList"]},{"name":"trait Enum extends Product with Serializable","description":"scala.reflect","location":"-scala 3/-a-p-i/scala/reflect/-enum.html","searchKeys":["Enum"]},{"name":"def dble[T](arr: Array[T])(evidence$1: ClassTag[T]): Array[T]","description":"dotty.tools.tasty.util","location":"-scala 3/-a-p-i/dotty/tools.tasty/util/-util/dble.html","searchKeys":["dble"]},{"name":"Relationship with Scala 2 Implicits","description":"","location":"docs/reference/contextual/relationship-implicits.html","searchKeys":["Relationship with Scala 2 Implicits"]},{"name":"def toArray: Array[Object]","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-tuple-x-x-l/to-array.html","searchKeys":["toArray"]},{"name":"def upper(hi: TypeRepr): TypeBounds","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-bounds-module/upper.html","searchKeys":["upper"]},{"name":"trait AnnotatedTypeModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-annotated-type-module.html","searchKeys":["AnnotatedTypeModule"]},{"name":"def of(expr: Expr[Any]): Term","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-term-module/of.html","searchKeys":["of"]},{"name":"def unapply(x: S): Option[x.type & T]","description":"scala.reflect","location":"-scala 3/-a-p-i/scala/reflect/-type-test/unapply.html","searchKeys":["unapply"]},{"name":"def unapply(constant: Constant): Option[Boolean]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-module/-boolean-module/unapply.html","searchKeys":["unapply"]},{"name":"def emptyDoubleIArray: IArray[Double]","description":"scala","location":"-scala 3/-a-p-i/scala/-i-array/empty-double-i-array.html","searchKeys":["emptyDoubleIArray"]},{"name":"def putNat(at: Addr, x: Int, width: Int): Unit","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-buffer/put-nat.html","searchKeys":["putNat"]},{"name":"trait UnapplyMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-unapply-methods.html","searchKeys":["UnapplyMethods"]},{"name":"def unapply(x: Annotated): Option[(TypeTree, Term)]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-annotated-module/unapply.html","searchKeys":["unapply"]},{"name":"def ofMacroExpansion: Position","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-position-module/of-macro-expansion.html","searchKeys":["ofMacroExpansion"]},{"name":"def isTerm: Boolean","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/is-term.html","searchKeys":["isTerm"]},{"name":"class threadUnsafe extends StaticAnnotation","description":"scala.annotation","location":"-scala 3/-a-p-i/scala/annotation/thread-unsafe.html","searchKeys":["threadUnsafe"]},{"name":"def stats: List[Tree]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-package-clause-methods/stats.html","searchKeys":["stats"]},{"name":"def NoneModule: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/defn-module/-none-module.html","searchKeys":["NoneModule"]},{"name":"def meth: Term","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-closure-methods/meth.html","searchKeys":["meth"]},{"name":"def toExpr(x: T): Quotes => Expr[T]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-short-liftable/to-expr.html","searchKeys":["toExpr"]},{"name":"Named Type Arguments - More Details","description":"","location":"docs/reference/other-new-features/named-typeargs-spec.html","searchKeys":["Named Type Arguments - More Details"]},{"name":"class NameTags","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-format/-name-tags.html","searchKeys":["NameTags"]},{"name":"object EmptyProduct extends ArrayProduct","description":"scala.deriving","location":"-scala 3/-a-p-i/scala/deriving/-empty-product.html","searchKeys":["EmptyProduct"]},{"name":"trait StringModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-module/-string-module.html","searchKeys":["StringModule"]},{"name":"def apply(cond: Term, thenp: Term, elsep: Term): If","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-if-module/apply.html","searchKeys":["apply"]},{"name":"object TastyBuffer","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-buffer$.html","searchKeys":["TastyBuffer"]},{"name":"Dropped: Auto-Application","description":"","location":"docs/reference/dropped-features/auto-apply.html","searchKeys":["Dropped: Auto-Application"]},{"name":"trait CaseDefModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-case-def-module.html","searchKeys":["CaseDefModule"]},{"name":"def name: String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-named-arg-methods/name.html","searchKeys":["name"]},{"name":"def body: Term","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-try-methods/body.html","searchKeys":["body"]},{"name":"Backend Internals","description":"","location":"docs/internals/backend.html","searchKeys":["Backend Internals"]},{"name":"trait FromString[T]","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-command-line-parser/-from-string.html","searchKeys":["FromString"]},{"name":"def fillAddr(at: Addr, target: Addr): Unit","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-buffer/fill-addr.html","searchKeys":["fillAddr"]},{"name":"def drop[T](n: Int): IArray[T]","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/drop.html","searchKeys":["drop"]},{"name":"def readByte(): Int","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-reader/read-byte.html","searchKeys":["readByte"]},{"name":"def implicits: List[Term]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-unapply-methods/implicits.html","searchKeys":["implicits"]},{"name":"def noSymbol: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-module/no-symbol.html","searchKeys":["noSymbol"]},{"name":"trait Selectable extends Selectable","description":"scala.reflect","location":"-scala 3/-a-p-i/scala/reflect/-selectable.html","searchKeys":["Selectable"]},{"name":"given ClassLiftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-class-liftable.html","searchKeys":["ClassLiftable"]},{"name":"Trait Parameters","description":"","location":"docs/reference/other-new-features/trait-parameters.html","searchKeys":["Trait Parameters"]},{"name":"Worksheet mode with Dotty IDE","description":"","location":"docs/usage/worksheet-mode.html","searchKeys":["Worksheet mode with Dotty IDE"]},{"name":"trait TypeReprModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-repr-module.html","searchKeys":["TypeReprModule"]},{"name":"def fromIArray(xs: IArray[Object]): Tuple","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-tuple/from-i-array.html","searchKeys":["fromIArray"]},{"name":"def id: Option[String]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-super-methods/id.html","searchKeys":["id"]},{"name":"def annot: Term","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-annotated-type-methods/annot.html","searchKeys":["annot"]},{"name":"def newGenericArray[T](length: Int)(tag: ClassTag[T]): Array[T]","description":"dotty.runtime","location":"-scala 3/-a-p-i/dotty/runtime/-arrays/new-generic-array.html","searchKeys":["newGenericArray"]},{"name":"object Util","description":"dotty.tools.tasty.util","location":"-scala 3/-a-p-i/dotty/tools.tasty/util/-util.html","searchKeys":["Util"]},{"name":"def showShort: String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-repr-methods/show-short.html","searchKeys":["showShort"]},{"name":"trait TypeBoundsModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-bounds-module.html","searchKeys":["TypeBoundsModule"]},{"name":"def foldLeft[T, U](z: U)(op: (U, T) => U)(evidence$18: ClassTag[U]): U","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/fold-left.html","searchKeys":["foldLeft"]},{"name":"def toExpr(x: T): Quotes => Expr[T]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-double-liftable/to-expr.html","searchKeys":["toExpr"]},{"name":"def name: String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-select-methods/name.html","searchKeys":["name"]},{"name":"def Scala2x: Flags","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-module/-scala2x.html","searchKeys":["Scala2x"]},{"name":"object int","description":"scala.compiletime.ops","location":"-scala 3/-a-p-i/scala/compiletime/ops/int.html","searchKeys":["int"]},{"name":"trait TreeMap","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-tree-map.html","searchKeys":["TreeMap"]},{"name":"def tparams: List[TypeDef]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-lambda-type-tree-methods/tparams.html","searchKeys":["tparams"]},{"name":"trait GivenSelectorMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-given-selector-methods.html","searchKeys":["GivenSelectorMethods"]},{"name":"object CanEqual","description":"scala","location":"-scala 3/-a-p-i/scala/-can-equal$.html","searchKeys":["CanEqual"]},{"name":"given SeqLiftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-seq-liftable.html","searchKeys":["SeqLiftable"]},{"name":"def unapply[TypeBindings <: Tuple, Tup <: Tuple](scrutinee: Expr[Any])(pattern: Expr[Any]): Option[Tup]","description":"scala.quoted.runtime","location":"-scala 3/-a-p-i/scala/quoted/runtime/-quote-matching/-expr-match-module/unapply.html","searchKeys":["unapply"]},{"name":"given given_FromString_Short as FromString[Short]","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-command-line-parser/-from-string$/given_-from-string_-short.html","searchKeys":["given_FromString_Short"]},{"name":"def copy(original: Tree)(tpt: TypeTree, args: List[Tree]): Applied","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-applied-module/copy.html","searchKeys":["copy"]},{"name":"def productArity: Int","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-enum-value/product-arity.html","searchKeys":["productArity"]},{"name":"def flatten[T, U](evidence$16: ClassTag[U], x$1: T => Iterable[U]): IArray[U]","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/flatten.html","searchKeys":["flatten"]},{"name":"Dropped: Class Shadowing - More Details","description":"","location":"docs/reference/dropped-features/class-shadowing-spec.html","searchKeys":["Dropped: Class Shadowing - More Details"]},{"name":"def paramNames: List[String]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-lambda-methods/param-names.html","searchKeys":["paramNames"]},{"name":"trait ImportModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-import-module.html","searchKeys":["ImportModule"]},{"name":"def apply(): Constant","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-module/-null-module/apply.html","searchKeys":["apply"]},{"name":"def copy(original: Tree)(name: String, constr: DefDef, parents: List[Tree], derived: List[TypeTree], selfOpt: Option[ValDef], body: List[Statement]): ClassDef","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-class-def-module/copy.html","searchKeys":["copy"]},{"name":"def getNat(at: Addr): Int","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-buffer/get-nat.html","searchKeys":["getNat"]},{"name":"def unapply(tree: Ident): Option[String]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-ident-module/unapply.html","searchKeys":["unapply"]},{"name":"def StableRealizable: Flags","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-module/-stable-realizable.html","searchKeys":["StableRealizable"]},{"name":"trait ClassDefModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-class-def-module.html","searchKeys":["ClassDefModule"]},{"name":"trait OmitSelectorMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-omit-selector-methods.html","searchKeys":["OmitSelectorMethods"]},{"name":"given BigDecimalFromDigits as Floating[BigDecimal]","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-from-digits$/-big-decimal-from-digits.html","searchKeys":["BigDecimalFromDigits"]},{"name":"given given_FromString_Int as FromString[Int]","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-command-line-parser/-from-string$/given_-from-string_-int.html","searchKeys":["given_FromString_Int"]},{"name":"def unapply(x: Refinement): Option[(TypeRepr, String, TypeRepr)]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-refinement-module/unapply.html","searchKeys":["unapply"]},{"name":"object Type","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-type$.html","searchKeys":["Type"]},{"name":"def tycon: TypeRepr","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-applied-type-methods/tycon.html","searchKeys":["tycon"]},{"name":"def pos: Position","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-tree-methods/pos.html","searchKeys":["pos"]},{"name":"def ofTupleFromSeq(seq: Seq[Expr[Any]])(x$2: Quotes): Expr[Tuple]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-expr$/of-tuple-from-seq.html","searchKeys":["ofTupleFromSeq"]},{"name":"object boolean","description":"scala.compiletime.ops","location":"-scala 3/-a-p-i/scala/compiletime/ops/boolean.html","searchKeys":["boolean"]},{"name":"def reserveAddr(): Addr","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-buffer/reserve-addr.html","searchKeys":["reserveAddr"]},{"name":"Basic Operations with Mill","description":"","location":"docs/contributing/tools/mill.html","searchKeys":["Basic Operations with Mill"]},{"name":"def derived: List[TypeTree]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-class-def-methods/derived.html","searchKeys":["derived"]},{"name":"def copy(original: Tree)(pid: Ref, stats: List[Tree]): PackageClause","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-package-clause-module/copy.html","searchKeys":["copy"]},{"name":"trait ApplyMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-apply-methods.html","searchKeys":["ApplyMethods"]},{"name":"Optional Braces","description":"","location":"docs/reference/other-new-features/indentation.html","searchKeys":["Optional Braces"]},{"name":"def of[T <: AnyKind](x$1: Type[T]): TypeTree","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-tree-module/of.html","searchKeys":["of"]},{"name":"def apply(pattern: Tree, guard: Option[Term], rhs: Term): CaseDef","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-case-def-module/apply.html","searchKeys":["apply"]},{"name":"def body: List[Statement]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-class-def-methods/body.html","searchKeys":["body"]},{"name":"def LongClass: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/defn-module/-long-class.html","searchKeys":["LongClass"]},{"name":"Using Dotty with cbt","description":"","location":"docs/usage/cbt-projects.html","searchKeys":["Using Dotty with cbt"]},{"name":"trait SuperModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-super-module.html","searchKeys":["SuperModule"]},{"name":"def apply(x: Int): Constant","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-module/-int-module/apply.html","searchKeys":["apply"]},{"name":"def unapply(x: ConstantType): Option[Constant]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-type-module/unapply.html","searchKeys":["unapply"]},{"name":"def resType: TypeRepr","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-poly-type-methods/res-type.html","searchKeys":["resType"]},{"name":"def ObjectClass: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/defn-module/-object-class.html","searchKeys":["ObjectClass"]},{"name":"def !=(that: Addr): Boolean","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-buffer$/-addr/!=.html","searchKeys":["!="]},{"name":"def fromString(s: String): Boolean","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-command-line-parser/-from-string$/given_-from-string_-boolean/from-string.html","searchKeys":["fromString"]},{"name":"def ExtensionMethod: Flags","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-module/-extension-method.html","searchKeys":["ExtensionMethod"]},{"name":"trait ExprMatchModule","description":"scala.quoted.runtime","location":"-scala 3/-a-p-i/scala/quoted/runtime/-quote-matching/-expr-match-module.html","searchKeys":["ExprMatchModule"]},{"name":"def unzip[U, V](evidence$26: ClassTag[U], evidence$27: ClassTag[V]): (IArray[U], IArray[V])","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/unzip.html","searchKeys":["unzip"]},{"name":"By-Name Context Parameters","description":"","location":"docs/reference/contextual/by-name-context-parameters.html","searchKeys":["By-Name Context Parameters"]},{"name":"def relativeTo(base: Addr): Addr","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-buffer$/-addr/relative-to.html","searchKeys":["relativeTo"]},{"name":"trait TypedMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-typed-methods.html","searchKeys":["TypedMethods"]},{"name":"Getting Started","description":"","location":"docs/contributing/getting-started.html","searchKeys":["Getting Started"]},{"name":"Opaque Type Aliases: More Details","description":"","location":"docs/reference/other-new-features/opaques-details.html","searchKeys":["Opaque Type Aliases: More Details"]},{"name":"def pattern: Tree","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-bind-methods/pattern.html","searchKeys":["pattern"]},{"name":"trait PackageClauseMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-package-clause-methods.html","searchKeys":["PackageClauseMethods"]},{"name":"given FloatLiftable[T <: Float] as Liftable[T]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-float-liftable.html","searchKeys":["FloatLiftable"]},{"name":"def apply(fun: Term, args: List[Term]): Apply","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-apply-module/apply.html","searchKeys":["apply"]},{"name":"def select(sym: Symbol): TypeRepr","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-repr-methods/select.html","searchKeys":["select"]},{"name":"def exists: Boolean","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/exists.html","searchKeys":["exists"]},{"name":"def Case: Flags","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-module/-case.html","searchKeys":["Case"]},{"name":"given Tuple11Unliftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-unliftable$/-tuple11-unliftable.html","searchKeys":["Tuple11Unliftable"]},{"name":"def name: String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-bind-methods/name.html","searchKeys":["name"]},{"name":"def empty[T](evidence$1: ClassTag[T]): IArray[T]","description":"scala","location":"-scala 3/-a-p-i/scala/-i-array/empty.html","searchKeys":["empty"]},{"name":"def unapply(x: Singleton): Option[Term]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-singleton-module/unapply.html","searchKeys":["unapply"]},{"name":"def ProductClass: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/defn-module/-product-class.html","searchKeys":["ProductClass"]},{"name":"Announcing Dotty 0.14.0-RC1 with export, immutable arrays, creator applications and more","description":"","location":"blog/2019/04/15/14th-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.14.0-RC1 with export, immutable arrays, creator applications and more"]},{"name":"def fromString(s: String): Short","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-command-line-parser/-from-string$/given_-from-string_-short/from-string.html","searchKeys":["fromString"]},{"name":"class TastyReader(val bytes: Array[Byte], start: Int, end: Int, val base: Int)","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-reader.html","searchKeys":["TastyReader"]},{"name":"Built-in blog","description":"","location":"docs/usage/scala3doc/blog.html","searchKeys":["Built-in blog"]},{"name":"def requireConst(x: Boolean | Byte | Short | Int | Long | Float | Double | Char | String): Unit","description":"scala.compiletime","location":"-scala 3/-a-p-i/scala/compiletime/require-const.html","searchKeys":["requireConst"]},{"name":"Implicit By-Name Parameters","description":"","location":"docs/reference/contextual/implicit-by-name-parameters.html","searchKeys":["Implicit By-Name Parameters"]},{"name":"def ClassClass: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/defn-module/-class-class.html","searchKeys":["ClassClass"]},{"name":"def unapply(sig: Signature): Option[(List[String | Int], String)]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-signature-module/unapply.html","searchKeys":["unapply"]},{"name":"trait SelectOuterModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-select-outer-module.html","searchKeys":["SelectOuterModule"]},{"name":"trait AppliedTypeModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-applied-type-module.html","searchKeys":["AppliedTypeModule"]},{"name":"def productElement(n: Int): Any","description":"scala","location":"-scala 3/-a-p-i/scala/-empty-tuple/product-element.html","searchKeys":["productElement"]},{"name":"def apply(x: Constant): ConstantType","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-type-module/apply.html","searchKeys":["apply"]},{"name":"trait CharModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-module/-char-module.html","searchKeys":["CharModule"]},{"name":"def companionModule: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/companion-module.html","searchKeys":["companionModule"]},{"name":"def ++[This >: Tuple <: Tuple](that: Tuple): Concat[This, that.type]","description":"scala","location":"-scala 3/-a-p-i/scala/-tuple/++.html","searchKeys":["++"]},{"name":"def unapply[T](expr: Expr[T])(x$2: Quotes): Option[T]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-const/unapply.html","searchKeys":["unapply"]},{"name":"Intersection Types","description":"","location":"docs/reference/new-types/intersection-types.html","searchKeys":["Intersection Types"]},{"name":"def scrutinee: Term","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-match-methods/scrutinee.html","searchKeys":["scrutinee"]},{"name":"Intersection Types - More Details","description":"","location":"docs/reference/new-types/intersection-types-spec.html","searchKeys":["Intersection Types - More Details"]},{"name":"def underlying: TypeRepr","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-recursive-type-methods/underlying.html","searchKeys":["underlying"]},{"name":"New Types","description":"","location":"docs/New Types/index.html","searchKeys":["New Types"]},{"name":"def isClassDef: Boolean","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/is-class-def.html","searchKeys":["isClassDef"]},{"name":"trait WhileMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-while-methods.html","searchKeys":["WhileMethods"]},{"name":"def cases: List[TypeCaseDef]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-match-type-tree-methods/cases.html","searchKeys":["cases"]},{"name":"trait TypeTreeMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-tree-methods.html","searchKeys":["TypeTreeMethods"]},{"name":"def addr(idx: Int): Addr","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-reader/addr.html","searchKeys":["addr"]},{"name":"def unapply(constant: Constant): Option[Char]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-module/-char-module/unapply.html","searchKeys":["unapply"]},{"name":"Option-less pattern matching","description":"","location":"docs/reference/changed-features/pattern-matching.html","searchKeys":["Option-less pattern matching"]},{"name":"def transformChildren[T](e: Expr[T])(x$2: Type[T])(x$3: Quotes): Expr[T]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-expr-map/transform-children.html","searchKeys":["transformChildren"]},{"name":"class SourceFile(path: String) extends Annotation","description":"scala.annotation.internal","location":"-scala 3/-a-p-i/scala/annotation/internal/-source-file.html","searchKeys":["SourceFile"]},{"name":"Announcing Dotty 0.19.0-RC1 – further refinements of the syntax and the migration to 2.13.1 standard library","description":"","location":"blog/2019/09/23/19th-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.19.0-RC1 – further refinements of the syntax and the migration to 2.13.1 standard library"]},{"name":"trait RefModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-ref-module.html","searchKeys":["RefModule"]},{"name":"def qualifier: Term","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-super-methods/qualifier.html","searchKeys":["qualifier"]},{"name":"trait ByNameTypeModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-by-name-type-module.html","searchKeys":["ByNameTypeModule"]},{"name":"Changes in Implicit Resolution","description":"","location":"docs/reference/changed-features/implicit-resolution.html","searchKeys":["Changes in Implicit Resolution"]},{"name":"def traverseTreeChildren(tree: Tree)(owner: Symbol): Unit","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-tree-traverser/traverse-tree-children.html","searchKeys":["traverseTreeChildren"]},{"name":"given Tuple7Liftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-tuple7-liftable.html","searchKeys":["Tuple7Liftable"]},{"name":"def selectDynamic(name: String): Any","description":"scala.reflect","location":"-scala 3/-a-p-i/scala/reflect/-selectable/select-dynamic.html","searchKeys":["selectDynamic"]},{"name":"def unapply(x: TypeBind): Option[(String, Tree)]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-bind-module/unapply.html","searchKeys":["unapply"]},{"name":"trait SourceFileMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-source-file-methods.html","searchKeys":["SourceFileMethods"]},{"name":"0.1.2 release notes","description":"","location":"docs/release-notes/0.1.2.html","searchKeys":["0.1.2 release notes"]},{"name":"trait TermRefModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-term-ref-module.html","searchKeys":["TermRefModule"]},{"name":"def productToArray(self: Product): Array[Object]","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-tuple/product-to-array.html","searchKeys":["productToArray"]},{"name":"def unapply(constant: Constant): Boolean","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-module/-unit-module/unapply.html","searchKeys":["unapply"]},{"name":"object dependent","description":"scala.runtime.stdLibPatches","location":"-scala 3/-a-p-i/scala/runtime/stdLibPatches/language/experimental/dependent.html","searchKeys":["dependent"]},{"name":"def appliedToArgss(argss: List[List[Term]]): Term","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-term-methods/applied-to-argss.html","searchKeys":["appliedToArgss"]},{"name":"trait TypeProjectionModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-projection-module.html","searchKeys":["TypeProjectionModule"]},{"name":"def isAliasType: Boolean","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/is-alias-type.html","searchKeys":["isAliasType"]},{"name":"def seqToArray[T](xs: Seq[T], clazz: Class[]): Array[T]","description":"dotty.runtime","location":"-scala 3/-a-p-i/dotty/runtime/-arrays/seq-to-array.html","searchKeys":["seqToArray"]},{"name":"Rules for Operators","description":"","location":"docs/reference/changed-features/operators.html","searchKeys":["Rules for Operators"]},{"name":"def copy(original: Tree)(pattern: Tree, guard: Option[Term], rhs: Term): CaseDef","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-case-def-module/copy.html","searchKeys":["copy"]},{"name":"def Enum: Flags","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-module/-enum.html","searchKeys":["Enum"]},{"name":"def toIArray(self: Tuple): IArray[Object]","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-tuple/to-i-array.html","searchKeys":["toIArray"]},{"name":"given Tuple10Unliftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-unliftable$/-tuple10-unliftable.html","searchKeys":["Tuple10Unliftable"]},{"name":"trait ThisMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-this-methods.html","searchKeys":["ThisMethods"]},{"name":"def isTypeTreeTag(tag: Int): Boolean","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-format/is-type-tree-tag.html","searchKeys":["isTypeTreeTag"]},{"name":"object ErrorKind","description":"scala.compiletime.testing","location":"-scala 3/-a-p-i/scala/compiletime/testing/-error-kind$.html","searchKeys":["ErrorKind"]},{"name":"trait OmitSelectorModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-omit-selector-module.html","searchKeys":["OmitSelectorModule"]},{"name":"def isFunctionType: Boolean","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-repr-methods/is-function-type.html","searchKeys":["isFunctionType"]},{"name":"def apply(qualifier: Term, symbol: Symbol): Select","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-select-module/apply.html","searchKeys":["apply"]},{"name":"def hi: TypeRepr","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-bounds-methods/hi.html","searchKeys":["hi"]},{"name":"def transformTypeCaseDefs(trees: List[TypeCaseDef])(owner: Symbol): List[TypeCaseDef]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-tree-map/transform-type-case-defs.html","searchKeys":["transformTypeCaseDefs"]},{"name":"def toExpr(x: T): Quotes => Expr[T]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-boolean-liftable/to-expr.html","searchKeys":["toExpr"]},{"name":"def args: List[TypeTree]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-apply-methods/args.html","searchKeys":["args"]},{"name":"def error(msg: String): Nothing","description":"scala.compiletime","location":"-scala 3/-a-p-i/scala/compiletime/error.html","searchKeys":["error"]},{"name":"class NumberTooSmall(msg: String) extends FromDigitsException","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-from-digits$/-number-too-small.html","searchKeys":["NumberTooSmall"]},{"name":"def underlying: Term","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-term-methods/underlying.html","searchKeys":["underlying"]},{"name":"def ==(that: Addr): Boolean","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-buffer$/-addr/==.html","searchKeys":["=="]},{"name":"Escapes in interpolations","description":"","location":"docs/reference/changed-features/interpolation-escapes.html","searchKeys":["Escapes in interpolations"]},{"name":"def asExprOf[T](x$1: Type[T]): Expr[T]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-tree-methods/as-expr-of.html","searchKeys":["asExprOf"]},{"name":"trait NonEmptyTuple extends Tuple","description":"scala","location":"-scala 3/-a-p-i/scala/-non-empty-tuple.html","searchKeys":["NonEmptyTuple"]},{"name":"def doubleFromDigits(digits: String): Double","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-from-digits$/double-from-digits.html","searchKeys":["doubleFromDigits"]},{"name":"class D_u_m_m_y","description":"scalaShadowing","location":"-scala 3/-a-p-i/scalaShadowing/-d_u_m_m_y.html","searchKeys":["D_u_m_m_y"]},{"name":"def method(name: String): List[Symbol]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/method.html","searchKeys":["method"]},{"name":"def unapply(x: TypeIdent): Option[String]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-ident-module/unapply.html","searchKeys":["unapply"]},{"name":"def apply(expr: Term, tpt: TypeTree): Typed","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-typed-module/apply.html","searchKeys":["apply"]},{"name":"def sourceCode: String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-position-methods/source-code.html","searchKeys":["sourceCode"]},{"name":"def JavaLangPackage: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/defn-module/-java-lang-package.html","searchKeys":["JavaLangPackage"]},{"name":"trait IfMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-if-methods.html","searchKeys":["IfMethods"]},{"name":"def emptyFloatIArray: IArray[Float]","description":"scala","location":"-scala 3/-a-p-i/scala/-i-array/empty-float-i-array.html","searchKeys":["emptyFloatIArray"]},{"name":"def paramss: List[List[ValDef]]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-def-def-methods/paramss.html","searchKeys":["paramss"]},{"name":"def paramNames: List[String]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-method-type-methods/param-names.html","searchKeys":["paramNames"]},{"name":"def nameTagToString(tag: Int): String","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-format/name-tag-to-string.html","searchKeys":["nameTagToString"]},{"name":"def productArity: Int","description":"scala","location":"-scala 3/-a-p-i/scala/-empty-tuple/product-arity.html","searchKeys":["productArity"]},{"name":"Given Instances","description":"","location":"docs/reference/contextual/givens.html","searchKeys":["Given Instances"]},{"name":"trait Floating[T] extends Decimal[T]","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-from-digits$/-floating.html","searchKeys":["Floating"]},{"name":"def copy(original: Tree)(fun: Term, implicits: List[Term], patterns: List[Tree]): Unapply","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-unapply-module/copy.html","searchKeys":["copy"]},{"name":"given Tuple16Unliftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-unliftable$/-tuple16-unliftable.html","searchKeys":["Tuple16Unliftable"]},{"name":"def spliceOwner: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-module/splice-owner.html","searchKeys":["spliceOwner"]},{"name":"def unapply(x: Unapply): Option[(Term, List[Term], List[Tree])]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-unapply-module/unapply.html","searchKeys":["unapply"]},{"name":"def Inline: Flags","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-module/-inline.html","searchKeys":["Inline"]},{"name":"Version numbers","description":"","location":"docs/usage/version-numbers.html","searchKeys":["Version numbers"]},{"name":"def concat[This <: Tuple, That <: Tuple](self: This, that: That): Tuple","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-tuple/concat.html","searchKeys":["concat"]},{"name":"def apply(qualifier: Term, name: String): TypeSelect","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-select-module/apply.html","searchKeys":["apply"]},{"name":"def apply(lhs: TypeRepr, rhs: TypeRepr): OrType","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-or-type-module/apply.html","searchKeys":["apply"]},{"name":"Workflow","description":"","location":"docs/contributing/workflow.html","searchKeys":["Workflow"]},{"name":"Automatic Eta Expansion - More Details","description":"","location":"docs/reference/changed-features/eta-expansion-spec.html","searchKeys":["Automatic Eta Expansion - More Details"]},{"name":"def unapply(x: TypeLambda): Option[(List[String], List[TypeBounds], TypeRepr)]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-lambda-module/unapply.html","searchKeys":["unapply"]},{"name":"def rhs: Option[Term]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-def-def-methods/rhs.html","searchKeys":["rhs"]},{"name":"Announcing Dotty 0.13.0-RC1 with Spark support, top level definitions and redesigned implicits","description":"","location":"blog/2019/03/05/13th-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.13.0-RC1 with Spark support, top level definitions and redesigned implicits"]},{"name":"def foldOverTree(x: X, tree: Tree)(owner: Symbol): X","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-tree-accumulator/fold-over-tree.html","searchKeys":["foldOverTree"]},{"name":"def unapply(constant: Constant): Option[Float]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-module/-float-module/unapply.html","searchKeys":["unapply"]},{"name":"def baseType(cls: Symbol): TypeRepr","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-repr-methods/base-type.html","searchKeys":["baseType"]},{"name":"def readLongInt(): Long","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-reader/read-long-int.html","searchKeys":["readLongInt"]},{"name":"Scala 3.0.0-M1 is here","description":"","location":"blog/2020/11/09/scala3-m1.html","searchKeys":["Scala 3.0.0-M1 is here"]},{"name":"def cases: List[TypeRepr]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-match-type-methods/cases.html","searchKeys":["cases"]},{"name":"def unapply(x: GivenSelector): Option[Option[TypeTree]]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-given-selector-module/unapply.html","searchKeys":["unapply"]},{"name":"def showError(err: ParseError): Unit","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-command-line-parser/show-error.html","searchKeys":["showError"]},{"name":"Using Dotty with sbt","description":"","location":"docs/usage/sbt-projects.html","searchKeys":["Using Dotty with sbt"]},{"name":"given amb1","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-not$/amb1.html","searchKeys":["amb1"]},{"name":"trait TypedModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-typed-module.html","searchKeys":["TypedModule"]},{"name":"def tpt: TypeTree","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-applied-methods/tpt.html","searchKeys":["tpt"]},{"name":"trait SimpleSelectorMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-simple-selector-methods.html","searchKeys":["SimpleSelectorMethods"]},{"name":"given RightUnliftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-unliftable$/-right-unliftable.html","searchKeys":["RightUnliftable"]},{"name":"def cond: Term","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-if-methods/cond.html","searchKeys":["cond"]},{"name":"class targetName(name: String) extends StaticAnnotation","description":"scala.annotation","location":"-scala 3/-a-p-i/scala/annotation/target-name.html","searchKeys":["targetName"]},{"name":"def subReader(start: Addr, end: Addr): TastyReader","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-reader/sub-reader.html","searchKeys":["subReader"]},{"name":"object IArray","description":"scala","location":"-scala 3/-a-p-i/scala/-i-array.html","searchKeys":["IArray"]},{"name":"def fromString(s: String): String","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-command-line-parser/-from-string$/given_-from-string_-string/from-string.html","searchKeys":["fromString"]},{"name":"def copy(original: Tree)(name: String): Ident","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-ident-module/copy.html","searchKeys":["copy"]},{"name":"trait ValDefMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-val-def-methods.html","searchKeys":["ValDefMethods"]},{"name":"Programmatic Structural Types - More Details","description":"","location":"docs/reference/changed-features/structural-types-spec.html","searchKeys":["Programmatic Structural Types - More Details"]},{"name":"def sortWith[T](f: (T, T) => Boolean): IArray[T]","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/sort-with.html","searchKeys":["sortWith"]},{"name":"def copy(original: Tree)(cond: Term, body: Term): While","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-while-module/copy.html","searchKeys":["copy"]},{"name":"trait LowPriorityNot","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-low-priority-not.html","searchKeys":["LowPriorityNot"]},{"name":"def requiredMethod(path: String): Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-module/required-method.html","searchKeys":["requiredMethod"]},{"name":"def body: Tree","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-bind-methods/body.html","searchKeys":["body"]},{"name":"trait RefiningAnnotation extends StaticAnnotation","description":"scala.annotation","location":"-scala 3/-a-p-i/scala/annotation/-refining-annotation.html","searchKeys":["RefiningAnnotation"]},{"name":"def SomeModule: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/defn-module/-some-module.html","searchKeys":["SomeModule"]},{"name":"def unapply(x: ByNameType): Option[TypeRepr]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-by-name-type-module/unapply.html","searchKeys":["unapply"]},{"name":"def copy(original: Tree)(low: TypeTree, hi: TypeTree): TypeBoundsTree","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-bounds-tree-module/copy.html","searchKeys":["copy"]},{"name":"class main extends Annotation","description":"scala","location":"-scala 3/-a-p-i/scala/main.html","searchKeys":["main"]},{"name":"def fromProduct(product: Product): Tuple","description":"scala","location":"-scala 3/-a-p-i/scala/-tuple$/from-product.html","searchKeys":["fromProduct"]},{"name":"def zip[T, U](that: IArray[U])(evidence$28: ClassTag[U]): IArray[(T, U)]","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/zip.html","searchKeys":["zip"]},{"name":"given LongLiftable[T <: Long] as Liftable[T]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-long-liftable.html","searchKeys":["LongLiftable"]},{"name":"Tests for Debuggability","description":"","location":"docs/contributing/debug-tests.html","searchKeys":["Tests for Debuggability"]},{"name":"def apply(thistpe: TypeRepr, supertpe: TypeRepr): SuperType","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-super-type-module/apply.html","searchKeys":["apply"]},{"name":"Wildcard Arguments in Types","description":"","location":"docs/reference/changed-features/wildcards.html","searchKeys":["Wildcard Arguments in Types"]},{"name":"object Patterns","description":"scala.quoted.runtime","location":"-scala 3/-a-p-i/scala/quoted/runtime/-patterns.html","searchKeys":["Patterns"]},{"name":"def Synthetic: Flags","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-module/-synthetic.html","searchKeys":["Synthetic"]},{"name":"def getOffset(clz: Class[], name: String): Long","description":"dotty.runtime","location":"-scala 3/-a-p-i/dotty/runtime/-lazy-vals/get-offset.html","searchKeys":["getOffset"]},{"name":"given Tuple18Liftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-tuple18-liftable.html","searchKeys":["Tuple18Liftable"]},{"name":"def content: String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-source-file-methods/content.html","searchKeys":["content"]},{"name":"def unapply(x: Applied): Option[(TypeTree, List[Tree])]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-applied-module/unapply.html","searchKeys":["unapply"]},{"name":"given ByteLiftable[T <: Byte] as Liftable[T]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-byte-liftable.html","searchKeys":["ByteLiftable"]},{"name":"def apply(selector: Term, cases: List[CaseDef]): Match","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-match-module/apply.html","searchKeys":["apply"]},{"name":"def setFlag(t: Object, offset: Long, v: Int, ord: Int): Unit","description":"dotty.runtime","location":"-scala 3/-a-p-i/dotty/runtime/-lazy-vals/set-flag.html","searchKeys":["setFlag"]},{"name":"object Selectable","description":"scala","location":"-scala 3/-a-p-i/scala/-selectable$.html","searchKeys":["Selectable"]},{"name":"given SeqUnliftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-unliftable$/-seq-unliftable.html","searchKeys":["SeqUnliftable"]},{"name":"Contexts","description":"","location":"docs/internals/contexts.html","searchKeys":["Contexts"]},{"name":"def rhs: Term","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-case-def-methods/rhs.html","searchKeys":["rhs"]},{"name":"trait OrTypeModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-or-type-module.html","searchKeys":["OrTypeModule"]},{"name":"def isBind: Boolean","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/is-bind.html","searchKeys":["isBind"]},{"name":"given Tuple8Liftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-tuple8-liftable.html","searchKeys":["Tuple8Liftable"]},{"name":"Implicit Conversions","description":"","location":"docs/reference/contextual/conversions.html","searchKeys":["Implicit Conversions"]},{"name":"Parameter Untupling - More Details","description":"","location":"docs/reference/other-new-features/parameter-untupling-spec.html","searchKeys":["Parameter Untupling - More Details"]},{"name":"trait TypeIdentMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-ident-methods.html","searchKeys":["TypeIdentMethods"]},{"name":"def thenp: Term","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-if-methods/thenp.html","searchKeys":["thenp"]},{"name":"class Child[T] extends Annotation","description":"scala.annotation.internal","location":"-scala 3/-a-p-i/scala/annotation/internal/-child.html","searchKeys":["Child"]},{"name":"class UnpickleException(msg: String) extends RuntimeException","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-unpickle-exception.html","searchKeys":["UnpickleException"]},{"name":"object Expr","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-expr$.html","searchKeys":["Expr"]},{"name":"Match Expressions","description":"","location":"docs/reference/changed-features/match-syntax.html","searchKeys":["Match Expressions"]},{"name":"class Error(message: String, lineContent: String, column: Int, kind: ErrorKind)","description":"scala.compiletime.testing","location":"-scala 3/-a-p-i/scala/compiletime/testing/-error.html","searchKeys":["Error"]},{"name":"def Param: Flags","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-module/-param.html","searchKeys":["Param"]},{"name":"def reflectiveSelectableFromLangReflectiveCalls(x: Any)(x$2: reflectiveCalls): Selectable","description":"scala","location":"-scala 3/-a-p-i/scala/-selectable$/reflective-selectable-from-lang-reflective-calls.html","searchKeys":["reflectiveSelectableFromLangReflectiveCalls"]},{"name":"given Tuple15Unliftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-unliftable$/-tuple15-unliftable.html","searchKeys":["Tuple15Unliftable"]},{"name":"def nn[T](x: T | Null): x.type & T","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-scala3-run-time/nn.html","searchKeys":["nn"]},{"name":"def copy(original: Tree)(cond: Term, thenp: Term, elsep: Term): If","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-if-module/copy.html","searchKeys":["copy"]},{"name":"def CAS(t: Object, offset: Long, e: Long, v: Int, ord: Int): Boolean","description":"dotty.runtime","location":"-scala 3/-a-p-i/dotty/runtime/-lazy-vals/-c-a-s.html","searchKeys":["CAS"]},{"name":"def TupleClass(arity: Int): Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/defn-module/-tuple-class.html","searchKeys":["TupleClass"]},{"name":"trait LongModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-module/-long-module.html","searchKeys":["LongModule"]},{"name":"def fromDigits(digits: String): T","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-from-digits/from-digits.html","searchKeys":["fromDigits"]},{"name":"object Not extends LowPriorityNot","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-not$.html","searchKeys":["Not"]},{"name":"trait UnapplyModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-unapply-module.html","searchKeys":["UnapplyModule"]},{"name":"Announcing Dotty 0.27.0-RC1 - ScalaJS, performance, stability","description":"","location":"blog/2020/08/31/27th-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.27.0-RC1 - ScalaJS, performance, stability"]},{"name":"Named Type Arguments","description":"","location":"docs/reference/other-new-features/named-typeargs.html","searchKeys":["Named Type Arguments"]},{"name":"def index(addr: Addr): Int","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-reader/--index--.html","searchKeys":["index"]},{"name":"given RightLiftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-right-liftable.html","searchKeys":["RightLiftable"]},{"name":"object genericNumberLiterals","description":"scala.runtime.stdLibPatches","location":"-scala 3/-a-p-i/scala/runtime/stdLibPatches/language/experimental/generic-number-literals.html","searchKeys":["genericNumberLiterals"]},{"name":"def emptyIntIArray: IArray[Int]","description":"scala","location":"-scala 3/-a-p-i/scala/-i-array/empty-int-i-array.html","searchKeys":["emptyIntIArray"]},{"name":"trait RefinedModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-refined-module.html","searchKeys":["RefinedModule"]},{"name":"given Tuple22Liftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-tuple22-liftable.html","searchKeys":["Tuple22Liftable"]},{"name":"def low: TypeRepr","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-bounds-methods/low.html","searchKeys":["low"]},{"name":"def unapply(x: OrType): Option[(TypeRepr, TypeRepr)]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-or-type-module/unapply.html","searchKeys":["unapply"]},{"name":"def owner: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/owner.html","searchKeys":["owner"]},{"name":"given EitherLiftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-either-liftable.html","searchKeys":["EitherLiftable"]},{"name":"trait TreeModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-tree-module.html","searchKeys":["TreeModule"]},{"name":"def apply(tpe: TypeRepr): Constant","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-module/-class-of-module/apply.html","searchKeys":["apply"]},{"name":"trait TypeLambdaMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-lambda-methods.html","searchKeys":["TypeLambdaMethods"]},{"name":"trait MatchTypeModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-match-type-module.html","searchKeys":["MatchTypeModule"]},{"name":"def derivesFrom(cls: Symbol): Boolean","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-repr-methods/derives-from.html","searchKeys":["derivesFrom"]},{"name":"trait RecursiveTypeModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-recursive-type-module.html","searchKeys":["RecursiveTypeModule"]},{"name":"def typeConstructorOf(clazz: Class[]): TypeRepr","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-repr-module/type-constructor-of.html","searchKeys":["typeConstructorOf"]},{"name":"def numRefs(tag: Int): Int","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-format/num-refs.html","searchKeys":["numRefs"]},{"name":"def args: List[Term]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-apply-methods/args.html","searchKeys":["args"]},{"name":"trait ByteModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-module/-byte-module.html","searchKeys":["ByteModule"]},{"name":"def constructor: DefDef","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-class-def-methods/constructor.html","searchKeys":["constructor"]},{"name":"def name: String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-projection-methods/name.html","searchKeys":["name"]},{"name":"Dottydoc [Legacy]","description":"","location":"docs/usage/dottydoc.html","searchKeys":["Dottydoc [Legacy]"]},{"name":"class Repeated() extends Annotation","description":"scala.annotation.internal","location":"-scala 3/-a-p-i/scala/annotation/internal/-repeated.html","searchKeys":["Repeated"]},{"name":"object experimental","description":"scala.runtime.stdLibPatches","location":"-scala 3/-a-p-i/scala/runtime/stdLibPatches/language/experimental.html","searchKeys":["experimental"]},{"name":"def zip[This >: Tuple <: Tuple, T2 <: Tuple](t2: T2): Zip[This, T2]","description":"scala","location":"-scala 3/-a-p-i/scala/-tuple/zip.html","searchKeys":["zip"]},{"name":"def apply(tmref: TermRef): Term","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-ident-module/apply.html","searchKeys":["apply"]},{"name":"def level: Int","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-select-outer-methods/level.html","searchKeys":["level"]},{"name":"trait NullModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-module/-null-module.html","searchKeys":["NullModule"]},{"name":"def value: Term","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-named-arg-methods/value.html","searchKeys":["value"]},{"name":"given Tuple9Unliftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-unliftable$/-tuple9-unliftable.html","searchKeys":["Tuple9Unliftable"]},{"name":"Dropped: Limit 22","description":"","location":"docs/reference/dropped-features/limit22.html","searchKeys":["Dropped: Limit 22"]},{"name":"def -(delta: Int): Addr","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-buffer$/-addr/-.html","searchKeys":["-"]},{"name":"def RootPackage: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/defn-module/-root-package.html","searchKeys":["RootPackage"]},{"name":"def ++[T, U >: T](that: IArray[U])(evidence$14: ClassTag[U]): IArray[U]","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/++.html","searchKeys":["++"]},{"name":"def toExpr(x: T): Quotes => Expr[T]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-char-liftable/to-expr.html","searchKeys":["toExpr"]},{"name":"given Tuple13Liftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-tuple13-liftable.html","searchKeys":["Tuple13Liftable"]},{"name":"class InlineParam() extends Annotation","description":"scala.annotation.internal","location":"-scala 3/-a-p-i/scala/annotation/internal/-inline-param.html","searchKeys":["InlineParam"]},{"name":"Internals","description":"","location":"docs/Internals/index.html","searchKeys":["Internals"]},{"name":"def ByteClass: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/defn-module/-byte-class.html","searchKeys":["ByteClass"]},{"name":"Higher-Kinded Types in Dotty","description":"","location":"docs/internals/higher-kinded-v2.html","searchKeys":["Higher-Kinded Types in Dotty"]},{"name":"def apply(low: TypeTree, hi: TypeTree): TypeBoundsTree","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-bounds-tree-module/apply.html","searchKeys":["apply"]},{"name":"def underlying: TypeRepr","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-annotated-type-methods/underlying.html","searchKeys":["underlying"]},{"name":"Dropped: XML Literals","description":"","location":"docs/reference/dropped-features/xml.html","searchKeys":["Dropped: XML Literals"]},{"name":"given Tuple9Liftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-tuple9-liftable.html","searchKeys":["Tuple9Liftable"]},{"name":"def PrivateLocal: Flags","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-module/-private-local.html","searchKeys":["PrivateLocal"]},{"name":"object language","description":"scala.runtime.stdLibPatches","location":"-scala 3/-a-p-i/scala/runtime/stdLibPatches/language.html","searchKeys":["language"]},{"name":"def transformSubTrees[Tr <: Tree](trees: List[Tr])(owner: Symbol): List[Tr]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-tree-map/transform-sub-trees.html","searchKeys":["transformSubTrees"]},{"name":"def intFromDigits(digits: String, radix: Int): Int","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-from-digits$/int-from-digits.html","searchKeys":["intFromDigits"]},{"name":"object Tuple","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-tuple.html","searchKeys":["Tuple"]},{"name":"given MapUnliftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-unliftable$/-map-unliftable.html","searchKeys":["MapUnliftable"]},{"name":"def fields: List[Symbol]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/fields.html","searchKeys":["fields"]},{"name":"def toString(): String","description":"scala","location":"-scala 3/-a-p-i/scala/-empty-tuple/to-string.html","searchKeys":["toString"]},{"name":"def end: Int","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-position-methods/end.html","searchKeys":["end"]},{"name":"def tailXXL: TupleXXL","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-tuple-x-x-l/tail-x-x-l.html","searchKeys":["tailXXL"]},{"name":"def Lazy: Flags","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-module/-lazy.html","searchKeys":["Lazy"]},{"name":"class unshared extends Annotation","description":"scala.annotation.internal","location":"-scala 3/-a-p-i/scala/annotation/internal/unshared.html","searchKeys":["unshared"]},{"name":"given given_FromString_Float as FromString[Float]","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-command-line-parser/-from-string$/given_-from-string_-float.html","searchKeys":["given_FromString_Float"]},{"name":"trait DefDefMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-def-def-methods.html","searchKeys":["DefDefMethods"]},{"name":"def StringClass: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/defn-module/-string-class.html","searchKeys":["StringClass"]},{"name":"Release Procedure","description":"","location":"docs/contributing/procedures/release.html","searchKeys":["Release Procedure"]},{"name":"def apply(x: Boolean): Constant","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-module/-boolean-module/apply.html","searchKeys":["apply"]},{"name":"def toName: String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-rename-selector-methods/to-name.html","searchKeys":["toName"]},{"name":"Dotty Internals 1: Trees & Symbols (Meeting Notes)","description":"","location":"docs/internals/dotty-internals-1-notes.html","searchKeys":["Dotty Internals 1: Trees & Symbols (Meeting Notes)"]},{"name":"def pjwHash64(data: Array[Byte]): Long","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-hash/pjw-hash64.html","searchKeys":["pjwHash64"]},{"name":"def writeUncompressedLong(x: Long): Unit","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-buffer/write-uncompressed-long.html","searchKeys":["writeUncompressedLong"]},{"name":"The Meta-theory of Symmetric Metaprogramming","description":"","location":"docs/reference/metaprogramming/simple-smp.html","searchKeys":["The Meta-theory of Symmetric Metaprogramming"]},{"name":"def copy(original: Tree)(result: TypeTree): ByName","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-by-name-module/copy.html","searchKeys":["copy"]},{"name":"def isModifierTag(tag: Int): Boolean","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-format/is-modifier-tag.html","searchKeys":["isModifierTag"]},{"name":"def apply(aliases: List[TypeDef], tpt: TypeTree): TypeBlock","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-block-module/apply.html","searchKeys":["apply"]},{"name":"given Tuple15Liftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-tuple15-liftable.html","searchKeys":["Tuple15Liftable"]},{"name":"def AnyClass: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/defn-module/-any-class.html","searchKeys":["AnyClass"]},{"name":"trait TypeBoundsMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-bounds-methods.html","searchKeys":["TypeBoundsMethods"]},{"name":"Extension Methods","description":"","location":"docs/reference/contextual/extension-methods.html","searchKeys":["Extension Methods"]},{"name":"trait DefDefModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-def-def-module.html","searchKeys":["DefDefModule"]},{"name":"def privateWithin: Option[TypeRepr]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/private-within.html","searchKeys":["privateWithin"]},{"name":"trait Decimal[T] extends FromDigits[T]","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-from-digits$/-decimal.html","searchKeys":["Decimal"]},{"name":"def headOption[T]: Option[T]","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/head-option.html","searchKeys":["headOption"]},{"name":"Contributing","description":"","location":"docs/Contributing/index.html","searchKeys":["Contributing"]},{"name":"Query Types","description":"","location":"docs/reference/contextual/query-types.html","searchKeys":["Query Types"]},{"name":"def copy(original: Tree)(selector: Term, cases: List[CaseDef]): Match","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-match-module/copy.html","searchKeys":["copy"]},{"name":"def baseClasses: List[Symbol]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-repr-methods/base-classes.html","searchKeys":["baseClasses"]},{"name":"Union Types - More Details","description":"","location":"docs/reference/new-types/union-types-spec.html","searchKeys":["Union Types - More Details"]},{"name":"def readBytes(n: Int): Array[Byte]","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-reader/read-bytes.html","searchKeys":["readBytes"]},{"name":"def asExprOf[X](x$1: Type[X]): Expr[X]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/as-expr-of.html","searchKeys":["asExprOf"]},{"name":"def productElementName(n: Int): String","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-enum-value/product-element-name.html","searchKeys":["productElementName"]},{"name":"Numeric Literals","description":"","location":"docs/reference/changed-features/numeric-literals.html","searchKeys":["Numeric Literals"]},{"name":"given Tuple10Liftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-tuple10-liftable.html","searchKeys":["Tuple10Liftable"]},{"name":"Dropped Features","description":"","location":"docs/Dropped Features/index.html","searchKeys":["Dropped Features"]},{"name":"def canEqual(that: Any): Boolean","description":"scala.deriving","location":"-scala 3/-a-p-i/scala/deriving/-array-product/can-equal.html","searchKeys":["canEqual"]},{"name":"def statements: List[Statement]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-block-methods/statements.html","searchKeys":["statements"]},{"name":"object adhocExtensions","description":"scala.runtime.stdLibPatches","location":"-scala 3/-a-p-i/scala/runtime/stdLibPatches/language/adhoc-extensions.html","searchKeys":["adhocExtensions"]},{"name":"Announcing Dotty 0.22.0-RC1 - syntactic enhancements, type-level arithmetic and more","description":"","location":"blog/2020/02/05/22nd-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.22.0-RC1 - syntactic enhancements, type-level arithmetic and more"]},{"name":"def OptionClass: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/defn-module/-option-class.html","searchKeys":["OptionClass"]},{"name":"def Private: Flags","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-module/-private.html","searchKeys":["Private"]},{"name":"TypeTest","description":"","location":"docs/reference/other-new-features/type-test.html","searchKeys":["TypeTest"]},{"name":"trait AppliedModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-applied-module.html","searchKeys":["AppliedModule"]},{"name":"trait DocumentationModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-documentation-module.html","searchKeys":["DocumentationModule"]},{"name":"Contextual Abstractions","description":"","location":"docs/Contextual Abstractions/index.html","searchKeys":["Contextual Abstractions"]},{"name":"def Implicit: Flags","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-module/-implicit.html","searchKeys":["Implicit"]},{"name":"def unapply(x: TypeProjection): Option[(TypeTree, String)]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-projection-module/unapply.html","searchKeys":["unapply"]},{"name":"trait AppliedMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-applied-methods.html","searchKeys":["AppliedMethods"]},{"name":"def isErasedFunctionType: Boolean","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-repr-methods/is-erased-function-type.html","searchKeys":["isErasedFunctionType"]},{"name":"def appliedToNone: Apply","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-term-methods/applied-to-none.html","searchKeys":["appliedToNone"]},{"name":"def toString: String","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-tuple-x-x-l/to-string.html","searchKeys":["toString"]},{"name":"def apply(call: Option[Tree], bindings: List[Definition], expansion: Term): Inlined","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-inlined-module/apply.html","searchKeys":["apply"]},{"name":"Announcing Dotty 0.16.0-RC3 – the Scala Days 2019 Release","description":"","location":"blog/2019/06/11/16th-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.16.0-RC3 – the Scala Days 2019 Release"]},{"name":"trait SuperTypeMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-super-type-methods.html","searchKeys":["SuperTypeMethods"]},{"name":"class sharable extends Annotation","description":"scala.annotation.internal","location":"-scala 3/-a-p-i/scala/annotation/internal/sharable.html","searchKeys":["sharable"]},{"name":"Dropped: Weak Conformance - More Details","description":"","location":"docs/reference/dropped-features/weak-conformance-spec.html","searchKeys":["Dropped: Weak Conformance - More Details"]},{"name":"trait QuoteUnpickler","description":"scala.quoted.runtime","location":"-scala 3/-a-p-i/scala/quoted/runtime/-quote-unpickler.html","searchKeys":["QuoteUnpickler"]},{"name":"def unapply(x: AnnotatedType): Option[(TypeRepr, Term)]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-annotated-type-module/unapply.html","searchKeys":["unapply"]},{"name":"def FieldAccessor: Flags","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-module/-field-accessor.html","searchKeys":["FieldAccessor"]},{"name":"def result: T","description":"scala.util.control","location":"-scala 3/-a-p-i/scala/util/control/-non-local-returns/-return-throwable/result.html","searchKeys":["result"]},{"name":"trait AnnotatedMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-annotated-methods.html","searchKeys":["AnnotatedMethods"]},{"name":"def unapply(x: MatchTypeTree): Option[(Option[TypeTree], TypeTree, List[TypeCaseDef])]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-match-type-tree-module/unapply.html","searchKeys":["unapply"]},{"name":"IDE support for Dotty","description":"","location":"docs/usage/ide-support.html","searchKeys":["IDE support for Dotty"]},{"name":"trait ImportMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-import-methods.html","searchKeys":["ImportMethods"]},{"name":"Scala3doc-specific Tags and Features","description":"","location":"docs/usage/scala3doc/specificTags.html","searchKeys":["Scala3doc-specific Tags and Features"]},{"name":"def show: String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-tree-methods/show.html","searchKeys":["show"]},{"name":"def foldRight[T, U](z: U)(op: (T, U) => U)(evidence$19: ClassTag[U]): U","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/fold-right.html","searchKeys":["foldRight"]},{"name":"def reflectiveSelectable(x: Any): Selectable","description":"scala.reflect","location":"-scala 3/-a-p-i/scala/reflect/-selectable$/reflective-selectable.html","searchKeys":["reflectiveSelectable"]},{"name":"def isExprOf[X](x$1: Type[X]): Boolean","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/is-expr-of.html","searchKeys":["isExprOf"]},{"name":"def lastOption[T]: Option[T]","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/last-option.html","searchKeys":["lastOption"]},{"name":"trait ImplicitSearchSuccessMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-implicit-search-success-methods.html","searchKeys":["ImplicitSearchSuccessMethods"]},{"name":"def unapply(ddef: DefDef): Option[(String, List[TypeDef], List[List[ValDef]], TypeTree, Option[Term])]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-def-def-module/unapply.html","searchKeys":["unapply"]},{"name":"def copy(original: Tree)(expr: Term, cases: List[CaseDef], finalizer: Option[Term]): Try","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-try-module/copy.html","searchKeys":["copy"]},{"name":"Multiversal Equality for Scala","description":"","location":"blog/2016/05/05/multiversal-equality.html","searchKeys":["Multiversal Equality for Scala"]},{"name":"def readEnd(): Addr","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-reader/read-end.html","searchKeys":["readEnd"]},{"name":"Dropped: Existential Types","description":"","location":"docs/reference/dropped-features/existential-types.html","searchKeys":["Dropped: Existential Types"]},{"name":"Talks","description":"","location":"docs/resources/talks.html","searchKeys":["Talks"]},{"name":"def Sealed: Flags","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-module/-sealed.html","searchKeys":["Sealed"]},{"name":"def unapply(constant: Constant): Option[Byte]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-module/-byte-module/unapply.html","searchKeys":["unapply"]},{"name":"def bound: Option[TypeTree]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-match-type-tree-methods/bound.html","searchKeys":["bound"]},{"name":"def indexOf[T](elem: T, from: Int): Int","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/index-of.html","searchKeys":["indexOf"]},{"name":"def size[T]: Int","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/size.html","searchKeys":["size"]},{"name":"Test Vulpix Framework","description":"","location":"docs/contributing/procedures/vulpix.html","searchKeys":["Test Vulpix Framework"]},{"name":"trait ApplyModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-apply-module.html","searchKeys":["ApplyModule"]},{"name":"def isAtEnd: Boolean","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-header-unpickler/is-at-end.html","searchKeys":["isAtEnd"]},{"name":"def unapplySeq[T](x: IArray[T]): UnapplySeqWrapper[ <: T]","description":"scala","location":"-scala 3/-a-p-i/scala/-i-array/unapply-seq.html","searchKeys":["unapplySeq"]},{"name":"trait ConstantTypeModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-type-module.html","searchKeys":["ConstantTypeModule"]},{"name":"def companionClass: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/companion-class.html","searchKeys":["companionClass"]},{"name":"def copy(original: Tree)(arg: TypeTree, annotation: Term): Annotated","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-annotated-module/copy.html","searchKeys":["copy"]},{"name":"def unapply(x: EmptyTuple): true","description":"scala","location":"-scala 3/-a-p-i/scala/-tuple$/unapply.html","searchKeys":["unapply"]},{"name":"def ModuleClass: Flags","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-module/-module-class.html","searchKeys":["ModuleClass"]},{"name":"Classpaths","description":"","location":"docs/internals/classpaths.html","searchKeys":["Classpaths"]},{"name":"trait NewMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-new-methods.html","searchKeys":["NewMethods"]},{"name":"def unapply(tree: Import): Option[(Term, List[ImportSelector])]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-import-module/unapply.html","searchKeys":["unapply"]},{"name":"given LeftLiftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-left-liftable.html","searchKeys":["LeftLiftable"]},{"name":"trait Reflection","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection.html","searchKeys":["Reflection"]},{"name":"given default","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-low-priority-not/default.html","searchKeys":["default"]},{"name":"trait Product extends Mirror","description":"scala.deriving","location":"-scala 3/-a-p-i/scala/deriving/-mirror$/-product.html","searchKeys":["Product"]},{"name":"def isLocalDummy: Boolean","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/is-local-dummy.html","searchKeys":["isLocalDummy"]},{"name":"class fromAbove extends Annotation","description":"scala.quoted.runtime","location":"-scala 3/-a-p-i/scala/quoted/runtime/-patterns/from-above.html","searchKeys":["fromAbove"]},{"name":"def selector: TypeTree","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-match-type-tree-methods/selector.html","searchKeys":["selector"]},{"name":"class Type[T <: AnyKind]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-type.html","searchKeys":["Type"]},{"name":"def body: Term","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-while-methods/body.html","searchKeys":["body"]},{"name":"def fromString(s: String): Float","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-command-line-parser/-from-string$/given_-from-string_-float/from-string.html","searchKeys":["fromString"]},{"name":"trait InlinedModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-inlined-module.html","searchKeys":["InlinedModule"]},{"name":"given Tuple6Unliftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-unliftable$/-tuple6-unliftable.html","searchKeys":["Tuple6Unliftable"]},{"name":"def hi: TypeTree","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-bounds-tree-methods/hi.html","searchKeys":["hi"]},{"name":"def isExpr: Boolean","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-tree-methods/is-expr.html","searchKeys":["isExpr"]},{"name":"given Tuple8Unliftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-unliftable$/-tuple8-unliftable.html","searchKeys":["Tuple8Unliftable"]},{"name":"trait SelectModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-select-module.html","searchKeys":["SelectModule"]},{"name":"Scala Syntax Summary","description":"","location":"docs/internals/syntax.html","searchKeys":["Scala Syntax Summary"]},{"name":"def copy(original: Tree)(ref: Term): Singleton","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-singleton-module/copy.html","searchKeys":["copy"]},{"name":"trait TypeDefModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-def-module.html","searchKeys":["TypeDefModule"]},{"name":"def forall[T](p: T => Boolean): Boolean","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/forall.html","searchKeys":["forall"]},{"name":"def unapply(x: RecursiveType): Option[TypeRepr]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-recursive-type-module/unapply.html","searchKeys":["unapply"]},{"name":"def fold[T, U >: T](z: U)(op: (U, U) => U)(evidence$17: ClassTag[U]): U","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/fold.html","searchKeys":["fold"]},{"name":"def copy(original: Tree)(call: Option[Tree], bindings: List[Definition], expansion: Term): Inlined","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-inlined-module/copy.html","searchKeys":["copy"]},{"name":"def unapply(x: SuperType): Option[(TypeRepr, TypeRepr)]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-super-type-module/unapply.html","searchKeys":["unapply"]},{"name":"def finalizer: Option[Term]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-try-methods/finalizer.html","searchKeys":["finalizer"]},{"name":"def transformTree(tree: Tree)(owner: Symbol): Tree","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-tree-map/transform-tree.html","searchKeys":["transformTree"]},{"name":"def primaryConstructor: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/primary-constructor.html","searchKeys":["primaryConstructor"]},{"name":"given ClassTagLiftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-class-tag-liftable.html","searchKeys":["ClassTagLiftable"]},{"name":"Programmatic Structural Types","description":"","location":"docs/reference/changed-features/structural-types.html","searchKeys":["Programmatic Structural Types"]},{"name":"def unliftOrError[T](x$1: Unliftable[T]): T","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/unlift-or-error.html","searchKeys":["unliftOrError"]},{"name":"def writeLongNat(x: Long): Unit","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-buffer/write-long-nat.html","searchKeys":["writeLongNat"]},{"name":"trait AnnotatedTypeMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-annotated-type-methods.html","searchKeys":["AnnotatedTypeMethods"]},{"name":"def patternHigherOrderHole[U](pat: Any, args: Any*): U","description":"scala.quoted.runtime","location":"-scala 3/-a-p-i/scala/quoted/runtime/-patterns/pattern-higher-order-hole.html","searchKeys":["patternHigherOrderHole"]},{"name":"def showAnsiColored: String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-methods/show-ansi-colored.html","searchKeys":["showAnsiColored"]},{"name":"trait InferredModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-inferred-module.html","searchKeys":["InferredModule"]},{"name":"Type System","description":"","location":"docs/internals/type-system.html","searchKeys":["Type System"]},{"name":"def symbol: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-tree-methods/symbol.html","searchKeys":["symbol"]},{"name":"def aliases: List[TypeDef]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-block-methods/aliases.html","searchKeys":["aliases"]},{"name":"def raw: String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-documentation-methods/raw.html","searchKeys":["raw"]},{"name":"def isSingleton: Boolean","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-repr-methods/is-singleton.html","searchKeys":["isSingleton"]},{"name":"def FloatClass: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/defn-module/-float-class.html","searchKeys":["FloatClass"]},{"name":"def body: Term","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-inlined-methods/body.html","searchKeys":["body"]},{"name":"trait ByNameModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-by-name-module.html","searchKeys":["ByNameModule"]},{"name":"def unapply(x: SummonFrom): Option[List[CaseDef]]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-summon-from-module/unapply.html","searchKeys":["unapply"]},{"name":"def quote[T](x: T): Quotes => Expr[T]","description":"scala.quoted.runtime","location":"-scala 3/-a-p-i/scala/quoted/runtime/-expr/quote.html","searchKeys":["quote"]},{"name":"trait ClassDefMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-class-def-methods.html","searchKeys":["ClassDefMethods"]},{"name":"def unapply(x: Closure): Option[(Term, Option[TypeRepr])]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-closure-module/unapply.html","searchKeys":["unapply"]},{"name":"class FromDigitsException(msg: String) extends NumberFormatException","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-from-digits$/-from-digits-exception.html","searchKeys":["FromDigitsException"]},{"name":"def unapply(x: Alternatives): Option[List[Tree]]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-alternatives-module/unapply.html","searchKeys":["unapply"]},{"name":"def emptyCharIArray: IArray[Char]","description":"scala","location":"-scala 3/-a-p-i/scala/-i-array/empty-char-i-array.html","searchKeys":["emptyCharIArray"]},{"name":"def Opaque: Flags","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-module/-opaque.html","searchKeys":["Opaque"]},{"name":"class ReturnThrowable[T] extends ControlThrowable","description":"scala.util.control","location":"-scala 3/-a-p-i/scala/util/control/-non-local-returns/-return-throwable.html","searchKeys":["ReturnThrowable"]},{"name":"trait TypeBlockModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-block-module.html","searchKeys":["TypeBlockModule"]},{"name":"def unapply(constant: Constant): Option[Double]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-module/-double-module/unapply.html","searchKeys":["unapply"]},{"name":"def Trait: Flags","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-module/-trait.html","searchKeys":["Trait"]},{"name":"given SomeUnliftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-unliftable$/-some-unliftable.html","searchKeys":["SomeUnliftable"]},{"name":"trait TypeBoundsTreeModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-bounds-tree-module.html","searchKeys":["TypeBoundsTreeModule"]},{"name":"def expr: Term","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-import-methods/expr.html","searchKeys":["expr"]},{"name":"def paramSigs: List[String | Int]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-signature-methods/param-sigs.html","searchKeys":["paramSigs"]},{"name":"def start: Int","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-position-methods/start.html","searchKeys":["start"]},{"name":"def paramTypes: List[TypeRepr]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-method-type-methods/param-types.html","searchKeys":["paramTypes"]},{"name":"trait TermMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-term-methods.html","searchKeys":["TermMethods"]},{"name":"def Local: Flags","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-module/-local.html","searchKeys":["Local"]},{"name":"def sorted[T](x$1: Ordering[T]): IArray[T]","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/sorted.html","searchKeys":["sorted"]},{"name":"def wait4Notification(t: Object, offset: Long, cur: Long, ord: Int): Unit","description":"dotty.runtime","location":"-scala 3/-a-p-i/dotty/runtime/-lazy-vals/wait4-notification.html","searchKeys":["wait4Notification"]},{"name":"trait ParamRefMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-param-ref-methods.html","searchKeys":["ParamRefMethods"]},{"name":"def unpickleExpr[T](pickled: String | List[String], typeHole: (Int, Seq[Any]) => Type[ <: AnyKind], termHole: (Int, Seq[Any], Quotes) => Expr[]): Expr[T]","description":"scala.quoted.runtime","location":"-scala 3/-a-p-i/scala/quoted/runtime/-quote-unpickler/unpickle-expr.html","searchKeys":["unpickleExpr"]},{"name":"trait MatchModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-match-module.html","searchKeys":["MatchModule"]},{"name":"trait Quotes","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes.html","searchKeys":["Quotes"]},{"name":"API Documentation","description":"","location":"docs/usage/scala3doc/docComments.html","searchKeys":["API Documentation"]},{"name":"def name: String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-select-outer-methods/name.html","searchKeys":["name"]},{"name":"def cases: List[CaseDef]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-try-methods/cases.html","searchKeys":["cases"]},{"name":"def apply(arg: TypeTree, annotation: Term): Annotated","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-annotated-module/apply.html","searchKeys":["apply"]},{"name":"def find[T](p: T => Boolean): Option[T]","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/find.html","searchKeys":["find"]},{"name":"Enums","description":"","location":"docs/Enums/index.html","searchKeys":["Enums"]},{"name":"trait BlockMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-block-methods.html","searchKeys":["BlockMethods"]},{"name":"def tpe: TypeRepr","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-wildcard-type-tree-methods/tpe.html","searchKeys":["tpe"]},{"name":"Dropped: Symbol Literals","description":"","location":"docs/reference/dropped-features/symlits.html","searchKeys":["Dropped: Symbol Literals"]},{"name":"def DoubleClass: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/defn-module/-double-class.html","searchKeys":["DoubleClass"]},{"name":"def splitAt(self: Tuple, n: Int): (Tuple, Tuple)","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-tuple/split-at.html","searchKeys":["splitAt"]},{"name":"def right: TypeRepr","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-or-type-methods/right.html","searchKeys":["right"]},{"name":"def unapply(x: Super): Option[(Term, Option[String])]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-super-module/unapply.html","searchKeys":["unapply"]},{"name":"Scaling DOT to Scala - Soundness","description":"","location":"blog/2016/02/17/scaling-dot-soundness.html","searchKeys":["Scaling DOT to Scala - Soundness"]},{"name":"Inferable Params","description":"","location":"docs/reference/contextual/inferable-params.html","searchKeys":["Inferable Params"]},{"name":"def indices[T]: Range","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/indices.html","searchKeys":["indices"]},{"name":"trait ClosureModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-closure-module.html","searchKeys":["ClosureModule"]},{"name":"given ArrayLiftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-array-liftable.html","searchKeys":["ArrayLiftable"]},{"name":"def writeBytes(data: Array[Byte], n: Int): Unit","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-buffer/write-bytes.html","searchKeys":["writeBytes"]},{"name":"def unapply(x: Inlined): Option[(Option[Tree], List[Definition], Term)]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-inlined-module/unapply.html","searchKeys":["unapply"]},{"name":"def apply(underlying: TypeRepr, annot: Term): AnnotatedType","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-annotated-type-module/apply.html","searchKeys":["apply"]},{"name":"def copy(original: Tree)(elems: List[Term], tpt: TypeTree): Repeated","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-repeated-module/copy.html","searchKeys":["copy"]},{"name":"def unapply(cdef: ClassDef): Option[(String, DefDef, List[Tree], List[TypeTree], Option[ValDef], List[Statement])]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-class-def-module/unapply.html","searchKeys":["unapply"]},{"name":"def ref: Term","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-singleton-methods/ref.html","searchKeys":["ref"]},{"name":"def lastIndexWhere[T](p: T => Boolean, end: Int): Int","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/last-index-where.html","searchKeys":["lastIndexWhere"]},{"name":"Type Lambdas","description":"","location":"docs/reference/new-types/type-lambdas.html","searchKeys":["Type Lambdas"]},{"name":"def left: TypeRepr","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-and-type-methods/left.html","searchKeys":["left"]},{"name":"trait IdentModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-ident-module.html","searchKeys":["IdentModule"]},{"name":"def readInt(): Int","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-reader/read-int.html","searchKeys":["readInt"]},{"name":"trait LambdaModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-lambda-module.html","searchKeys":["LambdaModule"]},{"name":"def STATE(cur: Long, ord: Int): Long","description":"dotty.runtime","location":"-scala 3/-a-p-i/dotty/runtime/-lazy-vals/-s-t-a-t-e.html","searchKeys":["STATE"]},{"name":"Divergences between Scala 2 and Dotty","description":"","location":"docs/contributing/scala2-vs-scala3.html","searchKeys":["Divergences between Scala 2 and Dotty"]},{"name":"Enumerations","description":"","location":"docs/reference/enums/enums.html","searchKeys":["Enumerations"]},{"name":"Resources","description":"","location":"docs/Resources/index.html","searchKeys":["Resources"]},{"name":"def writeAddr(addr: Addr): Unit","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-buffer/write-addr.html","searchKeys":["writeAddr"]},{"name":"def getLongNat(at: Addr): Long","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-buffer/get-long-nat.html","searchKeys":["getLongNat"]},{"name":"Union Types","description":"","location":"docs/reference/new-types/union-types.html","searchKeys":["Union Types"]},{"name":"Announcing Dotty 0.6.0 and 0.7.0-RC1","description":"","location":"blog/2018/03/05/seventh-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.6.0 and 0.7.0-RC1"]},{"name":"def cases: List[CaseDef]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-summon-from-methods/cases.html","searchKeys":["cases"]},{"name":"trait Sum extends Mirror","description":"scala.deriving","location":"-scala 3/-a-p-i/scala/deriving/-mirror$/-sum.html","searchKeys":["Sum"]},{"name":"def higherOrderHole[U](args: Any*): U","description":"scala.quoted.runtime","location":"-scala 3/-a-p-i/scala/quoted/runtime/-patterns/higher-order-hole.html","searchKeys":["higherOrderHole"]},{"name":"def byName[T](x: => T): T","description":"scala.compiletime","location":"-scala 3/-a-p-i/scala/compiletime/by-name.html","searchKeys":["byName"]},{"name":"trait SingletonMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-singleton-methods.html","searchKeys":["SingletonMethods"]},{"name":"def unapply(x: ByName): Option[TypeTree]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-by-name-module/unapply.html","searchKeys":["unapply"]},{"name":"object Tuple","description":"scala","location":"-scala 3/-a-p-i/scala/-tuple$.html","searchKeys":["Tuple"]},{"name":"Erased Terms","description":"","location":"docs/reference/metaprogramming/erased-terms.html","searchKeys":["Erased Terms"]},{"name":"def astTagToString(tag: Int): String","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-format/ast-tag-to-string.html","searchKeys":["astTagToString"]},{"name":"def widenTermRefExpr: TypeRepr","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-repr-methods/widen-term-ref-expr.html","searchKeys":["widenTermRefExpr"]},{"name":"def of[T <: AnyKind](x$1: Type[T]): TypeRepr","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-repr-module/of.html","searchKeys":["of"]},{"name":"given EitherUnliftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-unliftable$/-either-unliftable.html","searchKeys":["EitherUnliftable"]},{"name":"def readAddr(): Addr","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-reader/read-addr.html","searchKeys":["readAddr"]},{"name":"def pid: Ref","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-package-clause-methods/pid.html","searchKeys":["pid"]},{"name":"def binder: LambdaType","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-param-ref-methods/binder.html","searchKeys":["binder"]},{"name":"trait SymbolModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-module.html","searchKeys":["SymbolModule"]},{"name":"trait DefinitionModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-definition-module.html","searchKeys":["DefinitionModule"]},{"name":"def explanation: String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-implicit-search-failure-methods/explanation.html","searchKeys":["explanation"]},{"name":"Announcing Dotty 0.9.0-RC1","description":"","location":"blog/2018/07/06/ninth-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.9.0-RC1"]},{"name":"object FromString","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-command-line-parser/-from-string$.html","searchKeys":["FromString"]},{"name":"def apply(qual: TypeRepr, name: String): TermRef","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-term-ref-module/apply.html","searchKeys":["apply"]},{"name":"def term(tp: TermRef): Ref","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-ref-module/term.html","searchKeys":["term"]},{"name":"def writeNat(x: Int): Unit","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-buffer/write-nat.html","searchKeys":["writeNat"]},{"name":"def canEqual(that: Any): Boolean","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-tuple-x-x-l/can-equal.html","searchKeys":["canEqual"]},{"name":"def name: String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-ref-methods/name.html","searchKeys":["name"]},{"name":"def map[F <: ([_$2] =>> Any)](self: Tuple, f: [t] => (x$1: t) => F[t]): Tuple","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-tuple/map.html","searchKeys":["map"]},{"name":"given Tuple2Liftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-tuple2-liftable.html","searchKeys":["Tuple2Liftable"]},{"name":"trait ImplicitsModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-implicits-module.html","searchKeys":["ImplicitsModule"]},{"name":"def members: List[Symbol]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/members.html","searchKeys":["members"]},{"name":"trait FlagsMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-methods.html","searchKeys":["FlagsMethods"]},{"name":"def exists[T](p: T => Boolean): Boolean","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/exists.html","searchKeys":["exists"]},{"name":"def apply(qualifier: Term, name: String, levels: Int): SelectOuter","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-select-outer-module/apply.html","searchKeys":["apply"]},{"name":"def typeParams: List[TypeDef]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-def-def-methods/type-params.html","searchKeys":["typeParams"]},{"name":"trait RenameSelectorMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-rename-selector-methods.html","searchKeys":["RenameSelectorMethods"]},{"name":"def unapply(x: TermRef): Option[(TypeRepr, String)]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-term-ref-module/unapply.html","searchKeys":["unapply"]},{"name":"Inferable-By-Name Parameters","description":"","location":"docs/reference/contextual/inferable-by-name-parameters.html","searchKeys":["Inferable-By-Name Parameters"]},{"name":"class NumberTooLarge(msg: String) extends FromDigitsException","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-from-digits$/-number-too-large.html","searchKeys":["NumberTooLarge"]},{"name":"def transformTypeTree(tree: TypeTree)(owner: Symbol): TypeTree","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-tree-map/transform-type-tree.html","searchKeys":["transformTypeTree"]},{"name":"def apply(tpt: TypeTree, args: List[Tree]): Applied","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-applied-module/apply.html","searchKeys":["apply"]},{"name":"def splitAt[This >: Tuple <: Tuple](n: Int): (This, n.type)","description":"scala","location":"-scala 3/-a-p-i/scala/-tuple/split-at.html","searchKeys":["splitAt"]},{"name":"def show[T](x$1: Type[T])(x$2: Quotes): String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-type$/show.html","searchKeys":["show"]},{"name":"def parseString[T](str: String, n: Int)(fs: FromString[T]): T","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-command-line-parser/parse-string.html","searchKeys":["parseString"]},{"name":"Parameter Untupling","description":"","location":"docs/reference/other-new-features/parameter-untupling.html","searchKeys":["Parameter Untupling"]},{"name":"def apply(sym: Symbol): Ref","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-ref-module/apply.html","searchKeys":["apply"]},{"name":"def unapply(x: TypeBlock): Option[(List[TypeDef], TypeTree)]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-block-module/unapply.html","searchKeys":["unapply"]},{"name":"Announcing Dotty 0.25.0-RC2 - speed-up of givens and change in the tuple API","description":"","location":"blog/2020/06/22/25th-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.25.0-RC2 - speed-up of givens and change in the tuple API"]},{"name":"def isValDef: Boolean","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/is-val-def.html","searchKeys":["isValDef"]},{"name":"def Given: Flags","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-module/-given.html","searchKeys":["Given"]},{"name":"given Tuple5Unliftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-unliftable$/-tuple5-unliftable.html","searchKeys":["Tuple5Unliftable"]},{"name":"given OptionUnliftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-unliftable$/-option-unliftable.html","searchKeys":["OptionUnliftable"]},{"name":"def readNat(): Int","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-reader/read-nat.html","searchKeys":["readNat"]},{"name":"trait SummonFromModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-summon-from-module.html","searchKeys":["SummonFromModule"]},{"name":"def Predef_classOf: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/defn-module/-predef_class-of.html","searchKeys":["Predef_classOf"]},{"name":"def paramNames: List[String]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-poly-type-methods/param-names.html","searchKeys":["paramNames"]},{"name":"trait LiteralModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-literal-module.html","searchKeys":["LiteralModule"]},{"name":"Transparent Traits","description":"","location":"docs/reference/other-new-features/transparent-traits.html","searchKeys":["Transparent Traits"]},{"name":"def cond: Term","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-while-methods/cond.html","searchKeys":["cond"]},{"name":"def unapply(x: Match): Option[(Term, List[CaseDef])]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-match-module/unapply.html","searchKeys":["unapply"]},{"name":"def toExpr(x: T): Quotes => Expr[T]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-byte-liftable/to-expr.html","searchKeys":["toExpr"]},{"name":"def AnyValClass: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/defn-module/-any-val-class.html","searchKeys":["AnyValClass"]},{"name":"trait WildcardTypeTreeMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-wildcard-type-tree-methods.html","searchKeys":["WildcardTypeTreeMethods"]},{"name":"def toExpr(x: T): Quotes => Expr[T]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-long-liftable/to-expr.html","searchKeys":["toExpr"]},{"name":"def apply[T](xs: Seq[Expr[T]])(x$2: Type[T])(x$3: Quotes): Expr[Seq[T]]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-varargs/apply.html","searchKeys":["apply"]},{"name":"trait SingletonModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-singleton-module.html","searchKeys":["SingletonModule"]},{"name":"Announcing Dotty 0.5.0-RC1","description":"","location":"blog/2017/12/01/fifth-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.5.0-RC1"]},{"name":"def tpeOpt: Option[TypeRepr]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-closure-methods/tpe-opt.html","searchKeys":["tpeOpt"]},{"name":"def readLongNat(): Long","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-reader/read-long-nat.html","searchKeys":["readLongNat"]},{"name":"def unapply(x: TypeBoundsTree): Option[(TypeTree, TypeTree)]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-bounds-tree-module/unapply.html","searchKeys":["unapply"]},{"name":"Inline","description":"","location":"docs/reference/metaprogramming/inline.html","searchKeys":["Inline"]},{"name":"trait RenameSelectorModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-rename-selector-module.html","searchKeys":["RenameSelectorModule"]},{"name":"def unapply[T](exprs: Seq[Expr[T]])(x$2: Quotes): Option[Seq[T]]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-consts/unapply.html","searchKeys":["unapply"]},{"name":"Dropped: private[this] and protected[this]","description":"","location":"docs/reference/dropped-features/this-qualifier.html","searchKeys":["Dropped: private[this] and protected[this]"]},{"name":"Debugging Techniques","description":"","location":"docs/contributing/debugging.html","searchKeys":["Debugging Techniques"]},{"name":"Context Functions - More Details","description":"","location":"docs/reference/contextual/context-functions-spec.html","searchKeys":["Context Functions - More Details"]},{"name":"def showAnsiColored[T]: String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/show-ansi-colored.html","searchKeys":["showAnsiColored"]},{"name":"given ListLiftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-list-liftable.html","searchKeys":["ListLiftable"]},{"name":"trait RefinementMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-refinement-methods.html","searchKeys":["RefinementMethods"]},{"name":"given ShortLiftable[T <: Short] as Liftable[T]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-short-liftable.html","searchKeys":["ShortLiftable"]},{"name":"def unapply(x: Select): Option[(Term, String)]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-select-module/unapply.html","searchKeys":["unapply"]},{"name":"def Static: Flags","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-module/-static.html","searchKeys":["Static"]},{"name":"def arg: TypeTree","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-annotated-methods/arg.html","searchKeys":["arg"]},{"name":"def isAnonymousClass: Boolean","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/is-anonymous-class.html","searchKeys":["isAnonymousClass"]},{"name":"threadUnsafe annotation","description":"","location":"docs/reference/other-new-features/threadUnsafe-annotation.html","searchKeys":["threadUnsafe annotation"]},{"name":"def Abstract: Flags","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-module/-abstract.html","searchKeys":["Abstract"]},{"name":"def fun: Term","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-unapply-methods/fun.html","searchKeys":["fun"]},{"name":"trait SuperMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-super-methods.html","searchKeys":["SuperMethods"]},{"name":"Dropped: General Type Projection","description":"","location":"docs/reference/dropped-features/type-projection.html","searchKeys":["Dropped: General Type Projection"]},{"name":"trait PolyTypeMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-poly-type-methods.html","searchKeys":["PolyTypeMethods"]},{"name":"trait TypeBindModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-bind-module.html","searchKeys":["TypeBindModule"]},{"name":"trait OrTypeMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-or-type-methods.html","searchKeys":["OrTypeMethods"]},{"name":"class AnnotationDefault extends Annotation","description":"scala.annotation.internal","location":"-scala 3/-a-p-i/scala/annotation/internal/-annotation-default.html","searchKeys":["AnnotationDefault"]},{"name":"def emptyLongIArray: IArray[Long]","description":"scala","location":"-scala 3/-a-p-i/scala/-i-array/empty-long-i-array.html","searchKeys":["emptyLongIArray"]},{"name":"trait SuperTypeModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-super-type-module.html","searchKeys":["SuperTypeModule"]},{"name":"def typeMember(name: String): Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/type-member.html","searchKeys":["typeMember"]},{"name":"def etaExpand(owner: Symbol): Term","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-term-methods/eta-expand.html","searchKeys":["etaExpand"]},{"name":"def head[T]: T","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/head.html","searchKeys":["head"]},{"name":"def sourceFile: SourceFile","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-position-methods/source-file.html","searchKeys":["sourceFile"]},{"name":"Soft Modifiers","description":"","location":"docs/reference/soft-modifier.html","searchKeys":["Soft Modifiers"]},{"name":"trait ThisModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-this-module.html","searchKeys":["ThisModule"]},{"name":"def copy(original: Tree)(tpt: TypeTree, refinements: List[Definition]): Refined","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-refined-module/copy.html","searchKeys":["copy"]},{"name":"def JavaDefined: Flags","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-module/-java-defined.html","searchKeys":["JavaDefined"]},{"name":"def apply(underlying: TypeRepr): TypeRepr","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-by-name-type-module/apply.html","searchKeys":["apply"]},{"name":"def unapply[T](expr: Expr[Seq[T]])(x$2: Quotes): Option[Seq[Expr[T]]]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-varargs/unapply.html","searchKeys":["unapply"]},{"name":"Kind Polymorphism","description":"","location":"docs/reference/other-new-features/kind-polymorphism.html","searchKeys":["Kind Polymorphism"]},{"name":"def Array_clone: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/defn-module/-array_clone.html","searchKeys":["Array_clone"]},{"name":"trait ConstantTypeMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-type-methods.html","searchKeys":["ConstantTypeMethods"]},{"name":"def RootClass: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/defn-module/-root-class.html","searchKeys":["RootClass"]},{"name":"trait MatchTypeMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-match-type-methods.html","searchKeys":["MatchTypeMethods"]},{"name":"def toArray(self: Tuple): Array[Object]","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-tuple/to-array.html","searchKeys":["toArray"]},{"name":"def appliedToTypes(targs: List[TypeRepr]): Term","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-term-methods/applied-to-types.html","searchKeys":["appliedToTypes"]},{"name":"def showExtractors: String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-tree-methods/show-extractors.html","searchKeys":["showExtractors"]},{"name":"trait TypeProjectionMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-projection-methods.html","searchKeys":["TypeProjectionMethods"]},{"name":"Multiversal Equality","description":"","location":"docs/reference/contextual/multiversal-equality.html","searchKeys":["Multiversal Equality"]},{"name":"def underlyingArgument: Term","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-term-methods/underlying-argument.html","searchKeys":["underlyingArgument"]},{"name":"trait Selectable","description":"scala","location":"-scala 3/-a-p-i/scala/-selectable.html","searchKeys":["Selectable"]},{"name":"def currentAddr: Addr","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-buffer/current-addr.html","searchKeys":["currentAddr"]},{"name":"def init[T]: IArray[T]","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/init.html","searchKeys":["init"]},{"name":"def unapply(x: WildcardTypeTree): Boolean","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-wildcard-type-tree-module/unapply.html","searchKeys":["unapply"]},{"name":"Dotc's concept of time","description":"","location":"docs/internals/periods.html","searchKeys":["Dotc's concept of time"]},{"name":"def field(name: String): Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/field.html","searchKeys":["field"]},{"name":"trait SignatureModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-signature-module.html","searchKeys":["SignatureModule"]},{"name":"def toIArray: IArray[Object]","description":"scala","location":"-scala 3/-a-p-i/scala/-tuple/to-i-array.html","searchKeys":["toIArray"]},{"name":"object Scala3RunTime","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-scala3-run-time.html","searchKeys":["Scala3RunTime"]},{"name":"def annotation: Term","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-annotated-methods/annotation.html","searchKeys":["annotation"]},{"name":"def Covariant: Flags","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-module/-covariant.html","searchKeys":["Covariant"]},{"name":"def copy(original: Tree)(pattern: TypeTree, rhs: TypeTree): TypeCaseDef","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-case-def-module/copy.html","searchKeys":["copy"]},{"name":"def copy(original: Tree)(name: String, typeParams: List[TypeDef], paramss: List[List[ValDef]], tpt: TypeTree, rhs: Option[Term]): DefDef","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-def-def-module/copy.html","searchKeys":["copy"]},{"name":"trait ExprMap","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-expr-map.html","searchKeys":["ExprMap"]},{"name":"def throwReturn[T](result: T)(returner: ReturnThrowable[T]): Nothing","description":"scala.util.control","location":"-scala 3/-a-p-i/scala/util/control/-non-local-returns/throw-return.html","searchKeys":["throwReturn"]},{"name":"def namePos: Position","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-omit-selector-methods/name-pos.html","searchKeys":["namePos"]},{"name":"def unapply(constant: Constant): Option[Short]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-module/-short-module/unapply.html","searchKeys":["unapply"]},{"name":"def unlift[T](x$1: Unliftable[T]): Option[T]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/unlift.html","searchKeys":["unlift"]},{"name":"Implicit Function Types - More Details","description":"","location":"docs/reference/new-types/implicit-function-types-spec.html","searchKeys":["Implicit Function Types - More Details"]},{"name":"def apply(x: Byte): Constant","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-module/-byte-module/apply.html","searchKeys":["apply"]},{"name":"Dependent Function Types - More Details","description":"","location":"docs/reference/new-types/dependent-function-types-spec.html","searchKeys":["Dependent Function Types - More Details"]},{"name":"def copy(original: Tree)(fun: Term, args: List[Term]): Apply","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-apply-module/copy.html","searchKeys":["copy"]},{"name":"def value: Not[Nothing]","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-not$/value.html","searchKeys":["value"]},{"name":"def apply(x: T): U","description":"scala","location":"-scala 3/-a-p-i/scala/-conversion/apply.html","searchKeys":["apply"]},{"name":"given Tuple12Unliftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-unliftable$/-tuple12-unliftable.html","searchKeys":["Tuple12Unliftable"]},{"name":"Scala3doc","description":"","location":"docs/usage/scala3doc/index.html","searchKeys":["Scala3doc"]},{"name":"trait AndTypeModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-and-type-module.html","searchKeys":["AndTypeModule"]},{"name":"Match Types","description":"","location":"docs/reference/new-types/match-types.html","searchKeys":["Match Types"]},{"name":"given Tuple3Liftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-tuple3-liftable.html","searchKeys":["Tuple3Liftable"]},{"name":"Explicit Nulls","description":"","location":"docs/reference/other-new-features/explicit-nulls.html","searchKeys":["Explicit Nulls"]},{"name":"def Final: Flags","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-module/-final.html","searchKeys":["Final"]},{"name":"def cases: List[CaseDef]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-match-methods/cases.html","searchKeys":["cases"]},{"name":"def thistpe: TypeRepr","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-super-type-methods/thistpe.html","searchKeys":["thistpe"]},{"name":"def pattern: TypeTree","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-case-def-methods/pattern.html","searchKeys":["pattern"]},{"name":"def tpe: TypeRepr","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-tree-methods/tpe.html","searchKeys":["tpe"]},{"name":"trait Mirror","description":"scala.deriving","location":"-scala 3/-a-p-i/scala/deriving/-mirror.html","searchKeys":["Mirror"]},{"name":"def showExtractors: String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-methods/show-extractors.html","searchKeys":["showExtractors"]},{"name":"def supertpe: TypeRepr","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-super-type-methods/supertpe.html","searchKeys":["supertpe"]},{"name":"def toExpr(x: T): Quotes => Expr[T]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-int-liftable/to-expr.html","searchKeys":["toExpr"]},{"name":"def unapply(x: Inferred): Boolean","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-inferred-module/unapply.html","searchKeys":["unapply"]},{"name":"def constant: Constant","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-literal-methods/constant.html","searchKeys":["constant"]},{"name":"def termSymbol: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-repr-methods/term-symbol.html","searchKeys":["termSymbol"]},{"name":"def scrutinee: TypeRepr","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-match-type-methods/scrutinee.html","searchKeys":["scrutinee"]},{"name":"def hashCode: Int","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-tuple-x-x-l/hash-code.html","searchKeys":["hashCode"]},{"name":"def tpt: TypeTree","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-new-methods/tpt.html","searchKeys":["tpt"]},{"name":"def lower(lo: TypeRepr): TypeBounds","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-bounds-module/lower.html","searchKeys":["lower"]},{"name":"given Tuple20Unliftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-unliftable$/-tuple20-unliftable.html","searchKeys":["Tuple20Unliftable"]},{"name":"def transformTypeTrees(trees: List[TypeTree])(owner: Symbol): List[TypeTree]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-tree-map/transform-type-trees.html","searchKeys":["transformTypeTrees"]},{"name":"def newVal(parent: Symbol, name: String, tpe: TypeRepr, flags: Flags, privateWithin: Symbol): Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-module/new-val.html","searchKeys":["newVal"]},{"name":"def paramBounds: List[TypeBounds]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-poly-type-methods/param-bounds.html","searchKeys":["paramBounds"]},{"name":"trait PackageClauseModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-package-clause-module.html","searchKeys":["PackageClauseModule"]},{"name":"def parent: TypeRepr","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-refinement-methods/parent.html","searchKeys":["parent"]},{"name":"def apply(paramNames: List[String], boundsFn: TypeLambda => List[TypeBounds], bodyFn: TypeLambda => TypeRepr): TypeLambda","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-lambda-module/apply.html","searchKeys":["apply"]},{"name":"trait AlternativesModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-alternatives-module.html","searchKeys":["AlternativesModule"]},{"name":"def name: String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-bind-methods/name.html","searchKeys":["name"]},{"name":"def caseFields: List[Symbol]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/case-fields.html","searchKeys":["caseFields"]},{"name":"def applyDynamic(name: String, paramTypes: Class[]*)(args: Any*): Any","description":"scala.reflect","location":"-scala 3/-a-p-i/scala/reflect/-selectable/apply-dynamic.html","searchKeys":["applyDynamic"]},{"name":"def unapply(tree: PackageClause): Some[(Ref, List[Tree])]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-package-clause-module/unapply.html","searchKeys":["unapply"]},{"name":"def copy(original: Tree)(qualifier: Term, name: String, levels: Int): SelectOuter","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-select-outer-module/copy.html","searchKeys":["copy"]},{"name":"def summon[T](x$1: Type[T])(x$2: Quotes): Option[Expr[T]]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-expr$/summon.html","searchKeys":["summon"]},{"name":"def apply[T](x: T)(lift: Liftable[T])(x$3: Quotes): Expr[T]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-expr$/apply.html","searchKeys":["apply"]},{"name":"def fromProduct(p: Product): MirroredMonoType","description":"scala.deriving","location":"-scala 3/-a-p-i/scala/deriving/-mirror$/-product/from-product.html","searchKeys":["fromProduct"]},{"name":"def unapply(x: TypeRef): Option[(TypeRepr, String)]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-ref-module/unapply.html","searchKeys":["unapply"]},{"name":"trait TypeBoundsTreeMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-bounds-tree-methods.html","searchKeys":["TypeBoundsTreeMethods"]},{"name":"trait RepeatedModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-repeated-module.html","searchKeys":["RepeatedModule"]},{"name":"class TypeBox[-L <: U, +U]","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-type-box.html","searchKeys":["TypeBox"]},{"name":"def isTypeDef: Boolean","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/is-type-def.html","searchKeys":["isTypeDef"]},{"name":"def apply[This >: NonEmptyTuple <: NonEmptyTuple](n: Int): Elem[This, n.type]","description":"scala","location":"-scala 3/-a-p-i/scala/-non-empty-tuple/apply.html","searchKeys":["apply"]},{"name":"Multi-Stage Programming","description":"","location":"docs/reference/metaprogramming/staging.html","searchKeys":["Multi-Stage Programming"]},{"name":"def parseArgument[T](args: Array[String], n: Int)(fs: FromString[T]): T","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-command-line-parser/parse-argument.html","searchKeys":["parseArgument"]},{"name":"def natSize(nat: Int): Int","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-buffer$/nat-size.html","searchKeys":["natSize"]},{"name":"object any","description":"scala.compiletime.ops","location":"-scala 3/-a-p-i/scala/compiletime/ops/any.html","searchKeys":["any"]},{"name":"Open Classes","description":"","location":"docs/reference/other-new-features/open-classes.html","searchKeys":["Open Classes"]},{"name":"def apply(tpe: TypeRepr): Inferred","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-inferred-module/apply.html","searchKeys":["apply"]},{"name":"Announcing Dotty 0.20.0-RC1 – `with` starting indentation blocks, inline given specializations and more","description":"","location":"blog/2019/11/04/20th-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.20.0-RC1 – `with` starting indentation blocks, inline given specializations and more"]},{"name":"def endColumn: Int","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-position-methods/end-column.html","searchKeys":["endColumn"]},{"name":"given LeftUnliftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-unliftable$/-left-unliftable.html","searchKeys":["LeftUnliftable"]},{"name":"def isPackageDef: Boolean","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/is-package-def.html","searchKeys":["isPackageDef"]},{"name":"object NameTags extends NameTags","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-format/-name-tags$.html","searchKeys":["NameTags"]},{"name":"def copy(original: Tree)(name: String, arg: Term): NamedArg","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-named-arg-module/copy.html","searchKeys":["copy"]},{"name":"def fromProduct(xs: Product): Tuple","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-tuple/from-product.html","searchKeys":["fromProduct"]},{"name":"given Tuple19Liftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-tuple19-liftable.html","searchKeys":["Tuple19Liftable"]},{"name":"trait ByNameTypeMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-by-name-type-methods.html","searchKeys":["ByNameTypeMethods"]},{"name":"def Array_apply: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/defn-module/-array_apply.html","searchKeys":["Array_apply"]},{"name":"def fromStringOption(s: String): Option[T]","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-command-line-parser/-from-string/from-string-option.html","searchKeys":["fromStringOption"]},{"name":"def unapply(x: MethodType): Option[(List[String], List[TypeRepr], TypeRepr)]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-method-type-module/unapply.html","searchKeys":["unapply"]},{"name":"trait ClosureMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-closure-methods.html","searchKeys":["ClosureMethods"]},{"name":"def apply(fun: Term, args: List[TypeTree]): TypeApply","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-apply-module/apply.html","searchKeys":["apply"]},{"name":"def isContextFunctionType: Boolean","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-repr-methods/is-context-function-type.html","searchKeys":["isContextFunctionType"]},{"name":"given Tuple2Unliftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-unliftable$/-tuple2-unliftable.html","searchKeys":["Tuple2Unliftable"]},{"name":"def nn[T]: x.type & T","description":"scala","location":"-scala 3/-a-p-i/scala/runtime/stdLibPatches/-predef/nn.html","searchKeys":["nn"]},{"name":"given given_FromString_Double as FromString[Double]","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-command-line-parser/-from-string$/given_-from-string_-double.html","searchKeys":["given_FromString_Double"]},{"name":"def elsep: Term","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-if-methods/elsep.html","searchKeys":["elsep"]},{"name":"New Year Resolutions","description":"","location":"blog/2016/01/02/new-year-resolutions.html","searchKeys":["New Year Resolutions"]},{"name":"object DottyPredef","description":"dotty","location":"-scala 3/-a-p-i/dotty/-dotty-predef.html","searchKeys":["DottyPredef"]},{"name":"given given_FromString_Long as FromString[Long]","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-command-line-parser/-from-string$/given_-from-string_-long.html","searchKeys":["given_FromString_Long"]},{"name":"Announcing Dotty 0.10.0-RC1","description":"","location":"blog/2018/10/10/10th-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.10.0-RC1"]},{"name":"Announcing Dotty 0.11.0-RC1","description":"","location":"blog/2018/11/30/11th-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.11.0-RC1"]},{"name":"def Erased: Flags","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-module/-erased.html","searchKeys":["Erased"]},{"name":"Core Data Structures","description":"","location":"docs/internals/core-data-structures.html","searchKeys":["Core Data Structures"]},{"name":"def productElement(n: Int): Any","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-enum-value/product-element.html","searchKeys":["productElement"]},{"name":"Implicit By-Name Parameters","description":"","location":"docs/reference/other-new-features/implicit-by-name-parameters.html","searchKeys":["Implicit By-Name Parameters"]},{"name":"def apply(lhs: Term, rhs: Term): Assign","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-assign-module/apply.html","searchKeys":["apply"]},{"name":"def unapply[H, T <: Tuple](x: H *: T): (H, T)","description":"scala","location":"-scala 3/-a-p-i/scala/[42][58]$/unapply.html","searchKeys":["unapply"]},{"name":"trait MatchTypeTreeModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-match-type-tree-module.html","searchKeys":["MatchTypeTreeModule"]},{"name":"trait SelectMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-select-methods.html","searchKeys":["SelectMethods"]},{"name":"def tail[This >: NonEmptyTuple <: NonEmptyTuple]: Tail[This]","description":"scala","location":"-scala 3/-a-p-i/scala/-non-empty-tuple/tail.html","searchKeys":["tail"]},{"name":"class TastyBuffer(initialSize: Int)","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-buffer.html","searchKeys":["TastyBuffer"]},{"name":"def consIterator(head: Any, tail: Tuple): Iterator[Any]","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-tuple/cons-iterator.html","searchKeys":["consIterator"]},{"name":"def apply(x: Float): Constant","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-module/-float-module/apply.html","searchKeys":["apply"]},{"name":"def canEqual(that: Any): Boolean","description":"scala","location":"-scala 3/-a-p-i/scala/-empty-tuple/can-equal.html","searchKeys":["canEqual"]},{"name":"def right: TypeRepr","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-and-type-methods/right.html","searchKeys":["right"]},{"name":"trait Unliftable[T]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-unliftable.html","searchKeys":["Unliftable"]},{"name":"def size[This >: Tuple <: Tuple]: Size[This]","description":"scala","location":"-scala 3/-a-p-i/scala/-tuple/size.html","searchKeys":["size"]},{"name":"trait FlagsModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-module.html","searchKeys":["FlagsModule"]},{"name":"def apply(constant: Constant): Literal","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-literal-module/apply.html","searchKeys":["apply"]},{"name":"Dropped: Class Shadowing","description":"","location":"docs/reference/dropped-features/class-shadowing.html","searchKeys":["Dropped: Class Shadowing"]},{"name":"def of(expr: Expr[Any]): Tree","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-tree-module/of.html","searchKeys":["of"]},{"name":"Announcing Dotty 0.1.2-RC1, a major step towards Scala 3","description":"","location":"blog/2017/05/31/first-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.1.2-RC1, a major step towards Scala 3"]},{"name":"def PredefModule: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/defn-module/-predef-module.html","searchKeys":["PredefModule"]},{"name":"Erased Terms Spec","description":"","location":"docs/reference/metaprogramming/erased-terms-spec.html","searchKeys":["Erased Terms Spec"]},{"name":"Deprecated: Nonlocal Returns","description":"","location":"docs/reference/dropped-features/nonlocal-returns.html","searchKeys":["Deprecated: Nonlocal Returns"]},{"name":"Announcing Dotty 0.23.0-RC1 - safe initialization checks, type-level bitwise operations and more","description":"","location":"blog/2020/03/18/23rd-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.23.0-RC1 - safe initialization checks, type-level bitwise operations and more"]},{"name":"def apply(cls: Symbol): This","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-this-module/apply.html","searchKeys":["apply"]},{"name":"def emptyShortIArray: IArray[Short]","description":"scala","location":"-scala 3/-a-p-i/scala/-i-array/empty-short-i-array.html","searchKeys":["emptyShortIArray"]},{"name":"We got liftoff!","description":"","location":"blog/2015/10/23/dotty-compiler-bootstraps.html","searchKeys":["We got liftoff!"]},{"name":"class static extends StaticAnnotation","description":"scala.annotation","location":"-scala 3/-a-p-i/scala/annotation/static.html","searchKeys":["static"]},{"name":"Macros","description":"","location":"docs/reference/metaprogramming/macros.html","searchKeys":["Macros"]},{"name":"class MalformedNumber(msg: String) extends FromDigitsException","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-from-digits$/-malformed-number.html","searchKeys":["MalformedNumber"]},{"name":"given Tuple17Unliftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-unliftable$/-tuple17-unliftable.html","searchKeys":["Tuple17Unliftable"]},{"name":"def skipZeroes(at: Addr): Addr","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-buffer/skip-zeroes.html","searchKeys":["skipZeroes"]},{"name":"def ScalaPackageClass: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/defn-module/-scala-package-class.html","searchKeys":["ScalaPackageClass"]},{"name":"def annots: List[Term]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/annots.html","searchKeys":["annots"]},{"name":"def unapply(x: Apply): Option[(Term, List[Term])]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-apply-module/unapply.html","searchKeys":["unapply"]},{"name":"given Tuple4Liftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-tuple4-liftable.html","searchKeys":["Tuple4Liftable"]},{"name":"Context Functions","description":"","location":"docs/reference/contextual/context-functions.html","searchKeys":["Context Functions"]},{"name":"def fromPos: Position","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-rename-selector-methods/from-pos.html","searchKeys":["fromPos"]},{"name":"def span[T](p: T => Boolean): (IArray[T], IArray[T])","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/span.html","searchKeys":["span"]},{"name":"Changes in Type Checking","description":"","location":"docs/reference/changed-features/type-checking.html","searchKeys":["Changes in Type Checking"]},{"name":"def startsWith[T, U >: T](that: IArray[U], offset: Int)(evidence$25: ClassTag[U]): Boolean","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/starts-with.html","searchKeys":["startsWith"]},{"name":"trait SummonFromMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-summon-from-methods.html","searchKeys":["SummonFromMethods"]},{"name":"given Tuple14Liftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-tuple14-liftable.html","searchKeys":["Tuple14Liftable"]},{"name":"def apply(elems: Any*): TupleXXL","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-tuple-x-x-l$/apply.html","searchKeys":["apply"]},{"name":"Dropped: Package Objects","description":"","location":"docs/reference/dropped-features/package-objects.html","searchKeys":["Dropped: Package Objects"]},{"name":"def fromString(s: String): Byte","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-command-line-parser/-from-string$/given_-from-string_-byte/from-string.html","searchKeys":["fromString"]},{"name":"trait Singleton extends Product","description":"scala.deriving","location":"-scala 3/-a-p-i/scala/deriving/-mirror$/-singleton.html","searchKeys":["Singleton"]},{"name":"def BooleanClass: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/defn-module/-boolean-class.html","searchKeys":["BooleanClass"]},{"name":"Announcing Dotty 0.18.1-RC1 – switch to the 2.13 standard library, indentation-based syntax and other experiments","description":"","location":"blog/2019/08/30/18th-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.18.1-RC1 – switch to the 2.13 standard library, indentation-based syntax and other experiments"]},{"name":"def unpickleType[T <: AnyKind](pickled: String | List[String], typeHole: (Int, Seq[Any]) => Type[ <: AnyKind], termHole: (Int, Seq[Any], Quotes) => Expr[]): Type[T]","description":"scala.quoted.runtime","location":"-scala 3/-a-p-i/scala/quoted/runtime/-quote-unpickler/unpickle-type.html","searchKeys":["unpickleType"]},{"name":"object Selectable","description":"scala.reflect","location":"-scala 3/-a-p-i/scala/reflect/-selectable$.html","searchKeys":["Selectable"]},{"name":"def &(that: Flags): Flags","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-methods/&.html","searchKeys":["&"]},{"name":"def isParamTag(tag: Int): Boolean","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-format/is-param-tag.html","searchKeys":["isParamTag"]},{"name":"def guard: Option[Term]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-case-def-methods/guard.html","searchKeys":["guard"]},{"name":"def emptyByteIArray: IArray[Byte]","description":"scala","location":"-scala 3/-a-p-i/scala/-i-array/empty-byte-i-array.html","searchKeys":["emptyByteIArray"]},{"name":"def asType: Type[ <: AnyKind]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-repr-methods/as-type.html","searchKeys":["asType"]},{"name":"def Array_length: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/defn-module/-array_length.html","searchKeys":["Array_length"]},{"name":"def copy(original: Tree)(qualifier: Term, name: String): TypeSelect","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-select-module/copy.html","searchKeys":["copy"]},{"name":"trait LiteralMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-literal-methods.html","searchKeys":["LiteralMethods"]},{"name":"def scanRight[T, U](z: U)(op: (T, U) => U)(evidence$23: ClassTag[U]): IArray[U]","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/scan-right.html","searchKeys":["scanRight"]},{"name":"def apply(tparams: List[TypeDef], body: Tree): LambdaTypeTree","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-lambda-type-tree-module/apply.html","searchKeys":["apply"]},{"name":"def fromArray[T](xs: Array[T]): Tuple","description":"scala","location":"-scala 3/-a-p-i/scala/-tuple$/from-array.html","searchKeys":["fromArray"]},{"name":"def tpe: TypeBounds","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-bounds-tree-methods/tpe.html","searchKeys":["tpe"]},{"name":"def newArray[Arr](componentType: Class[], returnType: Class[Arr], dimensions: Array[Int]): Arr","description":"dotty.runtime","location":"-scala 3/-a-p-i/dotty/runtime/-arrays/new-array.html","searchKeys":["newArray"]},{"name":"trait DoubleModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-module/-double-module.html","searchKeys":["DoubleModule"]},{"name":"class Not[+T]","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-not.html","searchKeys":["Not"]},{"name":"Contributing Knowledge","description":"","location":"docs/contributing/contribute-knowledge.html","searchKeys":["Contributing Knowledge"]},{"name":"def showAnsiColored: String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-tree-methods/show-ansi-colored.html","searchKeys":["showAnsiColored"]},{"name":"def signature: Option[Signature]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-select-methods/signature.html","searchKeys":["signature"]},{"name":"def low: TypeTree","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-bounds-tree-methods/low.html","searchKeys":["low"]},{"name":"Metaprogramming","description":"","location":"docs/Metaprogramming/index.html","searchKeys":["Metaprogramming"]},{"name":"def matches[T](that: Expr[Any]): Boolean","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/matches.html","searchKeys":["matches"]},{"name":"def productIterator: Iterator[Any]","description":"scala.deriving","location":"-scala 3/-a-p-i/scala/deriving/-array-product/product-iterator.html","searchKeys":["productIterator"]},{"name":"def underlying: TypeRepr","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-by-name-type-methods/underlying.html","searchKeys":["underlying"]},{"name":"Opaque Type Aliases","description":"","location":"docs/reference/other-new-features/opaques.html","searchKeys":["Opaque Type Aliases"]},{"name":"def ordinal(x: MirroredMonoType): Int","description":"scala.deriving","location":"-scala 3/-a-p-i/scala/deriving/-mirror$/-sum/ordinal.html","searchKeys":["ordinal"]},{"name":"def call: Option[Tree]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-inlined-methods/call.html","searchKeys":["call"]},{"name":"def traverseTree(tree: Tree)(owner: Symbol): Unit","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-tree-traverser/traverse-tree.html","searchKeys":["traverseTree"]},{"name":"def documentation: Option[Documentation]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/documentation.html","searchKeys":["documentation"]},{"name":"trait TypeSelectModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-select-module.html","searchKeys":["TypeSelectModule"]},{"name":"Scala Syntax Summary","description":"","location":"docs/internals/syntax-3.1.html","searchKeys":["Scala Syntax Summary"]},{"name":"def summonInline[T]: T","description":"scala.compiletime","location":"-scala 3/-a-p-i/scala/compiletime/summon-inline.html","searchKeys":["summonInline"]},{"name":"def elems: IArray[Object]","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-tuple-x-x-l/elems.html","searchKeys":["elems"]},{"name":"def paramBounds: List[TypeBounds]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-lambda-methods/param-bounds.html","searchKeys":["paramBounds"]},{"name":"given Tuple16Liftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-tuple16-liftable.html","searchKeys":["Tuple16Liftable"]},{"name":"Announcing Dotty 0.3.0-RC2","description":"","location":"blog/2017/09/07/third-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.3.0-RC2"]},{"name":"trait CaseDefMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-case-def-methods.html","searchKeys":["CaseDefMethods"]},{"name":"def take(self: Tuple, n: Int): Tuple","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-tuple/take.html","searchKeys":["take"]},{"name":"Announcing Dotty 0.7.0 and 0.8.0-RC1","description":"","location":"blog/2018/04/27/eighth-dotty-milestone-release.html","searchKeys":["Announcing Dotty 0.7.0 and 0.8.0-RC1"]},{"name":"def tpt: TypeTree","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-block-methods/tpt.html","searchKeys":["tpt"]},{"name":"def constValueOpt[T]: Option[T]","description":"scala.compiletime","location":"-scala 3/-a-p-i/scala/compiletime/const-value-opt.html","searchKeys":["constValueOpt"]},{"name":"def isAnonymousFunction: Boolean","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/is-anonymous-function.html","searchKeys":["isAnonymousFunction"]},{"name":"def toArray: Array[Object]","description":"scala","location":"-scala 3/-a-p-i/scala/-tuple/to-array.html","searchKeys":["toArray"]},{"name":"def transformTrees(trees: List[Tree])(owner: Symbol): List[Tree]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-tree-map/transform-trees.html","searchKeys":["transformTrees"]},{"name":"def transformTypeCaseDef(tree: TypeCaseDef)(owner: Symbol): TypeCaseDef","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-tree-map/transform-type-case-def.html","searchKeys":["transformTypeCaseDef"]},{"name":"trait DocumentationMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-documentation-methods.html","searchKeys":["DocumentationMethods"]},{"name":"given arrayOps","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops.html","searchKeys":["arrayOps"]},{"name":"def map[F <: ([_$1] =>> Any)](f: [t] => (x$1: t) => F[t]): Map[Tuple, F]","description":"scala","location":"-scala 3/-a-p-i/scala/-tuple/map.html","searchKeys":["map"]},{"name":"def apply(tpt: TypeTree): New","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-new-module/apply.html","searchKeys":["apply"]},{"name":"def |(that: Flags): Flags","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-flags-methods/[124].html","searchKeys":["|"]},{"name":"def fromName: String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-rename-selector-methods/from-name.html","searchKeys":["fromName"]},{"name":"def toString(): String","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-function-x-x-l/to-string.html","searchKeys":["toString"]},{"name":"given Tuple5Liftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-tuple5-liftable.html","searchKeys":["Tuple5Liftable"]},{"name":"trait PolyTypeModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-poly-type-module.html","searchKeys":["PolyTypeModule"]},{"name":"trait Liftable[T]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable.html","searchKeys":["Liftable"]},{"name":"def expr: Term","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-typed-methods/expr.html","searchKeys":["expr"]},{"name":"def summonAll[T <: Tuple]: Widen[T]","description":"scala.compiletime","location":"-scala 3/-a-p-i/scala/compiletime/summon-all.html","searchKeys":["summonAll"]},{"name":"def apply(parent: TypeRepr, name: String, info: TypeRepr): Refinement","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-refinement-module/apply.html","searchKeys":["apply"]},{"name":"def fromDigits(digits: String, radix: Int): BigInt","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-from-digits$/-big-int-from-digits/from-digits.html","searchKeys":["fromDigits"]},{"name":"def isInstanceOfEmptyTuple(x: Any): Boolean","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-tuple/is-instance-of-empty-tuple.html","searchKeys":["isInstanceOfEmptyTuple"]},{"name":"def fromExpr(x: Expr[T]): Quotes => Option[T]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-unliftable/from-expr.html","searchKeys":["fromExpr"]},{"name":"IDEs and Tools","description":"","location":"docs/IDEs and Tools/index.html","searchKeys":["IDEs and Tools"]},{"name":"def writeInt(x: Int): Unit","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-buffer/write-int.html","searchKeys":["writeInt"]},{"name":"object 3.1-migration","description":"scala.runtime.stdLibPatches","location":"-scala 3/-a-p-i/scala/runtime/stdLibPatches/language/3.1-migration.html","searchKeys":["3.1-migration"]},{"name":"def expr: Term","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-return-methods/expr.html","searchKeys":["expr"]},{"name":"Main Methods","description":"","location":"docs/reference/changed-features/main-functions.html","searchKeys":["Main Methods"]},{"name":"def NothingClass: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/defn-module/-nothing-class.html","searchKeys":["NothingClass"]},{"name":"def slice[T](from: Int, until: Int): IArray[T]","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/slice.html","searchKeys":["slice"]},{"name":"object Varargs","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-varargs.html","searchKeys":["Varargs"]},{"name":"def fromProductTyped[P <: Product](p: P)(m: ProductOf[P]): <none>","description":"scala","location":"-scala 3/-a-p-i/scala/-tuple$/from-product-typed.html","searchKeys":["fromProductTyped"]},{"name":"def search(tpe: TypeRepr): ImplicitSearchResult","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-implicits-module/search.html","searchKeys":["search"]},{"name":"def copy(original: Tree)(name: String, tpt: Tree): TypeBind","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-bind-module/copy.html","searchKeys":["copy"]},{"name":"def unapply(x: NamedArg): Option[(String, Term)]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-named-arg-module/unapply.html","searchKeys":["unapply"]},{"name":"def concatIterator(tup1: Tuple, tup2: Tuple): Iterator[Any]","description":"scala.runtime","location":"-scala 3/-a-p-i/scala/runtime/-tuple/concat-iterator.html","searchKeys":["concatIterator"]},{"name":"def info: TypeRepr","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-refinement-methods/info.html","searchKeys":["info"]},{"name":"def changeOwner[ThisTree <: Tree](newOwner: Symbol): ThisTree","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-tree-methods/change-owner.html","searchKeys":["changeOwner"]},{"name":"def copy(original: Tree)(bound: Option[TypeTree], selector: TypeTree, cases: List[TypeCaseDef]): MatchTypeTree","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-match-type-tree-module/copy.html","searchKeys":["copy"]},{"name":"given Tuple11Liftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-tuple11-liftable.html","searchKeys":["Tuple11Liftable"]},{"name":"def foreach[T, U](f: T => U): Unit","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/foreach.html","searchKeys":["foreach"]},{"name":"trait SourceFileModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-source-file-module.html","searchKeys":["SourceFileModule"]},{"name":"Lazy Vals initialization","description":"","location":"docs/reference/changed-features/lazy-vals-init.html","searchKeys":["Lazy Vals initialization"]},{"name":"def showExtractors: String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-methods/show-extractors.html","searchKeys":["showExtractors"]},{"name":"trait ConstantMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-methods.html","searchKeys":["ConstantMethods"]},{"name":"trait ParamRefModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-param-ref-module.html","searchKeys":["ParamRefModule"]},{"name":"def translucentSuperType: TypeRepr","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-ref-methods/translucent-super-type.html","searchKeys":["translucentSuperType"]},{"name":"def getAddr(at: Addr): Addr","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-buffer/get-addr.html","searchKeys":["getAddr"]},{"name":"def apply(tpe: TypeRepr): WildcardTypeTree","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-wildcard-type-tree-module/apply.html","searchKeys":["apply"]},{"name":"trait TypeLambdaModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-lambda-module.html","searchKeys":["TypeLambdaModule"]},{"name":"def paramSymss: List[List[Symbol]]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/param-symss.html","searchKeys":["paramSymss"]},{"name":"def apply(patterns: List[Tree]): Alternatives","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-alternatives-module/apply.html","searchKeys":["apply"]},{"name":"trait UnitModule","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-constant-module/-unit-module.html","searchKeys":["UnitModule"]},{"name":"class ArrayProduct(val elems: Array[AnyRef]) extends Product","description":"scala.deriving","location":"-scala 3/-a-p-i/scala/deriving/-array-product.html","searchKeys":["ArrayProduct"]},{"name":"def readUncompressedLong(): Long","description":"dotty.tools.tasty","location":"-scala 3/-a-p-i/dotty/tools.tasty/-tasty-reader/read-uncompressed-long.html","searchKeys":["readUncompressedLong"]},{"name":"trait TypeRefMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-ref-methods.html","searchKeys":["TypeRefMethods"]},{"name":"def Array_update: Symbol","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/defn-module/-array_update.html","searchKeys":["Array_update"]},{"name":"class *:[+H, +T <: Tuple] extends NonEmptyTuple","description":"scala","location":"-scala 3/-a-p-i/scala/[42][58].html","searchKeys":["*:"]},{"name":"given Tuple20Liftable","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-liftable$/-tuple20-liftable.html","searchKeys":["Tuple20Liftable"]},{"name":"trait TypeBindMethods","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-type-bind-methods.html","searchKeys":["TypeBindMethods"]},{"name":"def iterator[T]: Iterator[T]","description":"scala","location":"-scala 3/-a-p-i/scala/opaques/array-ops/iterator.html","searchKeys":["iterator"]},{"name":"def take[This >: Tuple <: Tuple](n: Int): Take[This, n.type]","description":"scala","location":"-scala 3/-a-p-i/scala/-tuple/take.html","searchKeys":["take"]},{"name":"class ContextResultCount(n: Int) extends StaticAnnotation","description":"scala.annotation.internal","location":"-scala 3/-a-p-i/scala/annotation/internal/-context-result-count.html","searchKeys":["ContextResultCount"]},{"name":"def fromString(s: String): T","description":"scala.util","location":"-scala 3/-a-p-i/scala/util/-command-line-parser/-from-string/from-string.html","searchKeys":["fromString"]},{"name":"def args: List[Tree]","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-applied-methods/args.html","searchKeys":["args"]},{"name":"def name: String","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/name.html","searchKeys":["name"]},{"name":"def signature: Signature","description":"scala.quoted","location":"-scala 3/-a-p-i/scala/quoted/-quotes/-reflection/-symbol-methods/signature.html","searchKeys":["signature"]}]
